# This file controls the behavior of Trunk: https://docs.trunk.io/cli
# To learn more about the format of this file, see https://docs.trunk.io/reference/trunk-yaml
version: 0.1
cli:
  version: 1.22.2
# Trunk provides extensibility via plugins. (https://docs.trunk.io/plugins)
plugins:
  sources:
    - id: trunk
      ref: v1.6.0
      uri: https://github.com/trunk-io/plugins
# Many linters and tools depend on runtimes - configure them here. (https://docs.trunk.io/runtimes)
runtimes:
  enabled:
    - go@1.21.0
    - node@18.12.1
    - python@3.10.8
# This is the section where you manage your linters. (https://docs.trunk.io/check/configuration)
lint:
  enabled:
    - ansible-lint@24.6.1
    - bandit@1.7.9
    - black@24.4.2
    - buf-lint@1.34.0
    - buildifier@7.1.2
    - cfnlint@1.5.0
    - checkov@3.2.174
    - eslint@9.6.0
    - git-diff-check
    - gitleaks@8.18.4
    - gofmt@1.20.4
    - golangci-lint@1.59.1
    - isort@5.13.2
    - mypy@1.10.1
    - pylint@3.2.5
    - rustfmt@1.65.0
    - hadolint@2.12.0
    - markdownlint@0.41.0
    - markdown-table-prettify@3.6.0
    - markdown-link-check@3.12.2
    - osv-scanner@1.8.1
    - prettier@3.3.2
    - shellcheck@0.10.0
    - shfmt@3.6.0
    - trivy@0.52.2
    - trufflehog@3.79.0
    - yamllint@1.35.1
actions:
  enabled:
    - commitizen
    # : Assistant for writing commit messages that obey a standard
    - commitlint
    # : Enforce git commit message standards
    - git-blame-ignore-revs
    # : Automatically configure git to use .git-blame-ignore-revs while the file exists
    - git-lfs
    # : Git LFS hooks
    - go-mod-tidy
    # : Runs go mod tidy when changes are detected to go.mod
    - go-mod-tidy-vendor
    # : Runs go mod tidy followed by go mod vendor
    - hello-world-python
    # : Prints 'Hello World' to the terminal during pre-commit trigger
    - npm-check
    # : Generate notifications if node_modules are out of date
    - npm-check-pre-push
    # : Generate notifications if node_modules are out of date as a pre-push hook
    - poetry-check
    # : Run 'poetry check' to validate config
    - poetry-export
    # : Run 'poetry export' to sync requirements.txt with lock file
    - poetry-install
    # : Run 'poetry install' to ensure all locked packages are installed
    - poetry-lock
    # : Run 'poetry lock' to update lock file to match pyproject.toml
    - trufflehog-pre-commit
    # : Don't allow secrets in commits (via Trufflehog). Enable linter 'trufflehog-git' before running
    - trunk-check-pre-commit
    # : Run 'trunk check' whenever you run 'git commit'
    - trunk-check-pre-push-always
    # : Always run 'trunk check' whenever you run 'git push'
    - trunk-cache-prune
    # : Periodically prune cached trunk files that are no longer needed
    - trunk-check-pre-push
    # : Run 'trunk check' whenever you run 'git push'
    - trunk-fmt-pre-commit
    # : Run 'trunk fmt' whenever you run 'git commit'
    - trunk-share-with-everyone
    # : Built-in action to generate notifications to turn off single player mode
    - trunk-single-player-auto-on-upgrade
    # : Run on-upgrade automatically for users on single-player mode
    - trunk-single-player-auto-upgrade
    # : Auto-upgrade trunk version for users on single-player mode
    - trunk-upgrade-available
    # : Check for and notify about the latest version of the trunk cli
    - trunk-whoami
    # : Refresh user's login tokens
    - trunk-announce
    # : Git hook for displaying commits tagged with '/trunk announce'
    - yarn-check
    # : Generate notifications if node_modules are out of date
