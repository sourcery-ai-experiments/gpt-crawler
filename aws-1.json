[
  {
    "title": "Getting Started - Cloud Computing Tutorials for Building on AWS",
    "url": "https://aws.amazon.com/getting-started/",
    "html": "Skip to main content\nClick here to return to Amazon Web Services homepage\nContact Us Support  English  My Account \nSign In\nCreate an AWS Account\nProducts\nSolutions\nPricing\nDocumentation\nLearn\nPartner Network\nAWS Marketplace\nCustomer Enablement\nEvents\nExplore More\nClose\nعربي\nBahasa Indonesia\nDeutsch\nEnglish\nEspañol\nFrançais\nItaliano\nPortuguês\nTiếng Việt\nTürkçe\nΡусский\nไทย\n日本語\n한국어\n中文 (简体)\n中文 (繁體)\nClose\nMy Profile\nSign out of AWS Builder ID\nAWS Management Console\nAccount Settings\nBilling & Cost Management\nSecurity Credentials\nAWS Personal Health Dashboard\nClose\nSupport Center\nExpert Help\nKnowledge Center\nAWS Support Overview\nAWS re:Post\nClick here to return to Amazon Web Services homepage\nGet Started for Free\nContact Us\nProducts\nSolutions\nPricing\nIntroduction to AWS\nGetting Started\nDocumentation\nTraining and Certification\nDeveloper Center\nCustomer Success\nPartner Network\nAWS Marketplace\nSupport\nAWS re:Post\nLog into Console\nDownload the Mobile App\nGetting Started Resource Center\nGet Started  Learn  Get Connected  Developer Tools More Resources  Explore by Role \nClose Cloud Essentials Cloud Foundations\nClose Hands-On Tutorials Learn with AWS Training & Certification Workshops\nClose AWS re:Post Developer Community\nClose Amazon Builders' Library AWS Architecture Center AWS Developer Center AWS Documentation AWS Well-Architected\nClose Architect Developer IT Pro\nGetting Started with AWS\nLearn the fundamentals and start building on Amazon Web Services\nGet to know the AWS Cloud\nCloud basics\nChoose the right AWS services\nWhat's new\nGet to know the AWS Cloud\nStart your journey with AWS\n\nAmazon Web Services (AWS) is the world's most comprehensive and broadly adopted cloud that includes infrastructure as a service (IaaS) and platform as a service (PaaS) offerings. AWS services offer scalable solutions for compute, storage, databases, analytics, and more.\n\n\nExplore all Hands-On Tutorials\n\nLearn best practices to set up your account and environment\nWe walk you through setting up your AWS account and development environment, which enables you to interact with your AWS account and resources.\nRead the guide\n\nWhat is AWS?\n\nGet to know the AWS Management Console\nLearn how to use the AWS Management Console, a web application that provides access to the information you need to manage your AWS resources.\nRead the guide\n\nHow to sign in to the AWS Management Console\n\n\nLearn to control your AWS costs\nWe show you how to control your costs while using the AWS Free Tier and how to use AWS Budgets to set up a cost budget to monitor your usage costs.\nRead the tutorial\n\nHow to Manage your AWS Costs\n\n\nCloud basics\nLearn the essentials\n\nGet familiar with the core concepts that drive AWS services and how to best take advantage of them.\n\n\nRead the AWS overview whitepaper\n\nCloud Essentials\nGaining familiarity with core concepts of cloud computing helps give you confidence as you begin your journey.\nSecurity Essentials\nApply these practices as one part of your ongoing due diligence around cloud security.\nBilling and Cost Optimizations Essentials\nWhen using the cloud, it is important to understand the billing model, and how you can optimize your costs.\nNetworking Essentials\nFamiliarize yourself with the essentials for addressing, connectivity, routing, and network security in the cloud.\nChoose the right AWS services\nAWS Decision Guides\n\nLearn how to choose the services that might be right for you and your use cases.\n\nSee all the guides>>\n\nNew: Choose an IoT service\nChoose the right foundational and use-case specific IoT services to fit your needs.\nRead the guide\nNew: Choose a migration strategy\nEvaluate and choose the right AWS migration strategy that fits your needs.\nRead the guide\nWhat's new\nUse AI to accelerate your development\n\nAmazon CodeWhisperer is trained on billions of lines of code and can generate code suggestions ranging from snippets to full functions in real time based on your comments and existing code.\n\nLearn more>>\n\nTake a tour of Amazon CodeWhisperer\nGet started with VS code\nGet started with Jetbrains IntelliJ\nContinue your journey with AWS\nTake the next steps by learning more about AWS, deploying your first application, and joining the AWS community.\nDocumentation\nTools\nAWS Well-Architected\nAsk the Community\nGet Certified\nLaunch your first application\nPick a topic for a step-by-step tutorial to get you up and running in less than 30 minutes.\nLaunch a Web Application\nLearn how to choose your infrastructure and launch a web application.\nDeploy a Container\nSelect the right container service and deploy a container-based application.\nRun a Serverless \"Hello, World!\"\nRun your code on AWS Lambda without provisioning servers.\nExplore All Tutorials\nResource Centers\nFind all the right tools, documentation, and resources to get the most out of AWS.\nDeveloper Center\nThe AWS Developer Center provides developmental tools, learning resources, and documentation to take your development skills on AWS to the next level.\nArchitecture Center\nThe AWS Architecture Center provides reference architecture diagrams, vetted architecture solutions, Well-Architected best practices, patterns, icons, and more.\nIT Pro Center\nThe AWS IT Pro Center provides learning resources, documentation, and hands-on tutorials to help you and your organization adopt AWS IT Solutions in the cloud.\nWas this page helpful?\n Feedback\nClose\nThank you for your feedback\nFeedback helps us improve our experience. If you would like to share more details on the feedback, please click the feedback button below.\n Feedback\nSign In to the Console\nLearn About AWS\nWhat Is AWS?\nWhat Is Cloud Computing?\nAWS Inclusion, Diversity & Equity\nWhat Is DevOps?\nWhat Is a Container?\nWhat Is a Data Lake?\nWhat is Generative AI?\nAWS Cloud Security\nWhat's New\nBlogs\nPress Releases\nResources for AWS\nGetting Started\nTraining and Certification\nAWS Solutions Library\nArchitecture Center\nProduct and Technical FAQs\nAnalyst Reports\nAWS Partners\nDevelopers on AWS\nDeveloper Center\nSDKs & Tools\n.NET on AWS\nPython on AWS\nJava on AWS\nPHP on AWS\nJavaScript on AWS\nHelp\nContact Us\nGet Expert Help\nFile a Support Ticket\nAWS re:Post\nKnowledge Center\nAWS Support Overview\nLegal\nAWS Careers\nCreate an AWS Account\nAmazon is an Equal Opportunity Employer: Minority / Women / Disability / Veteran / Gender Identity / Sexual Orientation / Age.\nLanguage\nعربي\nBahasa Indonesia\nDeutsch\nEnglish\nEspañol\nFrançais\nItaliano\nPortuguês\nTiếng Việt\nTürkçe\nΡусский\nไทย\n日本語\n한국어\n中文 (简体)\n中文 (繁體)\nPrivacy\n|\nSite Terms\n|\nCookie Preferences\n|\n© 2024, Amazon Web Services, Inc. or its affiliates. All rights reserved.\nEnding Support for Internet Explorer\nGot it\nAWS support for Internet Explorer ends on 07/31/2022. Supported browsers are Chrome, Firefox, Edge, and Safari. Learn more »\nGot it"
  },
  {
    "title": "Cloud Computing Services - Amazon Web Services (AWS)",
    "url": "https://aws.amazon.com/",
    "html": "Skip to main content\nClick here to return to Amazon Web Services homepage\nContact Us Support  English  My Account \nSign In\nCreate an AWS Account\nProducts\nSolutions\nPricing\nDocumentation\nLearn\nPartner Network\nAWS Marketplace\nCustomer Enablement\nEvents\nExplore More\nClose\nعربي\nBahasa Indonesia\nDeutsch\nEnglish\nEspañol\nFrançais\nItaliano\nPortuguês\nTiếng Việt\nTürkçe\nΡусский\nไทย\n日本語\n한국어\n中文 (简体)\n中文 (繁體)\nClose\nMy Profile\nSign out of AWS Builder ID\nAWS Management Console\nAccount Settings\nBilling & Cost Management\nSecurity Credentials\nAWS Personal Health Dashboard\nClose\nSupport Center\nExpert Help\nKnowledge Center\nAWS Support Overview\nAWS re:Post\nClick here to return to Amazon Web Services homepage\nGet Started for Free\nContact Us\nProducts\nSolutions\nPricing\nIntroduction to AWS\nGetting Started\nDocumentation\nTraining and Certification\nDeveloper Center\nCustomer Success\nPartner Network\nAWS Marketplace\nSupport\nAWS re:Post\nLog into Console\nDownload the Mobile App\nAWS Free Tier\nStart Building on AWS Today\n\nWhether you're looking for compute power, database storage, content delivery, or other functionality, AWS has the services to help you build sophisticated applications with increased flexibility, scalability and reliability\n\nGet started for free\nResources\nExplore the AWS platform, cloud products, and capabilities\nGet started\nAnalytics\nTry Amazon Redshift for Free\nGet started\nStorage\nAmazon S3 Object Lambda\nLearn more\nTraining and Certification\nAWS Skill Builder - Learn AWS by Doing AWS\nSubscribe today\nPrev Next\nAmazon Lightsail extended Free Tier\nNew customers get up to three months free on select virtual private servers\nData center innovation with AWS and Kubernetes\nGain value from data center infrastructure with Amazon EKS\nStart building with analytics for free\nAWS is the fastest way to get answers from all your data to all your users\nTransform your business with Generative AI on AWS\nRevolutionize your business operations with generative AI\nExplore our solutions\nFilter our solutions\nIndustry\nFinancial Services\nView solution\nIndustry\nTelecom\nView solution\nIndustry\nHealthcare & Life Sciences\nView solution\nTechnology\nAnalytics & Data Lakes\nView solution\nIndustry\nGames\nView solution\nTechnology\nMachine Learning (AI/ML)\nView solution\nTechnology\nServerless Computing\nView solution\nAWS Solution\nView all Industry solutions\nView solutions\nShow 15 more\nExplore our products\nBrowse by category\nMachine Learning\nAmazon Bedrock\n\nBuild with foundation models\n\nView product\nCompute\nAmazon EC2\n\nVirtual servers in the cloud\n\nView product\nStorage\nAmazon Simple Storage Service (S3)\n\nObject storage built to retrieve any amount of data from anywhere\n\nView product\nDeveloper Tools\nAmazon CodeWhisperer\n\nYour AI-powered productivity tool for the IDE and command line\n\nView product\nNetworking & Content Delivery\nAmazon CloudFront\n\nGlobal content delivery network\n\nView product\nDeveloper Tools\nAmazon CodeCatalyst\n\nQuickly build and deliver apps at scale on AWS\n\nView product\nCompute\nAmazon Lightsail\n\nLaunch and manage virtual private servers\n\nView product\nDatabase\nAmazon DynamoDB\n\nManaged NoSQL database\n\nView product\nShow 15 more\nTraining and Certification\nAWS Digital Classrooms\nGet the flexibility of digital training with the depth of classroom training\nExplore further\nAWS Skill Builder\nBuild practical skills with 600+ free digital courses, 1,000+ lab experiences, and more\nGet started\nAWS Certification\nValidate your cloud skills with industry-recognized credentials\nBrowse AWS Certifications\nEngineered for the Most Demanding Requirements\nSecure\nCompliant\nHybrid\nScalable\nGlobal Network of AWS Regions\nThe AWS Cloud spans 105 Availability Zones within 33 geographic regions around the world, with announced plans for 15 more Availability Zones and 5 more AWS Regions in Germany, Malaysia, Mexico, New Zealand, and Thailand.\nSkip Map\nList view\nRegions\nComing Soon\nLearn more about AWS Regions\nClose\nNext Steps\nResources\nAnalyst reports\nExplore on AWS in Analyst Research\nResources\nAWS Marketplace\nDiscover, deploy, and manage software that runs on AWS\nPartners\nWork with AWS Partners\nJoin the AWS Partner Network\nResources\nThe Amazon Builders' Library\nLearn more on how Amazon builds and operates software\nSign In to the Console\nLearn About AWS\nWhat Is AWS?\nWhat Is Cloud Computing?\nAWS Inclusion, Diversity & Equity\nWhat Is DevOps?\nWhat Is a Container?\nWhat Is a Data Lake?\nWhat is Generative AI?\nAWS Cloud Security\nWhat's New\nBlogs\nPress Releases\nResources for AWS\nGetting Started\nTraining and Certification\nAWS Solutions Library\nArchitecture Center\nProduct and Technical FAQs\nAnalyst Reports\nAWS Partners\nDevelopers on AWS\nDeveloper Center\nSDKs & Tools\n.NET on AWS\nPython on AWS\nJava on AWS\nPHP on AWS\nJavaScript on AWS\nHelp\nContact Us\nGet Expert Help\nFile a Support Ticket\nAWS re:Post\nKnowledge Center\nAWS Support Overview\nLegal\nAWS Careers\nCreate an AWS Account\nAmazon is an Equal Opportunity Employer: Minority / Women / Disability / Veteran / Gender Identity / Sexual Orientation / Age.\nLanguage\nعربي\nBahasa Indonesia\nDeutsch\nEnglish\nEspañol\nFrançais\nItaliano\nPortuguês\nTiếng Việt\nTürkçe\nΡусский\nไทย\n日本語\n한국어\n中文 (简体)\n中文 (繁體)\nPrivacy\n|\nSite Terms\n|\nCookie Preferences\n|\n© 2024, Amazon Web Services, Inc. or its affiliates. All rights reserved.\nEnding Support for Internet Explorer\nGot it\nAWS support for Internet Explorer ends on 07/31/2022. Supported browsers are Chrome, Firefox, Edge, and Safari. Learn more »\nGot it"
  },
  {
    "title": "XHTML namespace",
    "url": "https://www.w3.org/1999/xhtml/",
    "html": "XHTML namespace\n\nThe namespace name http://www.w3.org/1999/xhtml is intended for use in various specifications such as:\n\nRecommendations:\n\nHTML 5: A vocabulary and associated APIs for HTML and XHTML\nXHTML™ 1.0: The Extensible HyperText Markup Language\nXHTML Modularization\nXHTML 1.1\nXHTML Basic\nXHTML Print\nXHTML+RDFa\n\nOther Documents:\n\nHTML 5.1\nHTML 5.2\n\nThe charters of the following W3C Working Groups include work on HTML that may impact this namespace:\n\nWeb Platform Working Group, chartered October 2015\n\nFor more information about XML namespaces, please refer to Namespaces in XML.\n\nMichael Smith, W3C HTML Activity Lead\nLast edited: $Date: 2016/09/07 14:16:54 $\n"
  },
  {
    "title": "",
    "url": "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd",
    "html": "<!--\n   Extensible HTML version 1.0 Transitional DTD\n\n   This is the same as HTML 4 Transitional except for\n   changes due to the differences between XML and SGML.\n\n   Namespace = http://www.w3.org/1999/xhtml\n\n   For further information, see: http://www.w3.org/TR/xhtml1\n\n   Copyright (c) 1998-2002 W3C (MIT, INRIA, Keio),\n   All Rights Reserved. \n\n   This DTD module is identified by the PUBLIC and SYSTEM identifiers:\n\n   PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n   SYSTEM \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"\n\n   $Revision: 1.1 $\n   $Date: 2018/03/20 03:13:13 $\n\n-->\n\n<!--================ Character mnemonic entities =========================-->\n\n<!ENTITY % HTMLlat1 PUBLIC\n   \"-//W3C//ENTITIES Latin 1 for XHTML//EN\"\n   \"xhtml-lat1.ent\">\n%HTMLlat1;\n\n<!ENTITY % HTMLsymbol PUBLIC\n   \"-//W3C//ENTITIES Symbols for XHTML//EN\"\n   \"xhtml-symbol.ent\">\n%HTMLsymbol;\n\n<!ENTITY % HTMLspecial PUBLIC\n   \"-//W3C//ENTITIES Special for XHTML//EN\"\n   \"xhtml-special.ent\">\n%HTMLspecial;\n\n<!--================== Imported Names ====================================-->\n\n<!ENTITY % ContentType \"CDATA\">\n    <!-- media type, as per [RFC2045] -->\n\n<!ENTITY % ContentTypes \"CDATA\">\n    <!-- comma-separated list of media types, as per [RFC2045] -->\n\n<!ENTITY % Charset \"CDATA\">\n    <!-- a character encoding, as per [RFC2045] -->\n\n<!ENTITY % Charsets \"CDATA\">\n    <!-- a space separated list of character encodings, as per [RFC2045] -->\n\n<!ENTITY % LanguageCode \"NMTOKEN\">\n    <!-- a language code, as per [RFC3066] -->\n\n<!ENTITY % Character \"CDATA\">\n    <!-- a single character, as per section 2.2 of [XML] -->\n\n<!ENTITY % Number \"CDATA\">\n    <!-- one or more digits -->\n\n<!ENTITY % LinkTypes \"CDATA\">\n    <!-- space-separated list of link types -->\n\n<!ENTITY % MediaDesc \"CDATA\">\n    <!-- single or comma-separated list of media descriptors -->\n\n<!ENTITY % URI \"CDATA\">\n    <!-- a Uniform Resource Identifier, see [RFC2396] -->\n\n<!ENTITY % UriList \"CDATA\">\n    <!-- a space separated list of Uniform Resource Identifiers -->\n\n<!ENTITY % Datetime \"CDATA\">\n    <!-- date and time information. ISO date format -->\n\n<!ENTITY % Script \"CDATA\">\n    <!-- script expression -->\n\n<!ENTITY % StyleSheet \"CDATA\">\n    <!-- style sheet data -->\n\n<!ENTITY % Text \"CDATA\">\n    <!-- used for titles etc. -->\n\n<!ENTITY % FrameTarget \"NMTOKEN\">\n    <!-- render in this frame -->\n\n<!ENTITY % Length \"CDATA\">\n    <!-- nn for pixels or nn% for percentage length -->\n\n<!ENTITY % MultiLength \"CDATA\">\n    <!-- pixel, percentage, or relative -->\n\n<!ENTITY % Pixels \"CDATA\">\n    <!-- integer representing length in pixels -->\n\n<!-- these are used for image maps -->\n\n<!ENTITY % Shape \"(rect|circle|poly|default)\">\n\n<!ENTITY % Coords \"CDATA\">\n    <!-- comma separated list of lengths -->\n\n<!-- used for object, applet, img, input and iframe -->\n<!ENTITY % ImgAlign \"(top|middle|bottom|left|right)\">\n\n<!-- a color using sRGB: #RRGGBB as Hex values -->\n<!ENTITY % Color \"CDATA\">\n\n<!-- There are also 16 widely known color names with their sRGB values:\n\n    Black  = #000000    Green  = #008000\n    Silver = #C0C0C0    Lime   = #00FF00\n    Gray   = #808080    Olive  = #808000\n    White  = #FFFFFF    Yellow = #FFFF00\n    Maroon = #800000    Navy   = #000080\n    Red    = #FF0000    Blue   = #0000FF\n    Purple = #800080    Teal   = #008080\n    Fuchsia= #FF00FF    Aqua   = #00FFFF\n-->\n\n<!--=================== Generic Attributes ===============================-->\n\n<!-- core attributes common to most elements\n  id       document-wide unique id\n  class    space separated list of classes\n  style    associated style info\n  title    advisory title/amplification\n-->\n<!ENTITY % coreattrs\n \"id          ID             #IMPLIED\n  class       CDATA          #IMPLIED\n  style       %StyleSheet;   #IMPLIED\n  title       %Text;         #IMPLIED\"\n  >\n\n<!-- internationalization attributes\n  lang        language code (backwards compatible)\n  xml:lang    language code (as per XML 1.0 spec)\n  dir         direction for weak/neutral text\n-->\n<!ENTITY % i18n\n \"lang        %LanguageCode; #IMPLIED\n  xml:lang    %LanguageCode; #IMPLIED\n  dir         (ltr|rtl)      #IMPLIED\"\n  >\n\n<!-- attributes for common UI events\n  onclick     a pointer button was clicked\n  ondblclick  a pointer button was double clicked\n  onmousedown a pointer button was pressed down\n  onmouseup   a pointer button was released\n  onmousemove a pointer was moved onto the element\n  onmouseout  a pointer was moved away from the element\n  onkeypress  a key was pressed and released\n  onkeydown   a key was pressed down\n  onkeyup     a key was released\n-->\n<!ENTITY % events\n \"onclick     %Script;       #IMPLIED\n  ondblclick  %Script;       #IMPLIED\n  onmousedown %Script;       #IMPLIED\n  onmouseup   %Script;       #IMPLIED\n  onmouseover %Script;       #IMPLIED\n  onmousemove %Script;       #IMPLIED\n  onmouseout  %Script;       #IMPLIED\n  onkeypress  %Script;       #IMPLIED\n  onkeydown   %Script;       #IMPLIED\n  onkeyup     %Script;       #IMPLIED\"\n  >\n\n<!-- attributes for elements that can get the focus\n  accesskey   accessibility key character\n  tabindex    position in tabbing order\n  onfocus     the element got the focus\n  onblur      the element lost the focus\n-->\n<!ENTITY % focus\n \"accesskey   %Character;    #IMPLIED\n  tabindex    %Number;       #IMPLIED\n  onfocus     %Script;       #IMPLIED\n  onblur      %Script;       #IMPLIED\"\n  >\n\n<!ENTITY % attrs \"%coreattrs; %i18n; %events;\">\n\n<!-- text alignment for p, div, h1-h6. The default is\n     align=\"left\" for ltr headings, \"right\" for rtl -->\n\n<!ENTITY % TextAlign \"align (left|center|right|justify) #IMPLIED\">\n\n<!--=================== Text Elements ====================================-->\n\n<!ENTITY % special.extra\n   \"object | applet | img | map | iframe\">\n\t\n<!ENTITY % special.basic\n\t\"br | span | bdo\">\n\n<!ENTITY % special\n   \"%special.basic; | %special.extra;\">\n\n<!ENTITY % fontstyle.extra \"big | small | font | basefont\">\n\n<!ENTITY % fontstyle.basic \"tt | i | b | u\n                      | s | strike \">\n\n<!ENTITY % fontstyle \"%fontstyle.basic; | %fontstyle.extra;\">\n\n<!ENTITY % phrase.extra \"sub | sup\">\n<!ENTITY % phrase.basic \"em | strong | dfn | code | q |\n                   samp | kbd | var | cite | abbr | acronym\">\n\n<!ENTITY % phrase \"%phrase.basic; | %phrase.extra;\">\n\n<!ENTITY % inline.forms \"input | select | textarea | label | button\">\n\n<!-- these can occur at block or inline level -->\n<!ENTITY % misc.inline \"ins | del | script\">\n\n<!-- these can only occur at block level -->\n<!ENTITY % misc \"noscript | %misc.inline;\">\n\n<!ENTITY % inline \"a | %special; | %fontstyle; | %phrase; | %inline.forms;\">\n\n<!-- %Inline; covers inline or \"text-level\" elements -->\n<!ENTITY % Inline \"(#PCDATA | %inline; | %misc.inline;)*\">\n\n<!--================== Block level elements ==============================-->\n\n<!ENTITY % heading \"h1|h2|h3|h4|h5|h6\">\n<!ENTITY % lists \"ul | ol | dl | menu | dir\">\n<!ENTITY % blocktext \"pre | hr | blockquote | address | center | noframes\">\n\n<!ENTITY % block\n    \"p | %heading; | div | %lists; | %blocktext; | isindex |fieldset | table\">\n\n<!-- %Flow; mixes block and inline and is used for list items etc. -->\n<!ENTITY % Flow \"(#PCDATA | %block; | form | %inline; | %misc;)*\">\n\n<!--================== Content models for exclusions =====================-->\n\n<!-- a elements use %Inline; excluding a -->\n\n<!ENTITY % a.content\n   \"(#PCDATA | %special; | %fontstyle; | %phrase; | %inline.forms; | %misc.inline;)*\">\n\n<!-- pre uses %Inline excluding img, object, applet, big, small,\n     font, or basefont -->\n\n<!ENTITY % pre.content\n   \"(#PCDATA | a | %special.basic; | %fontstyle.basic; | %phrase.basic; |\n\t   %inline.forms; | %misc.inline;)*\">\n\n<!-- form uses %Flow; excluding form -->\n\n<!ENTITY % form.content \"(#PCDATA | %block; | %inline; | %misc;)*\">\n\n<!-- button uses %Flow; but excludes a, form, form controls, iframe -->\n\n<!ENTITY % button.content\n   \"(#PCDATA | p | %heading; | div | %lists; | %blocktext; |\n      table | br | span | bdo | object | applet | img | map |\n      %fontstyle; | %phrase; | %misc;)*\">\n\n<!--================ Document Structure ==================================-->\n\n<!-- the namespace URI designates the document profile -->\n\n<!ELEMENT html (head, body)>\n<!ATTLIST html\n  %i18n;\n  id          ID             #IMPLIED\n  xmlns       %URI;          #FIXED 'http://www.w3.org/1999/xhtml'\n  >\n\n<!--================ Document Head =======================================-->\n\n<!ENTITY % head.misc \"(script|style|meta|link|object|isindex)*\">\n\n<!-- content model is %head.misc; combined with a single\n     title and an optional base element in any order -->\n\n<!ELEMENT head (%head.misc;,\n     ((title, %head.misc;, (base, %head.misc;)?) |\n      (base, %head.misc;, (title, %head.misc;))))>\n\n<!ATTLIST head\n  %i18n;\n  id          ID             #IMPLIED\n  profile     %URI;          #IMPLIED\n  >\n\n<!-- The title element is not considered part of the flow of text.\n       It should be displayed, for example as the page header or\n       window title. Exactly one title is required per document.\n    -->\n<!ELEMENT title (#PCDATA)>\n<!ATTLIST title \n  %i18n;\n  id          ID             #IMPLIED\n  >\n\n<!-- document base URI -->\n\n<!ELEMENT base EMPTY>\n<!ATTLIST base\n  id          ID             #IMPLIED\n  href        %URI;          #IMPLIED\n  target      %FrameTarget;  #IMPLIED\n  >\n\n<!-- generic metainformation -->\n<!ELEMENT meta EMPTY>\n<!ATTLIST meta\n  %i18n;\n  id          ID             #IMPLIED\n  http-equiv  CDATA          #IMPLIED\n  name        CDATA          #IMPLIED\n  content     CDATA          #REQUIRED\n  scheme      CDATA          #IMPLIED\n  >\n\n<!--\n  Relationship values can be used in principle:\n\n   a) for document specific toolbars/menus when used\n      with the link element in document head e.g.\n        start, contents, previous, next, index, end, help\n   b) to link to a separate style sheet (rel=\"stylesheet\")\n   c) to make a link to a script (rel=\"script\")\n   d) by stylesheets to control how collections of\n      html nodes are rendered into printed documents\n   e) to make a link to a printable version of this document\n      e.g. a PostScript or PDF version (rel=\"alternate\" media=\"print\")\n-->\n\n<!ELEMENT link EMPTY>\n<!ATTLIST link\n  %attrs;\n  charset     %Charset;      #IMPLIED\n  href        %URI;          #IMPLIED\n  hreflang    %LanguageCode; #IMPLIED\n  type        %ContentType;  #IMPLIED\n  rel         %LinkTypes;    #IMPLIED\n  rev         %LinkTypes;    #IMPLIED\n  media       %MediaDesc;    #IMPLIED\n  target      %FrameTarget;  #IMPLIED\n  >\n\n<!-- style info, which may include CDATA sections -->\n<!ELEMENT style (#PCDATA)>\n<!ATTLIST style\n  %i18n;\n  id          ID             #IMPLIED\n  type        %ContentType;  #REQUIRED\n  media       %MediaDesc;    #IMPLIED\n  title       %Text;         #IMPLIED\n  xml:space   (preserve)     #FIXED 'preserve'\n  >\n\n<!-- script statements, which may include CDATA sections -->\n<!ELEMENT script (#PCDATA)>\n<!ATTLIST script\n  id          ID             #IMPLIED\n  charset     %Charset;      #IMPLIED\n  type        %ContentType;  #REQUIRED\n  language    CDATA          #IMPLIED\n  src         %URI;          #IMPLIED\n  defer       (defer)        #IMPLIED\n  xml:space   (preserve)     #FIXED 'preserve'\n  >\n\n<!-- alternate content container for non script-based rendering -->\n\n<!ELEMENT noscript %Flow;>\n<!ATTLIST noscript\n  %attrs;\n  >\n\n<!--======================= Frames =======================================-->\n\n<!-- inline subwindow -->\n\n<!ELEMENT iframe %Flow;>\n<!ATTLIST iframe\n  %coreattrs;\n  longdesc    %URI;          #IMPLIED\n  name        NMTOKEN        #IMPLIED\n  src         %URI;          #IMPLIED\n  frameborder (1|0)          \"1\"\n  marginwidth %Pixels;       #IMPLIED\n  marginheight %Pixels;      #IMPLIED\n  scrolling   (yes|no|auto)  \"auto\"\n  align       %ImgAlign;     #IMPLIED\n  height      %Length;       #IMPLIED\n  width       %Length;       #IMPLIED\n  >\n\n<!-- alternate content container for non frame-based rendering -->\n\n<!ELEMENT noframes %Flow;>\n<!ATTLIST noframes\n  %attrs;\n  >\n\n<!--=================== Document Body ====================================-->\n\n<!ELEMENT body %Flow;>\n<!ATTLIST body\n  %attrs;\n  onload      %Script;       #IMPLIED\n  onunload    %Script;       #IMPLIED\n  background  %URI;          #IMPLIED\n  bgcolor     %Color;        #IMPLIED\n  text        %Color;        #IMPLIED\n  link        %Color;        #IMPLIED\n  vlink       %Color;        #IMPLIED\n  alink       %Color;        #IMPLIED\n  >\n\n<!ELEMENT div %Flow;>  <!-- generic language/style container -->\n<!ATTLIST div\n  %attrs;\n  %TextAlign;\n  >\n\n<!--=================== Paragraphs =======================================-->\n\n<!ELEMENT p %Inline;>\n<!ATTLIST p\n  %attrs;\n  %TextAlign;\n  >\n\n<!--=================== Headings =========================================-->\n\n<!--\n  There are six levels of headings from h1 (the most important)\n  to h6 (the least important).\n-->\n\n<!ELEMENT h1  %Inline;>\n<!ATTLIST h1\n  %attrs;\n  %TextAlign;\n  >\n\n<!ELEMENT h2 %Inline;>\n<!ATTLIST h2\n  %attrs;\n  %TextAlign;\n  >\n\n<!ELEMENT h3 %Inline;>\n<!ATTLIST h3\n  %attrs;\n  %TextAlign;\n  >\n\n<!ELEMENT h4 %Inline;>\n<!ATTLIST h4\n  %attrs;\n  %TextAlign;\n  >\n\n<!ELEMENT h5 %Inline;>\n<!ATTLIST h5\n  %attrs;\n  %TextAlign;\n  >\n\n<!ELEMENT h6 %Inline;>\n<!ATTLIST h6\n  %attrs;\n  %TextAlign;\n  >\n\n<!--=================== Lists ============================================-->\n\n<!-- Unordered list bullet styles -->\n\n<!ENTITY % ULStyle \"(disc|square|circle)\">\n\n<!-- Unordered list -->\n\n<!ELEMENT ul (li)+>\n<!ATTLIST ul\n  %attrs;\n  type        %ULStyle;     #IMPLIED\n  compact     (compact)     #IMPLIED\n  >\n\n<!-- Ordered list numbering style\n\n    1   arabic numbers      1, 2, 3, ...\n    a   lower alpha         a, b, c, ...\n    A   upper alpha         A, B, C, ...\n    i   lower roman         i, ii, iii, ...\n    I   upper roman         I, II, III, ...\n\n    The style is applied to the sequence number which by default\n    is reset to 1 for the first list item in an ordered list.\n-->\n<!ENTITY % OLStyle \"CDATA\">\n\n<!-- Ordered (numbered) list -->\n\n<!ELEMENT ol (li)+>\n<!ATTLIST ol\n  %attrs;\n  type        %OLStyle;      #IMPLIED\n  compact     (compact)      #IMPLIED\n  start       %Number;       #IMPLIED\n  >\n\n<!-- single column list (DEPRECATED) --> \n<!ELEMENT menu (li)+>\n<!ATTLIST menu\n  %attrs;\n  compact     (compact)     #IMPLIED\n  >\n\n<!-- multiple column list (DEPRECATED) --> \n<!ELEMENT dir (li)+>\n<!ATTLIST dir\n  %attrs;\n  compact     (compact)     #IMPLIED\n  >\n\n<!-- LIStyle is constrained to: \"(%ULStyle;|%OLStyle;)\" -->\n<!ENTITY % LIStyle \"CDATA\">\n\n<!-- list item -->\n\n<!ELEMENT li %Flow;>\n<!ATTLIST li\n  %attrs;\n  type        %LIStyle;      #IMPLIED\n  value       %Number;       #IMPLIED\n  >\n\n<!-- definition lists - dt for term, dd for its definition -->\n\n<!ELEMENT dl (dt|dd)+>\n<!ATTLIST dl\n  %attrs;\n  compact     (compact)      #IMPLIED\n  >\n\n<!ELEMENT dt %Inline;>\n<!ATTLIST dt\n  %attrs;\n  >\n\n<!ELEMENT dd %Flow;>\n<!ATTLIST dd\n  %attrs;\n  >\n\n<!--=================== Address ==========================================-->\n\n<!-- information on author -->\n\n<!ELEMENT address (#PCDATA | %inline; | %misc.inline; | p)*>\n<!ATTLIST address\n  %attrs;\n  >\n\n<!--=================== Horizontal Rule ==================================-->\n\n<!ELEMENT hr EMPTY>\n<!ATTLIST hr\n  %attrs;\n  align       (left|center|right) #IMPLIED\n  noshade     (noshade)      #IMPLIED\n  size        %Pixels;       #IMPLIED\n  width       %Length;       #IMPLIED\n  >\n\n<!--=================== Preformatted Text ================================-->\n\n<!-- content is %Inline; excluding \n        \"img|object|applet|big|small|sub|sup|font|basefont\" -->\n\n<!ELEMENT pre %pre.content;>\n<!ATTLIST pre\n  %attrs;\n  width       %Number;      #IMPLIED\n  xml:space   (preserve)    #FIXED 'preserve'\n  >\n\n<!--=================== Block-like Quotes ================================-->\n\n<!ELEMENT blockquote %Flow;>\n<!ATTLIST blockquote\n  %attrs;\n  cite        %URI;          #IMPLIED\n  >\n\n<!--=================== Text alignment ===================================-->\n\n<!-- center content -->\n<!ELEMENT center %Flow;>\n<!ATTLIST center\n  %attrs;\n  >\n\n<!--=================== Inserted/Deleted Text ============================-->\n\n<!--\n  ins/del are allowed in block and inline content, but its\n  inappropriate to include block content within an ins element\n  occurring in inline content.\n-->\n<!ELEMENT ins %Flow;>\n<!ATTLIST ins\n  %attrs;\n  cite        %URI;          #IMPLIED\n  datetime    %Datetime;     #IMPLIED\n  >\n\n<!ELEMENT del %Flow;>\n<!ATTLIST del\n  %attrs;\n  cite        %URI;          #IMPLIED\n  datetime    %Datetime;     #IMPLIED\n  >\n\n<!--================== The Anchor Element ================================-->\n\n<!-- content is %Inline; except that anchors shouldn't be nested -->\n\n<!ELEMENT a %a.content;>\n<!ATTLIST a\n  %attrs;\n  %focus;\n  charset     %Charset;      #IMPLIED\n  type        %ContentType;  #IMPLIED\n  name        NMTOKEN        #IMPLIED\n  href        %URI;          #IMPLIED\n  hreflang    %LanguageCode; #IMPLIED\n  rel         %LinkTypes;    #IMPLIED\n  rev         %LinkTypes;    #IMPLIED\n  shape       %Shape;        \"rect\"\n  coords      %Coords;       #IMPLIED\n  target      %FrameTarget;  #IMPLIED\n  >\n\n<!--===================== Inline Elements ================================-->\n\n<!ELEMENT span %Inline;> <!-- generic language/style container -->\n<!ATTLIST span\n  %attrs;\n  >\n\n<!ELEMENT bdo %Inline;>  <!-- I18N BiDi over-ride -->\n<!ATTLIST bdo\n  %coreattrs;\n  %events;\n  lang        %LanguageCode; #IMPLIED\n  xml:lang    %LanguageCode; #IMPLIED\n  dir         (ltr|rtl)      #REQUIRED\n  >\n\n<!ELEMENT br EMPTY>   <!-- forced line break -->\n<!ATTLIST br\n  %coreattrs;\n  clear       (left|all|right|none) \"none\"\n  >\n\n<!ELEMENT em %Inline;>   <!-- emphasis -->\n<!ATTLIST em %attrs;>\n\n<!ELEMENT strong %Inline;>   <!-- strong emphasis -->\n<!ATTLIST strong %attrs;>\n\n<!ELEMENT dfn %Inline;>   <!-- definitional -->\n<!ATTLIST dfn %attrs;>\n\n<!ELEMENT code %Inline;>   <!-- program code -->\n<!ATTLIST code %attrs;>\n\n<!ELEMENT samp %Inline;>   <!-- sample -->\n<!ATTLIST samp %attrs;>\n\n<!ELEMENT kbd %Inline;>  <!-- something user would type -->\n<!ATTLIST kbd %attrs;>\n\n<!ELEMENT var %Inline;>   <!-- variable -->\n<!ATTLIST var %attrs;>\n\n<!ELEMENT cite %Inline;>   <!-- citation -->\n<!ATTLIST cite %attrs;>\n\n<!ELEMENT abbr %Inline;>   <!-- abbreviation -->\n<!ATTLIST abbr %attrs;>\n\n<!ELEMENT acronym %Inline;>   <!-- acronym -->\n<!ATTLIST acronym %attrs;>\n\n<!ELEMENT q %Inline;>   <!-- inlined quote -->\n<!ATTLIST q\n  %attrs;\n  cite        %URI;          #IMPLIED\n  >\n\n<!ELEMENT sub %Inline;> <!-- subscript -->\n<!ATTLIST sub %attrs;>\n\n<!ELEMENT sup %Inline;> <!-- superscript -->\n<!ATTLIST sup %attrs;>\n\n<!ELEMENT tt %Inline;>   <!-- fixed pitch font -->\n<!ATTLIST tt %attrs;>\n\n<!ELEMENT i %Inline;>   <!-- italic font -->\n<!ATTLIST i %attrs;>\n\n<!ELEMENT b %Inline;>   <!-- bold font -->\n<!ATTLIST b %attrs;>\n\n<!ELEMENT big %Inline;>   <!-- bigger font -->\n<!ATTLIST big %attrs;>\n\n<!ELEMENT small %Inline;>   <!-- smaller font -->\n<!ATTLIST small %attrs;>\n\n<!ELEMENT u %Inline;>   <!-- underline -->\n<!ATTLIST u %attrs;>\n\n<!ELEMENT s %Inline;>   <!-- strike-through -->\n<!ATTLIST s %attrs;>\n\n<!ELEMENT strike %Inline;>   <!-- strike-through -->\n<!ATTLIST strike %attrs;>\n\n<!ELEMENT basefont EMPTY>  <!-- base font size -->\n<!ATTLIST basefont\n  id          ID             #IMPLIED\n  size        CDATA          #REQUIRED\n  color       %Color;        #IMPLIED\n  face        CDATA          #IMPLIED\n  >\n\n<!ELEMENT font %Inline;> <!-- local change to font -->\n<!ATTLIST font\n  %coreattrs;\n  %i18n;\n  size        CDATA          #IMPLIED\n  color       %Color;        #IMPLIED\n  face        CDATA          #IMPLIED\n  >\n\n<!--==================== Object ======================================-->\n<!--\n  object is used to embed objects as part of HTML pages.\n  param elements should precede other content. Parameters\n  can also be expressed as attribute/value pairs on the\n  object element itself when brevity is desired.\n-->\n\n<!ELEMENT object (#PCDATA | param | %block; | form | %inline; | %misc;)*>\n<!ATTLIST object\n  %attrs;\n  declare     (declare)      #IMPLIED\n  classid     %URI;          #IMPLIED\n  codebase    %URI;          #IMPLIED\n  data        %URI;          #IMPLIED\n  type        %ContentType;  #IMPLIED\n  codetype    %ContentType;  #IMPLIED\n  archive     %UriList;      #IMPLIED\n  standby     %Text;         #IMPLIED\n  height      %Length;       #IMPLIED\n  width       %Length;       #IMPLIED\n  usemap      %URI;          #IMPLIED\n  name        NMTOKEN        #IMPLIED\n  tabindex    %Number;       #IMPLIED\n  align       %ImgAlign;     #IMPLIED\n  border      %Pixels;       #IMPLIED\n  hspace      %Pixels;       #IMPLIED\n  vspace      %Pixels;       #IMPLIED\n  >\n\n<!--\n  param is used to supply a named property value.\n  In XML it would seem natural to follow RDF and support an\n  abbreviated syntax where the param elements are replaced\n  by attribute value pairs on the object start tag.\n-->\n<!ELEMENT param EMPTY>\n<!ATTLIST param\n  id          ID             #IMPLIED\n  name        CDATA          #REQUIRED\n  value       CDATA          #IMPLIED\n  valuetype   (data|ref|object) \"data\"\n  type        %ContentType;  #IMPLIED\n  >\n\n<!--=================== Java applet ==================================-->\n<!--\n  One of code or object attributes must be present.\n  Place param elements before other content.\n-->\n<!ELEMENT applet (#PCDATA | param | %block; | form | %inline; | %misc;)*>\n<!ATTLIST applet\n  %coreattrs;\n  codebase    %URI;          #IMPLIED\n  archive     CDATA          #IMPLIED\n  code        CDATA          #IMPLIED\n  object      CDATA          #IMPLIED\n  alt         %Text;         #IMPLIED\n  name        NMTOKEN        #IMPLIED\n  width       %Length;       #REQUIRED\n  height      %Length;       #REQUIRED\n  align       %ImgAlign;     #IMPLIED\n  hspace      %Pixels;       #IMPLIED\n  vspace      %Pixels;       #IMPLIED\n  >\n\n<!--=================== Images ===========================================-->\n\n<!--\n   To avoid accessibility problems for people who aren't\n   able to see the image, you should provide a text\n   description using the alt and longdesc attributes.\n   In addition, avoid the use of server-side image maps.\n-->\n\n<!ELEMENT img EMPTY>\n<!ATTLIST img\n  %attrs;\n  src         %URI;          #REQUIRED\n  alt         %Text;         #REQUIRED\n  name        NMTOKEN        #IMPLIED\n  longdesc    %URI;          #IMPLIED\n  height      %Length;       #IMPLIED\n  width       %Length;       #IMPLIED\n  usemap      %URI;          #IMPLIED\n  ismap       (ismap)        #IMPLIED\n  align       %ImgAlign;     #IMPLIED\n  border      %Length;       #IMPLIED\n  hspace      %Pixels;       #IMPLIED\n  vspace      %Pixels;       #IMPLIED\n  >\n\n<!-- usemap points to a map element which may be in this document\n  or an external document, although the latter is not widely supported -->\n\n<!--================== Client-side image maps ============================-->\n\n<!-- These can be placed in the same document or grouped in a\n     separate document although this isn't yet widely supported -->\n\n<!ELEMENT map ((%block; | form | %misc;)+ | area+)>\n<!ATTLIST map\n  %i18n;\n  %events;\n  id          ID             #REQUIRED\n  class       CDATA          #IMPLIED\n  style       %StyleSheet;   #IMPLIED\n  title       %Text;         #IMPLIED\n  name        CDATA          #IMPLIED\n  >\n\n<!ELEMENT area EMPTY>\n<!ATTLIST area\n  %attrs;\n  %focus;\n  shape       %Shape;        \"rect\"\n  coords      %Coords;       #IMPLIED\n  href        %URI;          #IMPLIED\n  nohref      (nohref)       #IMPLIED\n  alt         %Text;         #REQUIRED\n  target      %FrameTarget;  #IMPLIED\n  >\n\n<!--================ Forms ===============================================-->\n\n<!ELEMENT form %form.content;>   <!-- forms shouldn't be nested -->\n\n<!ATTLIST form\n  %attrs;\n  action      %URI;          #REQUIRED\n  method      (get|post)     \"get\"\n  name        NMTOKEN        #IMPLIED\n  enctype     %ContentType;  \"application/x-www-form-urlencoded\"\n  onsubmit    %Script;       #IMPLIED\n  onreset     %Script;       #IMPLIED\n  accept      %ContentTypes; #IMPLIED\n  accept-charset %Charsets;  #IMPLIED\n  target      %FrameTarget;  #IMPLIED\n  >\n\n<!--\n  Each label must not contain more than ONE field\n  Label elements shouldn't be nested.\n-->\n<!ELEMENT label %Inline;>\n<!ATTLIST label\n  %attrs;\n  for         IDREF          #IMPLIED\n  accesskey   %Character;    #IMPLIED\n  onfocus     %Script;       #IMPLIED\n  onblur      %Script;       #IMPLIED\n  >\n\n<!ENTITY % InputType\n  \"(text | password | checkbox |\n    radio | submit | reset |\n    file | hidden | image | button)\"\n   >\n\n<!-- the name attribute is required for all but submit & reset -->\n\n<!ELEMENT input EMPTY>     <!-- form control -->\n<!ATTLIST input\n  %attrs;\n  %focus;\n  type        %InputType;    \"text\"\n  name        CDATA          #IMPLIED\n  value       CDATA          #IMPLIED\n  checked     (checked)      #IMPLIED\n  disabled    (disabled)     #IMPLIED\n  readonly    (readonly)     #IMPLIED\n  size        CDATA          #IMPLIED\n  maxlength   %Number;       #IMPLIED\n  src         %URI;          #IMPLIED\n  alt         CDATA          #IMPLIED\n  usemap      %URI;          #IMPLIED\n  onselect    %Script;       #IMPLIED\n  onchange    %Script;       #IMPLIED\n  accept      %ContentTypes; #IMPLIED\n  align       %ImgAlign;     #IMPLIED\n  >\n\n<!ELEMENT select (optgroup|option)+>  <!-- option selector -->\n<!ATTLIST select\n  %attrs;\n  name        CDATA          #IMPLIED\n  size        %Number;       #IMPLIED\n  multiple    (multiple)     #IMPLIED\n  disabled    (disabled)     #IMPLIED\n  tabindex    %Number;       #IMPLIED\n  onfocus     %Script;       #IMPLIED\n  onblur      %Script;       #IMPLIED\n  onchange    %Script;       #IMPLIED\n  >\n\n<!ELEMENT optgroup (option)+>   <!-- option group -->\n<!ATTLIST optgroup\n  %attrs;\n  disabled    (disabled)     #IMPLIED\n  label       %Text;         #REQUIRED\n  >\n\n<!ELEMENT option (#PCDATA)>     <!-- selectable choice -->\n<!ATTLIST option\n  %attrs;\n  selected    (selected)     #IMPLIED\n  disabled    (disabled)     #IMPLIED\n  label       %Text;         #IMPLIED\n  value       CDATA          #IMPLIED\n  >\n\n<!ELEMENT textarea (#PCDATA)>     <!-- multi-line text field -->\n<!ATTLIST textarea\n  %attrs;\n  %focus;\n  name        CDATA          #IMPLIED\n  rows        %Number;       #REQUIRED\n  cols        %Number;       #REQUIRED\n  disabled    (disabled)     #IMPLIED\n  readonly    (readonly)     #IMPLIED\n  onselect    %Script;       #IMPLIED\n  onchange    %Script;       #IMPLIED\n  >\n\n<!--\n  The fieldset element is used to group form fields.\n  Only one legend element should occur in the content\n  and if present should only be preceded by whitespace.\n-->\n<!ELEMENT fieldset (#PCDATA | legend | %block; | form | %inline; | %misc;)*>\n<!ATTLIST fieldset\n  %attrs;\n  >\n\n<!ENTITY % LAlign \"(top|bottom|left|right)\">\n\n<!ELEMENT legend %Inline;>     <!-- fieldset label -->\n<!ATTLIST legend\n  %attrs;\n  accesskey   %Character;    #IMPLIED\n  align       %LAlign;       #IMPLIED\n  >\n\n<!--\n Content is %Flow; excluding a, form, form controls, iframe\n--> \n<!ELEMENT button %button.content;>  <!-- push button -->\n<!ATTLIST button\n  %attrs;\n  %focus;\n  name        CDATA          #IMPLIED\n  value       CDATA          #IMPLIED\n  type        (button|submit|reset) \"submit\"\n  disabled    (disabled)     #IMPLIED\n  >\n\n<!-- single-line text input control (DEPRECATED) -->\n<!ELEMENT isindex EMPTY>\n<!ATTLIST isindex\n  %coreattrs;\n  %i18n;\n  prompt      %Text;         #IMPLIED\n  >\n\n<!--======================= Tables =======================================-->\n\n<!-- Derived from IETF HTML table standard, see [RFC1942] -->\n\n<!--\n The border attribute sets the thickness of the frame around the\n table. The default units are screen pixels.\n\n The frame attribute specifies which parts of the frame around\n the table should be rendered. The values are not the same as\n CALS to avoid a name clash with the valign attribute.\n-->\n<!ENTITY % TFrame \"(void|above|below|hsides|lhs|rhs|vsides|box|border)\">\n\n<!--\n The rules attribute defines which rules to draw between cells:\n\n If rules is absent then assume:\n     \"none\" if border is absent or border=\"0\" otherwise \"all\"\n-->\n\n<!ENTITY % TRules \"(none | groups | rows | cols | all)\">\n  \n<!-- horizontal placement of table relative to document -->\n<!ENTITY % TAlign \"(left|center|right)\">\n\n<!-- horizontal alignment attributes for cell contents\n\n  char        alignment char, e.g. char=':'\n  charoff     offset for alignment char\n-->\n<!ENTITY % cellhalign\n  \"align      (left|center|right|justify|char) #IMPLIED\n   char       %Character;    #IMPLIED\n   charoff    %Length;       #IMPLIED\"\n  >\n\n<!-- vertical alignment attributes for cell contents -->\n<!ENTITY % cellvalign\n  \"valign     (top|middle|bottom|baseline) #IMPLIED\"\n  >\n\n<!ELEMENT table\n     (caption?, (col*|colgroup*), thead?, tfoot?, (tbody+|tr+))>\n<!ELEMENT caption  %Inline;>\n<!ELEMENT thead    (tr)+>\n<!ELEMENT tfoot    (tr)+>\n<!ELEMENT tbody    (tr)+>\n<!ELEMENT colgroup (col)*>\n<!ELEMENT col      EMPTY>\n<!ELEMENT tr       (th|td)+>\n<!ELEMENT th       %Flow;>\n<!ELEMENT td       %Flow;>\n\n<!ATTLIST table\n  %attrs;\n  summary     %Text;         #IMPLIED\n  width       %Length;       #IMPLIED\n  border      %Pixels;       #IMPLIED\n  frame       %TFrame;       #IMPLIED\n  rules       %TRules;       #IMPLIED\n  cellspacing %Length;       #IMPLIED\n  cellpadding %Length;       #IMPLIED\n  align       %TAlign;       #IMPLIED\n  bgcolor     %Color;        #IMPLIED\n  >\n\n<!ENTITY % CAlign \"(top|bottom|left|right)\">\n\n<!ATTLIST caption\n  %attrs;\n  align       %CAlign;       #IMPLIED\n  >\n\n<!--\ncolgroup groups a set of col elements. It allows you to group\nseveral semantically related columns together.\n-->\n<!ATTLIST colgroup\n  %attrs;\n  span        %Number;       \"1\"\n  width       %MultiLength;  #IMPLIED\n  %cellhalign;\n  %cellvalign;\n  >\n\n<!--\n col elements define the alignment properties for cells in\n one or more columns.\n\n The width attribute specifies the width of the columns, e.g.\n\n     width=64        width in screen pixels\n     width=0.5*      relative width of 0.5\n\n The span attribute causes the attributes of one\n col element to apply to more than one column.\n-->\n<!ATTLIST col\n  %attrs;\n  span        %Number;       \"1\"\n  width       %MultiLength;  #IMPLIED\n  %cellhalign;\n  %cellvalign;\n  >\n\n<!--\n    Use thead to duplicate headers when breaking table\n    across page boundaries, or for static headers when\n    tbody sections are rendered in scrolling panel.\n\n    Use tfoot to duplicate footers when breaking table\n    across page boundaries, or for static footers when\n    tbody sections are rendered in scrolling panel.\n\n    Use multiple tbody sections when rules are needed\n    between groups of table rows.\n-->\n<!ATTLIST thead\n  %attrs;\n  %cellhalign;\n  %cellvalign;\n  >\n\n<!ATTLIST tfoot\n  %attrs;\n  %cellhalign;\n  %cellvalign;\n  >\n\n<!ATTLIST tbody\n  %attrs;\n  %cellhalign;\n  %cellvalign;\n  >\n\n<!ATTLIST tr\n  %attrs;\n  %cellhalign;\n  %cellvalign;\n  bgcolor     %Color;        #IMPLIED\n  >\n\n<!-- Scope is simpler than headers attribute for common tables -->\n<!ENTITY % Scope \"(row|col|rowgroup|colgroup)\">\n\n<!-- th is for headers, td for data and for cells acting as both -->\n\n<!ATTLIST th\n  %attrs;\n  abbr        %Text;         #IMPLIED\n  axis        CDATA          #IMPLIED\n  headers     IDREFS         #IMPLIED\n  scope       %Scope;        #IMPLIED\n  rowspan     %Number;       \"1\"\n  colspan     %Number;       \"1\"\n  %cellhalign;\n  %cellvalign;\n  nowrap      (nowrap)       #IMPLIED\n  bgcolor     %Color;        #IMPLIED\n  width       %Length;       #IMPLIED\n  height      %Length;       #IMPLIED\n  >\n\n<!ATTLIST td\n  %attrs;\n  abbr        %Text;         #IMPLIED\n  axis        CDATA          #IMPLIED\n  headers     IDREFS         #IMPLIED\n  scope       %Scope;        #IMPLIED\n  rowspan     %Number;       \"1\"\n  colspan     %Number;       \"1\"\n  %cellhalign;\n  %cellvalign;\n  nowrap      (nowrap)       #IMPLIED\n  bgcolor     %Color;        #IMPLIED\n  width       %Length;       #IMPLIED\n  height      %Length;       #IMPLIED\n  >\n\n"
  }
]