[
  {
    "title": "Single-Select",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/interactivecomponents/single-select/",
    "html": "Single-Select\n\nA single-select component is used to capture a choice from up to 10 options that you provide. You can submit the value of the select option by:\n\nAdding an action to the single-select component\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the single-select component used as the key and the id from the chosen option as the value.\n\nSingle-Select Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tsingle-select\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of options.Can provide 2 to 10.\nlabel\tAny string\tNo\tThe text shown above the options.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOptions Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "List",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/interactivecomponents/list/",
    "html": "List\n\nA list component renders a list of items which you provide in an array. You can make each list item take an action by adding the relevant action object to the item:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nList Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tlist\tYes\tThe type of component you are rendering.\nitems\tArray (see below)\tYes\tThe items that will be rendered in the list.\ndisabled\ttrue``false\tNo\tStyles all list items and prevents the action.Default is false.\nItem Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\titem\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the item.\ntitle\tAny string\tYes\tThe text shown as the title for the item.\nsubtitle\tAny string\tNo\tThe text shown underneath the item's title.\ntertiary_text\tAny string\tNo\tThe text shown next to the subtitle, separates by a bullet.\nimage\tA valid HTTPS URL\tNo\tAn image that will be displayed to the left of the item.\nimage_width\tAny integer\tYes (if image provided)\tThe exact width of the image in pixels.\nimage_height\tAny integer\tYes (if image provided)\tThe exact height of the image in pixels.\nrounded_image\ttrue``false\tNo\tRounds the corners of the image.Default is false.\ndisabled\ttrue``false\tNo\tThe defined state of the inputted value to render a specific style.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nPreview"
  },
  {
    "title": "Input",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/interactivecomponents/input/",
    "html": "Input\n\nAn input component is used to capture text input from the end user. You can submit the value of the input by:\n\nAdding an action to the input component (which will render an inline button)\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tinput\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the input.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.Will be overriden if save_state is saved.\nPreview"
  },
  {
    "title": "Dropdown",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/interactivecomponents/dropdown/",
    "html": "Dropdown\n\nA dropdown component is used to capture a choice from up to 10 options that you provide. You can submit the value of the select option by:\n\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the dropdown component used as the key and the id from the chosen option as the value.\n\nDropdown Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tdropdown\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of options.Can provide 2 to 10.\nlabel\tAny string\tNo\tThe text shown above the dropdown.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOption Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Checkbox Parameters",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/interactivecomponents/checkbox/",
    "html": "Checkbox\n\nA checkbox component is used to capture multiple choices from as many options as you want to provide. You can submit the options by:\n\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the checkbox component used as the key and an array containing the id of each chosen option as the value.\n\nCheckbox Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tcheckbox\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of options.Minimum of 1.\nlabel\tAny string\tNo\tThe text shown above the options.\nvalue\tArray containing the id of option's\tNo\tThe option's that are selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\nOptions Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown next to the checkbox.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Button",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/interactivecomponents/button/",
    "html": "Button\n\nA button component is used to take an action by clicking a button. This can either:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tbutton\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tYes\tThe text that will be rendered inside the button.\naction\tAction Object\tYes\tThis can be a Submit Action, URL Action, or Sheets Action.\nstyle\tprimary``secondary``link\tNo\tStyles the button.Default is primary.\ndisabled\tfalse``true\tNo\tStyles the button and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Input",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/interactivecomponents/input/",
    "html": "Input\n\nAn input component is used to capture text input from the end user. You can submit the value of the input by:\n\nAdding an action to the input component (which will render an inline button)\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tinput\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the input.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.Will be overriden if save_state is saved.\nPreview"
  },
  {
    "title": "List",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/interactivecomponents/list/",
    "html": "List\n\nA list component renders a list of items which you provide in an array. You can make each list item take an action by adding the relevant action object to the item:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nList Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tlist\tYes\tThe type of component you are rendering.\nitems\tArray (see below)\tYes\tThe items that will be rendered in the list.\ndisabled\ttrue``false\tNo\tStyles all list items and prevents the action.Default is false.\nItem Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\titem\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the item.\ntitle\tAny string\tYes\tThe text shown as the title for the item.\nsubtitle\tAny string\tNo\tThe text shown underneath the item's title.\ntertiary_text\tAny string\tNo\tThe text shown next to the subtitle, separates by a bullet.\nimage\tA valid HTTPS URL\tNo\tAn image that will be displayed to the left of the item.\nimage_width\tAny integer\tYes (if image provided)\tThe exact width of the image in pixels.\nimage_height\tAny integer\tYes (if image provided)\tThe exact height of the image in pixels.\nrounded_image\ttrue``false\tNo\tRounds the corners of the image.Default is false.\ndisabled\ttrue``false\tNo\tThe defined state of the inputted value to render a specific style.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nPreview"
  },
  {
    "title": "Button",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/interactivecomponents/button/",
    "html": "Button\n\nA button component is used to take an action by clicking a button. This can either:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tbutton\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tYes\tThe text that will be rendered inside the button.\naction\tAction Object\tYes\tThis can be a Submit Action, URL Action, or Sheets Action.\nstyle\tprimary``secondary``link\tNo\tStyles the button.Default is primary.\ndisabled\tfalse``true\tNo\tStyles the button and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "List",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/interactivecomponents/list/",
    "html": "List\n\nA list component renders a list of items which you provide in an array. You can make each list item take an action by adding the relevant action object to the item:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nList Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tlist\tYes\tThe type of component you are rendering.\nitems\tArray (see below)\tYes\tThe items that will be rendered in the list.\ndisabled\ttrue``false\tNo\tStyles all list items and prevents the action.Default is false.\nItem Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\titem\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the item.\ntitle\tAny string\tYes\tThe text shown as the title for the item.\nsubtitle\tAny string\tNo\tThe text shown underneath the item's title.\ntertiary_text\tAny string\tNo\tThe text shown next to the subtitle, separates by a bullet.\nimage\tA valid HTTPS URL\tNo\tAn image that will be displayed to the left of the item.\nimage_width\tAny integer\tYes (if image provided)\tThe exact width of the image in pixels.\nimage_height\tAny integer\tYes (if image provided)\tThe exact height of the image in pixels.\nrounded_image\ttrue``false\tNo\tRounds the corners of the image.Default is false.\ndisabled\ttrue``false\tNo\tThe defined state of the inputted value to render a specific style.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nPreview"
  },
  {
    "title": "Dropdown",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/interactivecomponents/dropdown/",
    "html": "Dropdown\n\nA dropdown component is used to capture a choice from up to 10 options that you provide. You can submit the value of the select option by:\n\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the dropdown component used as the key and the id from the chosen option as the value.\n\nDropdown Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tdropdown\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of options.Can provide 2 to 10.\nlabel\tAny string\tNo\tThe text shown above the dropdown.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOption Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Dropdown",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/interactivecomponents/dropdown/",
    "html": "Dropdown\n\nA dropdown component is used to capture a choice from up to 10 options that you provide. You can submit the value of the select option by:\n\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the dropdown component used as the key and the id from the chosen option as the value.\n\nDropdown Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tdropdown\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of options.Can provide 2 to 10.\nlabel\tAny string\tNo\tThe text shown above the dropdown.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOption Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Single-Select",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/interactivecomponents/single-select/",
    "html": "Single-Select\n\nA single-select component is used to capture a choice from up to 10 options that you provide. You can submit the value of the select option by:\n\nAdding an action to the single-select component\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the single-select component used as the key and the id from the chosen option as the value.\n\nSingle-Select Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tsingle-select\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of options.Can provide 2 to 11.\nlabel\tAny string\tNo\tThe text shown above the options.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOptions Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Parameters",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/interactivecomponents/text-area/",
    "html": "Text Area\n\nA text area component is used to capture a large amount of text as input with a multi-line text box. You can submit the value of the text area by:\n\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttextarea\tYes\tThe type of component you are rendering\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the text area.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\nerror\tfalse``true\tNo\tStyles the input as failed.Default is false.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Single-Select",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/interactivecomponents/single-select/",
    "html": "Single-Select\n\nA single-select component is used to capture a choice from up to 10 options that you provide. You can submit the value of the select option by:\n\nAdding an action to the single-select component\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the single-select component used as the key and the id from the chosen option as the value.\n\nSingle-Select Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tsingle-select\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of options.Can provide 2 to 10.\nlabel\tAny string\tNo\tThe text shown above the options.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOptions Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Input",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/interactivecomponents/input/",
    "html": "Input\n\nAn input component is used to capture text input from the end user. You can submit the value of the input by:\n\nAdding an action to the input component (which will render an inline button)\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tinput\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the input.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.Will be overriden if save_state is saved.\nPreview"
  },
  {
    "title": "Submit action",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/actioncomponents/submit-action/",
    "html": "Submit action\n\nA submit action triggers a Submit Request to be sent. This request will include all values which have been entered into all the interactive components on the current canvas.\n\nParameters\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsubmit\tYes\tThe type of action you are attaching to a component.\nExample Object\naction: {\n  \"type\": \"submit\"\n}\n"
  },
  {
    "title": "Submit action",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/actioncomponents/submit-action/",
    "html": "Submit action\n\nA submit action triggers a Submit Request to be sent. This request will include all values which have been entered into all the interactive components on the current canvas.\n\nParameters\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsubmit\tYes\tThe type of action you are attaching to a component.\nExample Object\naction: {\n  \"type\": \"submit\"\n}\n"
  },
  {
    "title": "Sheets Action",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/actioncomponents/sheets-action/",
    "html": "Sheets Action\n\nA sheet action opens the link you give within the Messenger as an embedded iframe.\n\nMore on how Sheets work is in our Canvas Kit documentation.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsheet\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which hosts your sheet.\nExample Object\naction: {\n  type: \"sheet\",\n  url:  \"http://example.com\"\n}\n"
  },
  {
    "title": "Sheets Action",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/actioncomponents/sheets-action/",
    "html": "Sheets Action\n\nA sheet action opens the link you give within the Messenger as an embedded iframe.\n\nMore on how Sheets work is in our Canvas Kit documentation.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsheet\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which hosts your sheet.\nExample Object\naction: {\n  type: \"sheet\",\n  url:  \"https://example.com\"\n}\n"
  },
  {
    "title": "Sheets Action",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/actioncomponents/sheets-action/",
    "html": "Sheets Action\n\nA sheet action opens the link you give within the Messenger as an embedded iframe.\n\nMore on how Sheets work is in our Canvas Kit documentation.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsheet\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which hosts your sheet.\nExample Object\naction: {\n  type: \"sheet\",\n  url:  \"http://example.com\"\n}\n"
  },
  {
    "title": "URL Action",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/actioncomponents/url-action/",
    "html": "URL Action\n\nA URL action opens a given link in a new browser tab. You must encode all the non-ASCII characters in the URL. For JS, use encodeURIComponent. For Ruby, use URI.escape.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\turl\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which will open in a new tab.\nExample Object\naction: {\n  \"type\": \"url\",\n  \"url\":  \"https://www.example.com\"\n}\n"
  },
  {
    "title": "URL Action",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/actioncomponents/url-action/",
    "html": "URL Action\n\nA URL action opens a given link in a new browser tab. You must encode all the non-ASCII characters in the URL. For JS, use encodeURIComponent. For Ruby, use URI.escape.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\turl\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which will open in a new tab.\nExample Object\naction: {\n  \"type\": \"url\",\n  \"url\":  \"https://www.example.com\"\n}\n"
  },
  {
    "title": "Text Area",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/interactivecomponents/text-area/",
    "html": "Text Area\n\nA text area component is used to capture a large amount of text as input with a multi-line text box. You can submit the value of the text area by:\n\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttextarea\tYes\tThe type of component you are rendering\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the text area.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\nerror\tfalse``true\tNo\tStyles the input as failed.Default is false.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Spacer",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/presentationcomponents/spacer/",
    "html": "Spacer\n\nA spacer component is used to create empty space between components.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tspacer\t\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nsize\txs``s``m``l``xl\tNo\tThe amount of space between components.Default is s.\nPreview"
  },
  {
    "title": "URL Action",
    "url": "https://developers.intercom.com/docs/references/1.2/canvas-kit/actioncomponents/url-action/",
    "html": "URL Action\n\nA URL action opens the specified link in a new browser tab.\n\n❗️ Encode non-ASCII characters\n\nIf your URL has non-ASCII characters that are not encoded, we will use the URL in a meta tag while opening the new window and it will break the non-ASCII encoding.\n\nFor JS - Use encodeURIComponent\nFor Ruby - Use URI.escape\n\naction: {\n  type: \"url\",\n  url:  \"https://www.example.com\"\n}\n"
  },
  {
    "title": "Button",
    "url": "https://developers.intercom.com/docs/references/1.2/canvas-kit/interactivecomponents/button/",
    "html": "Button\n\nA button component is used to trigger an action. Depending on the action type, a button can:\n\nSubmit an action\nOpen a link in a new page\nOpen a sheet\n\nButtons are submittable, meaning that when they are clicked, they will dispatch a webhook to the url specified through the relevant action. Read more about this by clicking on the different actions that can be taken above.\n\n{  type:  \"button\",  id: \"button-123\",  label: \"Submit form\",  style: \"secondary\",  disabled: true,  action: {    type: \"url\",    url: \"https://www.intercom.com/\"  }}\n\nParameter\tPossible Values\tRequired\tFunction\nid\tAny string\tYes\tUnique identifier for the component within this card.\nlabel\tAny string\tYes\tThe text that will be rendered inside the button.\naction\tObject\tYes\tThis can be a Submit Action, URL Action, or Sheets Action.\nstyle\tprimary (default)secondarylink\tNo\tStyles the button in a specific preset style.\ndisabled\tfalse (default)true\tNo\tStyles as complete and prevents further editing or interaction.\n\n🚧 Line Breaks\n\nLine breaks are not converted into tags in the rendered HTML, so all text will appear on a single line.\n\nCard View\n\nFrame View"
  },
  {
    "title": "Button",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/interactivecomponents/button/",
    "html": "Button\n\nA button component is used to take an action by clicking a button. This can either:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tbutton\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tYes\tThe text that will be rendered inside the button.\naction\tAction Object\tYes\tThis can be a Submit Action, URL Action, or Sheets Action.\nstyle\tprimary``secondary``link\tNo\tStyles the button.Default is primary.\ndisabled\tfalse``true\tNo\tStyles the button and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Image",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/presentationcomponents/image/",
    "html": "Image\n\nAn image component is used to display an image.\n\n🚧 HTTPS Images\n\nIf your request URLs (or website URLs) are over HTTPS, you will need to ensure that images are loaded over HTTPS likewise. Otherwise, they will not work.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\timage\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nurl\tA valid HTTPS URL\tYes\tThe URL where the image is located.\nalign\tleft``center``right``full_width\tNo\tAligns the image inside the component.Default is left.\nwidth\tAny integer\tYes\tThe exact width of the image in pixels.\nheight\tAny integer\tYes\tThe exact height of the image in pixels.\nrounded\ttrue``false\tNo\tRounds the corners of the image. Default is false.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\naction\tAction Object\tNo\tThis can be a URL Action only.\nPreview"
  },
  {
    "title": "Input",
    "url": "https://developers.intercom.com/docs/references/1.2/canvas-kit/interactivecomponents/input/",
    "html": "Input\n\nAn input component is used to capture text input from the end user.\n\nIf you pass an action to the input component, it will render with an inline button which submits the value inside the input to the specified URL.\n\n{  type: \"input\",   id: \"user_email_address\",  label: \"Enter your email address\",  placeholder: \"user@domain.com\",  value: \"peter@intercom.io\",  save_state: \"unsaved\",  disabled: true,  action: {    type: \"submit\"  }}\n\nParameter\tPossible Values\tRequired\tFunction\nid\tAny string\tYes\tUnique identifier for the component within this card.\nlabel\tAny string\tNo\tThe text shown above the input.\nplaceholder\tAny string\tNo\tAn example value shown inside the input when it’s empty.\nvalue\tAny string\tNo\tThe default value of the input.\naction\tAction object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nsave_state\tunsaved (default)savedfailed\tNo\tThe defined state of the inputted value to render a specific style.\ndisabled\tfalse (default)true\tNo\tStyles as complete and prevents further editing or interaction.\n\n📘 Saved States\n\nA save_state of saved renders the input in a style which indicates a successfully submitted value, and prevents further editing or interaction with the input. It's the only save_state that changes the function and blocks any further interaction.This is the same functionality as if you set the disabled boolean to true. If you set the save_state as saved but the disabled boolean as false, we'll overwrite the boolean and still show the component in this disabled state.\n\nCard View\n\nFrame View"
  },
  {
    "title": "Sheets Action",
    "url": "https://developers.intercom.com/docs/references/1.2/canvas-kit/actioncomponents/sheets-action/",
    "html": "Sheets Action\n\nA sheets action opens a given sheet in the URL specified, to populate a full-bleed iframe within the messenger.\n\nMore on how Sheets work is in our Canvas Kit documentation.\n\naction: {\n  type: \"sheet\",\n  url:  \"http://example.com\"\n}\n"
  },
  {
    "title": "Dropdown",
    "url": "https://developers.intercom.com/docs/references/1.2/canvas-kit/interactivecomponents/dropdown/",
    "html": "Dropdown\n\nA dropdown component is used to capture a choice from the teammate or end user. It requires a collection of dropdown options, which represent the possible choices.\n\n{  type: \"dropdown\",  id: \"industry\",  label: \"Choose your industry\",  value: \"banking\",  save_state: \"unsaved\",  disabled: true,  options: [    {      type: \"option\",      id: \"banking\",      text: \"Banking\"    }, {      type: \"option\",      id: \"tech\",      text: \"Technology\",      disabled: true    }  ],}\n\nDropdown\nParameter\tPossible Values\tRequired\tFunction\nid\tAny string\tYes\tUnique identifier for the component within this card. Dropdown components are submitted in a hash, with this id used as the key and the id of the chosen option as the value.\nlabel\tAny string\tNo\tThe text shown above the input.\noptions\tArray\tYes\tThe list of options. A minimum of 2 options is required, and no more than 11 are allowed. More on the Options array is below.\nvalue\tAny string\tNo\tThe default value of the option.\nsave_state\tunsaved (default)savedfailed\tNo\tThe defined state of the inputted value to render a specific style.\ndisabled\tfalse (default)true\tNo\tStyles as complete and prevents further editing or interaction.\n\n📘 Saved States\n\nA save_state of saved renders the input in a style which indicates a successfully submitted value, and prevents further editing or interaction with the input. It's the only save_state that changes the function and blocks any further interaction.\n\nOptions\nParameter\tPossible Values\tRequired\tFunction\nid\tAny string\tYes\tUnique identifier for the option. Dropdown components are submitted in a hash, with this id used as the key and the id of the chosen option as the value.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse (default)true\tNo\tStyles as complete and prevents further editing or interaction.\nCard View\n\nFrame View"
  },
  {
    "title": "Submit Action",
    "url": "https://developers.intercom.com/docs/references/1.2/canvas-kit/actioncomponents/submit-action/",
    "html": "Submit Action\n\nA submit action fires a webhook to the developer’s web-service with the current state of the card, including the values entered into any interactive components, so that the developer can trigger side-effects and/or return a new set of components to update the card state.\n\nMore on how this works is in the submit flow documentation through this link.\n\nINPUT COMPONENTS\n\nIf there are input elements present within the card, then a submit action from a button will submit the entire form.\n\naction: {\n  type: \"submit\"\n}\n"
  },
  {
    "title": "List",
    "url": "https://developers.intercom.com/docs/references/1.2/canvas-kit/interactivecomponents/list/",
    "html": "List\n\nA list component renders a collection of list items. Below you can see what's needed for both the List Component and List's Items array.\n\n{\n  type: \"list\",\n  disabled: \"true\",\n  items: [\n    {\n      type: \"item\",\n      id: \"article-123\",\n      title: \"How to install the messenger\",\n      subtitle: \"An article explaining how to integrate Intercom\",\n      tertiary_text: \"Read time: 4 mins\",\n      image: \"http://somesite.com/article.png\",\n      image_width: 48,\n      image_height: 48,\n      roundedImage: false,\n      disabled: true,\n      action: {\n        type: \"submit\"\n      }\n    }\n  ]\n}\n\nList\nParameter\tPossible Values\tRequired\tFunction\nitems\tArray (see below)\tYes\tThe items that will be rendered in the list.\ndisabled\ttrue false\tNo\tThe defined state of the inputted value to render a specific style.\nList Items\nParameter\tPossible Values\tRequired\tFunction\nid\tAny string\tYes\tUnique identifier for the component within this card.\ntitle\tAny string\tYes\tThe text shown as the title for the list item.\nsubtitle\tAny string\tNo\tThe text shown underneath the list item's title.\ntertiary_text\tAny string\tNo\tThe text shown next to the subtitle, separate by a bullet.\nimage\tA valid URL\tNo\tAn image that will be displayed on the left-hand side of the list\nimage_width\tAny number\tYes (if image provided)\tWidth of the image in pixels.\nimage_height\tAny number\tYes (if image provided)\tHeight of the image in pixels.\nrounded_image\ttrue false (default)\tNo\tRounds the corners of the image if true.\ndisabled\ttrue false\tNo\tThe defined state of the inputted value to render a specific style.\naction\tAction object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nCard View\n\nFrame View"
  },
  {
    "title": "Divider",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/presentationcomponents/divider/",
    "html": "Divider\n\nA divider component is used to separate components with a line.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdivider\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "Data-Table",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/presentationcomponents/data-table/",
    "html": "Data-Table\n\nA data-table component is used for rendering a table of key-value pairs. For Messenger, text will wrap around on multiple lines. For Inbox and Frame (ie. Configure) views, we will truncate and use tooltips on hover if the text overflows.\n\nData-Table Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdata-table\tYes\tThe type of component you are rendering.\nitems\tArray (See Below)\tYes\tThe items that will be rendered in the data-table.\nField-Value Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tfield-value\tYes\tThe type of component you are rendering.\nfield\tAny string\tYes\tThe text of the key in your key-value pair.\nvalue\tAny string\tYes\tThe text of the value in your key-value pair.\nPreview"
  },
  {
    "title": "Spacer",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/presentationcomponents/spacer/",
    "html": "Spacer\n\nA spacer component is used to create empty space between components.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tspacer\t\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nsize\txs``s``m``l``xl\tNo\tThe amount of space between components.Default is s.\nPreview"
  },
  {
    "title": "Text Area",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/interactivecomponents/text-area/",
    "html": "Text Area\n\nA text area component is used to capture a large amount of text as input with a multi-line text box. You can submit the value of the text area by:\n\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttextarea\tYes\tThe type of component you are rendering\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the text area.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\nerror\tfalse``true\tNo\tStyles the input as failed.Default is false.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Image",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/presentationcomponents/image/",
    "html": "Image\n\nAn image component is used to display an image.\n\n🚧 HTTPS Images\n\nIf your request URLs (or website URLs) are over HTTPS, you will need to ensure that images are loaded over HTTPS likewise. Otherwise, they will not work.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\timage\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nurl\tA valid HTTPS URL\tYes\tThe URL where the image is located.\nalign\tleft``center``right``full_width\tNo\tAligns the image inside the component.Default is left.\nwidth\tAny integer\tYes\tThe exact width of the image in pixels.\nheight\tAny integer\tYes\tThe exact height of the image in pixels.\nrounded\ttrue``false\tNo\tRounds the corners of the image. Default is false.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\naction\tAction Object\tNo\tThis can be a URL Action only.\nPreview"
  },
  {
    "title": "Submit action",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/actioncomponents/submit-action/",
    "html": "Submit action\n\nA submit action triggers a Submit Request to be sent. This request will include all values which have been entered into all the interactive components on the current canvas.\n\nParameters\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsubmit\tYes\tThe type of action you are attaching to a component.\nExample Object\naction: {\n  \"type\": \"submit\"\n}\n"
  },
  {
    "title": "Data-Table",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/presentationcomponents/data-table/",
    "html": "Data-Table\n\nA data-table component is used for rendering a table of key-value pairs. For Messenger, text will wrap around on multiple lines. For Inbox and Frame (ie. Configure) views, we will truncate and use tooltips on hover if the text overflows.\n\nData-Table Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdata-table\tYes\tThe type of component you are rendering.\nitems\tArray (See Below)\tYes\tThe items that will be rendered in the data-table.\nField-Value Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tfield-value\tYes\tThe type of component you are rendering.\nfield\tAny string\tYes\tThe text of the key in your key-value pair.\nvalue\tAny string\tYes\tThe text of the value in your key-value pair.\nPreview"
  },
  {
    "title": "Divider",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/presentationcomponents/divider/",
    "html": "Divider\n\nA divider component is used to separate components with a line.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdivider\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "Single select",
    "url": "https://developers.intercom.com/docs/references/1.2/canvas-kit/interactivecomponents/single-select/",
    "html": "Single select\n\nA single select component is used to capture a choice from the teammate or end user. It requires a collection of single select options, which represent the possible choices.\n\n{  type: \"single-select\",  id: \"industry\",  label: \"Choose your industry\",  value: \"banking\",  save_state: \"unsaved\",  disabled: true,  options: [    {      type: \"option\",      id: \"banking\",      text: \"Banking\"    },     {      type: \"option\",      id: \"tech\",      text: \"Technology\",      disabled: true,    }  ],  action: {    type: \"submit\"  },}\n\nSingle-Select\nParameter\tPossible Values\tRequired\tFunction\nid\tAny string\tYes\tUnique identifier for the component within this card. Single select components are submitted in a hash, with this id used as the key and the id of the chosen option as the value.\nlabel\tAny string\tNo\tThe text shown above the input.\noptions\tArray\tYes\tThe list of options. A minimum of 2 options is required, and no more than 11 are allowed. More on the Options array is below.\nvalue\tAny string\tNo\tThe default value of the option.\naction\tAction object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nsave_state\tunsaved (default)savedfailed\tNo\tThe defined state of the inputted value to render a specific style.\ndisabled\tfalse (default)true\tNo\tStyles as complete and prevents further editing or interaction.\n\n📘 Saved States\n\nA save_state of saved renders the input in a style which indicates a successfully submitted value, and prevents further editing or interaction with the input. It's the only save_state that changes the function and blocks any further interaction.\n\nOptions\nParameter\tPossible Values\tRequired\tFunction\nid\tAny string\tYes\tUnique identifier for the option. Single select components are submitted in a hash, with this id used as the key and the id of the chosen option as the value.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse (default)true\tNo\tStyles as complete and prevents further editing or interaction.\nCard View\n\nFrame View"
  },
  {
    "title": "URL Action",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/actioncomponents/url-action/",
    "html": "URL Action\n\nA URL action opens a given link in a new browser tab. You must encode all the non-ASCII characters in the URL. For JS, use encodeURIComponent. For Ruby, use URI.escape.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\turl\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which will open in a new tab.\nExample Object\naction: {\n  \"type\": \"url\",\n  \"url\":  \"https://www.example.com\"\n}\n"
  },
  {
    "title": "Image",
    "url": "https://developers.intercom.com/docs/references/1.2/canvas-kit/presentationcomponents/image/",
    "html": "Image\n\nAn image component is used to display an image inside a messenger card.\n\n🚧 HTTPS Images\n\nIf your request URLs (or website URLs) are over HTTPS, you will need to ensure that images are loaded over HTTPS likewise. Otherwise, they will not work.\n\n{  type: \"image\",   url:  \"https://somesite.com/images640_480.png\",  width:  640,  height: 480}\n\nParameter\tPossible Values\tRequired\tFunction\nid\tAny string\tNo\tUnique identifier for the component within this card.\nurl\tA valid URL\tYes\tThe URL where the image is located.\nalign\tleft (default)centerright\tNo\tAligns the image inside the component.\nwidth\tAny number\tYes\tWidth of the image in pixels.\nheight\tAny number\tYes\tHeight of the image in pixels.\nrounded\ttruefalse (default)\tNo\tRounds the corners of the image if true.\nCard View\n\nFrame View"
  },
  {
    "title": "Spacer",
    "url": "https://developers.intercom.com/docs/references/1.2/canvas-kit/presentationcomponents/spacer/",
    "html": "Spacer\n\nA spacer component is used to create empty space between other messenger card components.\n\n{  type: \"spacer\",   size:  \"xl\"}\n\nParameter\tPossible Values\tRequired\tFunction\nid\tAny string\tNo\tUnique identifier for the component within this card.\nsize\txss (default)mlxl\tNo\tRepresents the amount of space between components.\nCard View\n\nFrame View"
  },
  {
    "title": "Text",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/presentationcomponents/text/",
    "html": "Text\n\nThe text component is used for rendering blocks of text. Links and bold font can be rendered through Markdown. There are different styles provided which edit the color, weight, and font size. These cannot be edited through Markdown.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttext\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\ntext\tAny stringMarkdown Links []()Markdown Bold **\tYes\tThe text that will be rendered.\nalign\tleft``center``right\tNo\tAligns the text. Default is left.\nstyle\theader``paragraph``muted``error\tNo\tStyles the text. Default is paragraph.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "Divider",
    "url": "https://developers.intercom.com/docs/references/1.2/canvas-kit/presentationcomponents/divider/",
    "html": "Divider\n\nA spacer component is used to create empty space between other messenger card components.\n\n{\n  type: \"divider\"\n}\n\nParameter\tPossible Values\tRequired\tFunction\nid\tAny string\tNo\tUnique identifier for the component within this card.\nbottom_margin\tNone\tNo\t\nCard View\n\nFrame View"
  },
  {
    "title": "Spacer",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/presentationcomponents/spacer/",
    "html": "Spacer\n\nA spacer component is used to create empty space between components.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tspacer\t\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nsize\txs``s``m``l``xl\tNo\tThe amount of space between components.Default is s.\nPreview"
  },
  {
    "title": "Single-Select Parameters",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/interactivecomponents/single-select/",
    "html": "Single-Select\n\nA single-select component is used to capture a choice from up to 10 options that you provide. You can submit the value of the select option by:\n\nAdding an action to the single-select component\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the single-select component used as the key and the id from the chosen option as the value.\n\nSingle-Select Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tsingle-select\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of options.Can provide 2 to 10.\nlabel\tAny string\tNo\tThe text shown above the options.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOptions Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Input",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/interactivecomponents/input/",
    "html": "Input\n\nAn input component is used to capture text input from the end user. You can submit the value of the input by:\n\nAdding an action to the input component (which will render an inline button)\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tinput\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the input.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.Will be overriden if save_state is saved.\nPreview"
  },
  {
    "title": "List",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/interactivecomponents/list/",
    "html": "List\n\nA list component renders a list of items which you provide in an array. You can make each list item take an action by adding the relevant action object to the item:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nList Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tlist\tYes\tThe type of component you are rendering.\nitems\tArray (see below)\tYes\tThe items that will be rendered in the list.\ndisabled\ttrue``false\tNo\tStyles all list items and prevents the action.Default is false.\nItem Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\titem\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the item.\ntitle\tAny string\tYes\tThe text shown as the title for the item.\nsubtitle\tAny string\tNo\tThe text shown underneath the item's title.\ntertiary_text\tAny string\tNo\tThe text shown next to the subtitle, separates by a bullet.\nimage\tA valid HTTPS URL\tNo\tAn image that will be displayed to the left of the item.\nimage_width\tAny integer\tYes (if image provided)\tThe exact width of the image in pixels.\nimage_height\tAny integer\tYes (if image provided)\tThe exact height of the image in pixels.\nrounded_image\ttrue``false\tNo\tRounds the corners of the image.Default is false.\ndisabled\ttrue``false\tNo\tThe defined state of the inputted value to render a specific style.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nPreview"
  },
  {
    "title": "Data-Table",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/presentationcomponents/data-table/",
    "html": "Data-Table\n\nA data-table component is used for rendering a table of key-value pairs. For Messenger, text will wrap around on multiple lines. For Inbox and Frame (ie. Configure) views, we will truncate and use tooltips on hover if the text overflows.\n\nData-Table Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdata-table\tYes\tThe type of component you are rendering.\nitems\tArray (See Below)\tYes\tThe items that will be rendered in the data-table.\nField-Value Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tfield-value\tYes\tThe type of component you are rendering.\nfield\tAny string\tYes\tThe text of the key in your key-value pair.\nvalue\tAny string\tYes\tThe text of the value in your key-value pair.\nPreview"
  },
  {
    "title": "Sheets Action",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/actioncomponents/sheets-action/",
    "html": "Sheets Action\n\nA sheet action opens the link you give within the Messenger as an embedded iframe.\n\nMore on how Sheets work is in our Canvas Kit documentation.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsheet\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which hosts your sheet.\nExample Object\naction: {\n  type: \"sheet\",\n  url:  \"http://example.com\"\n}\n"
  },
  {
    "title": "Submit action",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/actioncomponents/submit-action/",
    "html": "Submit action\n\nA submit action triggers a Submit Request to be sent. This request will include all values which have been entered into all the interactive components on the current canvas.\n\nParameters\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsubmit\tYes\tThe type of action you are attaching to a component.\nExample Object\naction: {\n  \"type\": \"submit\"\n}\n"
  },
  {
    "title": "Divider",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/presentationcomponents/divider/",
    "html": "Divider\n\nA divider component is used to separate components with a line.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdivider\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "Image",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/presentationcomponents/image/",
    "html": "Image\n\nAn image component is used to display an image.\n\n🚧 HTTPS Images\n\nIf your request URLs (or website URLs) are over HTTPS, you will need to ensure that images are loaded over HTTPS likewise. Otherwise, they will not work.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\timage\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nurl\tA valid HTTPS URL\tYes\tThe URL where the image is located.\nalign\tleft``center``right``full_width\tNo\tAligns the image inside the component.Default is left.\nwidth\tAny integer\tYes\tThe exact width of the image in pixels.\nheight\tAny integer\tYes\tThe exact height of the image in pixels.\nrounded\ttrue``false\tNo\tRounds the corners of the image. Default is false.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\naction\tAction Object\tNo\tThis can be a URL Action only.\nPreview"
  },
  {
    "title": "Text",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/presentationcomponents/text/",
    "html": "Text\n\nThe text component is used for rendering blocks of text. Links and bold font can be rendered through Markdown. There are different styles provided which edit the color, weight, and font size. These cannot be edited through Markdown.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttext\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\ntext\tAny stringMarkdown Links []()Markdown Bold **\tYes\tThe text that will be rendered.\nalign\tleft``center``right\tNo\tAligns the text. Default is left.\nstyle\theader``paragraph``muted``error\tNo\tStyles the text. Default is paragraph.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "URL Action",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/actioncomponents/url-action/",
    "html": "URL Action\n\nA URL action opens a given link in a new browser tab. You must encode all the non-ASCII characters in the URL. For JS, use encodeURIComponent. For Ruby, use URI.escape.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\turl\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which will open in a new tab.\nExample Object\naction: {\n  \"type\": \"url\",\n  \"url\":  \"https://www.example.com\"\n}\n"
  },
  {
    "title": "Text",
    "url": "https://developers.intercom.com/docs/references/1.2/canvas-kit/presentationcomponents/text/",
    "html": "Text\n\nThe text component is used for rendering blocks of text inside messenger cards. It does not accept most styling information (e.g. font size and text color). Links and bold font can be rendered through Markdown however.\n\n{  type:  \"text\",  text:  \"Welcome to the messenger app framework\",  style: \"header\",  align: \"left\"}\n\nParameter\tPossible Values\tRequired\tFunction\nid\tAny string\tNo\tUnique identifier for the component within this card.\ntext\tAny stringMarkdown (ie. [](), **)\tYes\tThe text that will be rendered inside the component.\nalign\tleft (default)centerright\tNo\tAligns the text inside the component.\nstyle\theaderparagraph (default)mutederror\tNo\tStyles the text in a specific preset style.\nbottom_margin\tNone\tNo\tDisables a component’s default margin-bottom of 10px.\n\n🚧 Line Breaks\n\nLine breaks are not converted into tags in the rendered HTML, so all text will appear on a single line.\n\nCard View\n\nFrame View"
  },
  {
    "title": "Dropdown",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/interactivecomponents/dropdown/",
    "html": "Dropdown\n\nA dropdown component is used to capture a choice from two or more options that you provide. You can submit the value of the select option by:\n\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the dropdown component used as the key and the id from the chosen option as the value.\n\nDropdown Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tdropdown\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of options.A minimum of leasat leasoptions is required.\nlabel\tAny string\tNo\tThe text shown above the dropdown.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOption Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Button",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/interactivecomponents/button/",
    "html": "Button\n\nA button component is used to take an action by clicking a button. This can either:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tbutton\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tYes\tThe text that will be rendered inside the button.\naction\tAction Object\tYes\tThis can be a Submit Action, URL Action, or Sheets Action.\nstyle\tprimary``secondary``link\tNo\tStyles the button.Default is primary.\ndisabled\tfalse``true\tNo\tStyles the button and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Current Canvas",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/requestobjects/current-canvas/",
    "html": "Current Canvas\nDescription\n\nThe current_canvas object mirrors the same format as the Canvas Object. This will be the canvas that was most recently showing before the request was sent.\n\nExample Object\n{\n  current_canvas: {\n    content: { \n      components : [\n        {\n          \"type\": \"button\",\n          \"id\": \"button-1\",\n          \"label\": \"This canvas showed before I was clicked\",\n          \"action\": {\n            \"type\": \"submit\"\n          }\n        }\n      ]\n    }\n  }\n}\n"
  },
  {
    "title": "Customer",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/requestobjects/customer/",
    "html": "Customer\nDescription\n\nThe customer object provides information on the Intercom customer. You can see more about this on the User Model page of our API Reference.\n\nExample Object\n{\n  customer: {\n    \"type\": \"user\",\n    \"id\": \"530370b477ad7120001d\",\n    \"user_id\": \"25\",\n    \"email\": \"wash@serenity.io\",\n    \"phone\": \"+1123456789\",\n    \"name\": \"Hoban Washburne\",\n    \"updated_at\": 1392734388,\n    \"unsubscribed_from_emails\": false,\n    \"last_request_at\": 1397574667,\n    \"signed_up_at\": 1392731331,\n    \"created_at\": 1392734388,\n    \"session_count\": 179,\n    \"pseudonym\": null,\n    \"anonymous\": false,\n    \"referrer\": \"https://example.org\",\n    \"utm_campaign\": null,\n    \"utm_content\": null,\n    \"utm_medium\": null,\n    \"utm_source\": null,\n    \"utm_term\": null,\n    \"custom_attributes\": {\n      \"paid_subscriber\" : true,\n      \"monthly_spend\": 155.5,\n      \"team_mates\": 1\n    },\n    \"avatar\": {\n      \"type\":\"avatar\",\n      \"image_url\": \"https://example.org/128Wash.jpg\"\n    },\n    \"location_data\": {\n      \"type\": \"location_data\",\n      \"city_name\": \"Dublin\",\n      \"continent_code\": \"EU\",\n      \"country_code\": \"IRL\",\n      \"country_name\": \"Ireland\",\n      \"postal_code\": null,\n      \"region_name\": \"Dublin\",\n      \"timezone\": \"Europe/Dublin\"\n    },\n    \"social_profiles\": {\n      \"type\":\"social_profile.list\",\n      \"social_profiles\": [\n        {\n          \"name\": \"Twitter\",\n          \"id\": \"1235d3213\",\n          \"username\": \"th1sland\",\n          \"url\": \"http://twitter.com/th1sland\"\n        }\n      ]\n    },\n    \"companies\": {\n      \"type\": \"company.list\",\n      \"companies\": [\n        {\n          \"id\" : \"530370b477ad7120001e\"\n        }\n      ]\n    },\n    \"segments\": {\n      \"type\": \"segment.list\",\n      \"segments\": [\n        {\n          \"id\" : \"5310d8e7598c9a0b24000002\"\n        }\n      ]\n    },\n    \"tags\": {\n      \"type\": \"tag.list\",\n      \"tags\": [\n        {\n          \"id\": \"202\"\n        }\n      ]\n    }\n  }\n}\n"
  },
  {
    "title": "Context",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/requestobjects/context/",
    "html": "Context\nDescription\n\nThe context object provides additional details on where the app has been added (or is currently being used), what page the app is being used on, and information on the Messenger settings. This is in order for you give a fully customised experience based on the customers use case.\n\nIf the location is conversation then you will also be given a conversation_id. If you need to use details about the conversation, then you have to use the conversation_id to make a call to our Conversations API and retrieve the conversation object.\n\nAttributes\nKey\tType\tLocation\tDescription\nconversation_id\tinteger\tConversation\tThe id of the conversation where the app is added or being used.\nlocation\tstring\tConversation, Messenger Home, Message, Operator\tWhere the app is added or the action took place. Can be either 'conversation', 'home', 'message', or 'operator'.\nlocale\tstring\tConversation, Messenger Home, Message, Operator\tThe default end-user language of the Messenger. Use to localise Messenger App content.\nmessenger_action_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers action colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nmessenger_background_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers background colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nreferrer\tstring\tConversation, Messenger Home, Message, Operator\tThe current page URL where the app is being used.\nExample Objects\n{\n  conversation_id: 4294967297,\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n\n{\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n"
  },
  {
    "title": "# Card Creation Options",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/requestobjects/card-creation-options/",
    "html": "# Card Creation Options\nDescription\n\nThe card_creation_options object is a JSON hash containing key-value pairs. These key-value pairs either represent:\n\nData that was sent within the results object in response to the Configure request.\nData that was sent within the card_creation_options object in response to the Submit request.\nExample Object\ncard_creation_options: { \"key\": \"value\" } //Can be more than one pair\n"
  },
  {
    "title": "Admin",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/requestobjects/admin/",
    "html": "Admin\nDescription\n\nThe admin object provides information on the Intercom teammate. You can see more about this on the Admin Model page of our API Reference.\n\nExample Object\n{\n  admin: {\n    type: \"admin\",\n    id: \"814860\",\n    name: \"IntercomTest\",\n    email: \"theadmin@example.com\",\n    job_title: \"Existentialist\",\n    away_mode_enabled: false,\n    away_mode_reassign: false,\n    avatar: {\n      image_url: \"https://static.site.test.icon\"\n    },\n    team_ids: [\n      814865\n    ]\n  }\n}\n"
  },
  {
    "title": "Input Values",
    "url": "https://developers.intercom.com/docs/references/1.2/canvas-kit/requestobjects/input-values/",
    "html": "Input Values\n\nThe input-values object is a JSON hash where you can add key-value pairs.\n\nIt's returned to the relevant URLs to specify any data that had been inputted by teammates during the configure flow, and any data that has been inputted by end users during the submit flow.\n\ninput_values: {\n    name: \"Data one\",\n     ... //Can be more than one pair\n  }\n\n{\n  app_id: \"<string id_code of the app using the card>\",\n  admin: {<Admin object of admin who is performing configuration>},\n  current_canvas: {<Canvas object>},\n  component_id: \"<component_id, component which triggered action>\",\n  input_values: {\n    <component_id>: \"<value entered in component>\",\n    ...\n  },\n  context: {<Context object>}\n}\n\n{\n  app_id: \"<string id_code of the app using the card>\",\n  current_canvas: {<Canvas object>},\n  component_id: \"<component_id, component which triggered action>\",\n  input_values: {\n    <component_id>: \"<value entered in component>\",\n    ...\n  },\n  user: {<User object of end-user who triggered action>},\n  context: {<Context object>}\n}\n"
  },
  {
    "title": "Image",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/presentationcomponents/image/",
    "html": "Image\n\nAn image component is used to display an image.\n\n🚧 HTTPS Images\n\nIf your request URLs (or website URLs) are over HTTPS, you will need to ensure that images are loaded over HTTPS likewise. Otherwise, they will not work.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\timage\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nurl\tA valid HTTPS URL\tYes\tThe URL where the image is located.\nalign\tleft``center``right``full_width\tNo\tAligns the image inside the component.Default is left.\nwidth\tAny integer\tYes\tThe exact width of the image in pixels.\nheight\tAny integer\tYes\tThe exact height of the image in pixels.\nrounded\ttrue``false\tNo\tRounds the corners of the image. Default is false.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\naction\tAction Object\tNo\tThis can be a URL Action only.\nPreview"
  },
  {
    "title": "Current Canvas",
    "url": "https://developers.intercom.com/docs/references/1.2/canvas-kit/requestobjects/current-canvas/",
    "html": "Current Canvas\n\nThe current_canvas object mirrors the same format as the Canvas Object, which is returned by Intercom to your web-service.\n\nIt's returned to the relevant URLs to specify what the canvas currently looks during the configure flow, and during the submit flow respectively.\n\nTo see what is included in a canvas object when you initially send it to us, click here."
  },
  {
    "title": "Context",
    "url": "https://developers.intercom.com/docs/references/1.2/canvas-kit/requestobjects/context/",
    "html": "Context\n{\n  conversation_id: 4294967297,\n  locale: 'en', \n  location: 'conversation',\n  messenger_action_color: '#333333',\n  messenger_background_color: '#333333',\n  referrer: 'https://intercom.com/'\n}\n\n{\n  locale: 'en', \n  location: 'home',\n  messenger_action_color: '#333333',\n  messenger_background_color: '#333333',\n  referrer: 'https://intercom.com/'\n}\n\n{\n  \"locale\": 'en',\n  \"location\": 'message',\n  \"messenger_action_color\": '#f06192',\n  \"messenger_background_color\": '#00acc1'\n}\n\n\nThe context object describes where an action has taken place, and includes any relevant information you may need to customise what appears on the card.\n\nYou will receive a context object as part of a request from Intercom, but depending on the webhook and the location where it is triggered, not all of this context information is available.\n\nWebhooks can be hit from Messenger Web context, Messenger SDK context, Inbox context, or Messages context:\n\nKey\tType\tDescription\nlocation\tstring\tThis can be either 'conversation', 'home', or 'message', depending on where the action took place.\nlocale\tstring\tThe default end-user language of the Messenger. Use to localise Messenger App content.\nconversation_id\tinteger\tOnly present if the app was added to a conversation.\nmessenger_action_colour\tstring\tThe messengers action colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nmessenger_background_colour\tstring\tThe messengers background colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nreferrer\tstring\tThe current page URL of the end-user."
  },
  {
    "title": "Card Creation Options",
    "url": "https://developers.intercom.com/docs/references/1.2/canvas-kit/requestobjects/card-creation-options/",
    "html": "Card Creation Options\n\nThe card_creation_options object is a JSON hash where you can add key-value pairs.\n\nIt's sent to the initialize URL to specify any data that had been inputted by teammates during the configure flow. This happens once you respond with the results object at the end of the configure flow.\n\n{\n  \"card_creation_options\": {\n    \"name\": \"data one\",\n     ... //Can be more than one pair\n  }\n}\n\n{\n  card_creation_options: {\n    <set of key-value pairs>\n  },\n  app_id: \"<string id_code of the app using the card>\",\n  context: {<Context object>}\n}\n"
  },
  {
    "title": "Admin",
    "url": "https://developers.intercom.com/docs/references/1.2/canvas-kit/requestobjects/admin/",
    "html": "Admin\n\nThe admin object provides information on the Intercom teammate.\n\n{\n  admin: {\n    type: \"admin\",\n    id: \"814860\",\n    name: \"IntercomTest\",\n    email: \"theadmin@example.com\",\n    job_title: \"Existentialist\",\n    away_mode_enabled: false,\n    away_mode_reassign: false,\n    avatar: {\n      image_url: \"https://static.site.test.icon\"\n    },\n    team_ids: [\n      814865\n    ]\n  }\n}\n\nKey\tType\tDescription\ntype\tstring\tValue will always be 'admin'.\nid\tstring\tThe id of the admin.\nname\tstring\tThe name of the admin.\nemail\tstring\tThe email address of the admin.\njob_title\tstring\tThe job title of the admin.\naway_mode_enabled\tboolean\tIdentifies if this admin is currently set in away mode.\naway_mode_reassign\tboolean\tIdentifies if this admin has currently set replies to assigned conversations to go automatically into the workspaces default inbox.\navatar\tobject\tContains an 'image_url' string attribute within.\nteam_ids\tarray[integer]\tThis is a list of teams id's that the admin is a part of. Only set if the type is 'admin'."
  },
  {
    "title": "Current Canvas",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/requestobjects/current-canvas/",
    "html": "Current Canvas\nDescription\n\nThe current_canvas object mirrors the same format as the Canvas Object. This will be the canvas that was most recently showing before the request was sent.\n\nExample Object\n{\n  current_canvas: {\n    content: { \n      components : [\n        {\n          \"type\": \"button\",\n          \"id\": \"button-1\",\n          \"label\": \"This canvas showed before I was clicked\",\n          \"action\": {\n            \"type\": \"submit\"\n          }\n        }\n      ]\n    }\n  }\n}\n"
  },
  {
    "title": "Text",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/presentationcomponents/text/",
    "html": "Text\n\nThe text component is used for rendering blocks of text. Links and bold font can be rendered through Markdown. There are different styles provided which edit the color, weight, and font size. These cannot be edited through Markdown.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttext\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\ntext\tAny stringMarkdown Links []()Markdown Bold **\tYes\tThe text that will be rendered.\nalign\tleft``center``right\tNo\tAligns the text. Default is left.\nstyle\theader``paragraph``muted``error\tNo\tStyles the text. Default is paragraph.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "Admin",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/requestobjects/admin/",
    "html": "Admin\nDescription\n\nThe admin object provides information on the Intercom teammate. You can see more about this on the Admin Model page of our API Reference.\n\nExample Object\n{\n  admin: {\n    type: \"admin\",\n    id: \"814860\",\n    name: \"IntercomTest\",\n    email: \"theadmin@example.com\",\n    job_title: \"Existentialist\",\n    away_mode_enabled: false,\n    away_mode_reassign: false,\n    avatar: {\n      image_url: \"https://static.site.test.icon\"\n    },\n    team_ids: [\n      814865\n    ]\n  }\n}\n"
  },
  {
    "title": "Card Creation Options",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/requestobjects/card-creation-options/",
    "html": "Card Creation Options\nDescription\n\nThe card_creation_options object is a JSON hash containing key-value pairs. These key-value pairs either represent:\n\nData that was sent within the results object in response to the Configure request.\nData that was sent within the card_creation_options object in response to the Submit request.\nExample Object\ncard_creation_options: { \"key\": \"value\" } //Can be more than one pair\n"
  },
  {
    "title": "Text Area",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/interactivecomponents/text-area/",
    "html": "Text Area\n\nA text area component is used to capture a large amount of text as input with a multi-line text box. You can submit the value of the text area by:\n\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttextarea\tYes\tThe type of component you are rendering\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the text area.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\nerror\tfalse``true\tNo\tStyles the input as failed.Default is false.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Context",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/requestobjects/context/",
    "html": "Context\nDescription\n\nThe context object provides additional details on where the app has been added (or is currently being used), what page the app is being used on, and information on the Messenger settings. This is in order for you give a fully customised experience based on the customers use case.\n\nIf the location is conversation then you will also be given a conversation_id. If you need to use details about the conversation, then you have to use the conversation_id to make a call to our Conversations API and retrieve the conversation object.\n\nAttributes\nKey\tType\tLocation\tDescription\nconversation_id\tinteger\tConversation\tThe id of the conversation where the app is added or being used.\nlocation\tstring\tConversation, Messenger Home, Message, Operator\tWhere the app is added or the action took place. Can be either 'conversation', 'home', 'message', or 'operator'.\nlocale\tstring\tConversation, Messenger Home, Message, Operator\tThe default end-user language of the Messenger. Use to localise Messenger App content.\nmessenger_action_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers action colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nmessenger_background_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers background colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nreferrer\tstring\tConversation, Messenger Home, Message, Operator\tThe current page URL where the app is being used.\nExample Objects\n{\n  conversation_id: 4294967297,\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n\n{\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n"
  },
  {
    "title": "Contact",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/requestobjects/contact/",
    "html": "Contact\nDescription\n\nThe contact object provides information on the Intercom contact. You can see more about this on the Contacts Model page of our API Reference.\n\nExample Object\n{\n  \"type\": \"contact\",\n  \"id\": \"5ba682d23d7cf92bef87bfd4\",\n  \"workspace_id\": \"ecahpwf5\",\n  \"external_id\": \"25\",\n  \"role\": \"user\",\n  \"email\": \"wash@serenity.io\",\n  \"phone\": \"+1123456789\",\n  \"name\": \"Hoban Washburn\",\n  \"avatar\": \"https://example.org/128Wash.jpg\",\n  \"owner_id\": 127,\n  \"social_profiles\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"social_profile\",\n        \"name\": \"Twitter\",\n        \"url\": \"http://twitter.com/th1sland\"\n      }\n    ]\n  },\n  \"has_hard_bounced\": false,\n  \"marked_email_as_spam\": false,\n  \"unsubscribed_from_emails\": false,\n  \"created_at\": 1571672154,\n  \"updated_at\": 1571672158,\n  \"signed_up_at\": 1571069751,\n  \"last_seen_at\": 1571069751,\n  \"last_replied_at\": 1571672158,\n  \"last_contacted_at\": 1571672158,\n  \"last_email_opened_at\": 1571673478,\n  \"last_email_clicked_at\": 1571676789,\n  \"language_override\": null,\n  \"browser\": \"chrome\",\n  \"browser_version\": \"77.0.3865.90\",\n  \"browser_language\": \"en\",\n  \"os\": \"OS X 10.14.6\",\n  \"location\": {\n    \"type\": \"location\",\n    \"country\": \"Ireland\",\n    \"region\": \"Dublin\",\n    \"city\": \"Dublin\"\n  },\n  \"android_app_name\": null,\n  \"android_app_version\": null,\n  \"android_device\": null,\n  \"android_os_version\": null,\n  \"android_sdk_version\": null,\n  \"android_last_seen_at\": null,\n  \"ios_app_name\": null,\n  \"ios_app_version\": null,\n  \"ios_device\": null,\n  \"ios_os_version\": null,\n  \"ios_sdk_version\": null,\n  \"ios_last_seen_at\": null,\n  \"custom_attributes\": {\n    \"paid_subscriber\": true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 1\n  },\n  \"tags\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"tag\",\n        \"id\": \"2\",\n        \"url\": \"/tags/2\"\n      },\n      {\n        \"type\": \"tag\",\n        \"id\": \"4\",\n        \"url\": \"/tags/4\"\n      },\n      {\n        \"type\": \"tag\",\n        \"id\": \"5\",\n        \"url\": \"/tags/5\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/tags\",\n    \"total_count\": 3,\n    \"has_more\": false\n  },\n  \"notes\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"note\",\n        \"id\": \"20114858\",\n        \"url\": \"/notes/20114858\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/notes\",\n    \"total_count\": 1,\n    \"has_more\": false\n  },\n  \"companies\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"company\",\n        \"id\": \"5ba686093d7cf93552a3dc99\",\n        \"url\": \"/companies/5ba686093d7cf93552a3dc99\"\n        \n      },\n      {\n        \"type\": \"company\",\n        \"id\": \"5cee64a03d7cf90c51b36f19\",\n        \"url\": \"/companies/5cee64a03d7cf90c51b36f19\"\n      },\n      {\n        \"type\": \"company\",\n        \"id\": \"5d7668883d7cf944dbc5c791\",\n        \"url\": \"/companies/5d7668883d7cf944dbc5c791\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/companies\",\n    \"total_count\": 3,\n    \"has_more\": false\n  }\n}\n"
  },
  {
    "title": "Input Values",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/requestobjects/input-values/",
    "html": "Input Values\nDescription\n\nThe input_values object is a JSON hash containing key-value pairs. These key-value pairs represent the data that's been inputted by customers and teammates with a given component.\n\nThe key will be the component_id and the value will be the data that was inputted by this component.\n\nExample Object\ninput_values: { \"<component_id>\": \"<Value entered in component>\" }, //Can be more than one pair\n"
  },
  {
    "title": "User",
    "url": "https://developers.intercom.com/docs/references/1.2/canvas-kit/requestobjects/user/",
    "html": "User\n\nThe user object provides information on the Intercom end-user. It is sent to your web-service as part of the submit flow when an end-user interacts with a card.\n\nMore on the user object can be found on the REST API Reference through this link. The user object provided in the messenger framework will contain the same attributes as noted in the REST API Reference."
  },
  {
    "title": "Input Values",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/requestobjects/input-values/",
    "html": "Input Values\nDescription\n\nThe input_values object is a JSON hash containing key-value pairs. These key-value pairs represent the data that's been inputted by customers and teammates with a given component.\n\nThe key will be the component_id and the value will be the data that was inputted by this component.\n\nExample Object\ninput_values: { \"<component_id>\": \"<Value entered in component>\" }, //Can be more than one pair\n"
  },
  {
    "title": "Canvas",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/responseobjects/canvas/",
    "html": "Canvas\nDescription\n\nYou have to respond to the majority of request with a canvas object. This will tell us what UI to show for your app.\n\nA canvas can either be static (meaning we send you the next request only when an action takes place) or live (meaning we send you the next request when someone views the app).\n\nA static canvas needs a Content Object which will contain the components to show.\nA live canvas needs a content_url which we we will make the Live Canvas requests to when the app is viewed. This is only possible for apps viewed or used in the Messenger.\nAttributes\nKey\tType\tCanvas Type\tDescription\ncontent\tobject\tStatic\tThe Content that will be shown as the UI of the app. Max Size is 64KB.\ncontent_url\tstring\tLive\tThe URL which we make Live Canvas requests to. You must respond to these with a Content Object. Max size is 64KB.\nstored_data\tobject\tStatic, Live\tOptional Stored Data that you want to be returned in the next sent request. Max Size is 64KB.\nExample Objects\n{\n  canvas: {\n    content: {\n      components: [\n        {\n          \"type\": \"text\",\n          \"text\": \"This is a text component.\"\n        }\n      ]\n    },\n    stored_data: { \"key\": \"value\" } //Can be more than one pair \n  }\n}\n\n{\n  canvas: {\n    content_url: \"https://messengerapp.com/get-content-here\",\n    stored_data: { \"key\": \"value\" } //Can be more than one pair \n  }\n}\n"
  },
  {
    "title": "Content",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/responseobjects/content/",
    "html": "Content\nDescription\n\nThe content object is where you specify the UI of your app. You provide us with a set of components in a components array that we then render.\n\nThe content object should usually be returned within the canvas object. If you're responding to a Live Canvas request however, then you should only respond with the content object.\n\nAttributes\nKey\tType\tDescription\ncomponents\tarray\tThe list of components to be rendered. See the components further in this reference.\nExample Object\n{\n  content: {\n    components: [\n      {\n        \"type\": \"text\",\n        \"id\": \"component-1\",\n        \"text\": \"This is the first component\",\n        \"align\": \"center\",\n        \"style\": \"header\"\n      },\n      {\n        \"type\": \"button\",\n        \"id\": \"component-2\",\n        \"label\": \"This is the second component\",\n        \"action\": {\n          \"type\": \"submit\"\n        }\n      }\n    ]\n  }\n}\n"
  },
  {
    "title": "Event",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/responseobjects/event/",
    "html": "Event\nDescription\n\nThe event object enables Intercom to know more about the actions that took place in your app. Currently, you can only tell us when an app's flow has been completed.\n\nAttributes\nKey\tType\tDescription\ntype\tstring\tWhat action took place. The only value currently accepted is completed.\nExample Object\nevent: { \"type\": \"completed\" } // Optional. Recorded by Intercom.\n"
  },
  {
    "title": "Results",
    "url": "https://developers.intercom.com/docs/references/1.2/canvas-kit/responseobjects/results/",
    "html": "Results\n\nThe results object should be sent as the final response during the configure flow, when you want to start the initialize flow after configuration to add the app is complete.\n\n{\n  results: {\n    name: \"Data one\", //Example teammate input\n    email: \"Data two\" //Example teammate input\n  }\n}\n\nKey\tType\tDescription\nresults\tobject\tSet of key-value pairs representing the configuration options entered by the teammate."
  },
  {
    "title": "Results",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/responseobjects/results/",
    "html": "Results\nDescription\n\nThe results object should be sent when you want to end configuration of the app and trigger the Initialize request to be sent. You provide the key-value pairs of data you want access to and we will send these in the Initialize request within a card_creation_options object.\n\nExample Object\nresults: { \"key\": \"value\" } // Can be more than one pair\n"
  },
  {
    "title": "Spacer",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/presentationcomponents/spacer/",
    "html": "Spacer\n\nA spacer component is used to create empty space between components.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tspacer\t\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nsize\txs``s``m``l``xl\tNo\tThe amount of space between components.Default is s.\nPreview"
  },
  {
    "title": "Data-Table",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/presentationcomponents/data-table/",
    "html": "Data-Table\n\nA data-table component is used for rendering a table of key-value pairs. For Messenger, text will wrap around on multiple lines. For Inbox and Frame (ie. Configure) views, we will truncate and use tooltips on hover if the text overflows.\n\nData-Table Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdata-table\tYes\tThe type of component you are rendering.\nitems\tArray (See Below)\tYes\tThe items that will be rendered in the data-table.\nField-Value Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tfield-value\tYes\tThe type of component you are rendering.\nfield\tAny string\tYes\tThe text of the key in your key-value pair.\nvalue\tAny string\tYes\tThe text of the value in your key-value pair.\nPreview"
  },
  {
    "title": "Divider",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/presentationcomponents/divider/",
    "html": "Divider\n\nA divider component is used to separate components with a line.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdivider\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "Canvas",
    "url": "https://developers.intercom.com/docs/references/1.2/canvas-kit/responseobjects/canvas/",
    "html": "Canvas\n\nCanvases are one of the most common objects in most app cycles. They enable Intercom to determine what your app will render, alongside how this content will be rendered. These can either be:\n\nStatic: the given content in the canvas will remain until an action is taken to change this.\nLive: the given content in the canvas can change dynamically whenever anybody views the card. More about the Live Canvas can be found here.\nStatic Canvas\n{\n  canvas: {\n    content: {\n      components: [\n        {\n          type: \"text\",\n          text: \"Hello World!\"\n        }\n      ]\n    },\n    stored_data: {} //optional\n  }\n}\n\nKey\tType\tDescription\ncontent\tobject\tMore on the content object can be found here. Max Size is 64KB.\nstored_data\tobject\tMore on the stored_data object can be found here. Max Size is 64KB.\nLive Canvas\n{\n  canvas: {\n    content_url: \"https://messengerapp.com/get-content-here\",\n    stored_data: {} //optional\n  }\n}\n\nKey\tType\tDescription\ncontent_url\tstring\tThe URL which we make Live Canvas requests to. You must respond to these with a Content Object. Max size is 64KB.\nstored_data\tobject\tOptional Stored Data that you want to be returned in the next sent request. Max Size is 64KB."
  },
  {
    "title": "Content",
    "url": "https://developers.intercom.com/docs/references/1.2/canvas-kit/responseobjects/content/",
    "html": "Content\n\nThe content object specifies which components you want to render within the canvas of your apps card or frame. There's a small difference to note between a static and a live canvas:\n\nStatic: you can provide the content object within the canvas.\nLive: you will need to provide a content_url for us to POST a request to within the canvas, and subsequently respond with the content object there.\n{\n  content: {\n    components: [\n      {\n        type: \"text\",\n        text: \"This is your updated canvas\",\n        align: \"center\",\n        style: \"header\"\n      }\n    ]\n  }\n}\n\nKey\tType\tDescription\ncomponents\tarray[object]\tThe list of components to be rendered within a card or a frame. See our components further in this reference."
  },
  {
    "title": "Event",
    "url": "https://developers.intercom.com/docs/references/1.2/canvas-kit/responseobjects/event/",
    "html": "Event\n\nThe event object property enables Intercom to know more about the actions that were processed by your app, in the response to a submit or submit-sheet action.\n\n{\n  event: {\n  \ttype: \"completed\"\n  }\n}\n\nKey\tType\tDescription\ntype\tstring\tThe event type of the reported action. The only value currently accepted is completed."
  },
  {
    "title": "List Subscriptions",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/webhooks/list-subscriptions/",
    "html": "List Subscriptions\nExample List Subscriptions Request\n$ curl https://api.intercom.io/subscriptions \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nintercom.subscriptions.all.each { ... }\n\nHTTP/1.1 200 Ok\n\n{\n  \"type\": \"notification_subscription.list\",\n  \"items\": [\n      {\n        \"type\": \"notification_subscription\",\n        \"id\": \"nsub_6ab4c480-fd8b-11e3-958f-c779cae3e1b3\",\n        \"created_at\": 1392731331,\n        \"updated_at\": 1392731331,\n        \"service_type\": \"web\",\n        \"topics\": [\"user\"],\n        \"url\": \"https://example.org/hooks/1\",\n        \"active\": true,\n        \"hub_secret\": null\n      },\n      {\n        \"type\": \"notification_subscription\",\n        \"id\": \"nsub_3fb4c480-fd8b-11e3-958f-c779cae3e1cd\",\n        \"created_at\": 1392731122,\n        \"updated_at\": 1392731122,\n        \"service_type\": \"web\",\n        \"topics\": [\n          \"conversation.user.created\",\n          \"conversation.user.replied\"\n        ],\n        \"url\": \"https://example.org/hooks/2\",\n        \"active\": true,\n        \"hub_secret\": null\n      }\n  ],\n  \"pages\":{}\n}\n\nSubscriptionCollection list = Subscription.list();\n\nwhile (list.hasNext()) {\n    Subscription sub = list.next();\n    String appID = sub.getAppID();\n    String serviceType = sub.getServiceType();\n    List<Subscription.Topic> topics = sub.getTopics();\n    String hubSecret = sub.getHubSecret();\n}\n\n\nYou can fetch the subscriptions for an App by sending a GET request to https://api.intercom.io/subscriptions/."
  },
  {
    "title": "Update a Subscription",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/webhooks/update-a-subscription/",
    "html": "Update a Subscription\n\nExample Update Request\n\n$ curl -XPOST \\\nhttps://api.intercom.io/subscriptions/nsub_6ab4c480-fd8b-11e3-958f-c779cae3e1b3 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d'\n{\n  \"topics\": [\"conversation\", \"company\", \"users\"],\n  \"url\": \"https://example.org/hooks/1\"\n}'\n\nHTTP/1.1 200 Ok\n\n{\n  \"type\": \"notification_subscription\",\n  \"id\": \"nsub_6ab4c480-fd8b-11e3-958f-c779cae3e1b3\",\n  \"created_at\": 1392731331,\n  \"updated_at\": 1392732945,\n  \"service_type\": \"web\",\n  \"topics\": [\"conversation\", \"company\", \"user\"],\n  \"url\": \"https://example.org/hooks/1\"\n  \"active\": true,\n  \"hub_secret\": null\n}\n\nSubscription sub = Subscription.find(\"nsub_60ca7690\");\nsub.setUrl(new URI(\"https://example.org/webhooks/2\"));\nSubscription.update(sub);\n\n\nYou can update a subscription's topics, active status and url, by submitting a POST to the subscription's URL, along with the JSON for the subscription. The topics, url, active and hub_secret fields can be updated.\n\nThe topics array sent during an update will replace the existing list of topics and is not merged. For example if the subscription is susbcribed to the topics [\"company\", \"users\"] and is updated with the list [\"conversation\", \"company\"], the final result will be [\"conversation\", \"company\"] and the users topic will be unsubscribed from.\n\nSetting the active status to false means the subscription will stop receiving events. Note that events triggered when a subscription is inactive may not be sent when the subscription is later re-activated."
  },
  {
    "title": "Event Webhooks",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/webhooks/event-webhooks/",
    "html": "Event Webhooks\nExample Event Webhook Create Request\n$ curl https://api.intercom.io/subscriptions \\\n-XPOST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d'\n{\n  \"service_type\": \"web\",\n  \"topics\": [\"event.created\"],\n  \"url\": \"https://example.org/hooks/1\",\n  \"metadata\": { \n    \"event_names\": [\"invited-friend\"]\n  }\n}'\n\nHTTP/1.1 200 Ok\n\n{\n  \"type\": \"notification_subscription\",\n  \"id\": \"nsub_6ab4c480-fd8b-11e3-958f-c779cae3e1b3\",\n  \"created_at\": 1392731331,\n  \"updated_at\": 1392731331,\n  \"service_type\": \"web\",\n  \"topics\": [\"event.created\"],\n  \"url\": \"https://example.org/hooks\",\n  \"active\": true,\n  \"hub_secret\": null,\n  \"metadata\" :{\n    \"event_names\": [\"invited-friend\"]\n  }\n}\n\nEVENT WEBHOOKS ARE IN BETA.\n\nWe'll be refining the API for a short while before lifting the beta tag, and we'd love to know what you think. Please send any feedback, questions or bug reports to us using the Intercom Messenger below! \\n \\nNotes:\\n\\n_ The initial beta support does not limit to number of event names per topic, but this may be changed before moving out of Beta.\\n_ We'll be adding support for event webhook subscriptions in the PHP, Ruby, Go, Node and Java clients.\n\nCreate an Event Webhook Subscription\n\nTo subscribe to event webhooks, add the event.created topic to your subscription in the topics field.\n\nThe names of the events must also be supplied in the subscription. This can be done by posting an array called event_names in the metadata field of the subscription. The event_names array is required for an events subscription - there is no option to subscribe to all event names.\n\nApart from the need to declare the event names, the event.created is a regular webhook and can be used with other topics in the same subscription.\n\nUpdate an Event Webhook Subscription\n\nYou can update a subscription's event names by submitting a POST to the subscription's URL as described in Create a Subscription along with an updated event_names array. Note that the updated array replaces the existing array - the entire set of event names you want to subscribe to should be sent in an update.\n\nEvent Webhook Model\n\nExample Event Notification Object\n\n{\\n  \\\"type\\\": \\\"notification_event\\\",\\n  \\\"topic\\\": \\\"event.created\\\",\\n  \\\"id\\\": \\\"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b3\\\",\\n  \\\"created_at\\\": 1392731331,\\n  \\\"delivery_attempts\\\": 1,\\n  \\\"first_sent_at\\\": 1392731392,\\n  \\\"data\\\": {\\n    \\\"item\\\": {\\n      \\\"type\\\": \\\"event\\\",\\n      \\\"id\\\": \\\"e5cc5f72-5522-11e4-9a06-49b58bcd0509\\\",\\n      \\\"event_name\\\" : \\\"invited-friend\\\",\\n      \\\"created_at\\\": 1389913941,\\n      \\\"user_id\\\": \\\"314159\\\",\\n      \\\"metadata\\\": {\\n         \\\"invitee_email\\\": \\\"pi@example.org\\\",\\n         \\\"invite_code\\\": \\\"ADDAFRIEND\\\"\\n      }\\n    }\\n  }\\n}\n\n\nAs with other topics, events sent to a webhook are published inside a Notification Object.\n\nAs well as the regular fields that were created when the event was posted to Intercom (see Event Object for details) the event payload will also contain an id field that uniquely identifies the event."
  },
  {
    "title": "Results",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/responseobjects/results/",
    "html": "Results\nDescription\n\nThe results object should be sent when you want to end configuration of the app and trigger the Initialize request to be sent. You provide the key-value pairs of data you want access to and we will send these in the Initialize request within a card_creation_options object.\n\nExample Object\nresults: { \"key\": \"value\" } // Can be more than one pair\n"
  },
  {
    "title": "Event",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/responseobjects/event/",
    "html": "Event\nDescription\n\nThe event object enables Intercom to know more about the actions that took place in your app. Currently, you can only tell us when an app's flow has been completed.\n\nAttributes\nKey\tType\tDescription\ntype\tstring\tWhat action took place. The only value currently accepted is completed.\nExample Object\nevent: { \"type\": \"completed\" } // Optional. Recorded by Intercom.\n"
  },
  {
    "title": "Content",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/responseobjects/content/",
    "html": "Content\nDescription\n\nThe content object is where you specify the UI of your app. You provide us with a set of components in a components array that we then render.\n\nThe content object should usually be returned within the canvas object. If you're responding to a Live Canvas request however, then you should only respond with the content object.\n\nAttributes\nKey\tType\tDescription\ncomponents\tarray\tThe list of components to be rendered. See the components further in this reference.\nExample Object\n{\n  content: {\n    components: [\n      {\n        \"type\": \"text\",\n        \"id\": \"component-1\",\n        \"text\": \"This is the first component\",\n        \"align\": \"center\",\n        \"style\": \"header\"\n      },\n      {\n        \"type\": \"button\",\n        \"id\": \"component-2\",\n        \"label\": \"This is the second component\",\n        \"action\": {\n          \"type\": \"submit\"\n        }\n      }\n    ]\n  }\n}\n"
  },
  {
    "title": "Canvas",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/responseobjects/canvas/",
    "html": "Canvas\nDescription\n\nYou have to respond to the majority of request with a canvas object. This will tell us what UI to show for your app.\n\nA canvas can either be static (meaning we send you the next request only when an action takes place) or live (meaning we send you the next request when someone views the app).\n\nA static canvas needs a Content Object which will contain the components to show.\nA live canvas needs a content_url which we we will make the Live Canvas requests to when the app is viewed. This is only possible for apps viewed or used in the Messenger.\nAttributes\nKey\tType\tCanvas Type\tDescription\ncontent\tobject\tStatic\tThe Content that will be shown as the UI of the app. Max Size is 64KB.\ncontent_url\tstring\tLive\tThe URL which we make Live Canvas requests to. You must respond to these with a Content Object. Max size is 64KB.\nstored_data\tobject\tStatic, Live\tOptional Stored Data that you want to be returned in the next sent request. Max Size is 64KB.\nExample Objects\n{\n  canvas: {\n    content: {\n      components: [\n        {\n          \"type\": \"text\",\n          \"text\": \"This is a text component.\"\n        }\n      ]\n    },\n    stored_data: { \"key\": \"value\" } // Can be more than one pair \n  }\n}\n\n{\n  canvas: {\n    content_url: \"https://messengerapp.com/get-content-here\",\n    stored_data: { \"key\": \"value\" } // Can be more than one pair \n  }\n}\n"
  },
  {
    "title": "Submit action",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/actioncomponents/submit-action/",
    "html": "Submit action\n\nA submit action triggers a Submit Request to be sent. This request will include all values which have been entered into all the interactive components on the current canvas.\n\nParameters\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsubmit\tYes\tThe type of action you are attaching to a component.\nExample Object\naction: {\n  \"type\": \"submit\"\n}\n"
  },
  {
    "title": "Sheets Action",
    "url": "https://developers.intercom.com/docs/references/1.1/canvas-kit/actioncomponents/sheets-action/",
    "html": "Sheets Action\n\nA sheets action opens a given sheet in the URL specified, to populate a full-bleed iframe within the messenger.\n\nMore on how Sheets work is in our Canvas Kit documentation.\n\naction: {\n  type: \"sheet\",\n  url:  \"http://example.com\"\n}\n"
  },
  {
    "title": "URL Action",
    "url": "https://developers.intercom.com/docs/references/1.1/canvas-kit/actioncomponents/url-action/",
    "html": "URL Action\n\nA URL action opens the specified link in a new browser tab.\n\n❗️ Encode non-ASCII characters\n\nIf your URL has non-ASCII characters that are not encoded, we will use the URL in a meta tag while opening the new window and it will break the non-ASCII encoding.\n\nFor JS - Use encodeURIComponent\nFor Ruby - Use URI.escape\n\naction: {\n  type: \"url\",\n  url:  \"https://www.example.com\"\n}\n"
  },
  {
    "title": "List",
    "url": "https://developers.intercom.com/docs/references/1.1/canvas-kit/interactivecomponents/list/",
    "html": "List\n\nA list component renders a collection of list items. Below you can see what's needed for both the List Component and List's Items array.\n\n{  type: \"list\",  disabled: \"true\",  items: [    {      type: \"item\",      id: \"article-123\",      title: \"How to install the messenger\",      subtitle: \"An article explaining how to integrate Intercom\",      tertiary_text: \"Read time: 4 mins\",      image: \"http://somesite.com/article.png\",      image_width: 48,      image_height: 48,      roundedImage: false,      disabled: true,      action: {        type: \"submit\"      }    }  ]}\n\nList\nParameter\tPossible Values\tRequired\tFunction\nitems\tArray (see below)\tYes\tThe items that will be rendered in the list.\ndisabled\ttruefalse\tNo\tThe defined state of the inputted value to render a specific style.\nList Items\nParameter\tPossible Values\tRequired\tFunction\nid\tAny string\tYes\tUnique identifier for the component within this card.\ntitle\tAny string\tYes\tThe text shown as the title for the list item.\nsubtitle\tAny string\tNo\tThe text shown underneath the list item's title.\ntertiary_text\tAny string\tNo\tThe text shown next to the subtitle, separated by a bullet.\nimage\tA valid URL\tNo\tAn image that will be displayed on the left-hand side of the list\nimage_width\tAny number\tYes (if image provided)\tWidth of the image in pixels.\nimage_height\tAny number\tYes (if image provided)\tHeight of the image in pixels.\nrounded_image\ttruefalse (default)\tNo\tRounds the corners of the image if true.\ndisabled\ttruefalse\tNo\tThe defined state of the inputted value to render a specific style.\naction\tAction object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nCard View\n\nFrame View"
  },
  {
    "title": "Submit Action",
    "url": "https://developers.intercom.com/docs/references/1.1/canvas-kit/actioncomponents/submit-action/",
    "html": "Submit Action\n\nA submit action fires a webhook to the developer’s web-service with the current state of the card, including the values entered into any interactive components, so that the developer can trigger side-effects and/or return a new set of components to update the card state.\n\nMore on how this works is in the submit flow documentation through this link.\n\nINPUT COMPONENTS\n\nIf there are input elements present within the card, then a submit action from a button will submit the entire form.\n\naction: {\n  type: \"submit\"\n}\n"
  },
  {
    "title": "Input",
    "url": "https://developers.intercom.com/docs/references/1.1/canvas-kit/interactivecomponents/input/",
    "html": "Input\n\nAn input component is used to capture text input from the end user.\n\nIf you pass an action to the input component, it will render with an inline button which submits the value inside the input to the specified URL.\n\n{  type: \"input\",   id: \"user_email_address\",  label: \"Enter your email address\",  placeholder: \"user@domain.com\",  value: \"peter@intercom.io\",  save_state: \"unsaved\",  disabled: true,  action: {    type: \"submit\"  }}\n\nParameter\tPossible Values\tRequired\tFunction\nid\tAny string\tYes\tUnique identifier for the component within this card.\nlabel\tAny string\tNo\tThe text shown above the input.\nplaceholder\tAny string\tNo\tAn example value shown inside the input when it’s empty.\nvalue\tAny string\tNo\tThe default value of the input.\naction\tAction object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nsave_state\tunsaved (default)savedfailed\tNo\tThe defined state of the inputted value to render a specific style.\ndisabled\tfalse (default)true\tNo\tStyles as complete and prevents further editing or interaction.\n\n📘 Saved States\n\nA save_state of saved renders the input in a style which indicates a successfully submitted value, and prevents further editing or interaction with the input. It's the only save_state that changes the function and blocks any further interaction.This is the same functionality as if you set the disabled boolean to true. If you set the save_state as saved but the disabled boolean as false, we'll overwrite the boolean and still show the component in this disabled state.\n\nCard View\n\nFrame View"
  },
  {
    "title": "Description",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/requestobjects/card-creation-options/",
    "html": "Card Creation Options\n\nDescription\n\nThe card_creation_options object is a JSON hash containing key-value pairs. These key-value pairs either represent:\n\nData that was sent within the results object in response to the Configure request.\nData that was sent within the card_creation_options object in response to the Submit request.\nExample Object\ncard_creation_options: { \"key\": \"value\" } // Can be more than one pair\n"
  },
  {
    "title": "Stored Data",
    "url": "https://developers.intercom.com/docs/references/1.4/canvas-kit/responseobjects/stored-data/",
    "html": "Stored Data\nDescription\n\nA canvas object may optionally contain a stored_data object. This is where you can add key-value pairs of data that you want to be sent in whatever the next request is.\n\nFor example, the flow of your app might have multiple canvases with data being inputted on each one. You may want to have all this data available to use at the end of the flow for the final canvas. You can therefore put all this data in the stored_data object so it's sent in subsequent requests and is available at the end.\n\nExample Object\nstored_data: {\"key\": \"value\"} //Can be more than one pair\n"
  },
  {
    "title": "Context",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/requestobjects/context/",
    "html": "Context\nDescription\n\nThe context object provides additional details on where the app has been added (or is currently being used), what page the app is being used on, and information on the Messenger settings. This is in order for you give a fully customised experience based on the customers use case.\n\nIf the location is conversation then you will also be given a conversation_id. If you need to use details about the conversation, then you have to use the conversation_id to make a call to our Conversations API and retrieve the conversation object.\n\nAttributes\nKey\tType\tLocation\tDescription\nconversation_id\tinteger\tConversation\tThe id of the conversation where the app is added or being used.\nlocation\tstring\tConversation, Messenger Home, Message, Operator\tWhere the app is added or the action took place. Can be either 'conversation', 'home', 'message', or 'operator'.\nlocale\tstring\tConversation, Messenger Home, Message, Operator\tThe default end-user language of the Messenger. Use to localise Messenger App content.\nmessenger_action_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers action colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nmessenger_background_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers background colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nreferrer\tstring\tConversation, Messenger Home, Message, Operator\tThe current page URL where the app is being used.\nExample Objects\n{\n  conversation_id: 4294967297,\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n\n{\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n"
  },
  {
    "title": "Stored Data",
    "url": "https://developers.intercom.com/docs/references/1.2/canvas-kit/responseobjects/stored-data/",
    "html": "Stored Data\n\nA canvas object may optionally contain the stored_data object, which is a JSON hash where you can add data you want to persist through multiple cycles.\n\nFor example, a teammate may interact with multiple configure cycles when adding an app. You can use stored_data to pass data through each of these cycles until you need it at the end."
  },
  {
    "title": "Dropdown",
    "url": "https://developers.intercom.com/docs/references/1.1/canvas-kit/interactivecomponents/dropdown/",
    "html": "Dropdown\n\nA dropdown component is used to capture a choice from the teammate or end user. It requires a collection of dropdown options, which represent the possible choices.\n\n{  type: \"dropdown\",  id: \"industry\",  label: \"Choose your industry\",  value: \"banking\",  save_state: \"unsaved\",  disabled: true,  options: [    {      type: \"option\",      id: \"banking\",      text: \"Banking\"    }, {      type: \"option\",      id: \"tech\",      text: \"Technology\",      disabled: true    }  ],}\n\nDropdown\nParameter\tPossible Values\tRequired\tFunction\nid\tAny string\tYes\tUnique identifier for the component within this card. Dropdown components are submitted in a hash, with this id used as the key and the id of the chosen option as the value.\nlabel\tAny string\tNo\tThe text shown above the input.\noptions\tArray\tYes\tThe list of options. A minimum of 2 options is required, and no more than 11 are allowed. More on the Options array is below.\nvalue\tAny string\tNo\tThe default value of the option.\nsave_state\tunsaved (default)savedfailed\tNo\tThe defined state of the inputted value to render a specific style.\ndisabled\tfalse (default)true\tNo\tStyles as complete and prevents further editing or interaction.\n\n📘 Saved States\n\nA save_state of saved renders the input in a style which indicates a successfully submitted value, and prevents further editing or interaction with the input. It's the only save_state that changes the function and blocks any further interaction.\n\nOptions\nParameter\tPossible Values\tRequired\tFunction\nid\tAny string\tYes\tUnique identifier for the option. Dropdown components are submitted in a hash, with this id used as the key and the id of the chosen option as the value.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse (default)true\tNo\tStyles as complete and prevents further editing or interaction.\nCard View\n\nFrame View"
  },
  {
    "title": "Button",
    "url": "https://developers.intercom.com/docs/references/1.1/canvas-kit/interactivecomponents/button/",
    "html": "Button\n\nA button component is used to trigger an action. Depending on the action type, a button can:\n\nSubmit an action\nOpen a link in a new page\nOpen a sheet\n\nButtons are submittable, meaning that when they are clicked, they will dispatch a webhook to the url specified through the relevant action. Read more about this by clicking on the different actions that can be taken above.\n\n{  type:  \"button\",  id: \"button-123\",  label: \"Submit form\",  style: \"secondary\",  disabled: true,  action: {    type: \"url\",    url: \"https://www.intercom.com/\"  }}\n\nParameter\tPossible Values\tRequired\tFunction\nid\tAny string\tYes\tUnique identifier for the component within this card.\nlabel\tAny string\tYes\tThe text that will be rendered inside the button.\naction\tObject\tYes\tThis can be a Submit Action, URL Action, or Sheets Action.\nstyle\tprimary (default)secondarylink\tNo\tStyles the button in a specific preset style.\ndisabled\tfalse (default)true\tNo\tStyles as complete and prevents further editing or interaction.\n\n🚧 Line Breaks\n\nLine breaks are not converted into tags in the rendered HTML, so all text will appear on a single line.\n\nCard View\n\nFrame View"
  },
  {
    "title": "Admin",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/requestobjects/admin/",
    "html": "Admin\nDescription\n\nThe admin object provides information on the Intercom teammate. You can see more about this on the Admin Model page of our API Reference.\n\nExample Object\n{\n  admin: {\n    type: \"admin\",\n    id: \"814860\",\n    name: \"IntercomTest\",\n    email: \"theadmin@example.com\",\n    job_title: \"Existentialist\",\n    away_mode_enabled: false,\n    away_mode_reassign: false,\n    avatar: {\n      image_url: \"https://static.site.test.icon\"\n    },\n    team_ids: [\n      814865\n    ]\n  }\n}\n"
  },
  {
    "title": "Contact",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/requestobjects/contact/",
    "html": "Contact\nDescription\n\nThe contact object provides information on the Intercom contact. You can see more about this on the Contacts Model page of our API Reference.\n\nExample Object\n{\n  \"type\": \"contact\",\n  \"id\": \"5ba682d23d7cf92bef87bfd4\",\n  \"workspace_id\": \"ecahpwf5\",\n  \"external_id\": \"25\",\n  \"role\": \"user\",\n  \"email\": \"wash@serenity.io\",\n  \"phone\": \"+1123456789\",\n  \"name\": \"Hoban Washburn\",\n  \"avatar\": \"https://example.org/128Wash.jpg\",\n  \"owner_id\": 127,\n  \"social_profiles\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"social_profile\",\n        \"name\": \"Twitter\",\n        \"url\": \"http://twitter.com/th1sland\"\n      }\n    ]\n  },\n  \"has_hard_bounced\": false,\n  \"marked_email_as_spam\": false,\n  \"unsubscribed_from_emails\": false,\n  \"created_at\": 1571672154,\n  \"updated_at\": 1571672158,\n  \"signed_up_at\": 1571069751,\n  \"last_seen_at\": 1571069751,\n  \"last_replied_at\": 1571672158,\n  \"last_contacted_at\": 1571672158,\n  \"last_email_opened_at\": 1571673478,\n  \"last_email_clicked_at\": 1571676789,\n  \"language_override\": null,\n  \"browser\": \"chrome\",\n  \"browser_version\": \"77.0.3865.90\",\n  \"browser_language\": \"en\",\n  \"os\": \"OS X 10.14.6\",\n  \"location\": {\n    \"type\": \"location\",\n    \"country\": \"Ireland\",\n    \"region\": \"Dublin\",\n    \"city\": \"Dublin\"\n  },\n  \"android_app_name\": null,\n  \"android_app_version\": null,\n  \"android_device\": null,\n  \"android_os_version\": null,\n  \"android_sdk_version\": null,\n  \"android_last_seen_at\": null,\n  \"ios_app_name\": null,\n  \"ios_app_version\": null,\n  \"ios_device\": null,\n  \"ios_os_version\": null,\n  \"ios_sdk_version\": null,\n  \"ios_last_seen_at\": null,\n  \"custom_attributes\": {\n    \"paid_subscriber\": true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 1\n  },\n  \"tags\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"tag\",\n        \"id\": \"2\",\n        \"url\": \"/tags/2\"\n      },\n      {\n        \"type\": \"tag\",\n        \"id\": \"4\",\n        \"url\": \"/tags/4\"\n      },\n      {\n        \"type\": \"tag\",\n        \"id\": \"5\",\n        \"url\": \"/tags/5\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/tags\",\n    \"total_count\": 3,\n    \"has_more\": false\n  },\n  \"notes\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"note\",\n        \"id\": \"20114858\",\n        \"url\": \"/notes/20114858\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/notes\",\n    \"total_count\": 1,\n    \"has_more\": false\n  },\n  \"companies\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"company\",\n        \"id\": \"5ba686093d7cf93552a3dc99\",\n        \"url\": \"/companies/5ba686093d7cf93552a3dc99\"\n        \n      },\n      {\n        \"type\": \"company\",\n        \"id\": \"5cee64a03d7cf90c51b36f19\",\n        \"url\": \"/companies/5cee64a03d7cf90c51b36f19\"\n      },\n      {\n        \"type\": \"company\",\n        \"id\": \"5d7668883d7cf944dbc5c791\",\n        \"url\": \"/companies/5d7668883d7cf944dbc5c791\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/companies\",\n    \"total_count\": 3,\n    \"has_more\": false\n  }\n}\n"
  },
  {
    "title": "Current Canvas",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/requestobjects/current-canvas/",
    "html": "Current Canvas\nDescription\n\nThe current_canvas object mirrors the same format as the Canvas Object. This will be the canvas that was most recently showing before the request was sent.\n\nExample Object\n{\n  current_canvas: {\n    content: { \n      components : [\n        {\n          \"type\": \"button\",\n          \"id\": \"button-1\",\n          \"label\": \"This canvas showed before I was clicked\",\n          \"action\": {\n            \"type\": \"submit\"\n          }\n        }\n      ]\n    }\n  }\n}\n"
  },
  {
    "title": "View a Subscription",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/webhooks/view-a-subscription/",
    "html": "View a Subscription\nExample Request\n$ curl \\\n-s https://api.intercom.io/subscriptions/nsub_6ab4c480-fd8b-11e3-958f-c779cae3e1b3 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"notification_subscription\",\n  \"id\": \"nsub_6ab4c480-fd8b-11e3-958f-c779cae3e1b3\",\n  \"created_at\": 1392731331,\n  \"updated_at\": 1392731331,\n  \"service_type\": \"web\",\n  \"topics\": [\"conversation\", \"company\"],\n  \"url\": \"https://example.org/hooks\",\n  \"active\": true,\n  \"hub_secret\": null\n}\n\nSubscription sub = Subscription.find(\"nsub_60ca7690\");\n\n\nEach subscription object has its own URL -\n\nhttps://api.intercom.io/subscriptions/{id}\n\nWhere {id} is the value of the subscriptions's id field. Subscriptions may also have a self field containing the URL to be used."
  },
  {
    "title": "Webhook Models",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/webhooks/webhook-models/",
    "html": "Webhook Models\n\nThe API defines some data models specific to webhooks.\n\nUser Tag Object\nExample User Tag Object\n{\\n  \\\"type\\\": \\\"user_tag\\\",\\n  \\\"created_at\\\": 1392731331,\\n  \\\"tag\\\" : {\\n      \\\"id\\\": \\\"17513\\\",\\n      \\\"name\\\": \\\"independent\\\",\\n      \\\"type\\\": \\\"tag\\\"\\n    },\\n  \\\"user\\\" : {\\n      \\\"type\\\": \\\"user\\\",\\n      \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n      \\\"user_id\\\": \\\"25\\\"\\n  }\\n}\n\n\nA user tag is composed from the existing user and tag JSON and is sent when users are tagged and untagged via the user.tag.created and user.tag.deleted topics -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'user_tag'\ncreated_at\ttimestamp\tThe time the user tag object was created\ntag\tTag\tThe tag that was added or removed.\nuser\tUser\tThe user that was tagged or untagged."
  },
  {
    "title": "Subscription Ping",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/webhooks/subscription-ping/",
    "html": "Subscription Ping\nExample Ping Request\n$ curl -XPOST \\\\\\nhttps://api.intercom.io/subscriptions/nsub_6ab4c480-fd8b-11e3-958f-c779cae3e1b3/ping \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\\n\\n\\nHTTP/1.1 200 Ok\n\nExample Ping Notification\n{\\n  \\\"type\\\": \\\"notification_event\\\",\\n  \\\"topic\\\": \\\"ping\\\",\\n  \\\"id\\\": \\\"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b4\\\",\\n  \\\"created_at\\\": 1392731331,\\n  \\\"delivery_attempts\\\": 1,\\n  \\\"first_sent_at\\\": 1392731392,\\n  \\\"data\\\": {\\n    \\\"item\\\": {\\n      \\\"type\\\": \\\"ping\\\",\\n      \\\"message\\\": \\\"shipping is your company's heartbeat\\\"\\n    }\\n  }\\n}\n\n\nEach Subscription object can be pinged by sending a POST notification to -\n\nhttps://api.intercom.io/subscriptions/{id}/ping\n\nWhere {id} is the id of the subscription. This results in a ping notification being sent to the url of the webhook. For services a message is rendered and presented.\n\nThe Ping object has the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'ping'\nmessage\tstring\tA text message\n\nNote that all subscriptions should be implemented to accept ping events, as the API may send them at any time."
  },
  {
    "title": "Subscription Model",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/webhooks/subscription-model/",
    "html": "Subscription Model\n\nSubscriptions are how you can set up webhook notifications for your App.\n\nSubscription Object\nExample Subscription Object\n{\\n  \\\"type\\\": \\\"notification_subscription\\\",\\n  \\\"id\\\": \\\"nsub_6ab4c480-fd8b-11e3-958f-c779cae3e1b3\\\",\\n  \\\"created_at\\\": 1392731331,\\n  \\\"updated_at\\\": 1392731331,\\n  \\\"service_type\\\": \\\"web\\\",\\n  \\\"topics\\\": [\\\"company\\\", \\\"conversation.user.created\\\"],\\n  \\\"url\\\": \\\"https://example.org/hooks/1\\\",\\n  \\\"active\\\": true,\\n  \\\"hub_secret\\\": \\\"7fa38fa4e7120189f631a6769dd4876b\\\"\\n}\n\n\nA subscription object contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'notification_subscription'\nid\tstring\tThe Intercom defined id representing the subscription.\ncreated_at\ttimestamp\tThe time the subscription was added to Intercom\nupdated_at\ttimestamp\tThe last time the subscription was updated\nurl\tstring\tThe url the notification should be sent to. Required depending on the service type.\nservice_type\tstring\tThe type of the service being called. Default is web for a plain webhook, which is the only accepted value currently.\ntopics\tarray\tAn array of topics to subscribe to.\nactive\tboolean\tIndicates whether the subscription is currently active.\nhub_secret\tstring\tOptional key used to sign notifications.\nmetadata\tobject\tRequired for event.created webhooks."
  },
  {
    "title": "Topics",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/webhooks/topics/",
    "html": "Topics\n\nThe following topics and sub-topics can be subscribed to. The 'Item Type' column shows the API type that will be sent as the data of the Notification (for more information on API types, see \"API Summary\" in the Intercom API documentation.\n\nTopic\tItem Type\tDescription\nconversation.user.created\tConversation\tSubscribe to user and lead initiated messages\nconversation.user.replied\tConversation\tSubscribe to user conversation replies\nconversation.admin.replied\tConversation\tSubscribe to admin conversation replies\nconversation.admin.single.created\tConversation\tSubscribe to admin initiated 1:1 conversation\nconversation.admin.assigned\tConversation\tSubscribe to admin conversation assignments\nconversation.admin.noted\tConversation\tSubscribe to admin conversation notes\nconversation.admin.closed\tConversation\tSubscribe to admin conversation closes\nconversation.admin.opened\tConversation\tSubscribe to admin conversation opens\nconversation_part.tag.created\tConversation\tSubscribe to conversation parts being tagged\nuser.created\tUser\tSubscribe to user creations\nuser.deleted\tUser\tSubscribe to users being archived. Not sent for bulk archiving.\nuser.unsubscribed\tUser\tSubscribe to user unsubscriptions from email\nuser.email.updated\tUser\tSubscribe to user's email address being updated\nuser.tag.created\tUserTag\tSubscribe to users being tagged. Not sent for bulk tagging.\nuser.tag.deleted\tUserTag\tSubscribe to users being untagged\ncontact.created\tLead\tSubscribe to Lead creations\ncontact.signed_up\tLead\tSubscribe to Leads converting to a User\ncontact.added_email\tLead\tSubscribe to Leads adding email\nvisitor.signed_up\tVisitor\tSubscribe to visitors converting to a User\ncompany.created\tCompany\tSubscribe to company creations\nevent.created\tEvent\tSubscribe to events (Beta!)\nping\tPing\tSent when a post to the Subscription's ping resource is received, or periodically by Intercom. Ping is always subscribed to.\nThe UserTag object is specific to webhooks - see \"User Tag Object\" for a description.\nOn the Intercom site, bulk user tagging operations do not trigger webhooks and only single user tag operations will result in a webhook being sent."
  },
  {
    "title": "Signed Notifications",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/webhooks/signed-notifications/",
    "html": "Signed Notifications\nExample Signed Request\nPOST https://example.org/hooks\\nUser-Agent: intercom-parrot-service-client/1.0\\nX-Hub-Signature: sha1=21ff2e149e0fdcac6f947740f6177f6434bda921\\nAccept: application/json\\nContent-Type: application/json\\n{\\n  \\\"type\\\" : \\\"notification_event\\\",\\n  \\\"id\\\" : \\\"notif_78c122d0-23ba-11e4-9464-79b01267cc2e\\\",\\n  \\\"topic\\\" : \\\"user.created\\\",\\n  \\\"app_id\\\" : \\\"a86dr8yl\\\",\\n  \\\"data\\\" : {\\n    \\\"type\\\" : \\\"notification_event_data\\\",\\n    \\\"item\\\" : {\\n      \\\"type\\\" : \\\"user\\\",\\n      \\\"id\\\" : \\\"530370b477ad7120001d\\\",\\n      \\\"user_id\\\" : \\\"25\\\",\\n      \\\"name\\\" : \\\"Hoban Washburne\\\",\\n      \\\"unsubscribed_from_emails\\\" : false,\\n      \\\"custom_attributes\\\" : {}\\n    }\\n  }\\n}\n\n\nYou can request notifications from Intercom are signed by adding a hub_secret field to the subscription. The value of the hub_secret is used as the key to create a hash signature of the JSON notification The digest is then sent using an X-Hub-Signature header in the request and can be verified by the receiving webhook.\n\nThe signature is the hexadecimal (40-byte) representation of a SHA-1 signature computed using the HMAC algorithm as defined in RFC2104.\n\nThe X-Hub-Signature header value starts with the string sha1= followed by the signature - for example, X-Hub-Signature: sha1=21ff2e149e0fdcac6f947740f6177f6434bda921."
  },
  {
    "title": "Text",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/presentationcomponents/text/",
    "html": "Text\n\nThe text component is used for rendering blocks of text. Links and bold font can be rendered through Markdown. There are different styles provided which edit the color, weight, and font size. These cannot be edited through Markdown.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttext\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\ntext\tAny stringMarkdown Links []()Markdown Bold **\tYes\tThe text that will be rendered.\nalign\tleft``center``right\tNo\tAligns the text. Default is left.\nstyle\theader``paragraph``muted``error\tNo\tStyles the text. Default is paragraph.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "Notification Model",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/webhooks/notification-model/",
    "html": "Notification Model\nNotification Object\n\nExample Notification Object\n\n{\\n  \\\"type\\\": \\\"notification_event\\\",\\n  \\\"topic\\\": \\\"company.created\\\",\\n  \\\"id\\\": \\\"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b3\\\",\\n  \\\"created_at\\\": 1392731331,\\n  \\\"delivery_attempts\\\": 1,\\n  \\\"first_sent_at\\\": 1392731392,\\n  \\\"data\\\": {\\n    \\\"item\\\": {\\n      \\\"type\\\": \\\"company\\\",\\n      \\\"id\\\": \\\"531ee472cce572a6ec000006\\\",\\n      \\\"name\\\": \\\"Blue Sun\\\",\\n      \\\"company_id\\\": \\\"6\\\",\\n      \\\"remote_created_at\\\": 1394531169,\\n      \\\"created_at\\\": 1394533506,\\n      \\\"updated_at\\\": 1396874658,\\n      \\\"custom_attributes\\\": {\\n      }\\n    }\\n  }\\n}\n\n\nA notification object contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'notification_event'\nid\tstring\tThe Intercom defined id representing the notification.\nself\tstring\tThe Intercom defined URL for the subscription. Optional\ncreated_at\ttimestamp\tThe timestamp the notification was created.\ntopic\tstring\tCorresponds to a topic, eg 'company.created', 'conversation.assigned'\ndelivery_attempts\tnumber\tThe number of times this notification has been attempted.\nfirst_sent_at\ttimestamp\tThe first time the delivery was attempted.\ndata\tobject\tA container for the data associated with the notification.\ndata.item\tobject\tThe data associated with the notification, which will have a 'type' field.\n\nThe contents of data.item object will be defined according to its type field. In the example to the right, the type value of company indicates a company object."
  },
  {
    "title": "Create a Subscriptions",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/webhooks/manage-subscriptions/",
    "html": "Create a Subscriptions\nCreate a Subscription\n$ curl https://api.intercom.io/subscriptions \\\n-XPOST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d'\n{\n  \"service_type\": \"web\",\n  \"topics\": [\"conversation.admin.replied\", \"user.created\"],\n  \"url\": \"https://example.org/hooks/1\"\n}'\n\nHTTP/1.1 200 Ok\n\n{\n  \"type\": \"notification_subscription\",\n  \"id\": \"nsub_6ab4c480-fd8b-11e3-958f-c779cae3e1b3\",\n  \"created_at\": 1392731331,\n  \"updated_at\": 1392731331,\n  \"service_type\": \"web\",\n  \"topics\": [\"conversation.admin.assigned\", \"company.created\"],\n  \"url\": \"https://example.org/hooks\",\n  \"active\": true,\n  \"hub_secret\": null\n}\n\nSubscription sub = new Subscription();\nsub.setUrl(new URI(\"https://example.org/webhooks/1\"));\nsub.addTopic(Subscription.Topic.USER_CREATED);\nsub.addTopic(Subscription.Topic.USER_TAG_CREATED);\nsub.addTopic(Subscription.Topic.COMPANY);\nsub.setAppID(\"pi3243fa:\");\n\nSubscription.create(sub);\n\n\nYou can create a new subscription by submitting a POST to https://api.intercom.io/subscriptions along with the JSON for the subscription. A maximum of 250 subscriptions can be created through the API.\n\nAttribute\tType\tDescription\nservice_type\tstring\tThe type of the service being called. Default is web for a plain webhook, which is the only accepted value currently. Defaults to web if not sent.\nurl\tstring\tRequired. The url the event should be sent to. Required depending on the service type.\ntopics\tarray\tRequired. An array of topics to subscribe to.\nhub_secret\tstring\tOptional. A key used to sign notifications.\n\nThe response will contain the id of the subscription.\n\nThe ping topic is always subscribed to and cannot be unsubscribed from. The API may send a ping event during or soon after creation. By default the subscription is treated as active.\n\nCreate a Subscription in Developer Hub Dashboard\n\nYou can create webhooks via the Dashboard in your developer tools. To create, edit and troubleshoot a webhook, you can go to the 'Webhooks' section of this dashboard.\n\n❗️ Internet Explorer 11 (IE11)\n\nCustomers have reported issues when trying to create webhooks using IE11 including not being able to click on the create button. We have confirmed that there are no such issues with chrome or firefox so please use these to setup your webhooks if you do encounter any problems."
  },
  {
    "title": "Stored Data",
    "url": "https://developers.intercom.com/docs/references/2.1/canvas-kit/responseobjects/stored-data/",
    "html": "Stored Data\nDescription\n\nA canvas object may optionally contain a stored_data object. This is where you can add key-value pairs of data that you want to be sent in whatever the next request is.\n\nFor example, the flow of your app might have multiple canvases with data being inputted on each one. You may want to have all this data available to use at the end of the flow for the final canvas. You can therefore put all this data in the stored_data object so it's sent in subsequent requests and is available at the end.\n\nExample Object\nstored_data: {\"key\": \"value\"} //Can be more than one pair\n"
  },
  {
    "title": "Handling Notifications",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/webhooks/handling-notifications/",
    "html": "Handling Notifications\n\nWhen you setup a subscription you will receive notifications on your chosen topics. How you handle those notifications, i.e. the HTTP status code returned, will determine the subsequent state of that subscription. Please see below for a list of how a subscription will respond to these status codes\n\nResponse Code\tDescription\tSubscription Action\n2xx\tSuccess - Indicates subscription was delievered\tTimeout is 5 seconds. If you don't send a response inside that time notification is treated as failed and will be retried only once after 1 minute\n410\tGone - resource no longer available\tIf a 410 is received the subscription will be disabled and no further notification will be sent\n429\tToo many requests\tWhen a 429 is received all notification from that subscription will be throttled. Depending on rate of delivery this delay can be between 1 minute to 2 hours. If 429s continue and any notification is delayed for > 2 hours we will drop that notification.\n4xx*, 5xx\tClient or service errors\tRetry after 1 minute. If 2nd retry fails we mark notification delivery as failed.\n\n*Excluding 410 and 429"
  },
  {
    "title": "Webhook Models",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/webhooks/webhooks/webhook-models-1/",
    "html": "Webhook Models\nWebhook Topics\n\nThe following topics are available and you can be notified when an action relating to that topic occurs. You just need to tell us where to send the notification. The 'Item Type' column shows the API type that will be sent as the data of the notification.\n\nTopic\tItem Type\tDescription\nconversation.user.created\tConversation\tSubscribe to user/lead initiated conversations\nconversation.user.replied\tConversation\tSubscribe to contact user/lead conversation replies\nconversation.admin.replied\tConversation\tSubscribe to admin conversation replies\nconversation.admin.single.created\tConversation\tSubscribe to admin initiated 1:1 conversations\nconversation.admin.assigned\tConversation\tSubscribe to admin conversation assignments\nconversation.admin.noted\tConversation\tSubscribe to admin conversation notes\nconversation.admin.closed\tConversation\tSubscribe to admin conversation closes\nconversation.admin.opened\tConversation\tSubscribe to admin conversation opens\nconversation.admin.snoozed\tConversation\tSubscribe to admin conversation snoozes\nconversation.admin.unsnoozed\tConversation\tSubscribe to admin conversation unsnoozes\nconversation_part.tag.created\tConversation\tSubscribe to conversation parts being tagged\nconversation_part.redacted\tConversation\tSubscribe to conversation parts being deleted\nconversation.rating.added\tConversation\tSubscribe to conversations getting a rating\nconversation.deleted\tConversation\tSubscribe to conversation deleted\nuser.created\tUser\tSubscribe to user creations\nuser.deleted\tUser\tSubscribe to user deletions\nuser.unsubscribed\tUser\tSubscribe to user unsubscriptions from email\nuser.email.updated\tUser\tSubscribe to user email address being updated\nuser.tag.created\tUserTag\tSubscribe to users being tagged\nuser.tag.deleted\tUserTag\tSubscribe to users being untagged\ncontact.created\tLead\tSubscribe to lead creations\ncontact.signed_up\tLead\tSubscribe to leads converting to users\ncontact.added_email\tLead\tSubscribe to emails being added to leads\ncontact.tag.created\tContactTag\tSubscribe to leads being tagged\ncontact.tag.deleted\tContactTag\tSubscribe to leads being untagged\nvisitor.signed_up\tVisitor\tSubscribe to visitors converting to users\ncompany.created\tCompany\tSubscribe to company creations\nevent.created\tEvent\tSubscribe to events\nping\tPing\tSent when a post to the subscription's ping resource is received, or periodically by Intercom. Ping is always subscribed to.\nWebhooks and Permissions\n\nEach webhook topic is associated with one or more permission scopes. If you would like to setup a webhook for a particular topic then you will need to select the appropriate permission scope to be able to request a notification for that topic.\n\nMULTIPLE PERMISSIONS\n\nSome topic are associated with multiple permissions. In these cases you don't need to select all of these permissions to subscribe to that topic.\n\nWebhook topic\tWorks with permissions\tGroups\nconversation_part.tag.created\tRead conversations\tConversation data\nconversation_part.redacted\tRead conversations\tConversation data\nconversation.rating.added\tRead conversations\tConversation data\nconversation.admin.assigned\tRead conversations\tConversation data\nconversation.admin.closed\tRead conversations\tConversation data\nconversation.admin.noted\tRead conversations\tConversation data\nconversation.admin.opened\tRead conversations\tConversation data\nconversation.admin.replied\tRead conversations\tConversation data\nconversation.admin.single. created\tRead conversations\tConversation data\nconversation.admin.snoozed\tRead conversations\tConversation data\nconversation.admin.unsnoozed\tRead conversations\tConversation data\nconversation.user.created\tRead conversations\tConversation data\nconversation.user.replied\tRead conversations\tConversation data\nconversation.deleted\tRead conversations\tConversation data\ncontact.added_email\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.email.updated\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.unsubscribed\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nvisitor.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nevent.created\tRead events\tCustomer event data\ncompany.created\tRead users and companies, Read one user and one company\tCompany data\nWebhook Notification Object\n\nA notification object contains the following fields:\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'notification_event'\nid\tstring\tThe Intercom defined id representing the notification.\nself\tstring\tThe Intercom defined URL for the subscription. Optional.\ncreated_at\ttimestamp\tThe timestamp the notification was created.\ntopic\tstring\tCorresponds to a topic.\ndelivery_attempts\tnumber\tThe number of times this notification has been attempted.\nfirst_sent_at\ttimestamp\tThe first time the delivery was attempted.\ndata\tobject\tA container for the data associated with the notification.\ndata.item\tobject\tThe data associated with the notification, which will have a 'type' field.\n\nThe contents of data.item object will be defined according to its type field. In the example to the right, the type value of company indicates a company object.\n\n{\n  \"type\": \"notification_event\",\n  \"topic\": \"company.created\",\n  \"id\": \"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b3\",\n  \"app_id\" : \"a86dr8yl\",\n  \"created_at\": 1392731331,\n  \"delivery_attempts\": 1,\n  \"first_sent_at\": 1392731392,\n  \"data\": {\n    \"item\": {\n      \"type\": \"company\",\n      \"id\": \"531ee472cce572a6ec000006\",\n      \"name\": \"Blue Sun\",\n      \"company_id\": \"6\",\n      \"remote_created_at\": 1394531169,\n      \"created_at\": 1394533506,\n      \"updated_at\": 1396874658,\n      \"custom_attributes\": {\n      }\n    }\n  }\n}\n\nHandling Webhook Notifications\n\nWhen you setup a subscription you will receive notifications on your chosen topics. How you handle those notifications, i.e. the HTTP status code returned, will determine the subsequent state of that subscription.\n\nResponse Code\tDescription\tAction\n2xx\tSuccess\tThe webhook was successfully delivered.\n410\tGone\tWhen a 410 is received, we assume the resource is no longer available. We will disable the subscription and no more notifications will be sent.\n429\tToo many requests\tWhen a 429 is received, all notifications from that subscription will be throttled. Depending on the rate of delivery, this delay can be between 1 minute to 2 hours. If 429s continue and any notification is delayed for > 2 hours then we will drop that notification.\n4xx (excl. 429) 5xx\tClient or service errors\tWe will retry after 1 minute for all other errors. If the 2nd retry fails then we mark the notification delivery as failed.\nTIMEOUT\n\nYou have 5 seconds to respond to a notification. If you don't send a response inside that time, the notification is treated as failed and will be retried only once after 1 minute.\n\nSigned Notifications\n\nEach webhook notification is signed by Intercom via an X-Hub-Signature header. We do this so that you can verify the notification came from Intercom by decoding the signature.\n\nThe value of this X-Hub-Signature header is computed by creating a signature using the body of the JSON request and your app's client_secret value, which you can find on the Basic Info page of your app.\n\nThe signature is the hexadecimal (40-byte) representation of a SHA-1 signature computed using the HMAC algorithm as defined in RFC2104.\n\nThe X-Hub-Signature header value starts with the string sha1= followed by the signature.\n\nPOST https://example.org/hooks\nUser-Agent: intercom-parrot-service-client/1.0\nX-Hub-Signature: sha1=21ff2e149e0fdcac6f947740f6177f6434bda921\nAccept: application/json\nContent-Type: application/json\n\n{\n  \"type\" : \"notification_event\",\n  \"id\" : \"notif_78c122d0-23ba-11e4-9464-79b01267cc2e\",\n  \"topic\" : \"user.created\",\n  \"app_id\" : \"a86dr8yl\",\n  \"data\" : {\n    \"type\" : \"notification_event_data\",\n    \"item\" : {\n      \"type\" : \"user\",\n      \"id\" : \"530370b477ad7120001d\",\n      \"user_id\" : \"25\",\n      \"name\" : \"Hoban Washburne\",\n      \"unsubscribed_from_emails\" : false,\n      \"custom_attributes\" : {}\n    }\n  }\n}\n\nContact Tag Model for Webhooks\n\nThe Contact Tag model is only returned for webhooks. It is not used with the Lead (i.e. contact) or Tag endpoints themselves. You can see an example object below:\n\nExample Contact Tag Model in Webhooks\n{  \\\"type\\\": \\\"contact_tag\\\",  \\\"created_at\\\": 1392731331,  \\\"tag\\\" : {      \\\"id\\\": \\\"1287\\\",      \\\"name\\\": \\\"independent\\\",      \\\"type\\\": \\\"tag\\\"    },  \\\"contact\\\" : {      \\\"type\\\": \\\"contact\\\",      \\\"id\\\": \\\"1287ab1287fefe\\\",      \\\"user_id\\\": \\\"12\\\"  }}\n\n\nA contact tag is composed from the existing contact and tag JSON and is sent when contacts are tagged and untagged via the contact.tag.created and contact.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'contact_tag'.\ncreated_at\ttimestamp\tThe time the contact tag object was created.\ntag\tTag\tThe tag that was added or removed.\ncontact\tcontact\tThe contact that was tagged or untagged.\nUser Tag Model for Webhooks\n\nThe User Tag model is only returned for webhooks. It is not used with the User or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"user_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"17513\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"user\" : {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n      \"user_id\": \"25\"\n  }\n}\n\n\nA user tag is composed from the existing user and tag JSON and is sent when users are tagged and untagged via the user.tag.created and user.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user_tag'.\ncreated_at\ttimestamp\tThe time the user tag object was created.\ntag\tTag\tThe tag that was added or removed.\nuser\tUser\tThe user that was tagged or untagged."
  },
  {
    "title": "Single-Select",
    "url": "https://developers.intercom.com/docs/references/1.1/canvas-kit/interactivecomponents/single-select/",
    "html": "Single-Select\n\nA single select component is used to capture a choice from the teammate or end user. It requires a collection of single select options, which represent the possible choices.\n\n{  type: \"single-select\",  id: \"industry\",  label: \"Choose your industry\",  value: \"banking\",  save_state: \"unsaved\",  disabled: true,  options: [    {      type: \"option\",      id: \"banking\",      text: \"Banking\"    },     {      type: \"option\",      id: \"tech\",      text: \"Technology\",      disabled: true,    }  ],  action: {    type: \"submit\"  },}\n\nSingle-Select\nParameter\tPossible Values\tRequired\tFunction\nid\tAny string\tYes\tUnique identifier for the component within this card. Single select components are submitted in a hash, with this id used as the key and the id of the chosen option as the value.\nlabel\tAny string\tNo\tThe text shown above the input.\noptions\tArray\tYes\tThe list of options. A minimum of 2 options is required, and no more than 11 are allowed. More on the Options array is below.\nvalue\tAny string\tNo\tThe default value of the option.\naction\tAction object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nsave_state\tunsaved (default)savedfailed\tNo\tThe defined state of the inputted value to render a specific style.\ndisabled\tfalse (default)true\tNo\tStyles as complete and prevents further editing or interaction.\n\n📘 Saved States\n\nA save_state of saved renders the input in a style which indicates a successfully submitted value, and prevents further editing or interaction with the input. It's the only save_state that changes the function and blocks any further interaction.\n\nOptions\nParameter\tPossible Values\tRequired\tFunction\nid\tAny string\tYes\tUnique identifier for the option. Single select components are submitted in a hash, with this id used as the key and the id of the chosen option as the value.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse (default)true\tNo\tStyles as complete and prevents further editing or interaction.\nCard View\n\nFrame View"
  },
  {
    "title": "Webhook Topics",
    "url": "https://developers.intercom.com/docs/references/1.4/webhooks/webhook-models/",
    "html": "Webhook Topics\n\nThe following topics are available and you can be notified when an action relating to that topic occurs. You just need to tell us where to send the notification. The 'Item Type' column shows the API type that will be sent as the data of the notification.\n\nTopic\tItem Type\tDescription\nconversation.user.created\tConversation\tSubscribe to user/lead initiated conversations\nconversation.user.replied\tConversation\tSubscribe to contact user/lead conversation replies\nconversation.admin.replied\tConversation\tSubscribe to admin conversation replies\nconversation.admin.single.created\tConversation\tSubscribe to admin initiated 1:1 conversations\nconversation.admin.assigned\tConversation\tSubscribe to admin conversation assignments\nconversation.admin.noted\tConversation\tSubscribe to admin conversation notes\nconversation.admin.closed\tConversation\tSubscribe to admin conversation closes\nconversation.admin.opened\tConversation\tSubscribe to admin conversation opens\nconversation.admin.snoozed\tConversation\tSubscribe to admin conversation snoozes\nconversation.admin.unsnoozed\tConversation\tSubscribe to admin conversation unsnoozes\nconversation_part.tag.created\tConversation\tSubscribe to conversation parts being tagged\nconversation_part.redacted\tConversation\tSubscribe to conversation parts being deleted\nconversation.rating.added\tConversation\tSubscribe to conversations getting a rating\nconversation.deleted\tConversation\tSubscribe to conversation deleted\nuser.created\tUser\tSubscribe to user creations\nuser.deleted\tUser\tSubscribe to user deletions\nuser.unsubscribed\tUser\tSubscribe to user unsubscriptions from email\nuser.email.updated\tUser\tSubscribe to user email address being updated\nuser.tag.created\tUserTag\tSubscribe to users being tagged\nuser.tag.deleted\tUserTag\tSubscribe to users being untagged\ncontact.created\tLead\tSubscribe to lead creations\ncontact.signed_up\tLead\tSubscribe to leads converting to users\ncontact.added_email\tLead\tSubscribe to emails being added to leads\ncontact.tag.created\tContactTag\tSubscribe to leads being tagged\ncontact.tag.deleted\tContactTag\tSubscribe to leads being untagged\nvisitor.signed_up\tVisitor\tSubscribe to visitors converting to users\ncompany.created\tCompany\tSubscribe to company creations\nevent.created\tEvent\tSubscribe to events\nping\tPing\tSent when a post to the subscription's ping resource is received, or periodically by Intercom. Ping is always subscribed to.\nWebhooks and Permissions\n\nEach webhook topic is associated with one or more permission scopes. If you would like to setup a webhook for a particular topic then you will need to select the appropriate permission scope to be able to request a notification for that topic.\n\n🚧 Multiple permissions\n\nSome topic are associated with multiple permissions. In these cases you don't need to select all of these permissions to subscribe to that topic.\n\nWebhook topic\tWorks with permissions\tGroups\nconversation_part.tag.created\tRead conversations\tConversation data\nconversation_part.redacted\tRead conversations\tConversation data\nconversation.rating.added\tRead conversations\tConversation data\nconversation.admin.assigned\tRead conversations\tConversation data\nconversation.admin.closed\tRead conversations\tConversation data\nconversation.admin.noted\tRead conversations\tConversation data\nconversation.admin.opened\tRead conversations\tConversation data\nconversation.admin.replied\tRead conversations\tConversation data\nconversation.admin.single. created\tRead conversations\tConversation data\nconversation.admin.snoozed\tRead conversations\tConversation data\nconversation.admin.unsnoozed\tRead conversations\tConversation data\nconversation.user.created\tRead conversations\tConversation data\nconversation.user.replied\tRead conversations\tConversation data\nconversation.deleted\tRead conversations\tConversation data\ncontact.added_email\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.email.updated\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.unsubscribed\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nvisitor.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nevent.created\tRead events\tCustomer event data\ncompany.created\tRead users and companies, Read one user and one company\tCompany data\nWebhook Notification Object\n\nA notification object contains the following fields:\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'notification_event'\nid\tstring\tThe Intercom defined id representing the notification.\nself\tstring\tThe Intercom defined URL for the subscription. Optional.\ncreated_at\ttimestamp\tThe timestamp the notification was created.\ntopic\tstring\tCorresponds to a topic.\ndelivery_attempts\tnumber\tThe number of times this notification has been attempted.\nfirst_sent_at\ttimestamp\tThe first time the delivery was attempted.\ndata\tobject\tA container for the data associated with the notification.\ndata.item\tobject\tThe data associated with the notification, which will have a 'type' field.\n\nThe contents of data.item object will be defined according to its type field. In the example to the right, the type value of company indicates a company object.\n\n{\n  \"type\": \"notification_event\",\n  \"topic\": \"company.created\",\n  \"id\": \"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b3\",\n  \"app_id\" : \"a86dr8yl\",\n  \"created_at\": 1392731331,\n  \"delivery_attempts\": 1,\n  \"first_sent_at\": 1392731392,\n  \"data\": {\n    \"item\": {\n      \"type\": \"company\",\n      \"id\": \"531ee472cce572a6ec000006\",\n      \"name\": \"Blue Sun\",\n      \"company_id\": \"6\",\n      \"remote_created_at\": 1394531169,\n      \"created_at\": 1394533506,\n      \"updated_at\": 1396874658,\n      \"custom_attributes\": {\n      }\n    }\n  }\n}\n\nHandling Webhook Notifications\n\nWhen you setup a subscription you will receive notifications on your chosen topics. How you handle those notifications, i.e. the HTTP status code returned, will determine the subsequent state of that subscription.\n\nResponse Code\tDescription\tAction\n2xx\tSuccess\tThe webhook was successfully delivered.\n410\tGone\tWhen a 410 is received, we assume the resource is no longer available. We will disable the subscription and no more notifications will be sent.\n429\tToo many requests\tWhen a 429 is received, all notifications from that subscription will be throttled. Depending on the rate of delivery, this delay can be between 1 minute to 2 hours. If 429s continue and any notification is delayed for > 2 hours then we will drop that notification.\n4xx (excl. 429) 5xx\tClient or service errors\tWe will retry after 1 minute for all other errors. If the 2nd retry fails then we mark the notification delivery as failed.\n\n❗️ Timeout\n\nYou have 5 seconds to respond to a notification. If you don't send a response inside that time, the notification is treated as failed and will be retried only once after 1 minute.\n\nSigned Notifications\n\nEach webhook notification is signed by Intercom via an X-Hub-Signature header. We do this so that you can verify the notification came from Intercom by decoding the signature.\n\nThe value of this X-Hub-Signature header is computed by creating a signature using the body of the JSON request and your app's client_secret value, which you can find on the Basic Info page of your app.\n\nThe signature is the hexadecimal (40-byte) representation of a SHA-1 signature computed using the HMAC algorithm as defined in RFC2104.\n\nThe X-Hub-Signature header value starts with the string sha1= followed by the signature.\n\nPOST https://example.org/hooks\nUser-Agent: intercom-parrot-service-client/1.0\nX-Hub-Signature: sha1=21ff2e149e0fdcac6f947740f6177f6434bda921\nAccept: application/json\nContent-Type: application/json\n\n{\n  \"type\" : \"notification_event\",\n  \"id\" : \"notif_78c122d0-23ba-11e4-9464-79b01267cc2e\",\n  \"topic\" : \"user.created\",\n  \"app_id\" : \"a86dr8yl\",\n  \"data\" : {\n    \"type\" : \"notification_event_data\",\n    \"item\" : {\n      \"type\" : \"user\",\n      \"id\" : \"530370b477ad7120001d\",\n      \"user_id\" : \"25\",\n      \"name\" : \"Hoban Washburne\",\n      \"unsubscribed_from_emails\" : false,\n      \"custom_attributes\" : {}\n    }\n  }\n}\n\nContact Tag Model for Webhooks\n\nThe Contact Tag model is only returned for webhooks. It is not used with the Lead (i.e. contact) or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"contact_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"1287\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"contact\" : {\n      \"type\": \"contact\",\n      \"id\": \"1287ab1287fefe\",\n      \"user_id\": \"12\"\n  }\n}\n\n\nA contact tag is composed from the existing contact and tag JSON and is sent when contacts are tagged and untagged via the contact.tag.created and contact.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'contact_tag'.\ncreated_at\ttimestamp\tThe time the contact tag object was created.\ntag\tTag\tThe tag that was added or removed.\ncontact\tcontact\tThe contact that was tagged or untagged.\nUser Tag Model for Webhooks\n\nThe User Tag model is only returned for webhooks. It is not used with the User or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"user_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"17513\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"user\" : {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n      \"user_id\": \"25\"\n  }\n}\n\n\nA user tag is composed from the existing user and tag JSON and is sent when users are tagged and untagged via the user.tag.created and user.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user_tag'.\ncreated_at\ttimestamp\tThe time the user tag object was created.\ntag\tTag\tThe tag that was added or removed.\nuser\tUser\tThe user that was tagged or untagged."
  },
  {
    "title": "Sheets Action",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/actioncomponents/sheets-action/",
    "html": "Sheets Action\n\nA sheet action opens the link you give within the Messenger as an embedded iframe.\n\nMore on how Sheets work is in our Canvas Kit documentation.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsheet\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which hosts your sheet.\nExample Object\naction: {\n  type: \"sheet\",\n  url:  \"http://example.com\"\n}\n"
  },
  {
    "title": "Input Values",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/requestobjects/input-values/",
    "html": "Input Values\nDescription\n\nThe input_values object is a JSON hash containing key-value pairs. These key-value pairs represent the data that's been inputted by customers and teammates with a given component.\n\nThe key will be the component_id and the value will be the data that was inputted by this component.\n\nExample Object\ninput_values: { \"<component_id>\": \"<Value entered in component>\" }, //Can be more than one pair\n"
  },
  {
    "title": "Webhook Topics",
    "url": "https://developers.intercom.com/docs/references/1.2/webhooks/webhook-models/",
    "html": "Webhook Topics\n\nThe following topics are available and you can be notified when an action relating to that topic occurs. You just need to tell us where to send the notification. The 'Item Type' column shows the API type that will be sent as the data of the notification.\n\nTopic\tItem Type\tDescription\nconversation.user.created\tConversation\tSubscribe to user/lead initiated conversations\nconversation.user.replied\tConversation\tSubscribe to contact user/lead conversation replies\nconversation.admin.replied\tConversation\tSubscribe to admin conversation replies\nconversation.admin.single.created\tConversation\tSubscribe to admin initiated 1:1 conversations\nconversation.admin.assigned\tConversation\tSubscribe to admin conversation assignments\nconversation.admin.noted\tConversation\tSubscribe to admin conversation notes\nconversation.admin.closed\tConversation\tSubscribe to admin conversation closes\nconversation.admin.opened\tConversation\tSubscribe to admin conversation opens\nconversation.admin.snoozed\tConversation\tSubscribe to admin conversation snoozes\nconversation.admin.unsnoozed\tConversation\tSubscribe to admin conversation unsnoozes\nconversation_part.tag.created\tConversation\tSubscribe to conversation parts being tagged\nconversation.deleted\tConversation\tSubscribe to conversation deleted\nuser.created\tUser\tSubscribe to user creations\nuser.deleted\tUser\tSubscribe to user deletions\nuser.unsubscribed\tUser\tSubscribe to user unsubscriptions from email\nuser.email.updated\tUser\tSubscribe to user email address being updated\nuser.tag.created\tUserTag\tSubscribe to users being tagged\nuser.tag.deleted\tUserTag\tSubscribe to users being untagged\ncontact.created\tLead\tSubscribe to lead creations\ncontact.signed_up\tLead\tSubscribe to leads converting to users\ncontact.added_email\tLead\tSubscribe to emails being added to leads\ncontact.tag.created\tContactTag\tSubscribe to leads being tagged\ncontact.tag.deleted\tContactTag\tSubscribe to leads being untagged\nvisitor.signed_up\tVisitor\tSubscribe to visitors converting to users\ncompany.created\tCompany\tSubscribe to company creations\nevent.created\tEvent\tSubscribe to events\nping\tPing\tSent when a post to the subscription's ping resource is received, or periodically by Intercom. Ping is always subscribed to.\nWebhooks and Permissions\n\nEach webhook topic is associated with one or more permission scopes. If you would like to setup a webhook for a particular topic then you will need to select the appropriate permission scope to be able to request a notification for that topic.\n\n🚧 Multiple permissions\n\nSome topic are associated with multiple permissions. In these cases you don't need to select all of these permissions to subscribe to that topic.\n\nWebhook topic\tWorks with permissions\tGroups\nconversation_part.tag.created\tRead conversations\tConversation data\nconversation.admin.assigned\tRead conversations\tConversation data\nconversation.admin.closed\tRead conversations\tConversation data\nconversation.admin.noted\tRead conversations\tConversation data\nconversation.admin.opened\tRead conversations\tConversation data\nconversation.admin.replied\tRead conversations\tConversation data\nconversation.admin.single. created\tRead conversations\tConversation data\nconversation.admin.snoozed\tRead conversations\tConversation data\nconversation.admin.unsnoozed\tRead conversations\tConversation data\nconversation.user.created\tRead conversations\tConversation data\nconversation.user.replied\tRead conversations\tConversation data\nconversation.deleted\tRead conversations\tConversation data\ncontact.added_email\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.email.updated\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.unsubscribed\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nvisitor.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nevent.created\tRead events\tCustomer event data\ncompany.created\tRead users and companies, Read one user and one company\tCompany data\nWebhook Notification Object\n\nA notification object contains the following fields:\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'notification_event'\nid\tstring\tThe Intercom defined id representing the notification.\nself\tstring\tThe Intercom defined URL for the subscription. Optional.\ncreated_at\ttimestamp\tThe timestamp the notification was created.\ntopic\tstring\tCorresponds to a topic.\ndelivery_attempts\tnumber\tThe number of times this notification has been attempted.\nfirst_sent_at\ttimestamp\tThe first time the delivery was attempted.\ndata\tobject\tA container for the data associated with the notification.\ndata.item\tobject\tThe data associated with the notification, which will have a 'type' field.\n\nThe contents of data.item object will be defined according to its type field. In the example to the right, the type value of company indicates a company object.\n\n{\n  \"type\": \"notification_event\",\n  \"topic\": \"company.created\",\n  \"id\": \"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b3\",\n  \"app_id\" : \"a86dr8yl\",\n  \"created_at\": 1392731331,\n  \"delivery_attempts\": 1,\n  \"first_sent_at\": 1392731392,\n  \"data\": {\n    \"item\": {\n      \"type\": \"company\",\n      \"id\": \"531ee472cce572a6ec000006\",\n      \"name\": \"Blue Sun\",\n      \"company_id\": \"6\",\n      \"remote_created_at\": 1394531169,\n      \"created_at\": 1394533506,\n      \"updated_at\": 1396874658,\n      \"custom_attributes\": {\n      }\n    }\n  }\n}\n\nHandling Webhook Notifications\n\nWhen you setup a subscription you will receive notifications on your chosen topics. How you handle those notifications, i.e. the HTTP status code returned, will determine the subsequent state of that subscription.\n\nResponse Code\tDescription\tAction\n2xx\tSuccess\tThe webhook was successfully delivered.\n410\tGone\tWhen a 410 is received, we assume the resource is no longer available. We will disable the subscription and no more notifications will be sent.\n429\tToo many requests\tWhen a 429 is received, all notifications from that subscription will be throttled. Depending on the rate of delivery, this delay can be between 1 minute to 2 hours. If 429s continue and any notification is delayed for > 2 hours then we will drop that notification.\n4xx (excl. 429) 5xx\tClient or service errors\tWe will retry after 1 minute for all other errors. If the 2nd retry fails then we mark the notification delivery as failed.\n\n❗️ Timeout\n\nYou have 5 seconds to respond to a notification. If you don't send a response inside that time, the notification is treated as failed and will be retried only once after 1 minute.\n\nSigned Notifications\n\nEach webhook notification is signed by Intercom via an X-Hub-Signature header. We do this so that you can verify the notification came from Intercom by decoding the signature.\n\nThe value of this X-Hub-Signature header is computed by creating a signature using the body of the JSON request and your app's client_secret value, which you can find on the Basic Info page of your app.\n\nThe signature is the hexadecimal (40-byte) representation of a SHA-1 signature computed using the HMAC algorithm as defined in RFC2104.\n\nThe X-Hub-Signature header value starts with the string sha1= followed by the signature.\n\nPOST https://example.org/hooks\nUser-Agent: intercom-parrot-service-client/1.0\nX-Hub-Signature: sha1=21ff2e149e0fdcac6f947740f6177f6434bda921\nAccept: application/json\nContent-Type: application/json\n\n{\n  \"type\" : \"notification_event\",\n  \"id\" : \"notif_78c122d0-23ba-11e4-9464-79b01267cc2e\",\n  \"topic\" : \"user.created\",\n  \"app_id\" : \"a86dr8yl\",\n  \"data\" : {\n    \"type\" : \"notification_event_data\",\n    \"item\" : {\n      \"type\" : \"user\",\n      \"id\" : \"530370b477ad7120001d\",\n      \"user_id\" : \"25\",\n      \"name\" : \"Hoban Washburne\",\n      \"unsubscribed_from_emails\" : false,\n      \"custom_attributes\" : {}\n    }\n  }\n}\n\nContact Tag Model for Webhooks\n\nThe Contact Tag model is only returned for webhooks. It is not used with the Lead (i.e. contact) or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"contact_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"1287\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"contact\" : {\n      \"type\": \"contact\",\n      \"id\": \"1287ab1287fefe\",\n      \"user_id\": \"12\"\n  }\n}\n\n\nA contact tag is composed from the existing contact and tag JSON and is sent when contacts are tagged and untagged via the contact.tag.created and contact.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'contact_tag'.\ncreated_at\ttimestamp\tThe time the contact tag object was created.\ntag\tTag\tThe tag that was added or removed.\ncontact\tcontact\tThe contact that was tagged or untagged.\nUser Tag Model for Webhooks\n\nThe User Tag model is only returned for webhooks. It is not used with the User or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"user_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"17513\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"user\" : {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n      \"user_id\": \"25\"\n  }\n}\n\n\nA user tag is composed from the existing user and tag JSON and is sent when users are tagged and untagged via the user.tag.created and user.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user_tag'.\ncreated_at\ttimestamp\tThe time the user tag object was created.\ntag\tTag\tThe tag that was added or removed.\nuser\tUser\tThe user that was tagged or untagged."
  },
  {
    "title": "Submit action",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/actioncomponents/submit-action/",
    "html": "Submit action\n\nA submit action triggers a Submit Request to be sent. This request will include all values which have been entered into all the interactive components on the current canvas.\n\nParameters\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsubmit\tYes\tThe type of action you are attaching to a component.\nExample Object\naction: {\n  \"type\": \"submit\"\n}\n"
  },
  {
    "title": "Sheets Action",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/actioncomponents/sheets-action/",
    "html": "Sheets Action\n\nA sheet action opens the link you give within the Messenger as an embedded iframe.\n\nMore on how Sheets work is in our Canvas Kit documentation.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsheet\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which hosts your sheet.\nExample Object\naction: {\n  type: \"sheet\",\n  url:  \"http://example.com\"\n}\n"
  },
  {
    "title": "View a Team",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/teams/view-a-team/",
    "html": "View a Team\nRetrieve a single team\n$ curl https://api.intercom.io/teams/2744328 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"admin_ids\": [\n        646303,\n        814860\n    ],\n    \"id\": \"2744328\",\n    \"name\": \"the_a_team\",\n    \"type\": \"team\"\n}\n\n\nEach admin object has its own URL, where the {id} is the value of the teams id field:\n\nhttps://api.intercom.io/teams/{id}"
  },
  {
    "title": "Teams",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/teams/teams/",
    "html": "Teams\n\nTeams are how you can view your teams within Intercom.\n\nThe API currently only supports viewing the teams that are already created. Creating and managing teams must be done through the Intercom App."
  },
  {
    "title": "Delete a Subscription",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/webhooks/delete-a-subscription/",
    "html": "Delete a Subscription\n\nExample Delete Subscription Request\n\n$ curl https://api.intercom.io/subscriptions/nsub_6ab4c480-fd8b-11e3-958f-c779cae3e1b3 \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nSubscription sub = Subscription.find(\"nsub_60ca7690\");\nSubscription.delete(sub);\n\n\nA subscription can be deleted by sending a DELETE request to its URL."
  },
  {
    "title": "URL Action",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/actioncomponents/url-action/",
    "html": "URL Action\n\nA URL action opens a given link in a new browser tab.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\turl\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which will open in a new tab.\nExample Object\naction: {\n  \"type\": \"url\",\n  \"url\":  \"https://www.example.com\"\n}\n"
  },
  {
    "title": "Single-Select",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/interactivecomponents/single-select/",
    "html": "Single-Select\n\nA single-select component is used to capture a choice from up to 10 options that you provide. You can submit the value of the select option by:\n\nAdding an action to the single-select component\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the single-select component used as the key and the id from the chosen option as the value.\n\nSingle-Select Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tsingle-select\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of options.Can provide 2 to 10.\nlabel\tAny string\tNo\tThe text shown above the options.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOptions Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "List",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/interactivecomponents/list/",
    "html": "List\n\nA list component renders a list of items which you provide in an array. You can make each list item take an action by adding the relevant action object to the item:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nList Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tlist\tYes\tThe type of component you are rendering.\nitems\tArray (see below)\tYes\tThe items that will be rendered in the list.\ndisabled\ttrue``false\tNo\tStyles all list items and prevents the action.Default is false.\nItem Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\titem\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the item.\ntitle\tAny string\tYes\tThe text shown as the title for the item.\nsubtitle\tAny string\tNo\tThe text shown underneath the item's title.\ntertiary_text\tAny string\tNo\tThe text shown next to the subtitle, separates by a bullet.\nimage\tA valid HTTPS URL\tNo\tAn image that will be displayed to the left of the item.\nimage_width\tAny integer\tYes (if image provided)\tThe exact width of the image in pixels.\nimage_height\tAny integer\tYes (if image provided)\tThe exact height of the image in pixels.\nrounded_image\ttrue``false\tNo\tRounds the corners of the image.Default is false.\ndisabled\ttrue``false\tNo\tThe defined state of the inputted value to render a specific style.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nPreview"
  },
  {
    "title": "Input",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/interactivecomponents/input/",
    "html": "Input\n\nAn input component is used to capture text input from the end user. You can submit the value of the input by:\n\nAdding an action to the input component (which will render an inline button)\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tinput\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the input.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.Will be overriden if save_state is saved.\nPreview"
  },
  {
    "title": "Sheets Action",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/actioncomponents/sheets-action/",
    "html": "Sheets Action\n\nA sheet action opens the link you give within the Messenger as an embedded iframe.\n\nMore on how Sheets work is in our Canvas Kit documentation.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsheet\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which hosts your sheet.\nExample Object\naction: {\n  type: \"sheet\",\n  url:  \"http://example.com\"\n}\n"
  },
  {
    "title": "Dropdown",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/interactivecomponents/dropdown/",
    "html": "Dropdown\n\nA dropdown component is used to capture a choice from the options that you provide. You can submit the value of the select option by:\n\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the dropdown component used as the key and the id from the chosen option as the value.\n\nDropdown Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tdropdown\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of 2 or more options.\nlabel\tAny string\tNo\tThe text shown above the dropdown.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOption Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Submit action",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/actioncomponents/submit-action/",
    "html": "Submit action\n\nA submit action triggers a Submit Request to be sent. This request will include all values which have been entered into all the interactive components on the current canvas.\n\nParameters\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsubmit\tYes\tThe type of action you are attaching to a component.\nExample Object\naction: {\n  \"type\": \"submit\"\n}\n"
  },
  {
    "title": "Checkbox",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/interactivecomponents/checkbox/",
    "html": "Checkbox\n\nA checkbox component is used to capture multiple choices from as many options as you want to provide. You can submit the options by:\n\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the checkbox component used as the key and an array containing the id of each chosen option as the value.\n\nCheckbox Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tcheckbox\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noption\tArray (See Below)\tYes\tThe list of options.Minimum of 1.\nlabel\tAny string\tNo\tThe text shown above the options.\nvalue\tArray containing the id of option's\tNo\tThe option's that are selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\nOptions Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown next to the checkbox.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Button",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/interactivecomponents/button/",
    "html": "Button\n\nA button component is used to take an action by clicking a button. This can either:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tbutton\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tYes\tThe text that will be rendered inside the button.\naction\tAction Object\tYes\tThis can be a Submit Action, URL Action, or Sheets Action.\nstyle\tprimary``secondary``link\tNo\tStyles the button.Default is primary.\ndisabled\tfalse``true\tNo\tStyles the button and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Webhook Topics",
    "url": "https://developers.intercom.com/docs/references/2.1/webhooks/webhook-models/",
    "html": "Webhook Topics\n\nThe following topics are available and you can be notified when an action relating to that topic occurs. You just need to tell us where to send the notification. The 'Item Type' column shows the API type that will be sent as the data of the notification.\n\nTopic\tItem Type\tDescription\nconversation.user.created\tConversation\tSubscribe to user/lead initiated conversations\nconversation.user.replied\tConversation\tSubscribe to contact user/lead conversation replies\nconversation.admin.replied\tConversation\tSubscribe to admin conversation replies\nconversation.admin.single.created\tConversation\tSubscribe to admin initiated 1:1 conversations\nconversation.admin.assigned\tConversation\tSubscribe to admin conversation assignments\nconversation.admin.noted\tConversation\tSubscribe to admin conversation notes\nconversation.admin.closed\tConversation\tSubscribe to admin conversation closes\nconversation.admin.opened\tConversation\tSubscribe to admin conversation opens\nconversation.admin.snoozed\tConversation\tSubscribe to admin conversation snoozes\nconversation.admin.unsnoozed\tConversation\tSubscribe to admin conversation unsnoozes\nconversation_part.tag.created\tConversation\tSubscribe to conversation parts being tagged\nconversation_part.redacted\tConversation\tSubscribe to conversation parts being deleted\nconversation.rating.added\tConversation\tSubscribe to conversations getting a rating\nconversation.deleted\tConversation\tSubscribe to conversation deleted\nuser.created\tUser\tSubscribe to user creations\nuser.deleted\tUser\tSubscribe to user deletions\nuser.unsubscribed\tUser\tSubscribe to user unsubscriptions from email\nuser.email.updated\tUser\tSubscribe to user email address being updated\nuser.tag.created\tUserTag\tSubscribe to users being tagged\nuser.tag.deleted\tUserTag\tSubscribe to users being untagged\ncontact.created\tLead\tSubscribe to lead creations\ncontact.signed_up\tLead\tSubscribe to leads converting to users\ncontact.added_email\tLead\tSubscribe to emails being added to leads\ncontact.tag.created\tContactTag\tSubscribe to leads being tagged\ncontact.tag.deleted\tContactTag\tSubscribe to leads being untagged\nvisitor.signed_up\tVisitor\tSubscribe to visitors converting to users\ncompany.created\tCompany\tSubscribe to company creations\nevent.created\tEvent\tSubscribe to events\nping\tPing\tSent when a post to the subscription's ping resource is received, or periodically by Intercom. Ping is always subscribed to.\nWebhooks and Permissions\n\nEach webhook topic is associated with one or more permission scopes. If you would like to setup a webhook for a particular topic then you will need to select the appropriate permission scope to be able to request a notification for that topic.\n\n🚧 Multiple permissions\n\nSome topic are associated with multiple permissions. In these cases you don't need to select all of these permissions to subscribe to that topic.\n\nWebhook topic\tWorks with permissions\tGroups\nconversation_part.tag.created\tRead conversations\tConversation data\nconversation_part.redacted\tRead conversations\tConversation data\nconversation.rating.added\tRead conversations\tConversation data\nconversation.admin.assigned\tRead conversations\tConversation data\nconversation.admin.closed\tRead conversations\tConversation data\nconversation.admin.noted\tRead conversations\tConversation data\nconversation.admin.opened\tRead conversations\tConversation data\nconversation.admin.replied\tRead conversations\tConversation data\nconversation.admin.single. created\tRead conversations\tConversation data\nconversation.admin.snoozed\tRead conversations\tConversation data\nconversation.admin.unsnoozed\tRead conversations\tConversation data\nconversation.user.created\tRead conversations\tConversation data\nconversation.user.replied\tRead conversations\tConversation data\nconversation.deleted\tRead conversations\tConversation data\ncontact.added_email\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.email.updated\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.unsubscribed\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nvisitor.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nevent.created\tRead events\tCustomer event data\ncompany.created\tRead users and companies, Read one user and one company\tCompany data\nWebhook Notification Object\n\nA notification object contains the following fields:\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'notification_event'\nid\tstring\tThe Intercom defined id representing the notification.\nself\tstring\tThe Intercom defined URL for the subscription. Optional.\ncreated_at\ttimestamp\tThe timestamp the notification was created.\ntopic\tstring\tCorresponds to a topic.\ndelivery_attempts\tnumber\tThe number of times this notification has been attempted.\nfirst_sent_at\ttimestamp\tThe first time the delivery was attempted.\ndata\tobject\tA container for the data associated with the notification.\ndata.item\tobject\tThe data associated with the notification, which will have a 'type' field.\n\nThe contents of data.item object will be defined according to its type field. In the example to the right, the type value of company indicates a company object.\n\n{\n  \"type\": \"notification_event\",\n  \"topic\": \"company.created\",\n  \"id\": \"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b3\",\n  \"app_id\" : \"a86dr8yl\",\n  \"created_at\": 1392731331,\n  \"delivery_attempts\": 1,\n  \"first_sent_at\": 1392731392,\n  \"data\": {\n    \"item\": {\n      \"type\": \"company\",\n      \"id\": \"531ee472cce572a6ec000006\",\n      \"name\": \"Blue Sun\",\n      \"company_id\": \"6\",\n      \"remote_created_at\": 1394531169,\n      \"created_at\": 1394533506,\n      \"updated_at\": 1396874658,\n      \"custom_attributes\": {\n      }\n    }\n  }\n}\n\nHandling Webhook Notifications\n\nWhen you setup a subscription you will receive notifications on your chosen topics. How you handle those notifications, i.e. the HTTP status code returned, will determine the subsequent state of that subscription.\n\nResponse Code\tDescription\tAction\n2xx\tSuccess\tThe webhook was successfully delivered.\n410\tGone\tWhen a 410 is received, we assume the resource is no longer available. We will disable the subscription and no more notifications will be sent.\n429\tToo many requests\tWhen a 429 is received, all notifications from that subscription will be throttled. Depending on the rate of delivery, this delay can be between 1 minute to 2 hours. If 429s continue and any notification is delayed for > 2 hours then we will drop that notification.\n4xx (excl. 429) 5xx\tClient or service errors\tWe will retry after 1 minute for all other errors. If the 2nd retry fails then we mark the notification delivery as failed.\n\n❗️ Timeout\n\nYou have 5 seconds to respond to a notification. If you don't send a response inside that time, the notification is treated as failed and will be retried only once after 1 minute.\n\nSigned Notifications\n\nEach webhook notification is signed by Intercom via an X-Hub-Signature header. We do this so that you can verify the notification came from Intercom by decoding the signature.\n\nThe value of this X-Hub-Signature header is computed by creating a signature using the body of the JSON request and your app's client_secret value, which you can find on the Basic Info page of your app.\n\nThe signature is the hexadecimal (40-byte) representation of a SHA-1 signature computed using the HMAC algorithm as defined in RFC2104.\n\nThe X-Hub-Signature header value starts with the string sha1= followed by the signature.\n\nPOST https://example.org/hooks\nUser-Agent: intercom-parrot-service-client/1.0\nX-Hub-Signature: sha1=21ff2e149e0fdcac6f947740f6177f6434bda921\nAccept: application/json\nContent-Type: application/json\n\n{\n  \"type\" : \"notification_event\",\n  \"id\" : \"notif_78c122d0-23ba-11e4-9464-79b01267cc2e\",\n  \"topic\" : \"user.created\",\n  \"app_id\" : \"a86dr8yl\",\n  \"data\" : {\n    \"type\" : \"notification_event_data\",\n    \"item\" : {\n      \"type\" : \"user\",\n      \"id\" : \"530370b477ad7120001d\",\n      \"user_id\" : \"25\",\n      \"name\" : \"Hoban Washburne\",\n      \"unsubscribed_from_emails\" : false,\n      \"custom_attributes\" : {}\n    }\n  }\n}\n\nContact Tag Model for Webhooks\n\nThe Contact Tag model is only returned for webhooks. It is not used with the Lead (i.e. contact) or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"contact_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"1287\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"contact\" : {\n      \"type\": \"contact\",\n      \"id\": \"1287ab1287fefe\",\n      \"user_id\": \"12\"\n  }\n}\n\n\nA contact tag is composed from the existing contact and tag JSON and is sent when contacts are tagged and untagged via the contact.tag.created and contact.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'contact_tag'.\ncreated_at\ttimestamp\tThe time the contact tag object was created.\ntag\tTag\tThe tag that was added or removed.\ncontact\tcontact\tThe contact that was tagged or untagged.\nUser Tag Model for Webhooks\n\nThe User Tag model is only returned for webhooks. It is not used with the User or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"user_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"17513\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"user\" : {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n      \"user_id\": \"25\"\n  }\n}\n\n\nA user tag is composed from the existing user and tag JSON and is sent when users are tagged and untagged via the user.tag.created and user.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user_tag'.\ncreated_at\ttimestamp\tThe time the user tag object was created.\ntag\tTag\tThe tag that was added or removed.\nuser\tUser\tThe user that was tagged or untagged."
  },
  {
    "title": "Webhooks",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/webhooks/webhooks/",
    "html": "Webhooks\nOverview\n\nWebhooks are a powerful resource that you can use to automate your use cases and improve your productivity. You can find more about them through this link if you're unfamiliar.\n\nUnlike the API resources, which represent static data that you can create, update and retrieve as needed, webhooks represent dynamic resources. You can configure them to automatically notify you when a customer has taken a particular action, such as making a purchase or replying to a conversation.\n\nThe main concepts for webhooks are subscriptions, topics, and notifications.\n\nSubscriptions\n\nA subscription is where you select a topic you wanted to be notified about. Intercom will setup subscriptions for selected topics when that app is installed on a workspace.\n\nTopics\n\nA subscription will contain one or more topics. Topics are types of notifications that you want to be informed about.\n\nNotifications\n\nThe object delivered to a webhook is a notification. Notifications have payloads, which contain the API's existing JSON objects, such as user or conversations. You will need to provide a URL where Intercom will send these request.\n\nWebhooks FAQs\nDo webhooks belong to my workspace or my app?\n\nWebhooks are associated with an app. You configure your webhooks per app just like you configure your access tokens. When you configure a webhook you tell Intercom where you want notifications to be sent to for one or more webhook topics.\n\nWhere do I enable webhook notifications?\n\nYou don't enable webhooks, Intercom will enable them for you when you install an app on a workspace.\n\nIf I am developing apps for other people what do I need to do?\n\nYou will need to select the permissions on the Authorization page of your app and then subscribe to the relevant topics on the Webhooks page.\n\nCan I subscribe for webhook topics via the API?\n\nNo, you can only subscribe to webhooks now via your Developer Hub. This is to make it easier for people to setup webhooks. Previously people had to keep track of all their webhooks and know when to subscribe and unsubscribe from them as needed. Intercom does this for you now so it should be easier to configure.\n\nI previously configured webhooks via the API. Can I still do that?\n\nYes, anyone that has previously used webhooks can continue to work in the same way. Intercom will not delete your webhooks or reconfigure them in anyway. We hope that you will start using the new approach from now on since it is much easier to manage.\n\nIf I need to trust specific IP addresses to accept inbound webhook requests from Intercom, which are they?\n\nThese are as follows: 34.231.68.152, 34.197.76.213, 35.171.78.91, 35.169.138.21, 52.70.27.159, 52.44.63.161."
  },
  {
    "title": "Current Canvas",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/requestobjects/current-canvas/",
    "html": "Current Canvas\nDescription\n\nThe current_canvas object mirrors the same format as the Canvas Object. This will be the canvas that was most recently showing before the request was sent.\n\nExample Object\n{\n  current_canvas: {\n    content: { \n      components : [\n        {\n          \"type\": \"button\",\n          \"id\": \"button-1\",\n          \"label\": \"This canvas showed before I was clicked\",\n          \"action\": {\n            \"type\": \"submit\"\n          }\n        }\n      ]\n    }\n  }\n}\n"
  },
  {
    "title": "Canvas",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/responseobjects/canvas/",
    "html": "Canvas\nDescription\n\nYou have to respond to the majority of request with a canvas object. This will tell us what UI to show for your app.\n\nA canvas can either be static (meaning we send you the next request only when an action takes place) or live (meaning we send you the next request when someone views the app).\n\nA static canvas needs a Content Object which will contain the components to show.\nA live canvas needs a content_url which we we will make the Live Canvas requests to when the app is viewed. This is only possible for apps viewed or used in the Messenger.\nAttributes\nKey\tType\tCanvas Type\tDescription\ncontent\tobject\tStatic\tThe Content that will be shown as the UI of the app. Max Size is 64KB.\ncontent_url\tstring\tLive\tThe URL which we make Live Canvas requests to. You must respond to these with a Content Object. Max size is 64KB.\nstored_data\tobject\tStatic, Live\tOptional Stored Data that you want to be returned in the next sent request. Max Size is 64KB.\nExample Objects\n{\n  canvas: {\n    content: {\n      components: [\n        {\n          \"type\": \"text\",\n          \"text\": \"This is a text component.\"\n        }\n      ]\n    },\n    stored_data: { \"key\": \"value\" } //Can be more than one pair \n  }\n}\n\n{\n  canvas: {\n    content_url: \"https://messengerapp.com/get-content-here\",\n    stored_data: { \"key\": \"value\" } //Can be more than one pair \n  }\n}\n"
  },
  {
    "title": "Context",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/requestobjects/context/",
    "html": "Context\nDescription\n\nThe context object provides additional details on where the app has been added (or is currently being used), what page the app is being used on, and information on the Messenger settings. This is in order for you give a fully customised experience based on the customers use case.\n\nIf the location is conversation then you will also be given a conversation_id. If you need to use details about the conversation, then you have to use the conversation_id to make a call to our Conversations API and retrieve the conversation object.\n\nAttributes\nKey\tType\tLocation\tDescription\nconversation_id\tinteger\tConversation\tThe id of the conversation where the app is added or being used.\nlocation\tstring\tConversation, Messenger Home, Message, Operator\tWhere the app is added, the action took place, or the card was viewed (when it's a live canvas). Can be either 'conversation', 'home', 'message', or 'operator'.\nlocale\tstring\tConversation, Messenger Home, Message, Operator\tThe default end-user language of the Messenger. Use to localise Messenger App content.\nmessenger_action_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers action colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nmessenger_background_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers background colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nreferrer\tstring\tConversation, Messenger Home, Message, Operator\tThe current page URL where the app is being used.\nExample Objects\n{\n  conversation_id: 4294967297,\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n\n{\n  locale: \"en\", \n  location: \"home | message | operator\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n"
  },
  {
    "title": "Description",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/requestobjects/contact/",
    "html": "Contact\n\nDescription\n\nThe contact object provides information on the Intercom contact. You can see more about this on the Contacts Model page of our API Reference.\n\nExample Object\n{\n  \"type\": \"contact\",\n  \"id\": \"5ba682d23d7cf92bef87bfd4\",\n  \"workspace_id\": \"ecahpwf5\",\n  \"external_id\": \"25\",\n  \"role\": \"user\",\n  \"email\": \"wash@serenity.io\",\n  \"phone\": \"+1123456789\",\n  \"name\": \"Hoban Washburn\",\n  \"avatar\": \"https://example.org/128Wash.jpg\",\n  \"owner_id\": 127,\n  \"social_profiles\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"social_profile\",\n        \"name\": \"Twitter\",\n        \"url\": \"http://twitter.com/th1sland\"\n      }\n    ]\n  },\n  \"has_hard_bounced\": false,\n  \"marked_email_as_spam\": false,\n  \"unsubscribed_from_emails\": false,\n  \"created_at\": 1571672154,\n  \"updated_at\": 1571672158,\n  \"signed_up_at\": 1571069751,\n  \"last_seen_at\": 1571069751,\n  \"last_replied_at\": 1571672158,\n  \"last_contacted_at\": 1571672158,\n  \"last_email_opened_at\": 1571673478,\n  \"last_email_clicked_at\": 1571676789,\n  \"language_override\": null,\n  \"browser\": \"chrome\",\n  \"browser_version\": \"77.0.3865.90\",\n  \"browser_language\": \"en\",\n  \"os\": \"OS X 10.14.6\",\n  \"location\": {\n    \"type\": \"location\",\n    \"country\": \"Ireland\",\n    \"region\": \"Dublin\",\n    \"city\": \"Dublin\"\n  },\n  \"android_app_name\": null,\n  \"android_app_version\": null,\n  \"android_device\": null,\n  \"android_os_version\": null,\n  \"android_sdk_version\": null,\n  \"android_last_seen_at\": null,\n  \"ios_app_name\": null,\n  \"ios_app_version\": null,\n  \"ios_device\": null,\n  \"ios_os_version\": null,\n  \"ios_sdk_version\": null,\n  \"ios_last_seen_at\": null,\n  \"custom_attributes\": {\n    \"paid_subscriber\": true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 1\n  },\n  \"tags\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"tag\",\n        \"id\": \"2\",\n        \"url\": \"/tags/2\"\n      },\n      {\n        \"type\": \"tag\",\n        \"id\": \"4\",\n        \"url\": \"/tags/4\"\n      },\n      {\n        \"type\": \"tag\",\n        \"id\": \"5\",\n        \"url\": \"/tags/5\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/tags\",\n    \"total_count\": 3,\n    \"has_more\": false\n  },\n  \"notes\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"note\",\n        \"id\": \"20114858\",\n        \"url\": \"/notes/20114858\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/notes\",\n    \"total_count\": 1,\n    \"has_more\": false\n  },\n  \"companies\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"company\",\n        \"id\": \"5ba686093d7cf93552a3dc99\",\n        \"url\": \"/companies/5ba686093d7cf93552a3dc99\"\n        \n      },\n      {\n        \"type\": \"company\",\n        \"id\": \"5cee64a03d7cf90c51b36f19\",\n        \"url\": \"/companies/5cee64a03d7cf90c51b36f19\"\n      },\n      {\n        \"type\": \"company\",\n        \"id\": \"5d7668883d7cf944dbc5c791\",\n        \"url\": \"/companies/5d7668883d7cf944dbc5c791\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/companies\",\n    \"total_count\": 3,\n    \"has_more\": false\n  }\n}\n"
  },
  {
    "title": "Card Creation Options",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/requestobjects/card-creation-options/",
    "html": "Card Creation Options"
  },
  {
    "title": "Admin",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/requestobjects/admin/",
    "html": "Admin\nDescription\n\nThe admin object provides information on the Intercom teammate. You can see more about this on the Admin Model page of our API Reference.\n\nExample Object\n{\n  admin: {\n    type: \"admin\",\n    id: \"814860\",\n    name: \"IntercomTest\",\n    email: \"theadmin@example.com\",\n    job_title: \"Existentialist\",\n    away_mode_enabled: false,\n    away_mode_reassign: false,\n    avatar: {\n      image_url: \"https://static.site.test.icon\"\n    },\n    team_ids: [\n      814865\n    ]\n  }\n}\n"
  },
  {
    "title": "Image",
    "url": "https://developers.intercom.com/docs/references/1.1/canvas-kit/presentationcomponents/image/",
    "html": "Image\n\nAn image component is used to display an image inside a messenger card.\n\n🚧 HTTPS Images\n\nIf your request URLs (or website URLs) are over HTTPS, you will need to ensure that images are loaded over HTTPS likewise. Otherwise, they will not work.\n\n{  type: \"image\",   url:  \"https://somesite.com/images640_480.png\",  width:  640,  height: 480}\n\nParameter\tPossible Values\tRequired\tFunction\nid\tAny string\tNo\tUnique identifier for the component within this card.\nurl\tA valid URL\tYes\tThe URL where the image is located.\nalign\tleft (default)centerright\tNo\tAligns the image inside the component.\nwidth\tAny number\tYes\tWidth of the image in pixels.\nheight\tAny number\tYes\tHeight of the image in pixels.\nrounded\ttruefalse (default)\tNo\tRounds the corners of the image if true.\nCard View\n\nFrame View"
  },
  {
    "title": "Spacer",
    "url": "https://developers.intercom.com/docs/references/1.1/canvas-kit/presentationcomponents/spacer/",
    "html": "Spacer\n\nA spacer component is used to create empty space between other messenger card components.\n\n{  type: \"spacer\",   size:  \"xl\"}\n\nParameter\tPossible Values\tRequired\tFunction\nid\tAny string\tNo\tUnique identifier for the component within this card.\nsize\txss (default)mlxl\tNo\tRepresents the amount of space between components.\nCard View\n\nFrame View"
  },
  {
    "title": "Divider",
    "url": "https://developers.intercom.com/docs/references/1.1/canvas-kit/presentationcomponents/divider/",
    "html": "Divider\n\nA spacer component is used to create empty space between other messenger card components.\n\n{\n  type: \"divider\"\n}\n\nParameter\tPossible Values\tRequired\tFunction\nid\tAny string\tNo\tUnique identifier for the component within this card.\nbottom_margin\tNone\tNo\t\nCard View\n\nFrame View"
  },
  {
    "title": "Subscription Model",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/webhooks/webhooks/subscription-model/",
    "html": "Subscription Model\n\nSubscriptions are how you can set up webhook notifications for your App.\n\nSubscription Object\n\nExample Subscription Object\n\n{\\n  \\\"type\\\": \\\"notification_subscription\\\",\\n  \\\"id\\\": \\\"nsub_6ab4c480-fd8b-11e3-958f-c779cae3e1b3\\\",\\n  \\\"created_at\\\": 1392731331,\\n  \\\"updated_at\\\": 1392731331,\\n  \\\"service_type\\\": \\\"web\\\",\\n  \\\"topics\\\": [\\\"company\\\", \\\"conversation.user.created\\\"],\\n  \\\"url\\\": \\\"https://example.org/hooks/1\\\",\\n  \\\"active\\\": true,\\n  \\\"hub_secret\\\": \\\"7fa38fa4e7120189f631a6769dd4876b\\\"\\n}\n\n\nA subscription object contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'notification_subscription'\nid\tstring\tThe Intercom defined id representing the subscription.\ncreated_at\ttimestamp\tThe time the subscription was added to Intercom\nupdated_at\ttimestamp\tThe last time the subscription was updated\nurl\tstring\tThe url the notification should be sent to. Required depending on the service type.\nservice_type\tstring\tThe type of the service being called. Default is web for a plain webhook, which is the only accepted value currently.\ntopics\tarray\tAn array of topics to subscribe to.\nactive\tboolean\tIndicates whether the subscription is currently active.\nhub_secret\tstring\tOptional key used to sign notifications.\nmetadata\tobject\tRequired for event.created webhooks."
  },
  {
    "title": "Checkbox",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/interactivecomponents/checkbox/",
    "html": "Checkbox\n\nA checkbox component is used to capture multiple choices from as many options as you want to provide. You can submit the options by:\n\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the checkbox component used as the key and an array containing the id of each chosen option as the value.\n\nCheckbox Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tcheckbox\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noption\tArray (See Below)\tYes\tThe list of options.Minimum of 1.\nlabel\tAny string\tNo\tThe text shown above the options.\nvalue\tArray containing the id of option's\tNo\tThe option's that are selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\nOptions Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown next to the checkbox.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Dropdown",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/interactivecomponents/dropdown/",
    "html": "Dropdown\n\nA dropdown component is used to capture a choice from the options that you provide. You can submit the value of the select option by:\n\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the dropdown component used as the key and the id from the chosen option as the value.\n\nDropdown Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tdropdown\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of 2 or more options.\nlabel\tAny string\tNo\tThe text shown above the dropdown.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOption Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "List",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/interactivecomponents/list/",
    "html": "List\n\nA list component renders a list of items which you provide in an array. You can make each list item take an action by adding the relevant action object to the item:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nList Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tlist\tYes\tThe type of component you are rendering.\nitems\tArray (see below)\tYes\tThe items that will be rendered in the list.\ndisabled\ttrue``false\tNo\tStyles all list items and prevents the action.Default is false.\nItem Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\titem\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the item.\ntitle\tAny string\tYes\tThe text shown as the title for the item.\nsubtitle\tAny string\tNo\tThe text shown underneath the item's title.\ntertiary_text\tAny string\tNo\tThe text shown next to the subtitle, separates by a bullet.\nimage\tA valid HTTPS URL\tNo\tAn image that will be displayed to the left of the item.\nimage_width\tAny integer\tYes (if image provided)\tThe exact width of the image in pixels.\nimage_height\tAny integer\tYes (if image provided)\tThe exact height of the image in pixels.\nrounded_image\ttrue``false\tNo\tRounds the corners of the image.Default is false.\ndisabled\ttrue``false\tNo\tThe defined state of the inputted value to render a specific style.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nPreview"
  },
  {
    "title": "Single-Select",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/interactivecomponents/single-select/",
    "html": "Single-Select\n\nA single-select component is used to capture a choice from up to 10 options that you provide. You can submit the value of the select option by:\n\nAdding an action to the single-select component\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the single-select component used as the key and the id from the chosen option as the value.\n\nSingle-Select Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tsingle-select\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of options.Can provide 2 to 10.\nlabel\tAny string\tNo\tThe text shown above the options.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOptions Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Input",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/interactivecomponents/input/",
    "html": "Input\n\nAn input component is used to capture text input from the end user. You can submit the value of the input by:\n\nAdding an action to the input component (which will render an inline button)\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tinput\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the input.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.Will be overriden if save_state is saved.\nPreview"
  },
  {
    "title": "Checkbox",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/interactivecomponents/checkbox/",
    "html": "Checkbox\n\nA checkbox component is used to capture multiple choices from as many options as you want to provide. You can submit the options by:\n\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the checkbox component used as the key and an array containing the id of each chosen option as the value.\n\nCheckbox Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tcheckbox\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noption\tArray (See Below)\tYes\tThe list of options.Minimum of 1.\nlabel\tAny string\tNo\tThe text shown above the options.\nvalue\tArray containing the id of option's\tNo\tThe option's that are selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\nOptions Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown next to the checkbox.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Dropdown",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/interactivecomponents/dropdown/",
    "html": "Dropdown\n\nA dropdown component is used to capture a choice from the options that you provide. You can submit the value of the select option by:\n\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the dropdown component used as the key and the id from the chosen option as the value.\n\nDropdown Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tdropdown\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of 2 or more options.\nlabel\tAny string\tNo\tThe text shown above the dropdown.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOption Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Button",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/interactivecomponents/button/",
    "html": "Button\n\nA button component is used to take an action by clicking a button. This can either:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tbutton\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tYes\tThe text that will be rendered inside the button.\naction\tAction Object\tYes\tThis can be a Submit Action, URL Action, or Sheets Action.\nstyle\tprimary``secondary``link\tNo\tStyles the button.Default is primary.\ndisabled\tfalse``true\tNo\tStyles the button and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Webhook Models",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/webhooks/webhooks/webhook-models-1/",
    "html": "Webhook Models\nWebhook Topics\n\nThe following topics are available and you can be notified when an action relating to that topic occurs. You just need to tell us where to send the notification. The 'Item Type' column shows the API type that will be sent as the data of the notification.\n\nTopic\tItem Type\tDescription\nconversation.user.created\tConversation\tSubscribe to user/lead initiated conversations\nconversation.user.replied\tConversation\tSubscribe to contact user/lead conversation replies\nconversation.admin.replied\tConversation\tSubscribe to admin conversation replies\nconversation.admin.single.created\tConversation\tSubscribe to admin initiated 1:1 conversations\nconversation.admin.assigned\tConversation\tSubscribe to admin conversation assignments\nconversation.admin.noted\tConversation\tSubscribe to admin conversation notes\nconversation.admin.closed\tConversation\tSubscribe to admin conversation closes\nconversation.admin.opened\tConversation\tSubscribe to admin conversation opens\nconversation.admin.snoozed\tConversation\tSubscribe to admin conversation snoozes\nconversation.admin.unsnoozed\tConversation\tSubscribe to admin conversation unsnoozes\nconversation_part.tag.created\tConversation\tSubscribe to conversation parts being tagged\nconversation.deleted\tConversation\tSubscribe to conversation deleted\nuser.created\tUser\tSubscribe to user creations\nuser.deleted\tUser\tSubscribe to user deletions\nuser.unsubscribed\tUser\tSubscribe to user unsubscriptions from email\nuser.email.updated\tUser\tSubscribe to user email address being updated\nuser.tag.created\tUserTag\tSubscribe to users being tagged\nuser.tag.deleted\tUserTag\tSubscribe to users being untagged\ncontact.created\tLead\tSubscribe to lead creations\ncontact.signed_up\tLead\tSubscribe to leads converting to users\ncontact.added_email\tLead\tSubscribe to emails being added to leads\ncontact.tag.created\tContactTag\tSubscribe to leads being tagged\ncontact.tag.deleted\tContactTag\tSubscribe to leads being untagged\nvisitor.signed_up\tVisitor\tSubscribe to visitors converting to users\ncompany.created\tCompany\tSubscribe to company creations\nevent.created\tEvent\tSubscribe to events\nping\tPing\tSent when a post to the subscription's ping resource is received, or periodically by Intercom. Ping is always subscribed to.\nWebhooks and Permissions\n\nEach webhook topic is associated with one or more permission scopes. If you would like to setup a webhook for a particular topic then you will need to select the appropriate permission scope to be able to request a notification for that topic.\n\nMULTIPLE PERMISSIONS\n\nSome topic are associated with multiple permissions. In these cases you don't need to select all of these permissions to subscribe to that topic.\n\nWebhook topic\tWorks with permissions\tGroups\nconversation_part.tag.created\tRead conversations\tConversation data\nconversation.admin.assigned\tRead conversations\tConversation data\nconversation.admin.closed\tRead conversations\tConversation data\nconversation.admin.noted\tRead conversations\tConversation data\nconversation.admin.opened\tRead conversations\tConversation data\nconversation.admin.replied\tRead conversations\tConversation data\nconversation.admin.single. created\tRead conversations\tConversation data\nconversation.admin.snoozed\tRead conversations\tConversation data\nconversation.admin.unsnoozed\tRead conversations\tConversation data\nconversation.user.created\tRead conversations\tConversation data\nconversation.user.replied\tRead conversations\tConversation data\nconversation.deleted\tRead conversations\tConversation data\ncontact.added_email\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.email.updated\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.unsubscribed\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nvisitor.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nevent.created\tRead events\tCustomer event data\ncompany.created\tRead users and companies, Read one user and one company\tCompany data\nWebhook Notification Object\n\nA notification object contains the following fields:\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'notification_event'\nid\tstring\tThe Intercom defined id representing the notification.\nself\tstring\tThe Intercom defined URL for the subscription. Optional.\ncreated_at\ttimestamp\tThe timestamp the notification was created.\ntopic\tstring\tCorresponds to a topic.\ndelivery_attempts\tnumber\tThe number of times this notification has been attempted.\nfirst_sent_at\ttimestamp\tThe first time the delivery was attempted.\ndata\tobject\tA container for the data associated with the notification.\ndata.item\tobject\tThe data associated with the notification, which will have a 'type' field.\n\nThe contents of data.item object will be defined according to its type field. In the example to the right, the type value of company indicates a company object.\n\n{\n  \"type\": \"notification_event\",\n  \"topic\": \"company.created\",\n  \"id\": \"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b3\",\n  \"app_id\" : \"a86dr8yl\",\n  \"created_at\": 1392731331,\n  \"delivery_attempts\": 1,\n  \"first_sent_at\": 1392731392,\n  \"data\": {\n    \"item\": {\n      \"type\": \"company\",\n      \"id\": \"531ee472cce572a6ec000006\",\n      \"name\": \"Blue Sun\",\n      \"company_id\": \"6\",\n      \"remote_created_at\": 1394531169,\n      \"created_at\": 1394533506,\n      \"updated_at\": 1396874658,\n      \"custom_attributes\": {\n      }\n    }\n  }\n}\n\nHandling Webhook Notifications\n\nWhen you setup a subscription you will receive notifications on your chosen topics. How you handle those notifications, i.e. the HTTP status code returned, will determine the subsequent state of that subscription.\n\nResponse Code\tDescription\tAction\n2xx\tSuccess\tThe webhook was successfully delivered.\n410\tGone\tWhen a 410 is received, we assume the resource is no longer available. We will disable the subscription and no more notifications will be sent.\n429\tToo many requests\tWhen a 429 is received, all notifications from that subscription will be throttled. Depending on the rate of delivery, this delay can be between 1 minute to 2 hours. If 429s continue and any notification is delayed for > 2 hours then we will drop that notification.\n4xx (excl. 429) 5xx\tClient or service errors\tWe will retry after 1 minute for all other errors. If the 2nd retry fails then we mark the notification delivery as failed.\nTIMEOUT\n\nYou have 5 seconds to respond to a notification. If you don't send a response inside that time, the notification is treated as failed and will be retried only once after 1 minute.\n\nSigned Notifications\n\nEach webhook notification is signed by Intercom via an X-Hub-Signature header. We do this so that you can verify the notification came from Intercom by decoding the signature.\n\nThe value of this X-Hub-Signature header is computed by creating a signature using the body of the JSON request and your app's client_secret value, which you can find on the Basic Info page of your app.\n\nThe signature is the hexadecimal (40-byte) representation of a SHA-1 signature computed using the HMAC algorithm as defined in RFC2104.\n\nThe X-Hub-Signature header value starts with the string sha1= followed by the signature.\n\nPOST https://example.org/hooks\nUser-Agent: intercom-parrot-service-client/1.0\nX-Hub-Signature: sha1=21ff2e149e0fdcac6f947740f6177f6434bda921\nAccept: application/json\nContent-Type: application/json\n\n{\n  \"type\" : \"notification_event\",\n  \"id\" : \"notif_78c122d0-23ba-11e4-9464-79b01267cc2e\",\n  \"topic\" : \"user.created\",\n  \"app_id\" : \"a86dr8yl\",\n  \"data\" : {\n    \"type\" : \"notification_event_data\",\n    \"item\" : {\n      \"type\" : \"user\",\n      \"id\" : \"530370b477ad7120001d\",\n      \"user_id\" : \"25\",\n      \"name\" : \"Hoban Washburne\",\n      \"unsubscribed_from_emails\" : false,\n      \"custom_attributes\" : {}\n    }\n  }\n}\n\nContact Tag Model for Webhooks\n\nThe Contact Tag model is only returned for webhooks. It is not used with the Lead (i.e. contact) or Tag endpoints themselves. You can see an example object below:\n\nExample Contact Tag Model in Webhooks\n{  \\\"type\\\": \\\"contact_tag\\\",  \\\"created_at\\\": 1392731331,  \\\"tag\\\" : {      \\\"id\\\": \\\"1287\\\",      \\\"name\\\": \\\"independent\\\",      \\\"type\\\": \\\"tag\\\"    },  \\\"contact\\\" : {      \\\"type\\\": \\\"contact\\\",      \\\"id\\\": \\\"1287ab1287fefe\\\",      \\\"user_id\\\": \\\"12\\\"  }}\n\n\nA contact tag is composed from the existing contact and tag JSON and is sent when contacts are tagged and untagged via the contact.tag.created and contact.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'contact_tag'.\ncreated_at\ttimestamp\tThe time the contact tag object was created.\ntag\tTag\tThe tag that was added or removed.\ncontact\tcontact\tThe contact that was tagged or untagged.\nUser Tag Model for Webhooks\n\nThe User Tag model is only returned for webhooks. It is not used with the User or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"user_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"17513\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"user\" : {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n      \"user_id\": \"25\"\n  }\n}\n\n\nA user tag is composed from the existing user and tag JSON and is sent when users are tagged and untagged via the user.tag.created and user.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user_tag'.\ncreated_at\ttimestamp\tThe time the user tag object was created.\ntag\tTag\tThe tag that was added or removed.\nuser\tUser\tThe user that was tagged or untagged."
  },
  {
    "title": "URL Action",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/actioncomponents/url-action/",
    "html": "URL Action\n\nA URL action opens a given link in a new browser tab.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\turl\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which will open in a new tab.\nExample Object\naction: {\n  \"type\": \"url\",\n  \"url\":  \"https://www.example.com\"\n}\n"
  },
  {
    "title": "URL Action",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/actioncomponents/url-action/",
    "html": "URL Action\n\nA URL action opens a given link in a new browser tab.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\turl\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which will open in a new tab.\nExample Object\naction: {\n  \"type\": \"url\",\n  \"url\":  \"https://www.example.com\"\n}\n"
  },
  {
    "title": "Visitor Object",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/visitors/visitor-object/",
    "html": "Visitor Object\n\nA visitor object contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'visitor'\nid\tstring\tThe Intercom defined id representing the Visitor\ncreated_at\ttimestamp\tThe time the Visitor was added to Intercom\nupdated_at\ttimestamp\tThe last time the Visitor was updated\nuser_id\tstring\tAutomatically generated identifier for the Visitor\nname\tstring\tThe name of the Visitor\ncustom_attributes\tobject\tThe custom attributes you have set on the Visitor\nlast_request_at\ttimestamp\tThe time the Lead last recorded making a request\navatar\tobject\tAn avatar object for the Visitor\nunsubscribed_from_emails\tboolean\tWhether the Visitor is unsubscribed from emails\nlocation_data\tobject\tA Location Object relating to the Visitor\nuser_agent_data\tstring\tData about the last user agent the Visitor was seen using\nlast_seen_ip\tnull\tThis will return null in an effort to remove PII from our API.\nsocial_profiles\tlist\tA list of social profiles associated with the Visitor\nsegments\tlist\tThis will return an empty list of segments as part of our effort to deprecate this attribute on the visitor model for performance and accuracy reasons.\ntags\tlist\tA list of tags associated with the Visitor."
  },
  {
    "title": "Visitors",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/visitors/visitors/",
    "html": "Visitors\n\nVisitors are useful for representing logged-out users that didn't interact with the Intercom widget yet. Visitors are not visible in Intercom platform. After specific actions Visitors can be converted to Leads in Intercom. The Visitors resource provides methods to fetch, update, convert and delete."
  },
  {
    "title": "Teams Model",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/teams/teams-model/",
    "html": "Teams Model\nExample Object\n{\\n    \\\"type\\\": \\\"team\\\",\\n    \\\"id\\\": \\\"814865\\\",\\n    \\\"name\\\": \\\"Example Team\\\",\\n    \\\"admin_ids\\\": [\\n        493881\\n    ]\\n}\n\nTeam Object\nAttribute\tType\tDescription\ntype\tstring\tValue is team.\nid\tstring\tThe id of the team\nname\tstring\tThe name of the team\nadmin_ids\tlist\tThe list of admin id's that are a part of the team"
  },
  {
    "title": "View a Visitor",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/visitors/view-a-visitor/",
    "html": "View a Visitor\nExample ID Request\n$ curl \\\n-s https://api.intercom.io/visitors/573479f784c5acde6a000575 \\   \n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nor \n\n$ curl \\\n-s https://api.intercom.io/visitors\\?user_id\\=16e690c0-485a-4e87-ae98-a326e788a4f7 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"visitor\",\n  \"id\": \"573479f784c5acde6a000575\",\n  \"user_id\": \"16e690c0-485a-4e87-ae98-a326e788a4f7\",\n  \"email\": \"winstonsmith@truth.org\",\n  \"name\": \"Winston Smith\",\n  ...\n}\n# NB: Full Visitor objects are returned\n\nvisitor = intercom.visitors.find(:id => \"530370b477ad7120001d\")\nvisitor = intercom.visitors.find(:user_id => \"8a88a590-e1c3-41e2-a502-e0649dbf721c\")\n\n\nVisitors can be looked up individually via their id, or with a user_id parameter.\nTo get the visitor user_id from the browser you can use the Intercom JS SDK following method : Intercom('getVisitorId')."
  },
  {
    "title": "Submit action",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/actioncomponents/submit-action/",
    "html": "Submit action\n\nA submit action triggers a Submit Request to be sent. This request will include all values which have been entered into all the interactive components on the current canvas.\n\nParameters\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsubmit\tYes\tThe type of action you are attaching to a component.\nExample Object\naction: {\n  \"type\": \"submit\"\n}\n"
  },
  {
    "title": "Sheets Action",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/actioncomponents/sheets-action/",
    "html": "Sheets Action\n\nA sheet action opens the link you give within the Messenger as an embedded iframe.\n\nMore on how Sheets work is in our Canvas Kit documentation.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsheet\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which hosts your sheet.\nExample Object\naction: {\n  type: \"sheet\",\n  url:  \"http://example.com\"\n}\n"
  },
  {
    "title": "Update a Visitor",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/visitors/update-a-visitor/",
    "html": "Update a Visitor\nExample Request\n$ curl https://api.intercom.io/visitors \\\n-XPUT \\\n-H 'Authorization:Bearer <Your access token>'  \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"user_id\": \"124\",\n  \"name\": \"Winston Smith\",\n  \"last_seen_user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 9\n  }\n}'\n\nHTTP/1.1 200 OK\n\n# contact response\n\nvisitor.name = \"Winston Smith\"\nvisitor.custom_attribute[:foo] = 'bar'\nintercom.visitors.save(visitor)\n\n\nSending a PUT request to /visitors and passing identifiers (user_id or id) in the body will result in an update of an existing Visitor.\n\nIt is not possible to uniquely identify a Visitor for an update with an email address. Including an email address in the PUT request will result in converting the Visitor to a Lead."
  },
  {
    "title": "Webhook Models",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/webhooks/webhooks/webhook-models-1/",
    "html": "Webhook Models\nWebhook Topics\n\nThe following topics are available and you can be notified when an action relating to that topic occurs. You just need to tell us where to send the notification. The 'Item Type' column shows the API type that will be sent as the data of the notification.\n\nTopic\tItem Type\tDescription\nconversation.user.created\tConversation\tSubscribe to user/lead initiated conversations\nconversation.user.replied\tConversation\tSubscribe to contact user/lead conversation replies\nconversation.admin.replied\tConversation\tSubscribe to admin conversation replies\nconversation.admin.single.created\tConversation\tSubscribe to admin initiated 1:1 conversations\nconversation.admin.assigned\tConversation\tSubscribe to admin conversation assignments\nconversation.admin.noted\tConversation\tSubscribe to admin conversation notes\nconversation.admin.closed\tConversation\tSubscribe to admin conversation closes\nconversation.admin.opened\tConversation\tSubscribe to admin conversation opens\nconversation.admin.snoozed\tConversation\tSubscribe to admin conversation snoozes\nconversation.admin.unsnoozed\tConversation\tSubscribe to admin conversation unsnoozes\nconversation_part.tag.created\tConversation\tSubscribe to conversation parts being tagged\nconversation_part.redacted\tConversation\tSubscribe to conversation parts being deleted\nconversation.rating.added\tConversation\tSubscribe to conversations getting a rating\nconversation.deleted\tConversation\tSubscribe to conversation deleted\nuser.created\tUser\tSubscribe to user creations\nuser.deleted\tUser\tSubscribe to user deletions\nuser.unsubscribed\tUser\tSubscribe to user unsubscriptions from email\nuser.email.updated\tUser\tSubscribe to user email address being updated\nuser.tag.created\tUserTag\tSubscribe to users being tagged\nuser.tag.deleted\tUserTag\tSubscribe to users being untagged\ncontact.created\tLead\tSubscribe to lead creations\ncontact.signed_up\tLead\tSubscribe to leads converting to users\ncontact.added_email\tLead\tSubscribe to emails being added to leads\ncontact.tag.created\tContactTag\tSubscribe to leads being tagged\ncontact.tag.deleted\tContactTag\tSubscribe to leads being untagged\nvisitor.signed_up\tVisitor\tSubscribe to visitors converting to users\ncompany.created\tCompany\tSubscribe to company creations\nevent.created\tEvent\tSubscribe to events\nping\tPing\tSent when a post to the subscription's ping resource is received, or periodically by Intercom. Ping is always subscribed to.\nWebhooks and Permissions\n\nEach webhook topic is associated with one or more permission scopes. If you would like to setup a webhook for a particular topic then you will need to select the appropriate permission scope to be able to request a notification for that topic.\n\nMULTIPLE PERMISSIONS\n\nSome topic are associated with multiple permissions. In these cases you don't need to select all of these permissions to subscribe to that topic.\n\nWebhook topic\tWorks with permissions\tGroups\nconversation_part.tag.created\tRead conversations\tConversation data\nconversation_part.redacted\tRead conversations\tConversation data\nconversation.rating.added\tRead conversations\tConversation data\nconversation.admin.assigned\tRead conversations\tConversation data\nconversation.admin.closed\tRead conversations\tConversation data\nconversation.admin.noted\tRead conversations\tConversation data\nconversation.admin.opened\tRead conversations\tConversation data\nconversation.admin.replied\tRead conversations\tConversation data\nconversation.admin.single. created\tRead conversations\tConversation data\nconversation.admin.snoozed\tRead conversations\tConversation data\nconversation.admin.unsnoozed\tRead conversations\tConversation data\nconversation.user.created\tRead conversations\tConversation data\nconversation.user.replied\tRead conversations\tConversation data\nconversation.deleted\tRead conversations\tConversation data\ncontact.added_email\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.email.updated\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.unsubscribed\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nvisitor.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nevent.created\tRead events\tCustomer event data\ncompany.created\tRead users and companies, Read one user and one company\tCompany data\nWebhook Notification Object\n\nA notification object contains the following fields:\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'notification_event'\nid\tstring\tThe Intercom defined id representing the notification.\nself\tstring\tThe Intercom defined URL for the subscription. Optional.\ncreated_at\ttimestamp\tThe timestamp the notification was created.\ntopic\tstring\tCorresponds to a topic.\ndelivery_attempts\tnumber\tThe number of times this notification has been attempted.\nfirst_sent_at\ttimestamp\tThe first time the delivery was attempted.\ndata\tobject\tA container for the data associated with the notification.\ndata.item\tobject\tThe data associated with the notification, which will have a 'type' field.\n\nThe contents of data.item object will be defined according to its type field. In the example to the right, the type value of company indicates a company object.\n\n{\n  \"type\": \"notification_event\",\n  \"topic\": \"company.created\",\n  \"id\": \"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b3\",\n  \"app_id\" : \"a86dr8yl\",\n  \"created_at\": 1392731331,\n  \"delivery_attempts\": 1,\n  \"first_sent_at\": 1392731392,\n  \"data\": {\n    \"item\": {\n      \"type\": \"company\",\n      \"id\": \"531ee472cce572a6ec000006\",\n      \"name\": \"Blue Sun\",\n      \"company_id\": \"6\",\n      \"remote_created_at\": 1394531169,\n      \"created_at\": 1394533506,\n      \"updated_at\": 1396874658,\n      \"custom_attributes\": {\n      }\n    }\n  }\n}\n\nHandling Webhook Notifications\n\nWhen you setup a subscription you will receive notifications on your chosen topics. How you handle those notifications, i.e. the HTTP status code returned, will determine the subsequent state of that subscription.\n\nResponse Code\tDescription\tAction\n2xx\tSuccess\tThe webhook was successfully delivered.\n410\tGone\tWhen a 410 is received, we assume the resource is no longer available. We will disable the subscription and no more notifications will be sent.\n429\tToo many requests\tWhen a 429 is received, all notifications from that subscription will be throttled. Depending on the rate of delivery, this delay can be between 1 minute to 2 hours. If 429s continue and any notification is delayed for > 2 hours then we will drop that notification.\n4xx (excl. 429) 5xx\tClient or service errors\tWe will retry after 1 minute for all other errors. If the 2nd retry fails then we mark the notification delivery as failed.\nTIMEOUT\n\nYou have 5 seconds to respond to a notification. If you don't send a response inside that time, the notification is treated as failed and will be retried only once after 1 minute.\n\nSigned Notifications\n\nEach webhook notification is signed by Intercom via an X-Hub-Signature header. We do this so that you can verify the notification came from Intercom by decoding the signature.\n\nThe value of this X-Hub-Signature header is computed by creating a signature using the body of the JSON request and your app's client_secret value, which you can find on the Basic Info page of your app.\n\nThe signature is the hexadecimal (40-byte) representation of a SHA-1 signature computed using the HMAC algorithm as defined in RFC2104.\n\nThe X-Hub-Signature header value starts with the string sha1= followed by the signature.\n\nPOST https://example.org/hooks\nUser-Agent: intercom-parrot-service-client/1.0\nX-Hub-Signature: sha1=21ff2e149e0fdcac6f947740f6177f6434bda921\nAccept: application/json\nContent-Type: application/json\n\n{\n  \"type\" : \"notification_event\",\n  \"id\" : \"notif_78c122d0-23ba-11e4-9464-79b01267cc2e\",\n  \"topic\" : \"user.created\",\n  \"app_id\" : \"a86dr8yl\",\n  \"data\" : {\n    \"type\" : \"notification_event_data\",\n    \"item\" : {\n      \"type\" : \"user\",\n      \"id\" : \"530370b477ad7120001d\",\n      \"user_id\" : \"25\",\n      \"name\" : \"Hoban Washburne\",\n      \"unsubscribed_from_emails\" : false,\n      \"custom_attributes\" : {}\n    }\n  }\n}\n\nContact Tag Model for Webhooks\n\nThe Contact Tag model is only returned for webhooks. It is not used with the Lead (i.e. contact) or Tag endpoints themselves. You can see an example object below:\n\nExample Contact Tag Model in Webhooks\n{  \\\"type\\\": \\\"contact_tag\\\",  \\\"created_at\\\": 1392731331,  \\\"tag\\\" : {      \\\"id\\\": \\\"1287\\\",      \\\"name\\\": \\\"independent\\\",      \\\"type\\\": \\\"tag\\\"    },  \\\"contact\\\" : {      \\\"type\\\": \\\"contact\\\",      \\\"id\\\": \\\"1287ab1287fefe\\\",      \\\"user_id\\\": \\\"12\\\"  }}\n\n\nA contact tag is composed from the existing contact and tag JSON and is sent when contacts are tagged and untagged via the contact.tag.created and contact.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'contact_tag'.\ncreated_at\ttimestamp\tThe time the contact tag object was created.\ntag\tTag\tThe tag that was added or removed.\ncontact\tcontact\tThe contact that was tagged or untagged.\nUser Tag Model for Webhooks\n\nThe User Tag model is only returned for webhooks. It is not used with the User or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"user_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"17513\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"user\" : {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n      \"user_id\": \"25\"\n  }\n}\n\n\nA user tag is composed from the existing user and tag JSON and is sent when users are tagged and untagged via the user.tag.created and user.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user_tag'.\ncreated_at\ttimestamp\tThe time the user tag object was created.\ntag\tTag\tThe tag that was added or removed.\nuser\tUser\tThe user that was tagged or untagged."
  },
  {
    "title": "Results",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/responseobjects/results/",
    "html": "Results\nDescription\n\nThe results object should be sent when you want to end configuration of the app and trigger the Initialize request to be sent. You provide the key-value pairs of data you want access to and we will send these in the Initialize request within a card_creation_options object.\n\nExample Object\nresults: { \"key\": \"value\" } // Can be more than one pair\n"
  },
  {
    "title": "Event",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/responseobjects/event/",
    "html": "Event\nDescription\n\nThe event object enables Intercom to know more about the actions that took place in your app. Currently, you can only tell us when an app's flow has been completed.\n\nAttributes\nKey\tType\tDescription\ntype\tstring\tWhat action took place. The only value currently accepted is completed.\nExample Object\nevent: { \"type\": \"completed\" } // Optional. Recorded by Intercom.\n"
  },
  {
    "title": "Single-Select",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/interactivecomponents/single-select/",
    "html": "Single-Select\n\nA single-select component is used to capture a choice from up to 10 options that you provide. You can submit the value of the select option by:\n\nAdding an action to the single-select component\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the single-select component used as the key and the id from the chosen option as the value.\n\nSingle-Select Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tsingle-select\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of options.Can provide 2 to 10.\nlabel\tAny string\tNo\tThe text shown above the options.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOptions Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Single-Select",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/interactivecomponents/single-select/",
    "html": "Single-Select\n\nA single-select component is used to capture a choice from up to 10 options that you provide. You can submit the value of the select option by:\n\nAdding an action to the single-select component\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the single-select component used as the key and the id from the chosen option as the value.\n\nSingle-Select Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tsingle-select\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of options.Can provide 2 to 10.\nlabel\tAny string\tNo\tThe text shown above the options.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOptions Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Input",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/interactivecomponents/input/",
    "html": "Input\n\nAn input component is used to capture text input from the end user. You can submit the value of the input by:\n\nAdding an action to the input component (which will render an inline button)\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tinput\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the input.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.Will be overriden if save_state is saved.\nPreview"
  },
  {
    "title": "List",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/interactivecomponents/list/",
    "html": "List\n\nA list component renders a list of items which you provide in an array. You can make each list item take an action by adding the relevant action object to the item:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nList Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tlist\tYes\tThe type of component you are rendering.\nitems\tArray (see below)\tYes\tThe items that will be rendered in the list.\ndisabled\ttrue``false\tNo\tStyles all list items and prevents the action.Default is false.\nItem Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\titem\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the item.\ntitle\tAny string\tYes\tThe text shown as the title for the item.\nsubtitle\tAny string\tNo\tThe text shown underneath the item's title.\ntertiary_text\tAny string\tNo\tThe text shown next to the subtitle, separates by a bullet.\nimage\tA valid HTTPS URL\tNo\tAn image that will be displayed to the left of the item.\nimage_width\tAny integer\tYes (if image provided)\tThe exact width of the image in pixels.\nimage_height\tAny integer\tYes (if image provided)\tThe exact height of the image in pixels.\nrounded_image\ttrue``false\tNo\tRounds the corners of the image.Default is false.\ndisabled\ttrue``false\tNo\tThe defined state of the inputted value to render a specific style.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nPreview"
  },
  {
    "title": "Input",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/interactivecomponents/input/",
    "html": "Input\n\nAn input component is used to capture text input from the end user. You can submit the value of the input by:\n\nAdding an action to the input component (which will render an inline button)\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tinput\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the input.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.Will be overriden if save_state is saved.\nPreview"
  },
  {
    "title": "Text Area",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/interactivecomponents/text-area/",
    "html": "Text Area\n\nA text area component is used to capture a large amount of text as input with a multi-line text box. You can submit the value of the text area by:\n\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttextarea\tYes\tThe type of component you are rendering\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the text area.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\nerror\tfalse``true\tNo\tStyles the input as failed.Default is false.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Button",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/interactivecomponents/button/",
    "html": "Button\n\nA button component is used to take an action by clicking a button. This can either:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tbutton\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tYes\tThe text that will be rendered inside the button.\naction\tAction Object\tYes\tThis can be a Submit Action, URL Action, or Sheets Action.\nstyle\tprimary``secondary``link\tNo\tStyles the button.Default is primary.\ndisabled\tfalse``true\tNo\tStyles the button and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Dropdown",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/interactivecomponents/dropdown/",
    "html": "Dropdown\n\nA dropdown component is used to capture a choice from the options that you provide. You can submit the value of the select option by:\n\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the dropdown component used as the key and the id from the chosen option as the value.\n\nDropdown Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tdropdown\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of 2 or more options.\nlabel\tAny string\tNo\tThe text shown above the dropdown.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOption Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "List",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/interactivecomponents/list/",
    "html": "List\n\nA list component renders a list of items which you provide in an array. You can make each list item take an action by adding the relevant action object to the item:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nList Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tlist\tYes\tThe type of component you are rendering.\nitems\tArray (see below)\tYes\tThe items that will be rendered in the list.\ndisabled\ttrue``false\tNo\tStyles all list items and prevents the action.Default is false.\nItem Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\titem\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the item.\ntitle\tAny string\tYes\tThe text shown as the title for the item.\nsubtitle\tAny string\tNo\tThe text shown underneath the item's title.\ntertiary_text\tAny string\tNo\tThe text shown next to the subtitle, separates by a bullet.\nimage\tA valid HTTPS URL\tNo\tAn image that will be displayed to the left of the item.\nimage_width\tAny integer\tYes (if image provided)\tThe exact width of the image in pixels.\nimage_height\tAny integer\tYes (if image provided)\tThe exact height of the image in pixels.\nrounded_image\ttrue``false\tNo\tRounds the corners of the image.Default is false.\ndisabled\ttrue``false\tNo\tThe defined state of the inputted value to render a specific style.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nPreview"
  },
  {
    "title": "Checkbox",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/interactivecomponents/checkbox/",
    "html": "Checkbox\n\nA checkbox component is used to capture multiple choices from as many options as you want to provide. You can submit the options by:\n\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the checkbox component used as the key and an array containing the id of each chosen option as the value.\n\nCheckbox Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tcheckbox\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noption\tArray (See Below)\tYes\tThe list of options.Minimum of 1.\nlabel\tAny string\tNo\tThe text shown above the options.\nvalue\tArray containing the id of option's\tNo\tThe option's that are selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\nOptions Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown next to the checkbox.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Content",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/responseobjects/content/",
    "html": "Content\nDescription\n\nThe content object is where you specify the UI of your app. You provide us with a set of components in a components array that we then render.\n\nThe content object should usually be returned within the canvas object. If you're responding to a Live Canvas request however, then you should only respond with the content object.\n\nAttributes\nKey\tType\tDescription\ncomponents\tarray\tThe list of components to be rendered. See the components further in this reference.\nExample Object\n{\n  content: {\n    components: [\n      {\n        \"type\": \"text\",\n        \"id\": \"component-1\",\n        \"text\": \"This is the first component\",\n        \"align\": \"center\",\n        \"style\": \"header\"\n      },\n      {\n        \"type\": \"button\",\n        \"id\": \"component-2\",\n        \"label\": \"This is the second component\",\n        \"action\": {\n          \"type\": \"submit\"\n        }\n      }\n    ]\n  }\n}\n"
  },
  {
    "title": "Convert a Visitor to a Lead",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/visitors/convert-a-visitor/",
    "html": "Convert a Visitor to a Lead\nExample Lead Convert Request\ncurlcurl\n$ curl \\\\\\nhttps://api.intercom.io/visitors/convert \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"visitor\\\": {\\n    \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  },\\n  \\\"type\\\": \\\"lead\\\"\\n}'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"email\\\": \\\"winstonsmith@truth.org\\\"\\n}\\n# NB: Full User objects are returned\n\n\nVisitors can be converted to Leads. This is done by passing Visitor identifiers and a type attribute set to 'lead'."
  },
  {
    "title": "Delete a visitor",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/visitors/delete-a-visitor/",
    "html": "Delete a visitor\nExample ID Delete Request\ncurlcurl\n$ curl \\\\\\nhttps://api.intercom.io/visitors/5321a20f72cdbb4192000013 \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"visitor\\\",\\n  \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n  \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  ...\\n}\\n# NB: Full Visitor objects are returned\n"
  },
  {
    "title": "Input Values",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/requestobjects/input-values/",
    "html": "Input Values\nDescription\n\nThe input_values object is a JSON hash containing key-value pairs. These key-value pairs represent the data that's been inputted by customers and teammates with a given component.\n\nThe key will be the component_id and the value will be the data that was inputted by this component.\n\nExample Object\ninput_values: { \"<component_id>\": \"<Value entered in component>\" }, //Can be more than one pair\n"
  },
  {
    "title": "Text",
    "url": "https://developers.intercom.com/docs/references/1.1/canvas-kit/presentationcomponents/text/",
    "html": "Text\n\nThe text component is used for rendering blocks of text inside messenger cards. It does not accept most styling information (e.g. font size and text color). Links and bold font can be rendered through Markdown however.\n\n{  type:  \"text\",  text:  \"Welcome to the messenger app framework\",  style: \"header\",  align: \"left\"}\n\nParameter\tPossible Values\tRequired\tFunction\nid\tAny string\tNo\tUnique identifier for the component within this card.\ntext\tAny stringMarkdown (ie. [](), **)\tYes\tThe text that will be rendered inside the component.\nalign\tleft (default)centerright\tNo\tAligns the text inside the component.\nstyle\theaderparagraph (default)mutederror\tNo\tStyles the text in a specific preset style.\nbottom_margin\tNone\tNo\tDisables a component’s default margin-bottom of 10px.\n\n🚧 Line Breaks\n\nLine breaks are not converted into tags in the rendered HTML, so all text will appear on a single line.\n\nCard View\n\nFrame View"
  },
  {
    "title": "Webhooks",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/webhooks/webhooks/",
    "html": "Webhooks\nOverview\n\nWebhooks are a powerful resource that you can use to automate your use cases and improve your productivity. You can find more about them through this link if you're unfamiliar.\n\nUnlike the API resources, which represent static data that you can create, update and retrieve as needed, webhooks represent dynamic resources. You can configure them to automatically notify you when a customer has taken a particular action, such as making a purchase or replying to a conversation.\n\nThe main concepts for webhooks are subscriptions, topics, and notifications.\n\nSubscriptions\n\nA subscription is where you select a topic you wanted to be notified about. Intercom will setup subscriptions for selected topics when that app is installed on a workspace.\n\nTopics\n\nA subscription will contain one or more topics. Topics are types of notifications that you want to be informed about.\n\nNotifications\n\nThe object delivered to a webhook is a notification. Notifications have payloads, which contain the API's existing JSON objects, such as user or conversations. You will need to provide a URL where Intercom will send these request.\n\nWebhooks FAQs\nDo webhooks belong to my workspace or my app?\n\nWebhooks are associated with an app. You configure your webhooks per app just like you configure your access tokens. When you configure a webhook you tell Intercom where you want notifications to be sent to for one or more webhook topics.\n\nWhere do I enable webhook notifications?\n\nYou don't enable webhooks, Intercom will enable them for you when you install an app on a workspace.\n\nIf I am developing apps for other people what do I need to do?\n\nYou will need to select the permissions on the Authorization page of your app and then subscribe to the relevant topics on the Webhooks page.\n\nCan I subscribe for webhook topics via the API?\n\nNo, you can only subscribe to webhooks now via your Developer Hub. This is to make it easier for people to setup webhooks. Previously people had to keep track of all their webhooks and know when to subscribe and unsubscribe from them as needed. Intercom does this for you now so it should be easier to configure.\n\nI previously configured webhooks via the API. Can I still do that?\n\nYes, anyone that has previously used webhooks can continue to work in the same way. Intercom will not delete your webhooks or reconfigure them in anyway. We hope that you will start using the new approach from now on since it is much easier to manage.\n\nIf I need to trust specific IP addresses to accept inbound webhook requests from Intercom, which are they?\n\nThese are as follows: 34.231.68.152, 34.197.76.213, 35.171.78.91, 35.169.138.21, 52.70.27.159, 52.44.63.161."
  },
  {
    "title": "Webhooks",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/webhooks/webhooks/",
    "html": "Webhooks\nOverview\n\nWebhooks are a powerful resource that you can use to automate your use cases and improve your productivity. You can find more about them through this link if you're unfamiliar.\n\nUnlike the API resources, which represent static data that you can create, update and retrieve as needed, webhooks represent dynamic resources. You can configure them to automatically notify you when a customer has taken a particular action, such as making a purchase or replying to a conversation.\n\nThe main concepts for webhooks are subscriptions, topics, and notifications.\n\nSubscriptions\n\nA subscription is where you select a topic you wanted to be notified about. Intercom will setup subscriptions for selected topics when that app is installed on a workspace.\n\nTopics\n\nA subscription will contain one or more topics. Topics are types of notifications that you want to be informed about.\n\nNotifications\n\nThe object delivered to a webhook is a notification. Notifications have payloads, which contain the API's existing JSON objects, such as user or conversations. You will need to provide a URL where Intercom will send these request.\n\nWebhooks FAQs\nDo webhooks belong to my workspace or my app?\n\nWebhooks are associated with an app. You configure your webhooks per app just like you configure your access tokens. When you configure a webhook you tell Intercom where you want notifications to be sent to for one or more webhook topics.\n\nWhere do I enable webhook notifications?\n\nYou don't enable webhooks, Intercom will enable them for you when you install an app on a workspace.\n\nIf I am developing apps for other people what do I need to do?\n\nYou will need to select the permissions on the Authorization page of your app and then subscribe to the relevant topics on the Webhooks page.\n\nCan I subscribe for webhook topics via the API?\n\nNo, you can only subscribe to webhooks now via your Developer Hub. This is to make it easier for people to setup webhooks. Previously people had to keep track of all their webhooks and know when to subscribe and unsubscribe from them as needed. Intercom does this for you now so it should be easier to configure.\n\nI previously configured webhooks via the API. Can I still do that?\n\nYes, anyone that has previously used webhooks can continue to work in the same way. Intercom will not delete your webhooks or reconfigure them in anyway. We hope that you will start using the new approach from now on since it is much easier to manage.\n\nIf I need to trust specific IP addresses to accept inbound webhook requests from Intercom, which are they?\n\nThese are as follows: 34.231.68.152, 34.197.76.213, 35.171.78.91, 35.169.138.21, 52.70.27.159, 52.44.63.161."
  },
  {
    "title": "List Teams",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/teams/list-teams/",
    "html": "List Teams\nList Teams\n$ curl https://api.intercom.io/teams \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n{\n    \"teams\": [\n        {\n            \"admin_ids\": [\n                492881,\n                1195856\n            ],\n            \"id\": \"814865\",\n            \"name\": \"BA_App\",\n            \"type\": \"team\"\n        },\n        {\n            \"admin_ids\": [\n                646303,\n                814860\n            ],\n            \"id\": \"2744328\",\n            \"name\": \"the_a_team\",\n            \"type\": \"team\"\n        }\n    ],\n    \"type\": \"team.list\"\n}\n\n\nAn App's teams can be fetched by sending a GET request to https://api.intercom.io/teams.\n\nTeam List\nAttribute\tType\tDescription\ntype\tstring\tValue is 'team.list'\nteams\tarray\tA list of team objects\npages\tobject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch.\nRequest Parameters\n\nNone.\n\nReturns\n\nA list of team objects for the App. The result may also have a pages object if the response is paginated."
  },
  {
    "title": "Button",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/interactivecomponents/button/",
    "html": "Button\n\nA button component is used to take an action by clicking a button. This can either:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tbutton\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tYes\tThe text that will be rendered inside the button.\naction\tAction Object\tYes\tThis can be a Submit Action, URL Action, or Sheets Action.\nstyle\tprimary``secondary``link\tNo\tStyles the button.Default is primary.\ndisabled\tfalse``true\tNo\tStyles the button and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Text Area",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/interactivecomponents/text-area/",
    "html": "Text Area\n\nA text area component is used to capture a large amount of text as input with a multi-line text box. You can submit the value of the text area by:\n\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttextarea\tYes\tThe type of component you are rendering\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the text area.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\nerror\tfalse``true\tNo\tStyles the input as failed.Default is false.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Teams",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/teams/teams/",
    "html": "Teams\n\nTeams are how you can view your teams within Intercom.\n\nThe API currently only supports viewing the teams that are already created. Creating and managing teams must be done through the Intercom App."
  },
  {
    "title": "Teams",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/teams/teams/",
    "html": "Teams\n\nTeams are how you can view your teams within Intercom.\n\nThe API currently only supports viewing the teams that are already created. Creating and managing teams must be done through the Intercom App."
  },
  {
    "title": "Teams Model",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/teams/teams-model/",
    "html": "Teams Model\nExample Object\n{\\n    \\\"type\\\": \\\"team\\\",\\n    \\\"id\\\": \\\"814865\\\",\\n    \\\"name\\\": \\\"Example Team\\\",\\n    \\\"admin_ids\\\": [\\n        493881\\n    ]\\n}\n\nTeam Object\nAttribute\tType\tDescription\ntype\tstring\tValue is team.\nid\tstring\tThe id of the team\nname\tstring\tThe name of the team\nadmin_ids\tlist\tThe list of admin id's that are a part of the team"
  },
  {
    "title": "Current Canvas",
    "url": "https://developers.intercom.com/docs/references/1.1/canvas-kit/requestobjects/current-canvas/",
    "html": "Current Canvas\n\nThe current_canvas object mirrors the same format as the Canvas Object, which is returned by Intercom to your web-service.\n\nIt's returned to the relevant URLs to specify what the canvas currently looks during the configure flow, and during the submit flow respectively.\n\nTo see what is included in a canvas object when you initially send it to us, click here."
  },
  {
    "title": "Input Values",
    "url": "https://developers.intercom.com/docs/references/1.1/canvas-kit/requestobjects/input-values/",
    "html": "Input Values\n\nThe input-values object is a JSON hash where you can add key-value pairs.\n\nIt's returned to the relevant URLs to specify any data that had been inputted by teammates during the configure flow, and any data that has been inputted by end users during the submit flow.\n\ninput_values: {\n    name: \"Data one\",\n     ... //Can be more than one pair\n  }\n\n{\n  app_id: \"<string id_code of the app using the card>\",\n  admin: {<Admin object of admin who is performing configuration>},\n  current_canvas: {<Canvas object>},\n  component_id: \"<component_id, component which triggered action>\",\n  input_values: {\n    <component_id>: \"<value entered in component>\",\n    ...\n  },\n  context: {<Context object>}\n}\n\n{\n  app_id: \"<string id_code of the app using the card>\",\n  current_canvas: {<Canvas object>},\n  component_id: \"<component_id, component which triggered action>\",\n  input_values: {\n    <component_id>: \"<value entered in component>\",\n    ...\n  },\n  user: {<User object of end-user who triggered action>},\n  context: {<Context object>}\n}\n"
  },
  {
    "title": "Webhooks",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/webhooks/webhooks/",
    "html": "Webhooks\nOverview\n\nWebhooks are a powerful resource that you can use to automate your use cases and improve your productivity. You can find more about them through this link if you're unfamiliar.\n\nUnlike the API resources, which represent static data that you can create, update and retrieve as needed, webhooks represent dynamic resources. You can configure them to automatically notify you when a customer has taken a particular action, such as making a purchase or replying to a conversation.\n\nThe main concepts for webhooks are subscriptions, topics, and notifications.\n\nSubscriptions\n\nA subscription is where you select a topic you wanted to be notified about. Intercom will setup subscriptions for selected topics when that app is installed on a workspace.\n\nTopics\n\nA subscription will contain one or more topics. Topics are types of notifications that you want to be informed about.\n\nNotifications\n\nThe object delivered to a webhook is a notification. Notifications have payloads, which contain the API's existing JSON objects, such as user or conversations. You will need to provide a URL where Intercom will send these request.\n\nWebhooks FAQs\nDo webhooks belong to my workspace or my app?\n\nWebhooks are associated with an app. You configure your webhooks per app just like you configure your access tokens. When you configure a webhook you tell Intercom where you want notifications to be sent to for one or more webhook topics.\n\nWhere do I enable webhook notifications?\n\nYou don't enable webhooks, Intercom will enable them for you when you install an app on a workspace.\n\nIf I am developing apps for other people what do I need to do?\n\nYou will need to select the permissions on the Authorization page of your app and then subscribe to the relevant topics on the Webhooks page.\n\nCan I subscribe for webhook topics via the API?\n\nNo, you can only subscribe to webhooks now via your Developer Hub. This is to make it easier for people to setup webhooks. Previously people had to keep track of all their webhooks and know when to subscribe and unsubscribe from them as needed. Intercom does this for you now so it should be easier to configure.\n\nI previously configured webhooks via the API. Can I still do that?\n\nYes, anyone that has previously used webhooks can continue to work in the same way. Intercom will not delete your webhooks or reconfigure them in anyway. We hope that you will start using the new approach from now on since it is much easier to manage.\n\nIf I need to trust specific IP addresses to accept inbound webhook requests from Intercom, which are they?\n\nThese are as follows: 34.231.68.152, 34.197.76.213, 35.171.78.91, 35.169.138.21, 52.70.27.159, 52.44.63.161."
  },
  {
    "title": "Results",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/responseobjects/results/",
    "html": "Results\nDescription\n\nThe results object should be sent when you want to end configuration of the app and trigger the Initialize request to be sent. You provide the key-value pairs of data you want access to and we will send these in the Initialize request within a card_creation_options object.\n\nExample Object\nresults: { \"key\": \"value\" } // Can be more than one pair\n"
  },
  {
    "title": "Teams Model",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/teams/teams-model/",
    "html": "Teams Model\nExample Object\n{\\n    \\\"type\\\": \\\"team\\\",\\n    \\\"id\\\": \\\"814865\\\",\\n    \\\"name\\\": \\\"Example Team\\\",\\n    \\\"admin_ids\\\": [\\n        493881\\n    ]\\n}\n\nTeam Object\nAttribute\tType\tDescription\ntype\tstring\tValue is team.\nid\tstring\tThe id of the team\nname\tstring\tThe name of the team\nadmin_ids\tlist\tThe list of admin id's that are a part of the team"
  },
  {
    "title": "Convert a Visitor to a User",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/visitors/convert-a-visitor-to-a-user/",
    "html": "Convert a Visitor to a User\n\nExample User Convert Request\n\ncurlcurl\n$ curl \\\\\\nhttps://api.intercom.io/visitors/convert \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"visitor\\\": {\\n    \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  },\\n  \\\"user\\\": {\\n    \\\"email\\\": \\\"winstonsmith@truth.org\\\"\\n  },\\n  \\\"type\\\": \\\"user\\\"\\n}'\\n\n\n# NB: Full User objects are returned\\n{\\n  \\\"type\\\": \\\"lead\\\",\\n  \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n}\n\n\nVisitors can also be converted to Users. This is done by passing both Visitor and User identifiers and a type attribute set to 'user'. If the User exists, then the Visitor will be merged into it, the Visitor deleted and the User returned. If the User does not exist, the Visitor will be converted to a User, with the User identifiers replacing it's Visitor identifiers.\n\nIdentifiers (id, user_id, email) from Visitors are never added onto Users with a merge.\n\nA Visitor email, but not user_id is retained when converting a Visitor to a new User."
  },
  {
    "title": "Stored Data",
    "url": "https://developers.intercom.com/docs/references/2.2/canvas-kit/responseobjects/stored-data/",
    "html": "Stored Data\nDescription\n\nA canvas object may optionally contain a stored_data object. This is where you can add key-value pairs of data that you want to be sent in whatever the next request is.\n\nFor example, the flow of your app might have multiple canvases with data being inputted on each one. You may want to have all this data available to use at the end of the flow for the final canvas. You can therefore put all this data in the stored_data object so it's sent in subsequent requests and is available at the end.\n\nExample Object\nstored_data: {\"key\": \"value\"} //Can be more than one pair\n"
  },
  {
    "title": "Canvas",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/responseobjects/canvas/",
    "html": "Canvas\nDescription\n\nYou have to respond to the majority of request with a canvas object. This will tell us what UI to show for your app.\n\nA canvas can either be static (meaning we send you the next request only when an action takes place) or live (meaning we send you the next request when someone views the app).\n\nA static canvas needs a Content Object which will contain the components to show.\nA live canvas needs a content_url which we we will make the Live Canvas requests to when the app is viewed. This is only possible for apps viewed or used in the Messenger.\nAttributes\nKey\tType\tCanvas Type\tDescription\ncontent\tobject\tStatic\tThe Content that will be shown as the UI of the app. Max Size is 64KB.\ncontent_url\tstring\tLive\tThe URL which we make Live Canvas requests to. You must respond to these with a Content Object. Max size is 64KB.\nstored_data\tobject\tStatic, Live\tOptional Stored Data that you want to be returned in the next sent request. Max Size is 64KB.\nExample Objects\n{\n  canvas: {\n    content: {\n      components: [\n        {\n          \"type\": \"text\",\n          \"text\": \"This is a text component.\"\n        }\n      ]\n    },\n    stored_data: { \"key\": \"value\" } //Can be more than one pair \n  }\n}\n\n{\n  canvas: {\n    content_url: \"https://messengerapp.com/get-content-here\",\n    stored_data: { \"key\": \"value\" } //Can be more than one pair \n  }\n}\n"
  },
  {
    "title": "Note Model",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/notes/note-model/",
    "html": "Note Model\nExample Object\n{\\n  \\\"type\\\": \\\"note\\\",\\n  \\\"id\\\": \\\"16\\\",\\n  \\\"created_at\\\": 1389913941,\\n  \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n  \\\"author\\\": {\\n    \\\"type\\\": \\\"admin\\\",\\n    \\\"id\\\": \\\"21\\\",\\n    \\\"name\\\": \\\"Jayne Cobb\\\",\\n    \\\"email\\\": \\\"jayne@serenity.io\\\",\\n    \\\"companies\\\": []\\n  },\\n  \\\"user\\\": {\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\"\\n  }\\n}\n\nNote Object\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'note'\nid\tstring\tThe id representing the note\ncreated_at\ttimestamp\tThe time the note was created\nuser\tUser\tThe user the note was created about\nbody\tstring\tThe body text of the note.\nauthor\tAdmin\tOptional. Represents the Admin that created the note"
  },
  {
    "title": "Admin",
    "url": "https://developers.intercom.com/docs/references/1.1/canvas-kit/requestobjects/admin/",
    "html": "Admin\n\nThe admin object provides information on the Intercom teammate.\n\n{\n  admin: {\n    type: \"admin\",\n    id: \"814860\",\n    name: \"IntercomTest\",\n    email: \"theadmin@example.com\",\n    job_title: \"Existentialist\",\n    away_mode_enabled: false,\n    away_mode_reassign: false,\n    avatar: {\n      image_url: \"https://static.site.test.icon\"\n    },\n    team_ids: [\n      814865\n    ]\n  }\n}\n\nKey\tType\tDescription\ntype\tstring\tValue will always be 'admin'.\nid\tstring\tThe id of the admin.\nname\tstring\tThe name of the admin.\nemail\tstring\tThe email address of the admin.\njob_title\tstring\tThe job title of the admin.\naway_mode_enabled\tboolean\tIdentifies if this admin is currently set in away mode.\naway_mode_reassign\tboolean\tIdentifies if this admin has currently set replies to assigned conversations to go automatically into the workspaces default inbox.\navatar\tobject\tContains an 'image_url' string attribute within.\nteam_ids\tarray[integer]\tThis is a list of teams id's that the admin is a part of. Only set if the type is 'admin'."
  },
  {
    "title": "Visitors",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/visitors/visitors/",
    "html": "Visitors\n\nVisitors are useful for representing logged-out users that didn't interact with the Intercom widget yet. Visitors are not visible in Intercom platform. After specific actions Visitors can be converted to Leads in Intercom. The Visitors resource provides methods to fetch, update, convert and delete."
  },
  {
    "title": "List Teams",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/teams/list-teams/",
    "html": "List Teams\nList Teams\n$ curl https://api.intercom.io/teams \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n{\n    \"teams\": [\n        {\n            \"admin_ids\": [\n                492881,\n                1195856\n            ],\n            \"id\": \"814865\",\n            \"name\": \"BA_App\",\n            \"type\": \"team\"\n        },\n        {\n            \"admin_ids\": [\n                646303,\n                814860\n            ],\n            \"id\": \"2744328\",\n            \"name\": \"the_a_team\",\n            \"type\": \"team\"\n        }\n    ],\n    \"type\": \"team.list\"\n}\n\n\nAn App's teams can be fetched by sending a GET request to https://api.intercom.io/teams.\n\nTeam List\nAttribute\tType\tDescription\ntype\tstring\tValue is 'team.list'\nteams\tarray\tA list of team objects\npages\tobject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch.\nRequest Parameters\n\nNone.\n\nReturns\n\nA list of team objects for the App. The result may also have a pages object if the response is paginated."
  },
  {
    "title": "List Teams",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/teams/list-teams/",
    "html": "List Teams\nList Teams\n$ curl https://api.intercom.io/teams \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n{\n    \"teams\": [\n        {\n            \"admin_ids\": [\n                492881,\n                1195856\n            ],\n            \"id\": \"814865\",\n            \"name\": \"BA_App\",\n            \"type\": \"team\"\n        },\n        {\n            \"admin_ids\": [\n                646303,\n                814860\n            ],\n            \"id\": \"2744328\",\n            \"name\": \"the_a_team\",\n            \"type\": \"team\"\n        }\n    ],\n    \"type\": \"team.list\"\n}\n\n\nAn App's teams can be fetched by sending a GET request to https://api.intercom.io/teams.\n\nTeam List\nAttribute\tType\tDescription\ntype\tstring\tValue is 'team.list'\nteams\tarray\tA list of team objects\npages\tobject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch.\nRequest Parameters\n\nNone.\n\nReturns\n\nA list of team objects for the App. The result may also have a pages object if the response is paginated."
  },
  {
    "title": "Visitor Object",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/visitors/visitor-object/",
    "html": "Visitor Object\n\nA visitor object contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'visitor'\nid\tstring\tThe Intercom defined id representing the Visitor\ncreated_at\ttimestamp\tThe time the Visitor was added to Intercom\nupdated_at\ttimestamp\tThe last time the Visitor was updated\nuser_id\tstring\tAutomatically generated identifier for the Visitor\nname\tstring\tThe name of the Visitor\ncustom_attributes\tobject\tThe custom attributes you have set on the Visitor\nlast_request_at\ttimestamp\tThe time the Lead last recorded making a request\navatar\tobject\tAn avatar object for the Visitor\nunsubscribed_from_emails\tboolean\tWhether the Visitor is unsubscribed from emails\nlocation_data\tobject\tA Location Object relating to the Visitor\nsocial_profiles\tlist\tA list of social profiles associated with the Visitor\nsegments\tlist\tThis will return an empty list of segments as part of our effort to deprecate this attribute on the visitor model for performance and accuracy reasons.\ntags\tlist\tA list of tags associated with the Visitor."
  },
  {
    "title": "Delete a Tag",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/tags/delete-a-tag/",
    "html": "Delete a Tag\nExample Delete Tag Request\n$ curl https://api.intercom.io/tags/17513 \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n# Not exposed in Ruby client\n\n<?php\n// Not exposed in PHP client\n?>\n\nTag.delete(tag);\n\n\nA tag can be deleted by sending a DELETE request to its URL. A tag's URL is defined using using the tag's id field to create a URL of the form, https://api.intercom.io/tags/{id}."
  },
  {
    "title": "Update a Visitor",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/visitors/update-a-visitor/",
    "html": "Update a Visitor\nExample Request\n$ curl https://api.intercom.io/visitors \\\n-XPUT \\\n-H 'Authorization:Bearer <Your access token>'  \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"user_id\": \"124\",\n  \"name\": \"Winston Smith\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 9\n  }\n}'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"visitor\",\n  \"id\": \"573479f784c5acde6a000575\",\n  \"user_id\": \"16e690c0-485a-4e87-ae98-a326e788a4f7\",\n  \"email\": \"winstonsmith@truth.org\",\n  \"name\": \"Winston Smith\",\n  ...\n}\n# NB: Full Visitor objects are returned\n\nvisitor.name = \"Winston Smith\"\nvisitor.custom_attribute[:foo] = 'bar'\nintercom.visitors.save(visitor)\n\n\nSending a PUT request to /visitors and passing identifiers (user_id or id) in the body will result in an update of an existing Visitor.\n\nIt is not possible to uniquely identify a Visitor for an update with an email address. Including an email address in the PUT request will result in converting the Visitor to a Lead."
  },
  {
    "title": "View a Visitor",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/visitors/view-a-visitor/",
    "html": "View a Visitor\nExample ID Request\n$ curl \\\n-s https://api.intercom.io/visitors/573479f784c5acde6a000575 \\   \n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nor \n\n$ curl \\\n-s https://api.intercom.io/visitors\\?user_id\\=16e690c0-485a-4e87-ae98-a326e788a4f7 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"visitor\",\n  \"id\": \"573479f784c5acde6a000575\",\n  \"user_id\": \"16e690c0-485a-4e87-ae98-a326e788a4f7\",\n  \"email\": \"winstonsmith@truth.org\",\n  \"name\": \"Winston Smith\",\n  ...\n}\n# NB: Full Visitor objects are returned\n\nvisitor = intercom.visitors.find(:id => \"530370b477ad7120001d\")\nvisitor = intercom.visitors.find(:user_id => \"8a88a590-e1c3-41e2-a502-e0649dbf721c\")\n\n\nVisitors can be looked up individually via their id, or with a user_id parameter.\nTo get the visitor user_id from the browser you can use the Intercom JS SDK following method : Intercom('getVisitorId')."
  },
  {
    "title": "Delete a Tag",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/tags/delete-a-tag/",
    "html": "Delete a Tag\nExample Delete Tag Request\n$ curl https://api.intercom.io/tags/17513 \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n# Not exposed in Ruby client\n\n<?php\n// Not exposed in PHP client\n?>\n\nTag.delete(tag);\n\n\nA tag can be deleted by sending a DELETE request to its URL. A tag's URL is defined using using the tag's id field to create a URL of the form, https://api.intercom.io/tags/{id}."
  },
  {
    "title": "Delete a visitor",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/visitors/delete-a-visitor/",
    "html": "Delete a visitor\nExample ID Delete Request\ncurlcurl\n$ curl \\\\\\nhttps://api.intercom.io/visitors/5321a20f72cdbb4192000013 \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"visitor\\\",\\n  \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n  \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  ...\\n}\\n# NB: Full Visitor objects are returned\n"
  },
  {
    "title": "Convert a Visitor to a Lead",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/visitors/convert-a-visitor/",
    "html": "Convert a Visitor to a Lead\nExample Lead Convert Request\ncurlcurl\n$ curl \\\\\\nhttps://api.intercom.io/visitors/convert \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"visitor\\\": {\\n    \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  },\\n  \\\"type\\\": \\\"lead\\\"\\n}'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"email\\\": \\\"winstonsmith@truth.org\\\"\\n}\\n# NB: Full Lead objects are returned\n\n\nVisitors can be converted to Leads. This is done by passing Visitor identifiers and a type attribute set to 'lead'."
  },
  {
    "title": "Visitors",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/visitors/visitors/",
    "html": "Visitors\n\nVisitors are useful for representing logged-out users that didn't interact with the Intercom widget yet. Visitors are not visible in Intercom platform. After specific actions Visitors can be converted to Leads in Intercom. The Visitors resource provides methods to fetch, update, convert and delete."
  },
  {
    "title": "Visitors",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/visitors/visitors/",
    "html": "Visitors\n\nVisitors are useful for representing logged-out users that didn't interact with the Intercom widget yet. Visitors are not visible in Intercom platform. After specific actions Visitors can be converted to Leads in Intercom. The Visitors resource provides methods to fetch, update, convert and delete."
  },
  {
    "title": "Visitor Object",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/visitors/visitor-object/",
    "html": "Visitor Object\n\nA visitor object contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'visitor'\nid\tstring\tThe Intercom defined id representing the Visitor\ncreated_at\ttimestamp\tThe time the Visitor was added to Intercom\nupdated_at\ttimestamp\tThe last time the Visitor was updated\nuser_id\tstring\tAutomatically generated identifier for the Visitor\nname\tstring\tThe name of the Visitor\ncustom_attributes\tobject\tThe custom attributes you have set on the Visitor\nlast_request_at\ttimestamp\tThe time the Lead last recorded making a request\navatar\tobject\tAn avatar object for the Visitor\nunsubscribed_from_emails\tboolean\tWhether the Visitor is unsubscribed from emails\nlocation_data\tobject\tA Location Object relating to the Visitor\nsocial_profiles\tlist\tA list of social profiles associated with the Visitor\nsegments\tlist\tThis will return an empty list of segments as part of our effort to deprecate this attribute on the visitor model for performance and accuracy reasons.\ntags\tlist\tA list of tags associated with the Visitor."
  },
  {
    "title": "View a Segment",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/segments/view-a-segment/",
    "html": "View a Segment\nExample Request\n$ curl https://api.intercom.io/segments/53203e244cba153d39000062 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"segment\",\n  \"id\": \"53203e244cba153d39000062\",\n  \"name\": \"New\",\n  \"created_at\": 1394621988,\n  \"updated_at\": 1394622004\n}\n\nintercom.segments.find(:id => '1234')\n\nSegment segment = Segment.find(\"1234\");\n\n\nEach segment has its own URL -\n\nhttps://api.intercom.io/segments/{id}\n\nWhere {id} is the value of the segment's id field. A GET request to a segment's URL will return the segment object.\n\nYou can also get a count for an individual user segment by adding the parameter include_count=true\n\n$ curl https://api.intercom.io/segments/58a707924f6651b07b94376c?include_count=true \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"segment\",\n    \"id\": \"58a707924f6651b07b94376c\",\n    \"name\": \"id=10\",\n    \"created_at\": 1487341458,\n    \"updated_at\": 1487341459,\n    \"person_type\": \"user\",\n    \"count\": 5\n}\n\nReturns\n\nA segment object."
  },
  {
    "title": "Create and Update Tags",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/tags/create-and-update-tags/",
    "html": "Create and Update Tags\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/tags \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d'\\n{\\n  \\\"name\\\": \\\"Independent\\\"\\n}'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"tag\\\",\\n  \\\"name\\\": \\\"Independent\\\",\\n  \\\"id\\\": \\\"17513\\\"\\n}\n\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/tags \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d'\\n{\\n  \\\"id\\\": \\\"17513\\\",\\n  \\\"name\\\": \\\"Independent\\\"\\n}'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"tag\\\",\\n  \\\"name\\\": \\\"Independent\\\",\\n  \\\"id\\\": \\\"17513\\\"\\n}\n\n\nYou can create a new tag by submitting a POST to https://api.intercom.io/tags along with a name for the tag. The tag name may contain whitespace and punctuation.\n\nIf the same tag name is sent multiple times, only one tag will be created for that name - this lets you avoid checking if a tag exists first.\n\nTag names are case insensitive - 'MyTag' and 'mytag' will result in a single tag being created.\n\nA tag's name can also be updated by posting a tag to https://api.intercom.io/tags. The submitted tag object will contain the id of the tag to update and a new name for the tag. A successful request will update the name value for that tag and return the updated tag in the response.\n\nAttributes\nAttribute\tRequired\tDescription\nname\tYes\tThe name of the tag, which will be created if not found, or the new name for the tag if this is an update request.\nid\tYes for update\tThe id of tag to updates.\nReturns\n\nThe newly created or updated tag object containing its name and id fields."
  },
  {
    "title": "Segments",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/segments/segments/",
    "html": "Segments\n\nA segment is a group of your users defined by rules that you set. Users are automatically added to the segment every time the user updates to match those rules. Segments are different to tags, in that users need to be added to tags manually and tag members are not automatically managed.\n\nThe API supports fetching the list of segments created in your App, however creating and managing segments must be done through Intercom. For more information about segmenting users, please see the product documentation."
  },
  {
    "title": "Visitor Object",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/visitors/visitor-object/",
    "html": "Visitor Object\n\nA visitor object contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'visitor'\nid\tstring\tThe Intercom defined id representing the Visitor\ncreated_at\ttimestamp\tThe time the Visitor was added to Intercom\nupdated_at\ttimestamp\tThe last time the Visitor was updated\nuser_id\tstring\tAutomatically generated identifier for the Visitor\nname\tstring\tThe name of the Visitor\ncustom_attributes\tobject\tThe custom attributes you have set on the Visitor\nlast_request_at\ttimestamp\tThe time the Lead last recorded making a request\navatar\tobject\tAn avatar object for the Visitor\nunsubscribed_from_emails\tboolean\tWhether the Visitor is unsubscribed from emails\nlocation_data\tobject\tA Location Object relating to the Visitor\nsocial_profiles\tlist\tA list of social profiles associated with the Visitor\nsegments\tlist\tThis will return an empty list of segments as part of our effort to deprecate this attribute on the visitor model for performance and accuracy reasons.\ntags\tlist\tA list of tags associated with the Visitor."
  },
  {
    "title": "View a Visitor",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/visitors/view-a-visitor/",
    "html": "View a Visitor\nExample ID Request\n$ curl \\\n-s https://api.intercom.io/visitors/573479f784c5acde6a000575 \\   \n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nor \n\n$ curl \\\n-s https://api.intercom.io/visitors\\?user_id\\=16e690c0-485a-4e87-ae98-a326e788a4f7 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"visitor\",\n  \"id\": \"573479f784c5acde6a000575\",\n  \"user_id\": \"16e690c0-485a-4e87-ae98-a326e788a4f7\",\n  \"email\": \"winstonsmith@truth.org\",\n  \"name\": \"Winston Smith\",\n  ...\n}\n# NB: Full Visitor objects are returned\n\nvisitor = intercom.visitors.find(:id => \"530370b477ad7120001d\")\nvisitor = intercom.visitors.find(:user_id => \"8a88a590-e1c3-41e2-a502-e0649dbf721c\")\n\n\nVisitors can be looked up individually via their id, or with a user_id parameter.\nTo get the visitor user_id from the browser you can use the Intercom JS SDK following method : Intercom('getVisitorId')."
  },
  {
    "title": "View a Visitor",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/visitors/view-a-visitor/",
    "html": "View a Visitor\nExample ID Request\n$ curl \\\n-s https://api.intercom.io/visitors/573479f784c5acde6a000575 \\   \n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nor \n\n$ curl \\\n-s https://api.intercom.io/visitors\\?user_id\\=16e690c0-485a-4e87-ae98-a326e788a4f7 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"visitor\",\n  \"id\": \"573479f784c5acde6a000575\",\n  \"user_id\": \"16e690c0-485a-4e87-ae98-a326e788a4f7\",\n  \"email\": \"winstonsmith@truth.org\",\n  \"name\": \"Winston Smith\",\n  ...\n}\n# NB: Full Visitor objects are returned\n\nvisitor = intercom.visitors.find(:id => \"530370b477ad7120001d\")\nvisitor = intercom.visitors.find(:user_id => \"8a88a590-e1c3-41e2-a502-e0649dbf721c\")\n\n\nVisitors can be looked up individually via their id, or with a user_id parameter.\nTo get the visitor user_id from the browser you can use the Intercom JS SDK following method : Intercom('getVisitorId')."
  },
  {
    "title": "Update a Visitor",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/visitors/update-a-visitor/",
    "html": "Update a Visitor\nExample Request\n$ curl https://api.intercom.io/visitors \\\n-X PUT \\\n-H 'Authorization:Bearer <Your access token>'  \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"user_id\": \"124\",\n  \"name\": \"Winston Smith\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 9\n  }\n}'\n\nHTTP/1.1 200 OK\n\n# contact response\n\nvisitor.name = \"Winston Smith\"\nvisitor.custom_attribute[:foo] = 'bar'\nintercom.visitors.save(visitor)\n\n\nSending a PUT request to /visitors and passing identifiers (user_id or id) in the body will result in an update of an existing Visitor.\n\nIt is not possible to uniquely identify a Visitor for an update with an email address. Including an email address in the PUT request will result in converting the Visitor to a Lead."
  },
  {
    "title": "Update a Visitor",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/visitors/update-a-visitor/",
    "html": "Update a Visitor\nExample Request\n$ curl https://api.intercom.io/visitors \\\n-XPUT \\\n-H 'Authorization:Bearer <Your access token>'  \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"user_id\": \"124\",\n  \"name\": \"Winston Smith\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 9\n  }\n}'\n\nHTTP/1.1 200 OK\n\n# contact response\n\nvisitor.name = \"Winston Smith\"\nvisitor.custom_attribute[:foo] = 'bar'\nintercom.visitors.save(visitor)\n\n\nSending a PUT request to /visitors and passing identifiers (user_id or id) in the body will result in an update of an existing Visitor.\n\nIt is not possible to uniquely identify a Visitor for an update with an email address. Including an email address in the PUT request will result in converting the Visitor to a Lead."
  },
  {
    "title": "Text Area",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/interactivecomponents/text-area/",
    "html": "Text Area\n\nA text area component is used to capture a large amount of text as input with a multi-line text box. You can submit the value of the text area by:\n\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttextarea\tYes\tThe type of component you are rendering\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the text area.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\nerror\tfalse``true\tNo\tStyles the input as failed.Default is false.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Delete a visitor",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/visitors/delete-a-visitor/",
    "html": "Delete a visitor\nExample ID Delete Request\ncurlcurl\n$ curl \\\\\\nhttps://api.intercom.io/visitors/5321a20f72cdbb4192000013 \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"visitor\\\",\\n  \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n  \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  ...\\n}\\n# NB: Full Visitor objects are returned\n"
  },
  {
    "title": "Divider",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/presentationcomponents/divider/",
    "html": "Divider\n\nA divider component is used to separate components with a line.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdivider\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "Webhook Models",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/webhooks/webhooks/webhook-models-1/",
    "html": "Webhook Models\nWebhook Topics\n\nThe following topics are available and you can be notified when an action relating to that topic occurs. You just need to tell us where to send the notification. The 'Item Type' column shows the API type that will be sent as the data of the notification.\n\nTopic\tItem Type\tDescription\nconversation.user.created\tConversation\tSubscribe to user/lead initiated conversations\nconversation.user.replied\tConversation\tSubscribe to contact user/lead conversation replies\nconversation.admin.replied\tConversation\tSubscribe to admin conversation replies\nconversation.admin.single.created\tConversation\tSubscribe to admin initiated 1:1 conversations\nconversation.admin.assigned\tConversation\tSubscribe to admin conversation assignments\nconversation.admin.noted\tConversation\tSubscribe to admin conversation notes\nconversation.admin.closed\tConversation\tSubscribe to admin conversation closes\nconversation.admin.opened\tConversation\tSubscribe to admin conversation opens\nconversation.admin.snoozed\tConversation\tSubscribe to admin conversation snoozes\nconversation.admin.unsnoozed\tConversation\tSubscribe to admin conversation unsnoozes\nconversation_part.tag.created\tConversation\tSubscribe to conversation parts being tagged\nconversation_part.redacted\tConversation\tSubscribe to conversation parts being deleted\nconversation.rating.added\tConversation\tSubscribe to conversations getting a rating\nconversation.deleted\tConversation\tSubscribe to conversation deleted\nuser.created\tUser\tSubscribe to user creations\nuser.deleted\tUser\tSubscribe to user deletions\nuser.unsubscribed\tUser\tSubscribe to user unsubscriptions from email\nuser.email.updated\tUser\tSubscribe to user email address being updated\nuser.tag.created\tUserTag\tSubscribe to users being tagged\nuser.tag.deleted\tUserTag\tSubscribe to users being untagged\ncontact.created\tLead\tSubscribe to lead creations\ncontact.signed_up\tLead\tSubscribe to leads converting to users\ncontact.added_email\tLead\tSubscribe to emails being added to leads\ncontact.tag.created\tContactTag\tSubscribe to leads being tagged\ncontact.tag.deleted\tContactTag\tSubscribe to leads being untagged\nvisitor.signed_up\tVisitor\tSubscribe to visitors converting to users\ncompany.created\tCompany\tSubscribe to company creations\nevent.created\tEvent\tSubscribe to events\nping\tPing\tSent when a post to the subscription's ping resource is received, or periodically by Intercom. Ping is always subscribed to.\nWebhooks and Permissions\n\nEach webhook topic is associated with one or more permission scopes. If you would like to setup a webhook for a particular topic then you will need to select the appropriate permission scope to be able to request a notification for that topic.\n\nMULTIPLE PERMISSIONS\n\nSome topic are associated with multiple permissions. In these cases you don't need to select all of these permissions to subscribe to that topic.\n\nWebhook topic\tWorks with permissions\tGroups\nconversation_part.tag.created\tRead conversations\tConversation data\nconversation_part.redacted\tRead conversations\tConversation data\nconversation.rating.added\tRead conversations\tConversation data\nconversation.admin.assigned\tRead conversations\tConversation data\nconversation.admin.closed\tRead conversations\tConversation data\nconversation.admin.noted\tRead conversations\tConversation data\nconversation.admin.opened\tRead conversations\tConversation data\nconversation.admin.replied\tRead conversations\tConversation data\nconversation.admin.single. created\tRead conversations\tConversation data\nconversation.admin.snoozed\tRead conversations\tConversation data\nconversation.admin.unsnoozed\tRead conversations\tConversation data\nconversation.user.created\tRead conversations\tConversation data\nconversation.user.replied\tRead conversations\tConversation data\nconversation.deleted\tRead conversations\tConversation data\ncontact.added_email\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.email.updated\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.unsubscribed\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nvisitor.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nevent.created\tRead events\tCustomer event data\ncompany.created\tRead users and companies, Read one user and one company\tCompany data\nWebhook Notification Object\n\nA notification object contains the following fields:\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'notification_event'\nid\tstring\tThe Intercom defined id representing the notification.\nself\tstring\tThe Intercom defined URL for the subscription. Optional.\ncreated_at\ttimestamp\tThe timestamp the notification was created.\ntopic\tstring\tCorresponds to a topic.\ndelivery_attempts\tnumber\tThe number of times this notification has been attempted.\nfirst_sent_at\ttimestamp\tThe first time the delivery was attempted.\ndata\tobject\tA container for the data associated with the notification.\ndata.item\tobject\tThe data associated with the notification, which will have a 'type' field.\n\nThe contents of data.item object will be defined according to its type field. In the example to the right, the type value of company indicates a company object.\n\n{\n  \"type\": \"notification_event\",\n  \"topic\": \"company.created\",\n  \"id\": \"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b3\",\n  \"app_id\" : \"a86dr8yl\",\n  \"created_at\": 1392731331,\n  \"delivery_attempts\": 1,\n  \"first_sent_at\": 1392731392,\n  \"data\": {\n    \"item\": {\n      \"type\": \"company\",\n      \"id\": \"531ee472cce572a6ec000006\",\n      \"name\": \"Blue Sun\",\n      \"company_id\": \"6\",\n      \"remote_created_at\": 1394531169,\n      \"created_at\": 1394533506,\n      \"updated_at\": 1396874658,\n      \"custom_attributes\": {\n      }\n    }\n  }\n}\n\nHandling Webhook Notifications\n\nWhen you setup a subscription you will receive notifications on your chosen topics. How you handle those notifications, i.e. the HTTP status code returned, will determine the subsequent state of that subscription.\n\nResponse Code\tDescription\tAction\n2xx\tSuccess\tThe webhook was successfully delivered.\n410\tGone\tWhen a 410 is received, we assume the resource is no longer available. We will disable the subscription and no more notifications will be sent.\n429\tToo many requests\tWhen a 429 is received, all notifications from that subscription will be throttled. Depending on the rate of delivery, this delay can be between 1 minute to 2 hours. If 429s continue and any notification is delayed for > 2 hours then we will drop that notification.\n4xx (excl. 429) 5xx\tClient or service errors\tWe will retry after 1 minute for all other errors. If the 2nd retry fails then we mark the notification delivery as failed.\nTIMEOUT\n\nYou have 5 seconds to respond to a notification. If you don't send a response inside that time, the notification is treated as failed and will be retried only once after 1 minute.\n\nSigned Notifications\n\nEach webhook notification is signed by Intercom via an X-Hub-Signature header. We do this so that you can verify the notification came from Intercom by decoding the signature.\n\nThe value of this X-Hub-Signature header is computed by creating a signature using the body of the JSON request and your app's client_secret value, which you can find on the Basic Info page of your app.\n\nThe signature is the hexadecimal (40-byte) representation of a SHA-1 signature computed using the HMAC algorithm as defined in RFC2104.\n\nThe X-Hub-Signature header value starts with the string sha1= followed by the signature.\n\nPOST https://example.org/hooks\nUser-Agent: intercom-parrot-service-client/1.0\nX-Hub-Signature: sha1=21ff2e149e0fdcac6f947740f6177f6434bda921\nAccept: application/json\nContent-Type: application/json\n\n{\n  \"type\" : \"notification_event\",\n  \"id\" : \"notif_78c122d0-23ba-11e4-9464-79b01267cc2e\",\n  \"topic\" : \"user.created\",\n  \"app_id\" : \"a86dr8yl\",\n  \"data\" : {\n    \"type\" : \"notification_event_data\",\n    \"item\" : {\n      \"type\" : \"user\",\n      \"id\" : \"530370b477ad7120001d\",\n      \"user_id\" : \"25\",\n      \"name\" : \"Hoban Washburne\",\n      \"unsubscribed_from_emails\" : false,\n      \"custom_attributes\" : {}\n    }\n  }\n}\n\nContact Tag Model for Webhooks\n\nThe Contact Tag model is only returned for webhooks. It is not used with the Lead (i.e. contact) or Tag endpoints themselves. You can see an example object below:\n\nExample Contact Tag Model in Webhooks\n{  \\\"type\\\": \\\"contact_tag\\\",  \\\"created_at\\\": 1392731331,  \\\"tag\\\" : {      \\\"id\\\": \\\"1287\\\",      \\\"name\\\": \\\"independent\\\",      \\\"type\\\": \\\"tag\\\"    },  \\\"contact\\\" : {      \\\"type\\\": \\\"contact\\\",      \\\"id\\\": \\\"1287ab1287fefe\\\",      \\\"user_id\\\": \\\"12\\\"  }}\n\n\nA contact tag is composed from the existing contact and tag JSON and is sent when contacts are tagged and untagged via the contact.tag.created and contact.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'contact_tag'.\ncreated_at\ttimestamp\tThe time the contact tag object was created.\ntag\tTag\tThe tag that was added or removed.\ncontact\tcontact\tThe contact that was tagged or untagged.\nUser Tag Model for Webhooks\n\nThe User Tag model is only returned for webhooks. It is not used with the User or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"user_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"17513\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"user\" : {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n      \"user_id\": \"25\"\n  }\n}\n\n\nA user tag is composed from the existing user and tag JSON and is sent when users are tagged and untagged via the user.tag.created and user.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user_tag'.\ncreated_at\ttimestamp\tThe time the user tag object was created.\ntag\tTag\tThe tag that was added or removed.\nuser\tUser\tThe user that was tagged or untagged."
  },
  {
    "title": "Submit action",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/actioncomponents/submit-action/",
    "html": "Submit action\n\nA submit action triggers a Submit Request to be sent. This request will include all values which have been entered into all the interactive components on the current canvas.\n\nParameters\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsubmit\tYes\tThe type of action you are attaching to a component.\nExample Object\naction: {\n  \"type\": \"submit\"\n}\n"
  },
  {
    "title": "Image",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/presentationcomponents/image/",
    "html": "Image\n\nAn image component is used to display an image.\n\n🚧 HTTPS Images\n\nIf your request URLs (or website URLs) are over HTTPS, you will need to ensure that images are loaded over HTTPS likewise. Otherwise, they will not work.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\timage\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nurl\tA valid HTTPS URL\tYes\tThe URL where the image is located.\nalign\tleft``center``right``full_width\tNo\tAligns the image inside the component.Default is left.\nwidth\tAny integer\tYes\tThe exact width of the image in pixels.\nheight\tAny integer\tYes\tThe exact height of the image in pixels.\nrounded\ttrue``false\tNo\tRounds the corners of the image. Default is false.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\naction\tAction Object\tNo\tThis can be a URL Action only.\nPreview"
  },
  {
    "title": "Data-Table",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/presentationcomponents/data-table/",
    "html": "Data-Table\n\nA data-table component is used for rendering a table of key-value pairs. For Messenger, text will wrap around on multiple lines. For Inbox and Frame (ie. Configure) views, we will truncate and use tooltips on hover if the text overflows.\n\nData-Table Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdata-table\tYes\tThe type of component you are rendering.\nitems\tArray (See Below)\tYes\tThe items that will be rendered in the data-table.\nField-Value Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tfield-value\tYes\tThe type of component you are rendering.\nfield\tAny string\tYes\tThe text of the key in your key-value pair.\nvalue\tAny string\tYes\tThe text of the value in your key-value pair.\nPreview"
  },
  {
    "title": "Delete a visitor",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/visitors/delete-a-visitor/",
    "html": "Delete a visitor\nExample ID Delete Request\ncurlcurl\n$ curl \\\\\\nhttps://api.intercom.io/visitors/5321a20f72cdbb4192000013 \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"visitor\\\",\\n  \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n  \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  ...\\n}\\n# NB: Full Visitor objects are returned\n"
  },
  {
    "title": "Spacer",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/presentationcomponents/spacer/",
    "html": "Spacer\n\nA spacer component is used to create empty space between components.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tspacer\t\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nsize\txs``s``m``l``xl\tNo\tThe amount of space between components.Default is s.\nPreview"
  },
  {
    "title": "Text Area",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/interactivecomponents/text-area/",
    "html": "Text Area\n\nA text area component is used to capture a large amount of text as input with a multi-line text box. You can submit the value of the text area by:\n\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttextarea\tYes\tThe type of component you are rendering\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the text area.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\nerror\tfalse``true\tNo\tStyles the input as failed.Default is false.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Convert a Visitor to a Lead",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/visitors/convert-a-visitor/",
    "html": "Convert a Visitor to a Lead\nExample Lead Convert Request\ncurlcurl\n$ curl \\\\\\nhttps://api.intercom.io/visitors/convert \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"visitor\\\": {\\n    \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  },\\n  \\\"type\\\": \\\"lead\\\"\\n}'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"email\\\": \\\"winstonsmith@truth.org\\\"\\n}\\n# NB: Full User objects are returned\n\n\nVisitors can be converted to Leads. This is done by passing Visitor identifiers and a type attribute set to 'lead'."
  },
  {
    "title": "Convert a Visitor to a Lead",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/visitors/convert-a-visitor/",
    "html": "Convert a Visitor to a Lead\nExample Lead Convert Request\ncurlcurl\n$ curl \\\\\\nhttps://api.intercom.io/visitors/convert \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"visitor\\\": {\\n    \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  },\\n  \\\"type\\\": \\\"lead\\\"\\n}'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"email\\\": \\\"winstonsmith@truth.org\\\"\\n}\\n# NB: Full User objects are returned\n\n\nVisitors can be converted to Leads. This is done by passing Visitor identifiers and a type attribute set to 'lead'."
  },
  {
    "title": "List Users",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/users/list-users/",
    "html": "List Users\nOverview\nRequest Parameters\n\nYou can optionally request the result page size and which page to fetch as follows:\n\nParameter\tRequired?\tWorks with...\tDescription\npage\tno\tAll, Email, Phone\tWhat page of results to fetch. Defaults to first page.\nper_page\tno\tAll, Email, Phone\tHow many results per page. Defaults to 50, Max is 60.\norder\tno\tAll\tReturns the users in ascending or descending order. Valid values: asc or desc. Defaults to desc.\nsort\tno\tAll\tWhat field to sort the results by. Valid values: created_at, last_request_at, signed_up_at, updated_at.\ncreated_since\tno\tAll\tLimits results to users that were created in that last number of days.\nReturns\n\nA pageable list of users. The user list contains a pages object that indicates if more users exist via the next field, whose value is a URL that can be used to fetch the next page. If the next field is not present, that indicates there are no further users in the list.\n\nWhen using the Users endpoint and the pages object to iterate through the returned users, there is a limit of 10,000 Users that can be returned. If you need to list or iterate on more than 10,000 Users, please use the Scroll API.\n\nList all Leads\nList all Users\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/users \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept: application/json'\n\nHTTP/1.1 200 OK{  \\\"type\\\": \\\"user.list\\\",  \\\"total_count\\\": 105,  \\\"users\\\": [    {      \\\"type\\\": \\\"user\\\",      \\\"id\\\": \\\"530370b477ad7120001d\\\",       ...     },     ...   ],  \\\"pages\\\": {    \\\"next\\\": \\\"https://api.intercom.io/users?per_page=50&page=2\\\",    \\\"page\\\": 1,    \\\"per_page\\\": 50,    \\\"total_pages\\\": 3  }}# NB: Full User objects are returned\n\n\nYou can fetch a list of all users. The user list is sorted by the created_at field and by default is ordered descending, most recently created first.\n\nList Users by Email\nList by Email\n$ curl https://api.intercom.io/users?email=test@test.com \\\n-H 'Authorization: Bearer YOUR_ACCESS_TOKEN' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\n\n{\n    \"limited\": false,\n    \"pages\": {\n        \"next\": null,\n        \"page\": 1,\n        \"per_page\": 50,\n        \"total_pages\": 1,\n        \"type\": \"pages\"\n    },\n    \"total_count\": 3,\n    \"type\": \"user.list\",\n    \"users\": [\n        {\n            \"anonymous\": false,\n            \"app_id\": \"fyq3wodw\",\n            \"created_at\": 1506339558,\n            \"custom_attributes\": {},\n            \"do_not_track\": null,\n            \"email\": \"test@test.com\",\n            \"has_hard_bounced\": false,\n            \"id\": \"45c8eae6fac10f5584e7508e\",\n            \"last_request_at\": 1529737920,\n            \"last_seen_ip\": \"78.144.182.179\",\n            ....\n            ....\n        },\n        {\n            \"anonymous\": true,\n            \"app_id\": \"fyq3wodw\",\n            \"created_at\": 1503488750,\n            \"custom_attributes\": {},\n            \"do_not_track\": null,\n            \"email\": \"test@test.com\",\n            \"has_hard_bounced\": false,\n            \"id\": \"5123d6aeeda850883ed8ba7c2\",\n            \"last_request_at\": 1503488749,\n            ....\n            ....\n        },\n        {\n            \"anonymous\": false,\n            \"app_id\": \"fyq3wodw\",\n            \"created_at\": 1494940172,\n            \"custom_attributes\": {},\n            \"do_not_track\": null,\n            \"email\": \"test@test.com\",\n            \"has_hard_bounced\": false,\n            \"id\": \"789afa0cb781d52fd3044ecc\",\n            \"last_request_at\": 1494940211,\n            ....\n            ....\n        }\n    ]\n}\n\n\nYou can fetch Users with a given email by querying the users resource with an email parameter.\n\nList Users by Phone\nList by Phone\n$ curl https://api.intercom.io/users?phone=00353876543210 \\\n-H 'Authorization: Bearer YOUR_ACCESS_TOKEN' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\n\n{\n    \"limited\": false,\n    \"pages\": {\n        \"next\": null,\n        \"page\": 1,\n        \"per_page\": 50,\n        \"total_pages\": 1,\n        \"type\": \"pages\"\n    },\n    \"total_count\": 3,\n    \"type\": \"user.list\",\n    \"users\": [\n        {\n            \"anonymous\": false,\n            \"app_id\": \"fyq3wodw\",\n            \"created_at\": 1506339558,\n            \"custom_attributes\": {},\n            \"do_not_track\": null,\n            \"email\": \"test@test.com\",\n            \"has_hard_bounced\": false,\n            \"id\": \"45c8eae6fac10f5584e7508e\",\n            \"last_request_at\": 1529737920,\n            \"last_seen_ip\": \"78.144.182.179\",\n            \"phone\": \"00353876543210\"\n            ....\n            ....\n        },\n        {\n            \"anonymous\": true,\n            \"app_id\": \"fyq3wodw\",\n            \"created_at\": 1503488750,\n            \"custom_attributes\": {},\n            \"do_not_track\": null,\n            \"email\": \"test@test.com\",\n            \"has_hard_bounced\": false,\n            \"id\": \"5123d6aeeda850883ed8ba7c2\",\n            \"last_request_at\": 1503488749,\n            \"phone\": \"00353876543210\"\n            ....\n            ....\n        },\n        {\n            \"anonymous\": false,\n            \"app_id\": \"fyq3wodw\",\n            \"created_at\": 1494940172,\n            \"custom_attributes\": {},\n            \"do_not_track\": null,\n            \"email\": \"test@test.com\",\n            \"has_hard_bounced\": false,\n            \"id\": \"789afa0cb781d52fd3044ecc\",\n            \"last_request_at\": 1494940211,\n\t\t\t\t\t\t\"phone\": \"00353876543210\"\n            ....\n            ....\n        }\n    ]\n}\n\n\nYou can fetch Users with a given phone number by querying the users resource with a phone parameter. .... }, { \"anonymous\": true, \"app_id\": \"fyq3wodw\", \"created_at\": 1503488750, \"custom_attributes\": {}, \"do_not_track\": null, \"email\": \"test@test.com\", \"has_hard_bounced\": false, \"id\": \"5123d6aeeda850883ed8ba7c2\", \"last_request_at\": 1503488749, .... .... }, { \"anonymous\": false, \"app_id\": \"fyq3wodw\", \"created_at\": 1494940172, \"custom_attributes\": {}, \"do_not_track\": null, \"email\": \"test@test.com\", \"has_hard_bounced\": false, \"id\": \"789afa0cb781d52fd3044ecc\", \"last_request_at\": 1494940211, .... .... } ] }\n\n\nYou can fetch Users with a given email by querying the users resource with an `email` parameter.\n\n## List Users by Phone\n\n## List by Phone\n\n```curl\n$ curl https://api.intercom.io/users?phone=00353876543210 \\\n-H 'Authorization: Bearer YOUR_ACCESS_TOKEN' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\n\n{\n    \"limited\": false,\n    \"pages\": {\n        \"next\": null,\n        \"page\": 1,\n        \"per_page\": 50,\n        \"total_pages\": 1,\n        \"type\": \"pages\"\n    },\n    \"total_count\": 3,\n    \"type\": \"user.list\",\n    \"users\": [\n        {\n            \"anonymous\": false,\n            \"app_id\": \"fyq3wodw\",\n            \"created_at\": 1506339558,\n            \"custom_attributes\": {},\n            \"do_not_track\": null,\n            \"email\": \"test@test.com\",\n            \"has_hard_bounced\": false,\n            \"id\": \"45c8eae6fac10f5584e7508e\",\n            \"last_request_at\": 1529737920,\n            \"last_seen_ip\": \"78.144.182.179\",\n            \"phone\": \"00353876543210\"\n            ....\n            ....\n        },\n        {\n            \"anonymous\": true,\n            \"app_id\": \"fyq3wodw\",\n            \"created_at\": 1503488750,\n            \"custom_attributes\": {},\n            \"do_not_track\": null,\n            \"email\": \"test@test.com\",\n            \"has_hard_bounced\": false,\n            \"id\": \"5123d6aeeda850883ed8ba7c2\",\n            \"last_request_at\": 1503488749,\n            \"phone\": \"00353876543210\"\n            ....\n            ....\n        },\n        {\n            \"anonymous\": false,\n            \"app_id\": \"fyq3wodw\",\n            \"created_at\": 1494940172,\n            \"custom_attributes\": {},\n            \"do_not_track\": null,\n            \"email\": \"test@test.com\",\n            \"has_hard_bounced\": false,\n            \"id\": \"789afa0cb781d52fd3044ecc\",\n            \"last_request_at\": 1494940211,\n\t\t\t\t\t\t\"phone\": \"00353876543210\"\n            ....\n            ....\n        }\n    ]\n}\n\n\nYou can fetch Users with a given phone number by querying the users resource with a phone parameter."
  },
  {
    "title": "Image",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/presentationcomponents/image/",
    "html": "Image\n\nAn image component is used to display an image.\n\n🚧 HTTPS Images\n\nIf your request URLs (or website URLs) are over HTTPS, you will need to ensure that images are loaded over HTTPS likewise. Otherwise, they will not work.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\timage\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nurl\tA valid HTTPS URL\tYes\tThe URL where the image is located.\nalign\tleft``center``right``full_width\tNo\tAligns the image inside the component.Default is left.\nwidth\tAny integer\tYes\tThe exact width of the image in pixels.\nheight\tAny integer\tYes\tThe exact height of the image in pixels.\nrounded\ttrue``false\tNo\tRounds the corners of the image. Default is false.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\naction\tAction Object\tNo\tThis can be a URL Action only.\nPreview"
  },
  {
    "title": "Data-Table",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/presentationcomponents/data-table/",
    "html": "Data-Table\n\nA data-table component is used for rendering a table of key-value pairs. For Messenger, text will wrap around on multiple lines. For Inbox and Frame (ie. Configure) views, we will truncate and use tooltips on hover if the text overflows.\n\nData-Table Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdata-table\tYes\tThe type of component you are rendering.\nitems\tArray (See Below)\tYes\tThe items that will be rendered in the data-table.\nField-Value Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tfield-value\tYes\tThe type of component you are rendering.\nfield\tAny string\tYes\tThe text of the key in your key-value pair.\nvalue\tAny string\tYes\tThe text of the value in your key-value pair.\nPreview"
  },
  {
    "title": "Divider",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/presentationcomponents/divider/",
    "html": "Divider\n\nA divider component is used to separate components with a line.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdivider\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "Spacer",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/presentationcomponents/spacer/",
    "html": "Spacer\n\nA spacer component is used to create empty space between components.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tspacer\t\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nsize\txs``s``m``l``xl\tNo\tThe amount of space between components.Default is s.\nPreview"
  },
  {
    "title": "Tag or Untag Users, Companies & Leads (Contacts)",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/tags/tag-or-untag-users-companies-leads-contacts/",
    "html": "Tag or Untag Users, Companies & Leads (Contacts)\nExample Tag Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/tags \\\\\\n-XPOST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d'\\n{\\n  \\\"name\\\": \\\"Independent\\\",\\n  \\\"users\\\": [\\n    {\\n      \\\"id\\\" : \\\"53427b7ecce5722303000003\\\"\\n    },\\n    {\\n      \\\"user_id\\\" : \\\"22\\\"\\n    },\\n    {\\n      \\\"email\\\" : \\\"a@b.com\\\"\\n    }\\n  ]\\n}\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"tag\\\",\\n  \\\"name\\\": \\\"Independent\\\",\\n  \\\"id\\\": \\\"17513\\\"\\n}\n\n\nYou can also tag users, companies, or leads (contacts) using a POST to https://api.intercom.io/tags. This lets you assign a tag to multiple users or companies at once. If the tag does not already exist it will be created for you.\n\nUsers can be tagged by supplying a users array. The array contains objects identifying users by their id, email or user_id fields.\n\nCompanies can be tagged by sending a companies array. The array contains objects identifying companies by their idor company_id fields.\n\nContacts/Leads can be tagged by supplying a users array. The array contains objects identifying leads by their id fields.\n\nCompanies and user tag directives cannot be mixed in the same request - a request will not process both company and user arrays.\n\nWe recommend tagging no more than 50 users at a time as larger amounts could result in a timeout.\n\nExample Untag Request\n\n$ curl https://api.intercom.io/tags \\\n-XPOST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d'\n{\n  \"name\": \"Independent\",\n  \"users\": [\n    {\n      \"id\" : \"53427b7ecce5722303000003\",\n      \"untag\": true\n    },\n    {\n      \"user_id\" : \"22\"\n    }\n  ]\n}\n\nintercom.tags.untag(name: 'blue', users: [{ id: \"42ea2f1b93891f6a99000427\" }])\n\n<?php\n$intercom->tagUsers(array(\n  \"name\" => \"Independent\",\n  \"users\" => array(\n    array(\"user_id\" => \"22\", \"untag\" => true)\n  )\n));\n?>\n\nUser user = new User()\n  .setEmail(\"simon@serenity.io\")\n  .untag();\nList<User> users = Lists.newArrayList(user);\nTag.tag(tag, new UserCollection(users));\n\nHTTP/1.1 200 Ok\n\n{\n  \"type\": \"tag\",\n  \"name\": \"Follow Up\",\n  \"id\": \"17513\"\n}\n\n\nTo untag a company or user, each user or company object sent in the tagging request can be submitted with an untag field whose value is set to true.\n\nObjects submitted with an untag field can be mixed with other objects being tagged. This allows tag and untag operations to be performed in a single request.\n\nThe default behaviour if untag is not suppled is to tag the object. Setting the untagvalue to false is the same as requesting the object be tagged.\n\nAttributes\nAttribute\tRequired\tDescription\nname\trequired\tThe name of the tag, which will be created if not found.\nusers\toptional\tAn array of objects identifying users.\ncompanies\toptional\tAn array of objects identifying companies.\nReturns\n\nThe tag object containing its name and id fields."
  },
  {
    "title": "URL Action",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/actioncomponents/url-action/",
    "html": "URL Action\n\nA URL action opens a given link in a new browser tab.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\turl\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which will open in a new tab.\nExample Object\naction: {\n  \"type\": \"url\",\n  \"url\":  \"https://www.example.com\"\n}\n"
  },
  {
    "title": "View a Team",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/teams/view-a-team/",
    "html": "View a Team\nRetrieve a single team\n$ curl https://api.intercom.io/teams/2744328 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"admin_ids\": [\n        646303,\n        814860\n    ],\n    \"id\": \"2744328\",\n    \"name\": \"the_a_team\",\n    \"type\": \"team\"\n}\n\n\nEach admin object has its own URL, where the {id} is the value of the teams id field:\n\nhttps://api.intercom.io/teams/{id}"
  },
  {
    "title": "View a Team",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/teams/view-a-team/",
    "html": "View a Team\nRetrieve a single team\n$ curl https://api.intercom.io/teams/2744328 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"admin_ids\": [\n        646303,\n        814860\n    ],\n    \"id\": \"2744328\",\n    \"name\": \"the_a_team\",\n    \"type\": \"team\"\n}\n\n\nEach admin object has its own URL, where the {id} is the value of the teams id field:\n\nhttps://api.intercom.io/teams/{id}"
  },
  {
    "title": "Sheets Action",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/actioncomponents/sheets-action/",
    "html": "Sheets Action\n\nA sheet action opens the link you give within the Messenger as an embedded iframe.\n\nMore on how Sheets work is in our Canvas Kit documentation.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsheet\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which hosts your sheet.\nExample Object\naction: {\n  type: \"sheet\",\n  url:  \"http://example.com\"\n}\n"
  },
  {
    "title": "Webhook Topics",
    "url": "https://developers.intercom.com/docs/references/2.2/webhooks/webhook-models/",
    "html": "Webhook Topics\n\nThe following topics are available and you can be notified when an action relating to that topic occurs. You just need to tell us where to send the notification. The 'Item Type' column shows the API type that will be sent as the data of the notification.\n\nTopic\tItem Type\tDescription\nconversation.user.created\tConversation\tSubscribe to user/lead initiated conversations\nconversation.user.replied\tConversation\tSubscribe to contact user/lead conversation replies\nconversation.admin.replied\tConversation\tSubscribe to admin conversation replies\nconversation.admin.single.created\tConversation\tSubscribe to admin initiated 1:1 conversations\nconversation.admin.assigned\tConversation\tSubscribe to admin conversation assignments\nconversation.admin.noted\tConversation\tSubscribe to admin conversation notes\nconversation.admin.closed\tConversation\tSubscribe to admin conversation closes\nconversation.admin.opened\tConversation\tSubscribe to admin conversation opens\nconversation.admin.snoozed\tConversation\tSubscribe to admin conversation snoozes\nconversation.admin.unsnoozed\tConversation\tSubscribe to admin conversation unsnoozes\nconversation_part.tag.created\tConversation\tSubscribe to conversation parts being tagged\nconversation_part.redacted\tConversation\tSubscribe to conversation parts being deleted\nconversation.rating.added\tConversation\tSubscribe to conversations getting a rating\nconversation.deleted\tConversation\tSubscribe to conversation deleted\nuser.created\tUser\tSubscribe to user creations\nuser.deleted\tUser\tSubscribe to user deletions\nuser.unsubscribed\tUser\tSubscribe to user unsubscriptions from email\nuser.email.updated\tUser\tSubscribe to user email address being updated\nuser.tag.created\tUserTag\tSubscribe to users being tagged\nuser.tag.deleted\tUserTag\tSubscribe to users being untagged\ncontact.created\tLead\tSubscribe to lead creations\ncontact.signed_up\tLead\tSubscribe to leads converting to users\ncontact.added_email\tLead\tSubscribe to emails being added to leads\ncontact.tag.created\tContactTag\tSubscribe to leads being tagged\ncontact.tag.deleted\tContactTag\tSubscribe to leads being untagged\nvisitor.signed_up\tVisitor\tSubscribe to visitors converting to users\ncompany.created\tCompany\tSubscribe to company creations\nevent.created\tEvent\tSubscribe to events\nping\tPing\tSent when a post to the subscription's ping resource is received, or periodically by Intercom. Ping is always subscribed to.\nWebhooks and Permissions\n\nEach webhook topic is associated with one or more permission scopes. If you would like to setup a webhook for a particular topic then you will need to select the appropriate permission scope to be able to request a notification for that topic.\n\n🚧 Multiple permissions\n\nSome topic are associated with multiple permissions. In these cases you don't need to select all of these permissions to subscribe to that topic.\n\nWebhook topic\tWorks with permissions\tGroups\nconversation_part.tag.created\tRead conversations\tConversation data\nconversation_part.redacted\tRead conversations\tConversation data\nconversation.rating.added\tRead conversations\tConversation data\nconversation.admin.assigned\tRead conversations\tConversation data\nconversation.admin.closed\tRead conversations\tConversation data\nconversation.admin.noted\tRead conversations\tConversation data\nconversation.admin.opened\tRead conversations\tConversation data\nconversation.admin.replied\tRead conversations\tConversation data\nconversation.admin.single. created\tRead conversations\tConversation data\nconversation.admin.snoozed\tRead conversations\tConversation data\nconversation.admin.unsnoozed\tRead conversations\tConversation data\nconversation.user.created\tRead conversations\tConversation data\nconversation.user.replied\tRead conversations\tConversation data\nconversation.deleted\tRead conversations\tConversation data\ncontact.added_email\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.email.updated\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.unsubscribed\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nvisitor.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nevent.created\tRead events\tCustomer event data\ncompany.created\tRead users and companies, Read one user and one company\tCompany data\nWebhook Notification Object\n\nA notification object contains the following fields:\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'notification_event'\nid\tstring\tThe Intercom defined id representing the notification.\nself\tstring\tThe Intercom defined URL for the subscription. Optional.\ncreated_at\ttimestamp\tThe timestamp the notification was created.\ntopic\tstring\tCorresponds to a topic.\ndelivery_attempts\tnumber\tThe number of times this notification has been attempted.\nfirst_sent_at\ttimestamp\tThe first time the delivery was attempted.\ndata\tobject\tA container for the data associated with the notification.\ndata.item\tobject\tThe data associated with the notification, which will have a 'type' field.\n\nThe contents of data.item object will be defined according to its type field. In the example to the right, the type value of company indicates a company object.\n\n{\n  \"type\": \"notification_event\",\n  \"topic\": \"company.created\",\n  \"id\": \"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b3\",\n  \"app_id\" : \"a86dr8yl\",\n  \"created_at\": 1392731331,\n  \"delivery_attempts\": 1,\n  \"first_sent_at\": 1392731392,\n  \"data\": {\n    \"item\": {\n      \"type\": \"company\",\n      \"id\": \"531ee472cce572a6ec000006\",\n      \"name\": \"Blue Sun\",\n      \"company_id\": \"6\",\n      \"remote_created_at\": 1394531169,\n      \"created_at\": 1394533506,\n      \"updated_at\": 1396874658,\n      \"custom_attributes\": {\n      }\n    }\n  }\n}\n\nHandling Webhook Notifications\n\nWhen you setup a subscription you will receive notifications on your chosen topics. How you handle those notifications, i.e. the HTTP status code returned, will determine the subsequent state of that subscription.\n\nResponse Code\tDescription\tAction\n2xx\tSuccess\tThe webhook was successfully delivered.\n410\tGone\tWhen a 410 is received, we assume the resource is no longer available. We will disable the subscription and no more notifications will be sent.\n429\tToo many requests\tWhen a 429 is received, all notifications from that subscription will be throttled. Depending on the rate of delivery, this delay can be between 1 minute to 2 hours. If 429s continue and any notification is delayed for > 2 hours then we will drop that notification.\n4xx (excl. 429) 5xx\tClient or service errors\tWe will retry after 1 minute for all other errors. If the 2nd retry fails then we mark the notification delivery as failed.\n\n❗️ Timeout\n\nYou have 5 seconds to respond to a notification. If you don't send a response inside that time, the notification is treated as failed and will be retried only once after 1 minute.\n\nSigned Notifications\n\nEach webhook notification is signed by Intercom via an X-Hub-Signature header. We do this so that you can verify the notification came from Intercom by decoding the signature.\n\nThe value of this X-Hub-Signature header is computed by creating a signature using the body of the JSON request and your app's client_secret value, which you can find on the Basic Info page of your app.\n\nThe signature is the hexadecimal (40-byte) representation of a SHA-1 signature computed using the HMAC algorithm as defined in RFC2104.\n\nThe X-Hub-Signature header value starts with the string sha1= followed by the signature.\n\nPOST https://example.org/hooks\nUser-Agent: intercom-parrot-service-client/1.0\nX-Hub-Signature: sha1=21ff2e149e0fdcac6f947740f6177f6434bda921\nAccept: application/json\nContent-Type: application/json\n\n{\n  \"type\" : \"notification_event\",\n  \"id\" : \"notif_78c122d0-23ba-11e4-9464-79b01267cc2e\",\n  \"topic\" : \"user.created\",\n  \"app_id\" : \"a86dr8yl\",\n  \"data\" : {\n    \"type\" : \"notification_event_data\",\n    \"item\" : {\n      \"type\" : \"user\",\n      \"id\" : \"530370b477ad7120001d\",\n      \"user_id\" : \"25\",\n      \"name\" : \"Hoban Washburne\",\n      \"unsubscribed_from_emails\" : false,\n      \"custom_attributes\" : {}\n    }\n  }\n}\n\nContact Tag Model for Webhooks\n\nThe Contact Tag model is only returned for webhooks. It is not used with the Lead (i.e. contact) or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"contact_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"1287\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"contact\" : {\n      \"type\": \"contact\",\n      \"id\": \"1287ab1287fefe\",\n      \"user_id\": \"12\"\n  }\n}\n\n\nA contact tag is composed from the existing contact and tag JSON and is sent when contacts are tagged and untagged via the contact.tag.created and contact.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'contact_tag'.\ncreated_at\ttimestamp\tThe time the contact tag object was created.\ntag\tTag\tThe tag that was added or removed.\ncontact\tcontact\tThe contact that was tagged or untagged.\nUser Tag Model for Webhooks\n\nThe User Tag model is only returned for webhooks. It is not used with the User or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"user_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"17513\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"user\" : {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n      \"user_id\": \"25\"\n  }\n}\n\n\nA user tag is composed from the existing user and tag JSON and is sent when users are tagged and untagged via the user.tag.created and user.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user_tag'.\ncreated_at\ttimestamp\tThe time the user tag object was created.\ntag\tTag\tThe tag that was added or removed.\nuser\tUser\tThe user that was tagged or untagged."
  },
  {
    "title": "View a User",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/users/view-a-user/",
    "html": "View a User\nExample ID Request\n$ curl \\\n-s https://api.intercom.io/users/5714dd359a3fd47136000001 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"user\",\n    \"id\": \"5714dd359a3fd47136000001\",\n    \"user_id\": \"25\",\n    \"anonymous\": false,\n    \"email\": \"wash@serenity.io\",\n    \"phone\": \"555671243\",\n    \"name\": \"Hoban Washburne\",\n    \"pseudonym\": null,\n  ...\n}\n# NB: Full User objects are returned\n\nintercom.users.find(:id => \"5714dd359a3fd47136000001\")\n\n<?php\n\n$user = $intercom->users->getUser(\"596f35f744c4c5f0cd30c8ef\");\nprint_r($user->id);\n?>\n\nExample User ID Request\n$ curl \\\n-s https://api.intercom.io/users?user_id=25 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nintercom.users.find(:user_id => \"128\")\n\n<?php\n\n$user = $intercom->users->getUser(\"\", [\"user_id\" => \"111\"]);\nprint_r($user->id);\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"user_id\", \"1\");\nUser user = User.find(params);\n\nExample Email Request\n$ curl \\\n-s https://api.intercom.io/users?email=wash%40serenity.io \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nintercom.users.find(:email => \"bob@example.com\")\n\n<?php\n\n$user = $intercom->users->getUser(\"\", [\"email\" => \"plato@phil.com\"]);\nprint_r($user->id);\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"email\", \"malcolm@serenity.io\");\nUser user = User.find(params);\n\n\nEach user object has its own URL\n\nhttps://api.intercom.io/users/{id}\n\nWhere {id} is the value of the user's id field. This URL is the user's canonical address in the API.\n\nRequest Parameters\nParameter\tRequired\tDescription\nuser_id\tno\tThe user id you have defined for the user\nemail\tno\tThe email you have defined for the user\n\nA user can also be fetched using a user_id or email parameter in the url, whose values are the company's user_id or email fields -\n\nhttps://api.intercom.io/users?user_id={user_id}\nhttps://api.intercom.io/users?email={email}\n\nThe email parameter value should be url encoded when sending.\n\nReturns\n\nA user object.\n\nNote: When fetching users using an email or user_id parameter only the ones of type 'user' will be returned. However, it is possible to view a person of type 'contact' (lead) when viewing using their canonical address in the API, namely their id field."
  },
  {
    "title": "Event",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/responseobjects/event/",
    "html": "Event\nDescription\n\nThe event object enables Intercom to know more about the actions that took place in your app. Currently, you can only tell us when an app's flow has been completed.\n\nAttributes\nKey\tType\tDescription\ntype\tstring\tWhat action took place. The only value currently accepted is completed.\nExample Object\nevent: { \"type\": \"completed\" } // Optional. Recorded by Intercom.\n"
  },
  {
    "title": "Delete a Tag",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/tags/delete-a-tag/",
    "html": "Delete a Tag\nExample Delete Tag Request\n$ curl https://api.intercom.io/tags/17513 \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n# Not exposed in Ruby client\n\n<?php\n// Not exposed in PHP client\n?>\n\nTag.delete(tag);\n\n\nA tag can be deleted by sending a DELETE request to its URL. A tag's URL is defined using using the tag's id field to create a URL of the form, https://api.intercom.io/tags/{id}."
  },
  {
    "title": "View a Segment",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/segments/view-a-segment/",
    "html": "View a Segment\nExample Request\n$ curl https://api.intercom.io/segments/53203e244cba153d39000062 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"segment\",\n  \"id\": \"53203e244cba153d39000062\",\n  \"name\": \"New\",\n  \"created_at\": 1394621988,\n  \"updated_at\": 1394622004\n}\n\nintercom.segments.find(:id => '1234')\n\nSegment segment = Segment.find(\"1234\");\n\n\nEach segment has its own URL -\n\nhttps://api.intercom.io/segments/{id}\n\nWhere {id} is the value of the segment's id field. A GET request to a segment's URL will return the segment object.\n\nYou can also get a count for an individual user segment by adding the parameter include_count=true\n\n$ curl https://api.intercom.io/segments/58a707924f6651b07b94376c?include_count=true \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"segment\",\n    \"id\": \"58a707924f6651b07b94376c\",\n    \"name\": \"id=10\",\n    \"created_at\": 1487341458,\n    \"updated_at\": 1487341459,\n    \"person_type\": \"user\",\n    \"count\": 5\n}\n\nReturns\n\nA segment object."
  },
  {
    "title": "Context",
    "url": "https://developers.intercom.com/docs/references/1.1/canvas-kit/requestobjects/context/",
    "html": "Context\n\nThe context object describes where an action has taken place, and includes any relevant information you may need to customise what appears on the card.\n\nYou will receive a context object as part of a request from Intercom, but depending on the webhook and the location where it is triggered, not all of this context information is available.\n\nWebhooks can be hit from Messenger Web context, Messenger SDK context, Inbox context, or Messages context:\n\nKey\tType\tDescription\nlocation\tstring\tThis can be either 'conversation', 'home', or 'message', depending on where the action took place.\nlocale\tstring\tThe default end-user language of the Messenger. Use to localise Messenger App content.\nconversation_id\tinteger\tOnly present if the app was added to a conversation.\nmessenger_action_colour\tstring\tThe messengers action colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nmessenger_background_colour\tstring\tThe messengers background colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nreferrer\tstring\tThe current page URL of the end-user.\n{\n  conversation_id: 4294967297,\n  locale: 'en', \n  location: 'conversation',\n  messenger_action_color: '#333333',\n  messenger_background_color: '#333333',\n  referrer: 'https://intercom.com/'\n}\n\n{\n  locale: 'en', \n  location: 'home',\n  messenger_action_color: '#333333',\n  messenger_background_color: '#333333',\n  referrer: 'https://intercom.com/'\n}\n\n{\n  \"locale\": 'en',\n  \"location\": 'message',\n  \"messenger_action_color\": '#f06192',\n  \"messenger_background_color\": '#00acc1'\n}\n"
  },
  {
    "title": "Segments",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/segments/segments/",
    "html": "Segments\n\nA segment is a group of your users defined by rules that you set. Users are automatically added to the segment every time the user updates to match those rules. Segments are different to tags, in that users need to be added to tags manually and tag members are not automatically managed.\n\nThe API supports fetching the list of segments created in your App, however creating and managing segments must be done through Intercom. For more information about segmenting users, please see the product documentation."
  },
  {
    "title": "Content",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/responseobjects/content/",
    "html": "Content\nDescription\n\nThe content object is where you specify the UI of your app. You provide us with a set of components in a components array that we then render.\n\nThe content object should usually be returned within the canvas object. If you're responding to a Live Canvas request however, then you should only respond with the content object.\n\nAttributes\nKey\tType\tDescription\ncomponents\tarray\tThe list of components to be rendered. See the components further in this reference.\nExample Object\n{\n  content: {\n    components: [\n      {\n        \"type\": \"text\",\n        \"id\": \"component-1\",\n        \"text\": \"This is the first component\",\n        \"align\": \"center\",\n        \"style\": \"header\"\n      },\n      {\n        \"type\": \"button\",\n        \"id\": \"component-2\",\n        \"label\": \"This is the second component\",\n        \"action\": {\n          \"type\": \"submit\"\n        }\n      }\n    ]\n  }\n}\n"
  },
  {
    "title": "Teams",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/teams/teams/",
    "html": "Teams\n\nTeams are how you can view your teams within Intercom.\n\nThe API currently only supports viewing the teams that are already created. Creating and managing teams must be done through the Intercom App."
  },
  {
    "title": "Card Creation Options",
    "url": "https://developers.intercom.com/docs/references/1.1/canvas-kit/requestobjects/card-creation-options/",
    "html": "Card Creation Options\n\nThe card_creation_options object is a JSON hash where you can add key-value pairs.\n\nIt's sent to the initialize URL to specify any data that had been inputted by teammates during the configure flow. This happens once you respond with the results object at the end of the configure flow.\n\n{\n  \"card_creation_options\": {\n    \"name\": \"data one\",\n     ... //Can be more than one pair\n  }\n}\n\n{\n  card_creation_options: {\n    <set of key-value pairs>\n  },\n  app_id: \"<string id_code of the app using the card>\",\n  context: {<Context object>}\n}\n"
  },
  {
    "title": "Teams Model",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/teams/teams-model/",
    "html": "Teams Model\nExample Object\n{\\n    \\\"type\\\": \\\"team\\\",\\n    \\\"id\\\": \\\"814865\\\",\\n    \\\"name\\\": \\\"Example Team\\\",\\n    \\\"admin_ids\\\": [\\n        493881\\n    ]\\n}\n\nTeam Object\nAttribute\tType\tDescription\ntype\tstring\tValue is team.\nid\tstring\tThe id of the team\nname\tstring\tThe name of the team\nadmin_ids\tlist\tThe list of admin id's that are a part of the team"
  },
  {
    "title": "List Teams",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/teams/list-teams/",
    "html": "List Teams\nList Teams\n$ curl https://api.intercom.io/teams \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n{\n    \"teams\": [\n        {\n            \"admin_ids\": [\n                492881,\n                1195856\n            ],\n            \"id\": \"814865\",\n            \"name\": \"BA_App\",\n            \"type\": \"team\"\n        },\n        {\n            \"admin_ids\": [\n                646303,\n                814860\n            ],\n            \"id\": \"2744328\",\n            \"name\": \"the_a_team\",\n            \"type\": \"team\"\n        }\n    ],\n    \"type\": \"team.list\"\n}\n\n\nAn App's teams can be fetched by sending a GET request to https://api.intercom.io/teams.\n\nTeam List\nAttribute\tType\tDescription\ntype\tstring\tValue is 'team.list'\nteams\tarray\tA list of team objects\npages\tobject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch.\nRequest Parameters\n\nNone.\n\nReturns\n\nA list of team objects for the App. The result may also have a pages object if the response is paginated."
  },
  {
    "title": "Notes",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/notes/notes/",
    "html": "Notes\n\nNotes allow you to annotate and comment on your users.\n\nA note can be authored by an admin about a user, and the notes associated with a user can be listed."
  },
  {
    "title": "View a Note",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/notes/view-a-note/",
    "html": "View a Note\nExample Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/notes/2 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"note\\\",\\n  \\\"id\\\": \\\"2\\\",\\n  \\\"created_at\\\": 1389913951,\\n  \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n  \\\"user\\\": {\\n      \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\",\\n      \\\"type\\\": \\\"user\\\"\\n    },\\n  \\\"author\\\": {\\n    \\\"type\\\": \\\"admin\\\",\\n    \\\"id\\\": \\\"21\\\",\\n    \\\"name\\\": \\\"Jayne Cobb\\\",\\n    \\\"email\\\": \\\"jayne@serenity.io\\\",\\n    \\\"avatar\\\" : {\\n       \\\"type\\\":\\\"avatar\\\",\\n      \\\"image_url\\\": \\\"http://example.org/128Jayne.jpg\\\"\\n    },\\n    \\\"companies\\\": []\\n  }\\n}\n\n\nEach note has its own URL -\n\nhttps://api.intercom.io/notes/{id}\n\nWhere {id} is the value of the note's id field. A GET request to a note's URL will return the note object.\n\nReturns\n\nA note object."
  },
  {
    "title": "Tag or Untag Users, Companies & Leads (Contacts)",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/tags/tag-or-untag-users-companies-leads-contacts/",
    "html": "Tag or Untag Users, Companies & Leads (Contacts)\nExample Tag Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/tags \\\\\\n-XPOST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d'\\n{\\n  \\\"name\\\": \\\"Independent\\\",\\n  \\\"users\\\": [\\n    {\\n      \\\"id\\\" : \\\"53427b7ecce5722303000003\\\"\\n    },\\n    {\\n      \\\"user_id\\\" : \\\"22\\\"\\n    },\\n    {\\n      \\\"email\\\" : \\\"a@b.com\\\"\\n    }\\n  ]\\n}\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"tag\\\",\\n  \\\"name\\\": \\\"Independent\\\",\\n  \\\"id\\\": \\\"17513\\\"\\n}\n\n\nYou can also tag users, companies, or leads (contacts) using a POST to https://api.intercom.io/tags. This lets you assign a tag to multiple users or companies at once. If the tag does not already exist it will be created for you.\n\nUsers can be tagged by supplying a users array. The array contains objects identifying users by their id, email or user_id fields.\n\nCompanies can be tagged by sending a companies array. The array contains objects identifying companies by their idor company_id fields.\n\nContacts/Leads can be tagged by supplying a users array. The array contains objects identifying leads by their id fields.\n\nCompanies and user tag directives cannot be mixed in the same request - a request will not process both company and user arrays.\n\nWe recommend tagging no more than 50 users at a time as larger amounts could result in a timeout.\n\nExample Untag Request\n\n$ curl https://api.intercom.io/tags \\\n-XPOST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d'\n{\n  \"name\": \"Independent\",\n  \"users\": [\n    {\n      \"id\" : \"53427b7ecce5722303000003\",\n      \"untag\": true\n    },\n    {\n      \"user_id\" : \"22\"\n    }\n  ]\n}\n\nintercom.tags.untag(name: 'blue', users: [{ id: \"42ea2f1b93891f6a99000427\" }])\n\n<?php\n$intercom->tagUsers(array(\n  \"name\" => \"Independent\",\n  \"users\" => array(\n    array(\"user_id\" => \"22\", \"untag\" => true)\n  )\n));\n?>\n\nUser user = new User()\n  .setEmail(\"simon@serenity.io\")\n  .untag();\nList<User> users = Lists.newArrayList(user);\nTag.tag(tag, new UserCollection(users));\n\nHTTP/1.1 200 Ok\n\n{\n  \"type\": \"tag\",\n  \"name\": \"Follow Up\",\n  \"id\": \"17513\"\n}\n\n\nTo untag a company or user, each user or company object sent in the tagging request can be submitted with an untag field whose value is set to true.\n\nObjects submitted with an untag field can be mixed with other objects being tagged. This allows tag and untag operations to be performed in a single request.\n\nThe default behaviour if untag is not suppled is to tag the object. Setting the untagvalue to false is the same as requesting the object be tagged.\n\nAttributes\nAttribute\tRequired\tDescription\nname\trequired\tThe name of the tag, which will be created if not found.\nusers\toptional\tAn array of objects identifying users.\ncompanies\toptional\tAn array of objects identifying companies.\nReturns\n\nThe tag object containing its name and id fields."
  },
  {
    "title": "View a Segment",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/segments/view-a-segment/",
    "html": "View a Segment\nExample Request\n$ curl https://api.intercom.io/segments/53203e244cba153d39000062 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"segment\",\n  \"id\": \"53203e244cba153d39000062\",\n  \"name\": \"New\",\n  \"created_at\": 1394621988,\n  \"updated_at\": 1394622004\n}\n\nintercom.segments.find(:id => '1234')\n\nSegment segment = Segment.find(\"1234\");\n\n\nEach segment has its own URL -\n\nhttps://api.intercom.io/segments/{id}\n\nWhere {id} is the value of the segment's id field. A GET request to a segment's URL will return the segment object.\n\nYou can also get a count for an individual user segment by adding the parameter include_count=true\n\n$ curl https://api.intercom.io/segments/58a707924f6651b07b94376c?include_count=true \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"segment\",\n    \"id\": \"58a707924f6651b07b94376c\",\n    \"name\": \"id=10\",\n    \"created_at\": 1487341458,\n    \"updated_at\": 1487341459,\n    \"person_type\": \"user\",\n    \"count\": 5\n}\n\nReturns\n\nA segment object."
  },
  {
    "title": "List Segments",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/segments/list-segments/",
    "html": "List Segments\nExample Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/segments\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"segment.list\\\",\\n  \\\"segments\\\": [\\n    {\\n      \\\"created_at\\\": 1393613031,\\n      \\\"id\\\": \\\"5310d8e7598c9a0b24000002\\\",\\n      \\\"name\\\": \\\"Active\\\",\\n      \\\"type\\\": \\\"segment\\\",\\n      \\\"updated_at\\\": 1393613031\\n    },\\n    {\\n      \\\"created_at\\\": 1393613030,\\n      \\\"id\\\": \\\"5310d8e6598c9a0b24000001\\\",\\n      \\\"name\\\": \\\"New\\\",\\n      \\\"type\\\": \\\"segment\\\",\\n      \\\"updated_at\\\": 1393613030\\n    },\\n    {\\n      \\\"created_at\\\": 1393613031,\\n      \\\"id\\\": \\\"5310d8e7598c9a0b24000003\\\",\\n      \\\"name\\\": \\\"Slipping Away\\\",\\n      \\\"type\\\": \\\"segment\\\",\\n      \\\"updated_at\\\": 1393613031\\n    }\\n  ]\\n}\n\n\nYou can list the user segments for your App by sending a GET request to https://api.intercom.io/segments. Company segments can be listed by sending a GET request to https://api.intercom.io/segments?type=company.\n\nYou can also include counts in your segment model in the response if you add the parameter include_count=true in the request. Note that this is only relevant for user segments.\n\n$ curl 'https://api.intercom.io/segments?include_count=true'\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"segment.list\",\n    \"segments\": [\n        {\n            \"type\": \"segment\",\n            \"id\": \"56cc69cd8618d37b4500000c\",\n            \"name\": \"Active\",\n            \"created_at\": 1456237005,\n            \"updated_at\": 1487064099,\n            \"person_type\": \"user\",\n            \"count\": 3\n        },\n        {\n            \"type\": \"segment\",\n            \"id\": \"56cc69cc8618d37b4500000b\",\n            \"name\": \"New\",\n            \"created_at\": 1456237004,\n            \"updated_at\": 1473241975,\n            \"person_type\": \"user\",\n            \"count\": 0\n        },\n        {\n            \"type\": \"segment\",\n            \"id\": \"56cc69cd8618d37b4500000d\",\n            \"name\": \"Slipping Away\",\n            \"created_at\": 1456237005,\n            \"updated_at\": 1473241975,\n            \"person_type\": \"user\",\n            \"count\": 0\n        },\n        {\n            \"type\": \"segment\",\n            \"id\": \"56e6f1f2b7ebc2061200000d\",\n            \"name\": \"test3WebSession\",\n            \"created_at\": 1457975794,\n            \"updated_at\": 1473241976,\n            \"person_type\": \"user\",\n            \"count\": 1\n        }\n    ]\n}\n\nSegment List\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'segment.list'\nsegments\tarray\tA list of segment objects\npages\tobject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch.\nReturns\n\nA list of segment objects for the App. The result may also have a pages object if the response is paginated."
  },
  {
    "title": "List Notes for a User",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/notes/list-notes-for-a-user/",
    "html": "List Notes for a User\nExample User ID Request\n$ curl https://api.intercom.io/notes?user_id=25 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nintercom.notes.find_all(:user_id => '123').each {|note| puts note.body}\n\n<?php\n$notes = $intercom->notes->getNotes([\"user_id\" => \"20413\"]);\nforeach ($notes->notes as $note) {\n    print \"id:\".$note->id.\" body:\".$note->body.\"\\n\";\n}\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"user_id\", \"123\");\nNoteCollection notes = Note.list(params);\nwhile (notes.hasNext()) {\n    out.println(notes.next().getBody());\n}\n\nExample Email Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/notes?email=jayne%40serenity.io \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"note.list\\\",\\n  \\\"notes\\\": [\\n    {\\n      \\\"type\\\": \\\"note\\\",\\n      \\\"id\\\": \\\"1\\\",\\n      \\\"created_at\\\": 1389913941,\\n      \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n      \\\"author\\\": {\\n        \\\"type\\\": \\\"admin\\\",\\n        \\\"id\\\": \\\"21\\\",\\n        \\\"name\\\": \\\"Jayne Cobb\\\",\\n        \\\"email\\\": \\\"jayne@serenity.io\\\",\\n        \\\"companies\\\": []\\n      },\\n      \\\"user\\\": {\\n        \\\"type\\\": \\\"user\\\",\\n        \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\"\\n      }\\n    },\\n    {\\n      \\\"type\\\": \\\"note\\\",\\n      \\\"id\\\": \\\"2\\\",\\n      \\\"created_at\\\": 1389913951,\\n      \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n      \\\"user\\\": {\\n          \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\",\\n          \\\"type\\\": \\\"user\\\"\\n        }\\n    }\\n  ],\\n  \\\"pages\\\": {}\\n}\n\nExample ID Request\n$ curl \\\nhttps://api.intercom.io/notes?id=5310d8e8598c9a0b24000005 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n# Not exposed in Ruby client\n\n<?php\n$notes = $intercom->notes->getNotes([\"id\" => \"5965efd9aad5c02fc4750ee6\"]);\nforeach ($notes->notes as $note) {\n    print \"id:\".$note->id.\" body:\".$note->body.\"\\n\";\n}\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"id\", \"5310d8e8598c9a0b24000005\");\nnotes = Note.list(params);\nwhile (notes.hasNext()) {\n    out.println(notes.next().getBody());\n}\n\n\nA user's notes can be fetched by using a GET request to https://api.intercom.io/notes with an Intercom user id or user_id or email query parameter.\n\nThe value of the email parameter should be url encoded before sending.\n\nParameters\nParameter\tRequired\tDescription\nuser_id\tone of\tThe user id you have defined for the user\nemail\tone of\tThe email you have defined for the user\nid\tone of\tThe Intercom defined id representing the user\nReturns\n\nA list of note objects for that User.\n\nNote List Object\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'note.list'\nnotes\tarray\tA list of note objects"
  },
  {
    "title": "Tags",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/tags/tags/",
    "html": "Tags\n\nA tag allows you to label your users and companies and list them using that tag.\n\nThis section describes how tags can be created, updated and deleted. It also describes how users and companies can be tagged or untagged individually or in bulk.\n\nHow to query using a tag is described in the respective sections for users and companies - see \"List by Tag, Segment, Company\" for Users, and \"List by Tag or Segment\" for Companies."
  },
  {
    "title": "Segments",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/segments/segments/",
    "html": "Segments\n\nA segment is a group of your users defined by rules that you set. Users are automatically added to the segment every time the user updates to match those rules. Segments are different to tags, in that users need to be added to tags manually and tag members are not automatically managed.\n\nThe API supports fetching the list of segments created in your App, however creating and managing segments must be done through Intercom. For more information about segmenting users, please see the product documentation."
  },
  {
    "title": "List Tags for an App",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/tags/list-tags-for-an-app/",
    "html": "List Tags for an App\nExample List Tag Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/tags \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\n{\\n  \\\"type\\\": \\\"tag.list\\\",\\n  \\\"tags\\\": [\\n    {\\n      \\\"type\\\": \\\"tag\\\",\\n      \\\"name\\\": \\\"Beta User\\\",\\n      \\\"id\\\": 1\\n    },\\n    {\\n      \\\"type\\\": \\\"tag\\\",\\n      \\\"name\\\": \\\"Amazing User\\\",\\n      \\\"id\\\": 2\\n    },\\n    {\\n      \\\"type\\\": \\\"tag\\\",\\n      \\\"name\\\": \\\"Epic User\\\",\\n      \\\"id\\\": 3\\n    }\\n  ]\\n}\n\n\nYou can fetch the tags for an App by sending a GET request to https://api.intercom.io/tags.\n\nParameters\n\nNone.\n\nReturns\n\nA list of tag objects for the App.\n\nTag List\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'tag.list'\ntags\tarray\tA list of tag objects"
  },
  {
    "title": "List Segments",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/segments/list-segments/",
    "html": "List Segments\nExample Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/segments\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"segment.list\\\",\\n  \\\"segments\\\": [\\n    {\\n      \\\"created_at\\\": 1393613031,\\n      \\\"id\\\": \\\"5310d8e7598c9a0b24000002\\\",\\n      \\\"name\\\": \\\"Active\\\",\\n      \\\"type\\\": \\\"segment\\\",\\n      \\\"updated_at\\\": 1393613031\\n    },\\n    {\\n      \\\"created_at\\\": 1393613030,\\n      \\\"id\\\": \\\"5310d8e6598c9a0b24000001\\\",\\n      \\\"name\\\": \\\"New\\\",\\n      \\\"type\\\": \\\"segment\\\",\\n      \\\"updated_at\\\": 1393613030\\n    },\\n    {\\n      \\\"created_at\\\": 1393613031,\\n      \\\"id\\\": \\\"5310d8e7598c9a0b24000003\\\",\\n      \\\"name\\\": \\\"Slipping Away\\\",\\n      \\\"type\\\": \\\"segment\\\",\\n      \\\"updated_at\\\": 1393613031\\n    }\\n  ]\\n}\n\n\nYou can list the user segments for your App by sending a GET request to https://api.intercom.io/segments. Company segments can be listed by sending a GET request to https://api.intercom.io/segments?type=company.\n\nYou can also include counts in your segment model in the response if you add the parameter include_count=true in the request. Note that this is only relevant for user segments.\n\n$ curl 'https://api.intercom.io/segments?include_count=true'\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"segment.list\",\n    \"segments\": [\n        {\n            \"type\": \"segment\",\n            \"id\": \"56cc69cd8618d37b4500000c\",\n            \"name\": \"Active\",\n            \"created_at\": 1456237005,\n            \"updated_at\": 1487064099,\n            \"person_type\": \"user\",\n            \"count\": 3\n        },\n        {\n            \"type\": \"segment\",\n            \"id\": \"56cc69cc8618d37b4500000b\",\n            \"name\": \"New\",\n            \"created_at\": 1456237004,\n            \"updated_at\": 1473241975,\n            \"person_type\": \"user\",\n            \"count\": 0\n        },\n        {\n            \"type\": \"segment\",\n            \"id\": \"56cc69cd8618d37b4500000d\",\n            \"name\": \"Slipping Away\",\n            \"created_at\": 1456237005,\n            \"updated_at\": 1473241975,\n            \"person_type\": \"user\",\n            \"count\": 0\n        },\n        {\n            \"type\": \"segment\",\n            \"id\": \"56e6f1f2b7ebc2061200000d\",\n            \"name\": \"test3WebSession\",\n            \"created_at\": 1457975794,\n            \"updated_at\": 1473241976,\n            \"person_type\": \"user\",\n            \"count\": 1\n        }\n    ]\n}\n\nSegment List\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'segment.list'\nsegments\tarray\tA list of segment objects\npages\tobject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch.\nReturns\n\nA list of segment objects for the App. The result may also have a pages object if the response is paginated."
  },
  {
    "title": "Tags",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/tags/tags/",
    "html": "Tags\n\nA tag allows you to label your users and companies and list them using that tag.\n\nThis section describes how tags can be created, updated and deleted. It also describes how users and companies can be tagged or untagged individually or in bulk.\n\nHow to query using a tag is described in the respective sections for users and companies - see \"List by Tag, Segment, Company\" for Users, and \"List by Tag or Segment\" for Companies."
  },
  {
    "title": "List Tags for an App",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/tags/list-tags-for-an-app/",
    "html": "List Tags for an App\nExample List Tag Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/tags \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\n{\\n  \\\"type\\\": \\\"tag.list\\\",\\n  \\\"tags\\\": [\\n    {\\n      \\\"type\\\": \\\"tag\\\",\\n      \\\"name\\\": \\\"Beta User\\\",\\n      \\\"id\\\": 1\\n    },\\n    {\\n      \\\"type\\\": \\\"tag\\\",\\n      \\\"name\\\": \\\"Amazing User\\\",\\n      \\\"id\\\": 2\\n    },\\n    {\\n      \\\"type\\\": \\\"tag\\\",\\n      \\\"name\\\": \\\"Epic User\\\",\\n      \\\"id\\\": 3\\n    }\\n  ]\\n}\n\n\nYou can fetch the tags for an App by sending a GET request to https://api.intercom.io/tags.\n\nParameters\n\nNone.\n\nReturns\n\nA list of tag objects for the App.\n\nTag List\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'tag.list'\ntags\tarray\tA list of tag objects"
  },
  {
    "title": "Create and Update Tags",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/tags/create-and-update-tags/",
    "html": "Create and Update Tags\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/tags \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d'\\n{\\n  \\\"name\\\": \\\"Independent\\\"\\n}'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"tag\\\",\\n  \\\"name\\\": \\\"Independent\\\",\\n  \\\"id\\\": \\\"17513\\\"\\n}\n\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/tags \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d'\\n{\\n  \\\"id\\\": \\\"17513\\\",\\n  \\\"name\\\": \\\"Independent\\\"\\n}'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"tag\\\",\\n  \\\"name\\\": \\\"Independent\\\",\\n  \\\"id\\\": \\\"17513\\\"\\n}\n\n\nYou can create a new tag by submitting a POST to https://api.intercom.io/tags along with a name for the tag. The tag name may contain whitespace and punctuation.\n\nIf the same tag name is sent multiple times, only one tag will be created for that name - this lets you avoid checking if a tag exists first.\n\nTag names are case insensitive - 'MyTag' and 'mytag' will result in a single tag being created.\n\nA tag's name can also be updated by posting a tag to https://api.intercom.io/tags. The submitted tag object will contain the id of the tag to update and a new name for the tag. A successful request will update the name value for that tag and return the updated tag in the response.\n\nAttributes\nAttribute\tRequired\tDescription\nname\tYes\tThe name of the tag, which will be created if not found, or the new name for the tag if this is an update request.\nid\tYes for update\tThe id of tag to updates.\nReturns\n\nThe newly created or updated tag object containing its name and id fields."
  },
  {
    "title": "Convert a Visitor to a User",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/visitors/convert-a-visitor-to-a-user/",
    "html": "Convert a Visitor to a User\n\nExample User Convert Request\n\ncurlcurl\n$ curl \\\\\\nhttps://api.intercom.io/visitors/convert \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"visitor\\\": {\\n    \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  },\\n  \\\"user\\\": {\\n    \\\"email\\\": \\\"winstonsmith@truth.org\\\"\\n  },\\n  \\\"type\\\": \\\"user\\\"\\n}'\\n\n\n# NB: Full User objects are returned\\n{\\n  \\\"type\\\": \\\"lead\\\",\\n  \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n}\n\n\nVisitors can also be converted to Users. This is done by passing both Visitor and User identifiers and a type attribute set to 'user'. If the User exists, then the Visitor will be merged into it, the Visitor deleted and the User returned. If the User does not exist, the Visitor will be converted to a User, with the User identifiers replacing it's Visitor identifiers.\n\nIdentifiers (id, user_id, email) from Visitors are never added onto Users with a merge.\n\nA Visitor email, but not user_id is retained when converting a Visitor to a new User."
  },
  {
    "title": "Create and Update Tags",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/tags/create-and-update-tags/",
    "html": "Create and Update Tags\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/tags \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d'\\n{\\n  \\\"name\\\": \\\"Independent\\\"\\n}'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"tag\\\",\\n  \\\"name\\\": \\\"Independent\\\",\\n  \\\"id\\\": \\\"17513\\\"\\n}\n\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/tags \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d'\\n{\\n  \\\"id\\\": \\\"17513\\\",\\n  \\\"name\\\": \\\"Independent\\\"\\n}'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"tag\\\",\\n  \\\"name\\\": \\\"Independent\\\",\\n  \\\"id\\\": \\\"17513\\\"\\n}\n\n\nYou can create a new tag by submitting a POST to https://api.intercom.io/tags along with a name for the tag. The tag name may contain whitespace and punctuation.\n\nIf the same tag name is sent multiple times, only one tag will be created for that name - this lets you avoid checking if a tag exists first.\n\nTag names are case insensitive - 'MyTag' and 'mytag' will result in a single tag being created.\n\nA tag's name can also be updated by posting a tag to https://api.intercom.io/tags. The submitted tag object will contain the id of the tag to update and a new name for the tag. A successful request will update the name value for that tag and return the updated tag in the response.\n\nAttributes\nAttribute\tRequired\tDescription\nname\tYes\tThe name of the tag, which will be created if not found, or the new name for the tag if this is an update request.\nid\tYes for update\tThe id of tag to updates.\nReturns\n\nThe newly created or updated tag object containing its name and id fields."
  },
  {
    "title": "Delete a Tag",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/tags/delete-a-tag/",
    "html": "Delete a Tag\nExample Delete Tag Request\n$ curl https://api.intercom.io/tags/17513 \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n# Not exposed in Ruby client\n\n<?php\n// Not exposed in PHP client\n?>\n\nTag.delete(tag);\n\n\nA tag can be deleted by sending a DELETE request to its URL. A tag's URL is defined using using the tag's id field to create a URL of the form, https://api.intercom.io/tags/{id}."
  },
  {
    "title": "List Tags for an App",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/tags/list-tags-for-an-app/",
    "html": "List Tags for an App\nExample List Tag Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/tags \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\n{\\n  \\\"type\\\": \\\"tag.list\\\",\\n  \\\"tags\\\": [\\n    {\\n      \\\"type\\\": \\\"tag\\\",\\n      \\\"name\\\": \\\"Beta User\\\",\\n      \\\"id\\\": 1\\n    },\\n    {\\n      \\\"type\\\": \\\"tag\\\",\\n      \\\"name\\\": \\\"Amazing User\\\",\\n      \\\"id\\\": 2\\n    },\\n    {\\n      \\\"type\\\": \\\"tag\\\",\\n      \\\"name\\\": \\\"Epic User\\\",\\n      \\\"id\\\": 3\\n    }\\n  ]\\n}\n\n\nYou can fetch the tags for an App by sending a GET request to https://api.intercom.io/tags.\n\nParameters\n\nNone.\n\nReturns\n\nA list of tag objects for the App.\n\nTag List\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'tag.list'\ntags\tarray\tA list of tag objects"
  },
  {
    "title": "Tags",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/tags/tags/",
    "html": "Tags\n\nA tag allows you to label your users and companies and list them using that tag.\n\nThis section describes how tags can be created, updated and deleted. It also describes how users and companies can be tagged or untagged individually or in bulk.\n\nHow to query using a tag is described in the respective sections for users and companies - see \"List by Tag, Segment, Company\" for Users, and \"List by Tag or Segment\" for Companies."
  },
  {
    "title": "Convert a Visitor to a User",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/visitors/convert-a-visitor-to-a-user/",
    "html": "Convert a Visitor to a User\n\nExample User Convert Request\n\ncurlcurl\n$ curl \\\\\\nhttps://api.intercom.io/visitors/convert \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"visitor\\\": {\\n    \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  },\\n  \\\"user\\\": {\\n    \\\"email\\\": \\\"winstonsmith@truth.org\\\"\\n  },\\n  \\\"type\\\": \\\"user\\\"\\n}'\\n\n\n# NB: Full User objects are returned\\n{\\n  \\\"type\\\": \\\"lead\\\",\\n  \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n}\n\n\nVisitors can also be converted to Users. This is done by passing both Visitor and User identifiers and a type attribute set to 'user'. If the User exists, then the Visitor will be merged into it, the Visitor deleted and the User returned. If the User does not exist, the Visitor will be converted to a User, with the User identifiers replacing it's Visitor identifiers.\n\nIdentifiers (id, user_id, email) from Visitors are never added onto Users with a merge.\n\nA Visitor email, but not user_id is retained when converting a Visitor to a new User."
  },
  {
    "title": "Convert a Visitor to a User",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/visitors/convert-a-visitor-to-a-user/",
    "html": "Convert a Visitor to a User\n\nExample User Convert Request\n\ncurlcurl\n$ curl \\\\\\nhttps://api.intercom.io/visitors/convert \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"visitor\\\": {\\n    \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  },\\n  \\\"user\\\": {\\n    \\\"email\\\": \\\"winstonsmith@truth.org\\\"\\n  },\\n  \\\"type\\\": \\\"user\\\"\\n}'\\n\n\n# NB: Full User objects are returned\\n{\\n  \\\"type\\\": \\\"lead\\\",\\n  \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n}\n\n\nVisitors can also be converted to Users. This is done by passing both Visitor and User identifiers and a type attribute set to 'user'. If the User exists, then the Visitor will be merged into it, the Visitor deleted and the User returned. If the User does not exist, the Visitor will be converted to a User, with the User identifiers replacing it's Visitor identifiers.\n\nIdentifiers (id, user_id, email) from Visitors are never added onto Users with a merge.\n\nA Visitor email, but not user_id is retained when converting a Visitor to a new User."
  },
  {
    "title": "List by Tag, Segment, Company",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/users/list-by-tag-segment-company/",
    "html": "List by Tag, Segment, Company\nExample Tag Request\n$ curl https://api.intercom.io/users?tag_id=3142 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nintercom.users.find_all({ :tag_id => '30126' })\n\n<?php\n$user = $intercom->users->getUsers([\"tag_id\" => '730128']);\nprint_r($user->users[0]->email);\necho \"\\n\";\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"tag_id\", \"30126\");\nUserCollection users = User.list(params);\nwhile (users.hasNext()) {\n    out.println(users.next().getId());\n}\n\nExample Segment Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/users?segment_id=5926 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"user.list\\\",\\n  \\\"total_count\\\": 105,\\n  \\\"users\\\": [\\n    {\\n      \\\"type\\\": \\\"user\\\",\\n      \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n       ...\\n     },\\n     ...\\n  ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/users?tag_id=3142&per_page=50&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 3\\n  }\\n}\\n\\n# NB: Full User objects are returned\n\n\nYou can fetch segmented users/leads by querying the users resource with a segment_id parameter, indicating the id of the segment to query with.\n\nTo fetch tagged users/leads, you can use a tag_id parameter to indicate the id of the tag. For information on tagging users see the section Tag or Untag Users, Companies & Leads (Contacts).\n\nNote that you can not combine tag and segment parameters in the same request.\n\nTo list users belonging to a company, you can use the companies API. See the section List Company Users for details.\n\nRequest Parameters\nParameter\tRequired\tDescription\ntag_id\tno\tThe id of the tag to filter by.\nsegment_id\tno\tThe id of the segment to filter by.\nReturns\n\nA pageable list of users and leads.\n\nLike a plain company list, the result contains a pages object that indicates if more users exist via the next field."
  },
  {
    "title": "Data-Table",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/presentationcomponents/data-table/",
    "html": "Data-Table\n\nA data-table component is used for rendering a table of key-value pairs. For Messenger, text will wrap around on multiple lines. For Inbox and Frame (ie. Configure) views, we will truncate and use tooltips on hover if the text overflows.\n\nData-Table Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdata-table\tYes\tThe type of component you are rendering.\nitems\tArray (See Below)\tYes\tThe items that will be rendered in the data-table.\nField-Value Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tfield-value\tYes\tThe type of component you are rendering.\nfield\tAny string\tYes\tThe text of the key in your key-value pair.\nvalue\tAny string\tYes\tThe text of the value in your key-value pair.\nPreview"
  },
  {
    "title": "Divider",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/presentationcomponents/divider/",
    "html": "Divider\n\nA divider component is used to separate components with a line.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdivider\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "Updating the Last Seen Time",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/users/updating-the-last-seen-time/",
    "html": "Updating the Last Seen Time\nExample Update for Last Seen Time\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/users \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"user_id\\\": \\\"25\\\",\\n  \\\"last_request_at\\\": 1480076371\\n}'\n\n{\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5714dd359a3fd47136000001\\\",\\n    \\\"user_id\\\": \\\"25\\\",\\n    \\\"anonymous\\\": false,\\n    \\\"email\\\": \\\"wash@serenity.io\\\",\\n    \\\"phone\\\": \\\"555671243\\\",\\n    \\\"name\\\": \\\"Hoban Washburne\\\",\\n    \\\"pseudonym\\\": null,\\n    \\\"avatar\\\": {\\n        \\\"type\\\": \\\"avatar\\\",\\n        \\\"image_url\\\": \\\"https://secure.gravatar.com/avatar/0c3c17fd49f45c43f482730782b36d36?s=24&d=identicon\\\"\\n    },\\n    \\\"app_id\\\": \\\"ja43hiec\\\",\\n    \\\"companies\\\": {\\n        \\\"type\\\": \\\"company.list\\\",\\n        \\\"companies\\\": [\\n            {\\n                \\\"type\\\": \\\"company\\\",\\n                \\\"company_id\\\": \\\"366\\\",\\n                \\\"id\\\": \\\"574854e3ecd0c547ae0000e4\\\",\\n                \\\"name\\\": \\\"Serenity\\\"\\n            }\\n        ]\\n    },\\n    \\\"location_data\\\": {\\n        ...\\n    },\\n    \\\"last_request_at\\\": 1480076371,\\n    \\\"last_seen_ip\\\": \\\"1.2.3.4\\\",\\n    \\\"created_at\\\": 1460985141,\\n    \\\"remote_created_at\\\": 1392731331,\\n    \\\"signed_up_at\\\": 1392731331,\\n    \\\"updated_at\\\": 1480076399,\\n    \\\"session_count\\\": 0,\\n    \\\"social_profiles\\\": {\\n        \\\"type\\\": \\\"social_profile.list\\\",\\n        \\\"social_profiles\\\": [\\n         ...\\n        ]\\n    },\\n    \\\"unsubscribed_from_emails\\\": false,\\n    \\\"user_agent_data\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9\\\",\\n    \\\"tags\\\": {\\n        \\\"type\\\": \\\"tag.list\\\",\\n        \\\"tags\\\": []\\n    },\\n    \\\"segments\\\": {\\n        \\\"type\\\": \\\"segment.list\\\",\\n        \\\"segments\\\": []\\n    },\\n    \\\"custom_attributes\\\": {\\n        \\\"paid_subscriber\\\": true,\\n        \\\"monthly_spend\\\": 155.5,\\n        \\\"team_mates\\\": 9,\\n        \\\"last_order_at\\\": 1475569818\\n    }\\n}\n\n\nTo update the last time the user was seen in your App, send the time in the last_request_at field in a user update request. You can also send update_last_request_at: true to tell the API to update the last request time to the time of your call (in UTC)."
  },
  {
    "title": "Tag or Untag Users, Companies & Leads (Contacts)",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/tags/tag-or-untag-users-companies-leads-contacts/",
    "html": "Tag or Untag Users, Companies & Leads (Contacts)\nExample Tag Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/tags \\\\\\n-XPOST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d'\\n{\\n  \\\"name\\\": \\\"Independent\\\",\\n  \\\"users\\\": [\\n    {\\n      \\\"id\\\" : \\\"53427b7ecce5722303000003\\\"\\n    },\\n    {\\n      \\\"user_id\\\" : \\\"22\\\"\\n    },\\n    {\\n      \\\"email\\\" : \\\"a@b.com\\\"\\n    }\\n  ]\\n}\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"tag\\\",\\n  \\\"name\\\": \\\"Independent\\\",\\n  \\\"id\\\": \\\"17513\\\"\\n}\n\n\nYou can also tag users, companies, or leads (contacts) using a POST to https://api.intercom.io/tags. This lets you assign a tag to multiple users or companies at once. If the tag does not already exist it will be created for you.\n\nUsers can be tagged by supplying a users array. The array contains objects identifying users by their id, email or user_id fields.\n\nCompanies can be tagged by sending a companies array. The array contains objects identifying companies by their idor company_id fields.\n\nContacts/Leads can be tagged by supplying a users array. The array contains objects identifying leads by their id fields.\n\nCompanies and user tag directives cannot be mixed in the same request - a request will not process both company and user arrays.\n\nWe recommend tagging no more than 50 users at a time as larger amounts could result in a timeout.\n\nExample Untag Request\n\n$ curl https://api.intercom.io/tags \\\n-XPOST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d'\n{\n  \"name\": \"Independent\",\n  \"users\": [\n    {\n      \"id\" : \"53427b7ecce5722303000003\",\n      \"untag\": true\n    },\n    {\n      \"user_id\" : \"22\"\n    }\n  ]\n}\n\nintercom.tags.untag(name: 'blue', users: [{ id: \"42ea2f1b93891f6a99000427\" }])\n\n<?php\n$intercom->tagUsers(array(\n  \"name\" => \"Independent\",\n  \"users\" => array(\n    array(\"user_id\" => \"22\", \"untag\" => true)\n  )\n));\n?>\n\nUser user = new User()\n  .setEmail(\"simon@serenity.io\")\n  .untag();\nList<User> users = Lists.newArrayList(user);\nTag.tag(tag, new UserCollection(users));\n\nHTTP/1.1 200 Ok\n\n{\n  \"type\": \"tag\",\n  \"name\": \"Follow Up\",\n  \"id\": \"17513\"\n}\n\n\nTo untag a company or user, each user or company object sent in the tagging request can be submitted with an untag field whose value is set to true.\n\nObjects submitted with an untag field can be mixed with other objects being tagged. This allows tag and untag operations to be performed in a single request.\n\nThe default behaviour if untag is not suppled is to tag the object. Setting the untagvalue to false is the same as requesting the object be tagged.\n\nAttributes\nAttribute\tRequired\tDescription\nname\trequired\tThe name of the tag, which will be created if not found.\nusers\toptional\tAn array of objects identifying users.\ncompanies\toptional\tAn array of objects identifying companies.\nReturns\n\nThe tag object containing its name and id fields."
  },
  {
    "title": "Incrementing User Sessions",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/users/incrementing-user-sessions/",
    "html": "Incrementing User Sessions\n\nTo indicate the update is part of an active session pass new_session: true when you update the user. The API will then follow the rules for web sessions outlined in our session docs to decide whether the session count should be updated for the user."
  },
  {
    "title": "Divider",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/presentationcomponents/divider/",
    "html": "Divider\n\nA divider component is used to separate components with a line.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdivider\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "Spacer",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/presentationcomponents/spacer/",
    "html": "Spacer\n\nA spacer component is used to create empty space between components.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tspacer\t\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nsize\txs``s``m``l``xl\tNo\tThe amount of space between components.Default is s.\nPreview"
  },
  {
    "title": "Image",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/presentationcomponents/image/",
    "html": "Image\n\nAn image component is used to display an image.\n\n🚧 HTTPS Images\n\nIf your request URLs (or website URLs) are over HTTPS, you will need to ensure that images are loaded over HTTPS likewise. Otherwise, they will not work.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\timage\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nurl\tA valid HTTPS URL\tYes\tThe URL where the image is located.\nalign\tleft``center``right``full_width\tNo\tAligns the image inside the component.Default is left.\nwidth\tAny integer\tYes\tThe exact width of the image in pixels.\nheight\tAny integer\tYes\tThe exact height of the image in pixels.\nrounded\ttrue``false\tNo\tRounds the corners of the image. Default is false.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\naction\tAction Object\tNo\tThis can be a URL Action only.\nPreview"
  },
  {
    "title": "Companies and Users",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/users/companies-and-users/",
    "html": "Companies and Users\nAssociate a Company with a User\n$ curl https://api.intercom.io/users \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"id\": \"531ee472cce572a6ec000005\",\n  \"companies\": [\n    {\n    \"company_id\" : \"366\",\n    \"name\" : \"Serenity\"\n    }\n  ]\n}\n\nintercom.users.create(user_id: 111, companies: [{company_id: 10}])\n\n<?php\n$intercom->users->create([\n    \"user_id\" => \"111\",\n    \"companies\" => [\n        [\n            \"company_id\" => \"10\"\n        ]\n    ]\n]);\n?>\n\nUser user = User.find(\"541a144b201ebf2ec5000001\");\nuser.addCompany(company);\nUser.update(user);\n\nRemove a User from a Company\n$ curl https://api.intercom.io/users \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"id\": \"531ee472cce572a6ec000005\",\n  \"companies\": [\n    {\n      \"company_id\" : \"3\",\n     \"remove\" : true\n    }\n  ]\n}\n\nuser.companies = [{ :company_id => \"1234\", :remove => true}]\n\n<?php\n$intercom->users->create([\n    \"email\" => \"plato@phil.com\",\n    \"companies\" => [\n        [\n            \"company_id\" => \"9\",\n            \"remove\" => true\n        ]\n    ]\n]);\n?>\n\nCOMPANIES FIELD IS AN ARRAY\n\nNote that when associating a company with a user, the companies field used is an array, not an object (as is the case when the user is being fetched)\n\nCREATE OR UPDATE COMPANIES?\n\nUsers may be created or updated with a company object. If the company object does not already exist, it will be created for you. This saves having to create a company or check it exists before creating or updating a user.\n\nTo remove a company from a user add the field remove with a value of true to the embedded company object and submit the user as a update request. You must also submit the id of the company.\n\nNote: the \"id\" to be used for the \"companies\" object is the company\\_id."
  },
  {
    "title": "Archive a user",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/users/archive-a-user/",
    "html": "Archive a user\nPERMANENTLY DELETE A USER\n\nThe archive action will not perform a 'hard' delete. If you want to permanently delete your user then you will need to use the Permanently delete a user endpoint.\n\nExample ID Archive Request\ncurlcurlrubyphpjava\n$ curl \\\\\\n-s https://api.intercom.io/users/5321a20f72cdbb4192000013 \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\\n\\n{\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5714dd359a3fd47136000001\\\",\\n    \\\"user_id\\\": \\\"25\\\",\\n    \\\"anonymous\\\": false,\\n    \\\"email\\\": \\\"wash@serenity.io\\\",\\n    \\\"phone\\\": \\\"555671243\\\",\\n    \\\"name\\\": \\\"Hoban Washburne\\\",\\n    \\\"pseudonym\\\": null,\\n  ...\\n}\\n# NB: Full User objects are returned\n\nExample User ID Archive Request\n$ curl \\\n-s https://api.intercom.io/users?user_id=25 \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"type\": \"user\",\n    \"id\": \"5714dd359a3fd47136000001\",\n    \"user_id\": \"25\",\n    \"anonymous\": false,\n    \"email\": \"wash@serenity.io\",\n    \"phone\": \"555671243\",\n    \"name\": \"Hoban Washburne\",\n    \"pseudonym\": null,\n  ...\n}\n# NB: Full User objects are returned\n\nuser = intercom.users.find(:user_id => \"1\")\nintercom.users.delete(user)\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"user_id\", \"1\");\nuser = User.find(params);\nUser.delete(user.getId());\n\n<?php\n$intercom->users->deleteUser(\"\", [\"user_id\" => \"5087\"]);\n?>\n\nExample User Email Archive Request\n$ curl \\\n-s https://api.intercom.io/users?email=wash%40serenity.io \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"type\": \"user\",\n    \"id\": \"5714dd359a3fd47136000001\",\n    \"user_id\": \"25\",\n    \"anonymous\": false,\n    \"email\": \"wash@serenity.io\",\n    \"phone\": \"555671243\",\n    \"name\": \"Hoban Washburne\",\n    \"pseudonym\": null,\n  ...\n}\n# NB: Full User objects are returned\n\nuser = intercom.users.find(:email => \"foo@bar.com\")\nintercom.users.delete(user)\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"email\", \"malcolm@serenity.io\");\nuser = User.find(params);\nUser.delete(user.getId());\n\n<?php\n$intercom->users->deleteUser(\"\", [\"email\" => \"test@example.com\"]);\n?>\n\n\nA user can be archived by sending a DELETE request to its URL using the user's id field as part of the path -\n\nhttps://api.intercom.io/users/{id}\n\nAlternatively, you can archive a user by sending a DELETE request using the email or user_id as query parameters -\n\nhttps://api.intercom.io/users?email={email}\nhttps://api.intercom.io/users?user_id={user_id}\nRequest Parameters\nParameter\tRequired\tDescription\nemail\tno\tThe email you have defined for the user\nuser_id\tno\tThe user id you have defined for the user\n\nPlease note that when a user is archived, all of their conversations and message history will also be archived.\n\nReturns\n\nA User object."
  },
  {
    "title": "Create or Update User",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/users/create-or-update-user/",
    "html": "Create or Update User\nCreate or Update Users\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/users \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"user_id\\\": \\\"25\\\",\\n  \\\"email\\\": \\\"wash@serenity.io\\\",\\n  \\\"name\\\": \\\"Hoban Washburne\\\",\\n  \\\"phone\\\": \\\"555671243\\\",\\n  \\\"signed_up_at\\\": 1392731331,\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"monthly_spend\\\": 155.5,\\n    \\\"team_mates\\\": 9,\\n    \\\"last_order_at\\\":1475569818\\n  },\\n  \\\"companies\\\": [\\n    {\\n      \\\"company_id\\\" : \\\"366\\\",\\n      \\\"name\\\" : \\\"Serenity\\\",\\n      \\\"monthly_spend\\\" : 500\\n    }\\n  ]\\n}\n\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5714dd359a3fd47136000001\\\",\\n    \\\"user_id\\\": \\\"25\\\",\\n    \\\"anonymous\\\": false,\\n    \\\"email\\\": \\\"wash@serenity.io\\\",\\n    \\\"phone\\\": \\\"555671243\\\",\\n    \\\"name\\\": \\\"Hoban Washburne\\\",\\n    \\\"pseudonym\\\": null,\\n    \\\"avatar\\\": {\\n        \\\"type\\\": \\\"avatar\\\",\\n        \\\"image_url\\\": \\\"https://secure.gravatar.com/avatar/0c3c17fd49f45c43f482730782b36d36?s=24&d=identicon\\\"\\n    },\\n    \\\"app_id\\\": \\\"ja43hiec\\\",\\n    \\\"companies\\\": {\\n        \\\"type\\\": \\\"company.list\\\",\\n        \\\"companies\\\": [\\n            {\\n                \\\"type\\\": \\\"company\\\",\\n                \\\"company_id\\\": \\\"366\\\",\\n                \\\"id\\\": \\\"574854e3ecd0c547ae0000e4\\\",\\n                \\\"name\\\": \\\"Serenity\\\"\\n            }\\n        ]\\n    },\\n    \\\"location_data\\\": {\\n\\t\\t...\\n    },\\n    \\\"last_request_at\\\": null,\\n    \\\"last_seen_ip\\\": null,\\n    \\\"created_at\\\": 1460985141,\\n    \\\"remote_created_at\\\": 1392731331,\\n    \\\"signed_up_at\\\": 1392731331,\\n    \\\"updated_at\\\": 1480075457,\\n    \\\"session_count\\\": 0,\\n    \\\"social_profiles\\\": {\\n        \\\"type\\\": \\\"social_profile.list\\\",\\n        \\\"social_profiles\\\": [\\n            ...\\n        ]\\n    },\\n    \\\"unsubscribed_from_emails\\\": false,\\n    \\\"user_agent_data\\\": null,\\n    \\\"tags\\\": {\\n        \\\"type\\\": \\\"tag.list\\\",\\n        \\\"tags\\\": []\\n    },\\n    \\\"segments\\\": {\\n        \\\"type\\\": \\\"segment.list\\\",\\n        \\\"segments\\\": []\\n    },\\n    \\\"custom_attributes\\\": {\\n        \\\"paid_subscriber\\\": true,\\n        \\\"monthly_spend\\\": 155.5,\\n        \\\"team_mates\\\": 9,\\n        \\\"last_order_at\\\": 1475569818\\n    }\\n}\n\n\nUsers can be created or updated via a POST method to https://api.intercom.io/users, which accepts a JSON object describing the user.\n\nUsers not found via email or user_id will be created, and those that are found will be updated.\n\nNote that the following lookup order applies when updating users - id then user_id then email, and results in the following logic:\n\nid is matched - the user_id and email will be updated if they are sent.\nuser_id match - the email will be updated, the id is not updated.\nemail match where no user_id set on the matching user - the user_id will be set to the value sent in the request, the id is not updated.\nemail match where there is a user_id set on the matching user - a new unique record with new id will be created if a new value for user_id is sent in the request.\n\nNote that email values are downcased after they have been submitted to our API.\n\nAttributes\n\nThe table below shows the fields you can create or update for a user:\n\nParameter\tRequired\tDescription\nuser_id\tRequired if no email is supplied.\tA unique string identifier for the user. It is required on creation if an email is not supplied.\nemail\tRequired if no user_id is supplied.\tThe user's email address. It is required on creation if a user_id is not supplied.\nphone\tno\tThe user's phone number.\nid\tno\tThe id may be used for user updates.\nsigned_up_at\tno\tThe time the user signed up\nname\tno\tThe user's full name\ncustom_attributes\tno\tA hash of key/value pairs containing any other data about the user you want Intercom to store.\ncompanies\tno\tIdentifies the companies this user belongs to.\nlast_request_at\tno\tA UNIX timestamp (in seconds) representing the date the user last visited your application.\nunsubscribed_from_emails\tno\tA boolean value representing the users unsubscribed status. default value if not sent is false.\nupdate_last_request_at\tno\tA boolean value, which if true, instructs Intercom to update the users' last_request_at value to the current API service time in UTC. default value if not sent is false.\nnew_session\tno\tA boolean value, which if true, instructs Intercom to register the request as a session.\n\nIn particular, please note that location data and social profiles are computed by the server and can not be updated via the API.\n\nCustom Attributes\n\nThe custom_attributes object allows you to send any information you wish about a user with the following restrictions\n\nField names must not contain Periods ('.') or Dollar ('$') characters:\n\nField names must be no longer than 190 characters.\nField values must be JSON Strings, Numbers or Booleans - Objects and Arrays will be rejected.\nString field values must be no longer than 255 characters.\nMaximum of 250 fields.\nCUSTOM ATTRIBUTE AS DATE\n\nYou can send dates as custom attributes by sending a unix timestamp. If the name of your custom attribute ends with _at then we'll automatically treat it as a date, rather than a number. See here for more info\n\nReturns\n\nA created or updated user object.\n\nNew user objects will be provided with an id field - this value cannot be created or edited by clients. Social profiles, location data and avatars are processed asynchronously, and may require a subsequent call to fetch their details."
  },
  {
    "title": "Archive a user",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/users/archive-a-user/",
    "html": "Archive a user\nPERMANENTLY DELETE A USER\n\nThe archive action will not perform a 'hard' delete. If you want to permanently delete your user then you will need to use the Permanently delete a user endpoint.\n\nExample ID Archive Request\ncurlcurlrubyphpjava\n$ curl \\\\\\n-s https://api.intercom.io/users/5321a20f72cdbb4192000013 \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\\n\\n{\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5714dd359a3fd47136000001\\\",\\n    \\\"user_id\\\": \\\"25\\\",\\n    \\\"anonymous\\\": false,\\n    \\\"email\\\": \\\"wash@serenity.io\\\",\\n    \\\"phone\\\": \\\"555671243\\\",\\n    \\\"name\\\": \\\"Hoban Washburne\\\",\\n    \\\"pseudonym\\\": null,\\n  ...\\n}\\n# NB: Full User objects are returned\n\nExample User ID Archive Request\n$ curl \\\n-s https://api.intercom.io/users?user_id=25 \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"type\": \"user\",\n    \"id\": \"5714dd359a3fd47136000001\",\n    \"user_id\": \"25\",\n    \"anonymous\": false,\n    \"email\": \"wash@serenity.io\",\n    \"phone\": \"555671243\",\n    \"name\": \"Hoban Washburne\",\n    \"pseudonym\": null,\n  ...\n}\n# NB: Full User objects are returned\n\nuser = intercom.users.find(:user_id => \"1\")\nintercom.users.delete(user)\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"user_id\", \"1\");\nuser = User.find(params);\nUser.delete(user.getId());\n\n<?php\n$intercom->users->deleteUser(\"\", [\"user_id\" => \"5087\"]);\n?>\n\nExample User Email Archive Request\n$ curl \\\n-s https://api.intercom.io/users?email=wash%40serenity.io \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"type\": \"user\",\n    \"id\": \"5714dd359a3fd47136000001\",\n    \"user_id\": \"25\",\n    \"anonymous\": false,\n    \"email\": \"wash@serenity.io\",\n    \"phone\": \"555671243\",\n    \"name\": \"Hoban Washburne\",\n    \"pseudonym\": null,\n  ...\n}\n# NB: Full User objects are returned\n\nuser = intercom.users.find(:email => \"foo@bar.com\")\nintercom.users.delete(user)\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"email\", \"malcolm@serenity.io\");\nuser = User.find(params);\nUser.delete(user.getId());\n\n<?php\n$intercom->users->deleteUser(\"\", [\"email\" => \"test@example.com\"]);\n?>\n\n\nA user can be archived by sending a DELETE request to its URL using the user's id field as part of the path -\n\nhttps://api.intercom.io/users/{id}\n\nAlternatively, you can archive a user by sending a DELETE request using the email or user_id as query parameters -\n\nhttps://api.intercom.io/users?email={email}\nhttps://api.intercom.io/users?user_id={user_id}\nRequest Parameters\nParameter\tRequired\tDescription\nemail\tno\tThe email you have defined for the user\nuser_id\tno\tThe user id you have defined for the user\n\nPlease note that when a user is archived, all of their conversations and message history will also be archived.\n\nReturns\n\nA User object."
  },
  {
    "title": "Companies and Users",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/users/companies-and-users/",
    "html": "Companies and Users\nAssociate a Company with a User\n$ curl https://api.intercom.io/users \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"id\": \"531ee472cce572a6ec000005\",\n  \"companies\": [\n    {\n    \"company_id\" : \"366\",\n    \"name\" : \"Serenity\"\n    }\n  ]\n}\n\nintercom.users.create(user_id: 111, companies: [{company_id: 10}])\n\n<?php\n$intercom->users->create([\n    \"user_id\" => \"111\",\n    \"companies\" => [\n        [\n            \"company_id\" => \"10\"\n        ]\n    ]\n]);\n?>\n\nUser user = User.find(\"541a144b201ebf2ec5000001\");\nuser.addCompany(company);\nUser.update(user);\n\nRemove a User from a Company\n$ curl https://api.intercom.io/users \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"id\": \"531ee472cce572a6ec000005\",\n  \"companies\": [\n    {\n      \"company_id\" : \"3\",\n     \"remove\" : true\n    }\n  ]\n}\n\nuser.companies = [{ :company_id => \"1234\", :remove => true}]\n\n<?php\n$intercom->users->create([\n    \"email\" => \"plato@phil.com\",\n    \"companies\" => [\n        [\n            \"company_id\" => \"9\",\n            \"remove\" => true\n        ]\n    ]\n]);\n?>\n\nCOMPANIES FIELD IS AN ARRAY\n\nNote that when associating a company with a user, the companies field used is an array, not an object (as is the case when the user is being fetched)\n\nCREATE OR UPDATE COMPANIES?\n\nUsers may be created or updated with a company object. If the company object does not already exist, it will be created for you. This saves having to create a company or check it exists before creating or updating a user.\n\nTo remove a company from a user add the field remove with a value of true to the embedded company object and submit the user as a update request. You must also submit the id of the company.\n\nNote: the \"id\" to be used for the \"companies\" object is the company\\_id."
  },
  {
    "title": "Create or Update User",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/users/create-or-update-user/",
    "html": "Create or Update User\nCreate or Update Users\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/users \\\\-X POST \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept: application/json' \\\\-H 'Content-Type: application/json' -d '{  \\\"user_id\\\": \\\"25\\\",  \\\"email\\\": \\\"wash@serenity.io\\\",  \\\"name\\\": \\\"Hoban Washburne\\\",  \\\"phone\\\": \\\"555671243\\\",  \\\"signed_up_at\\\": 1392731331,  \\\"custom_attributes\\\": {    \\\"paid_subscriber\\\" : true,    \\\"monthly_spend\\\": 155.5,    \\\"team_mates\\\": 9,    \\\"last_order_at\\\":1475569818  },  \\\"companies\\\": [    {      \\\"company_id\\\" : \\\"366\\\",      \\\"name\\\" : \\\"Serenity\\\",      \\\"monthly_spend\\\" : 500    }  ]}\n\nHTTP/1.1 200 OK #Example Response{    \\\"type\\\": \\\"user\\\",    \\\"id\\\": \\\"5714dd359a3fd47136000001\\\",    \\\"user_id\\\": \\\"25\\\",    \\\"anonymous\\\": false,    \\\"email\\\": \\\"wash@serenity.io\\\",    \\\"phone\\\": \\\"555671243\\\",    \\\"name\\\": \\\"Hoban Washburne\\\",    \\\"pseudonym\\\": null,    \\\"avatar\\\": {        \\\"type\\\": \\\"avatar\\\",        \\\"image_url\\\": \\\"https://secure.gravatar.com/avatar/0c3c17fd49f45c43f482730782b36d36?s=24&d=identicon\\\"    },    \\\"app_id\\\": \\\"ja43hiec\\\",    \\\"companies\\\": {        \\\"type\\\": \\\"company.list\\\",        \\\"companies\\\": [            {                \\\"type\\\": \\\"company\\\",                \\\"company_id\\\": \\\"366\\\",                \\\"id\\\": \\\"574854e3ecd0c547ae0000e4\\\",                \\\"name\\\": \\\"Serenity\\\"            }        ]    },    \\\"location_data\\\": {\\t\\t...    },    \\\"last_request_at\\\": null,    \\\"last_seen_ip\\\": \\\"1.2.3.4\\\",    \\\"created_at\\\": 1460985141,    \\\"remote_created_at\\\": 1392731331,    \\\"signed_up_at\\\": 1392731331,    \\\"updated_at\\\": 1480075457,    \\\"session_count\\\": 0,    \\\"social_profiles\\\": {        \\\"type\\\": \\\"social_profile.list\\\",        \\\"social_profiles\\\": [            ...        ]    },    \\\"unsubscribed_from_emails\\\": false,    \\\"user_agent_data\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9\\\",    \\\"tags\\\": {        \\\"type\\\": \\\"tag.list\\\",        \\\"tags\\\": []    },    \\\"segments\\\": {        \\\"type\\\": \\\"segment.list\\\",        \\\"segments\\\": []    },    \\\"custom_attributes\\\": {        \\\"paid_subscriber\\\": true,        \\\"monthly_spend\\\": 155.5,        \\\"team_mates\\\": 9,        \\\"last_order_at\\\": 1475569818    }}\n\n\nUsers can be created or updated via a POST method to https://api.intercom.io/users, which accepts a JSON object describing the user.\n\nUsers not found via email or user_id will be created, and those that are found will be updated.\n\nNote that the following lookup order applies when updating users - id then user_id then email, and results in the following logic -\n\nid is matched - the user_id and email will be updated if they are sent.\nuser_id match - the email will be updated, the id is not updated.\nemail match where no user_id set on the matching user - the user_id will be set to the value sent in the request, the id is not updated.\nemail match where there is a user_id set on the matching user - a new unique record with new id will be created if a new value for user_id is sent in the request.\n\nNote that email values are downcased after they have been submitted to our API.\n\nAttributes\n\nThe table below shows the fields you can create or update for a user -\n\nParameter\tRequired\tDescription\nuser_id\tRequired if no email is supplied.\tA unique string identifier for the user. It is required on creation if an email is not supplied.\nemail\tRequired if no user_id is supplied.\tThe user's email address. It is required on creation if a user_id is not supplied.\nphone\tno\tThe user's phone number.\nid\tno\tThe id may be used for user updates.\nsigned_up_at\tno\tThe time the user signed up\nname\tno\tThe user's full name\ncustom_attributes\tno\tA hash of key/value pairs to represent custom data you want to attribute to a user. The key must be an existing Data Attribute.\ncompanies\tno\tIdentifies the companies this user belongs to.\nlast_request_at\tno\tA UNIX timestamp (in seconds) representing the date the user last visited your application.\nunsubscribed_from_emails\tno\tA boolean value representing the users unsubscribed status. default value if not sent is false.\nupdate_last_request_at\tno\tA boolean value, which if true, instructs Intercom to update the users' last_request_at value to the current API service time in UTC. default value if not sent is false.\nnew_session\tno\tA boolean value, which if true, instructs Intercom to register the request as a session.\n\nIn particular, please note that location data and social profiles are computed by the server and can not be updated via the API.\n\nCustom Attributes\n\nThe custom_attributes object allows you to send any information you wish about a user with the following restrictions:\n\nField names can only contain alphanumeric characters, most currency symbols, and hyphens.\nField names must not contain periods . or dollar '&#36;' characters.\nField names must be no longer than 190 characters.\nField values must be JSON Strings, Numbers or Booleans - Objects and Arrays will be rejected.\nString field values must be no longer than 255 characters.\nMaximum of 250 fields.\nCUSTOM ATTRIBUTE AS DATE\n\nYou can send dates as custom attributes by sending a unix timestamp. If the name of your custom attribute ends with _at then we'll automatically treat it as a date, rather than a number. See here for more info\n\nReturns\n\nA created or updated user object.\n\nNew user objects will be provided with an id field - this value cannot be created or edited by clients. Social profiles, location data and avatars are processed asynchronously, and may require a subsequent call to fetch their details."
  },
  {
    "title": "Permanently delete a user",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/users/delete-users/",
    "html": "Permanently delete a user\n\nUser Delete Requests allow you to irrevocably remove data about a User. After creating a User Delete Request, the User's data will be hard-deleted within 90 days. This deletion cannot be cancelled or reversed.\n\nUser Delete Requests can be created via a POST to\nhttps://api.intercom.io/user_delete_requests\nThis endpoint accepts an internal Intercom ID as described below.\n\nAttributes\nParameter\tRequired\tDescription\nintercom_user_id\tYes\tThe internal ID of the User to irrevocably delete\nReturns\n\nThe ID of the User Delete Request, for your reference.\nUser Delete Requests cannot be altered.\n\nHARD DELETE\n\nImportant: If you delete a user/lead by mistake, contact us within 7 days (via the Messenger) and we can retrieve the information. After 7 days this data will be permanently destroyed.\n\nPermanently delete users\ncurl https://api.intercom.io/user_delete_requests \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"intercom_user_id\": \"530370b477ad7120001d\"\n}'\n\nHTTP/1.1 200 OK\n\n{\n    \"id\": 10\n}\n\n<?php\n\t$intercom->users->permanantlyDeleteUser(\"596d3bfdd45d2162b28560ea\");\n?>\n"
  },
  {
    "title": "List Segments",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/segments/list-segments/",
    "html": "List Segments\nExample Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/segments\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"segment.list\\\",\\n  \\\"segments\\\": [\\n    {\\n      \\\"created_at\\\": 1393613031,\\n      \\\"id\\\": \\\"5310d8e7598c9a0b24000002\\\",\\n      \\\"name\\\": \\\"Active\\\",\\n      \\\"type\\\": \\\"segment\\\",\\n      \\\"updated_at\\\": 1393613031\\n    },\\n    {\\n      \\\"created_at\\\": 1393613030,\\n      \\\"id\\\": \\\"5310d8e6598c9a0b24000001\\\",\\n      \\\"name\\\": \\\"New\\\",\\n      \\\"type\\\": \\\"segment\\\",\\n      \\\"updated_at\\\": 1393613030\\n    },\\n    {\\n      \\\"created_at\\\": 1393613031,\\n      \\\"id\\\": \\\"5310d8e7598c9a0b24000003\\\",\\n      \\\"name\\\": \\\"Slipping Away\\\",\\n      \\\"type\\\": \\\"segment\\\",\\n      \\\"updated_at\\\": 1393613031\\n    }\\n  ]\\n}\n\n\nYou can list the user segments for your App by sending a GET request to https://api.intercom.io/segments. Company segments can be listed by sending a GET request to https://api.intercom.io/segments?type=company.\n\nYou can also include counts in your segment model in the response if you add the parameter include_count=true in the request. Note that this is only relevant for user segments.\n\n$ curl 'https://api.intercom.io/segments?include_count=true'\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"segment.list\",\n    \"segments\": [\n        {\n            \"type\": \"segment\",\n            \"id\": \"56cc69cd8618d37b4500000c\",\n            \"name\": \"Active\",\n            \"created_at\": 1456237005,\n            \"updated_at\": 1487064099,\n            \"person_type\": \"user\",\n            \"count\": 3\n        },\n        {\n            \"type\": \"segment\",\n            \"id\": \"56cc69cc8618d37b4500000b\",\n            \"name\": \"New\",\n            \"created_at\": 1456237004,\n            \"updated_at\": 1473241975,\n            \"person_type\": \"user\",\n            \"count\": 0\n        },\n        {\n            \"type\": \"segment\",\n            \"id\": \"56cc69cd8618d37b4500000d\",\n            \"name\": \"Slipping Away\",\n            \"created_at\": 1456237005,\n            \"updated_at\": 1473241975,\n            \"person_type\": \"user\",\n            \"count\": 0\n        },\n        {\n            \"type\": \"segment\",\n            \"id\": \"56e6f1f2b7ebc2061200000d\",\n            \"name\": \"test3WebSession\",\n            \"created_at\": 1457975794,\n            \"updated_at\": 1473241976,\n            \"person_type\": \"user\",\n            \"count\": 1\n        }\n    ]\n}\n\nSegment List\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'segment.list'\nsegments\tarray\tA list of segment objects\npages\tobject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch.\nReturns\n\nA list of segment objects for the App. The result may also have a pages object if the response is paginated."
  },
  {
    "title": "Archive a user",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/users/archive-a-user/",
    "html": "Archive a user\nPERMANENTLY DELETE A USER\n\nThe archive action will not perform a 'hard' delete. If you want to permanently delete your user then you will need to use the Permanently delete a user endpoint.\n\nExample ID Archive Request\ncurlcurlrubyphpjava\n$ curl \\\\\\n-s https://api.intercom.io/users/5321a20f72cdbb4192000013 \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\\n\\n{\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5714dd359a3fd47136000001\\\",\\n    \\\"user_id\\\": \\\"25\\\",\\n    \\\"anonymous\\\": false,\\n    \\\"email\\\": \\\"wash@serenity.io\\\",\\n    \\\"phone\\\": \\\"555671243\\\",\\n    \\\"name\\\": \\\"Hoban Washburne\\\",\\n    \\\"pseudonym\\\": null,\\n  ...\\n}\\n# NB: Full User objects are returned\n\nExample User ID Archive Request\n$ curl \\\n-s https://api.intercom.io/users?user_id=25 \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"type\": \"user\",\n    \"id\": \"5714dd359a3fd47136000001\",\n    \"user_id\": \"25\",\n    \"anonymous\": false,\n    \"email\": \"wash@serenity.io\",\n    \"phone\": \"555671243\",\n    \"name\": \"Hoban Washburne\",\n    \"pseudonym\": null,\n  ...\n}\n# NB: Full User objects are returned\n\nuser = intercom.users.find(:user_id => \"1\")\nintercom.users.delete(user)\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"user_id\", \"1\");\nuser = User.find(params);\nUser.delete(user.getId());\n\n<?php\n$intercom->users->deleteUser(\"\", [\"user_id\" => \"5087\"]);\n?>\n\nExample User Email Archive Request\n$ curl \\\n-s https://api.intercom.io/users?email=wash%40serenity.io \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"type\": \"user\",\n    \"id\": \"5714dd359a3fd47136000001\",\n    \"user_id\": \"25\",\n    \"anonymous\": false,\n    \"email\": \"wash@serenity.io\",\n    \"phone\": \"555671243\",\n    \"name\": \"Hoban Washburne\",\n    \"pseudonym\": null,\n  ...\n}\n# NB: Full User objects are returned\n\nuser = intercom.users.find(:email => \"foo@bar.com\")\nintercom.users.delete(user)\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"email\", \"malcolm@serenity.io\");\nuser = User.find(params);\nUser.delete(user.getId());\n\n<?php\n$intercom->users->deleteUser(\"\", [\"email\" => \"test@example.com\"]);\n?>\n\n\nA user can be archived by sending a DELETE request to its URL using the user's id field as part of the path -\n\nhttps://api.intercom.io/users/{id}\n\nAlternatively, you can archive a user by sending a DELETE request using the email or user_id as query parameters -\n\nhttps://api.intercom.io/users?email={email}\nhttps://api.intercom.io/users?user_id={user_id}\nRequest Parameters\nParameter\tRequired\tDescription\nemail\tno\tThe email you have defined for the user\nuser_id\tno\tThe user id you have defined for the user\n\nPlease note that when a user is archived, all of their conversations and message history will also be archived.\n\nReturns\n\nA User object."
  },
  {
    "title": "Note Model",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/notes/note-model/",
    "html": "Note Model\nExample Object\n{\\n  \\\"type\\\": \\\"note\\\",\\n  \\\"id\\\": \\\"16\\\",\\n  \\\"created_at\\\": 1389913941,\\n  \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n  \\\"author\\\": {\\n    \\\"type\\\": \\\"admin\\\",\\n    \\\"id\\\": \\\"21\\\",\\n    \\\"name\\\": \\\"Jayne Cobb\\\",\\n    \\\"email\\\": \\\"jayne@serenity.io\\\",\\n    \\\"companies\\\": []\\n  },\\n  \\\"user\\\": {\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\"\\n  }\\n}\n\nNote Object\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'note'\nid\tstring\tThe id representing the note\ncreated_at\ttimestamp\tThe time the note was created\nuser\tUser\tThe user the note was created about\nbody\tstring\tThe body text of the note.\nauthor\tAdmin\tOptional. Represents the Admin that created the note"
  },
  {
    "title": "Companies and Users",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/users/companies-and-users/",
    "html": "Companies and Users\nAssociate a Company with a User\n$ curl https://api.intercom.io/users \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"id\": \"531ee472cce572a6ec000005\",\n  \"companies\": [\n    {\n    \"company_id\" : \"366\",\n    \"name\" : \"Serenity\"\n    }\n  ]\n}\n\nintercom.users.create(user_id: 111, companies: [{company_id: 10}])\n\n<?php\n$intercom->users->create([\n    \"user_id\" => \"111\",\n    \"companies\" => [\n        [\n            \"company_id\" => \"10\"\n        ]\n    ]\n]);\n?>\n\nUser user = User.find(\"541a144b201ebf2ec5000001\");\nuser.addCompany(company);\nUser.update(user);\n\nRemove a User from a Company\n$ curl https://api.intercom.io/users \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"id\": \"531ee472cce572a6ec000005\",\n  \"companies\": [\n    {\n      \"company_id\" : \"3\",\n     \"remove\" : true\n    }\n  ]\n}\n\nuser.companies = [{ :company_id => \"1234\", :remove => true}]\n\n<?php\n$intercom->users->create([\n    \"email\" => \"plato@phil.com\",\n    \"companies\" => [\n        [\n            \"company_id\" => \"9\",\n            \"remove\" => true\n        ]\n    ]\n]);\n?>\n\nCOMPANIES FIELD IS AN ARRAY\n\nNote that when associating a company with a user, the companies field used is an array, not an object (as is the case when the user is being fetched)\n\nCREATE OR UPDATE COMPANIES?\n\nUsers may be created or updated with a company object. If the company object does not already exist, it will be created for you. This saves having to create a company or check it exists before creating or updating a user.\n\nTo remove a company from a user add the field remove with a value of true to the embedded company object and submit the user as a update request. You must also submit the id of the company.\n\nNote: the \"id\" to be used for the \"companies\" object is the company\\_id."
  },
  {
    "title": "Notes",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/notes/notes/",
    "html": "Notes\n\nNotes allow you to annotate and comment on your users.\n\nA note can be authored by an admin about a user, and the notes associated with a user can be listed."
  },
  {
    "title": "Data-Table",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/presentationcomponents/data-table/",
    "html": "Data-Table\n\nA data-table component is used for rendering a table of key-value pairs. For Messenger, text will wrap around on multiple lines. For Inbox and Frame (ie. Configure) views, we will truncate and use tooltips on hover if the text overflows.\n\nData-Table Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdata-table\tYes\tThe type of component you are rendering.\nitems\tArray (See Below)\tYes\tThe items that will be rendered in the data-table.\nField-Value Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tfield-value\tYes\tThe type of component you are rendering.\nfield\tAny string\tYes\tThe text of the key in your key-value pair.\nvalue\tAny string\tYes\tThe text of the value in your key-value pair.\nPreview"
  },
  {
    "title": "View a Note",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/notes/view-a-note/",
    "html": "View a Note\nExample Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/notes/2 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"note\\\",\\n  \\\"id\\\": \\\"2\\\",\\n  \\\"created_at\\\": 1389913951,\\n  \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n  \\\"user\\\": {\\n      \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\",\\n      \\\"type\\\": \\\"user\\\"\\n    },\\n  \\\"author\\\": {\\n    \\\"type\\\": \\\"admin\\\",\\n    \\\"id\\\": \\\"21\\\",\\n    \\\"name\\\": \\\"Jayne Cobb\\\",\\n    \\\"email\\\": \\\"jayne@serenity.io\\\",\\n    \\\"avatar\\\" : {\\n       \\\"type\\\":\\\"avatar\\\",\\n      \\\"image_url\\\": \\\"http://example.org/128Jayne.jpg\\\"\\n    },\\n    \\\"companies\\\": []\\n  }\\n}\n\n\nEach note has its own URL -\n\nhttps://api.intercom.io/notes/{id}\n\nWhere {id} is the value of the note's id field. A GET request to a note's URL will return the note object.\n\nReturns\n\nA note object."
  },
  {
    "title": "List Notes for a User",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/notes/list-notes-for-a-user/",
    "html": "List Notes for a User\nExample User ID Request\n$ curl https://api.intercom.io/notes?user_id=25 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nintercom.notes.find_all(:user_id => '123').each {|note| puts note.body}\n\n<?php\n$notes = $intercom->notes->getNotes([\"user_id\" => \"20413\"]);\nforeach ($notes->notes as $note) {\n    print \"id:\".$note->id.\" body:\".$note->body.\"\\n\";\n}\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"user_id\", \"123\");\nNoteCollection notes = Note.list(params);\nwhile (notes.hasNext()) {\n    out.println(notes.next().getBody());\n}\n\nExample Email Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/notes?email=jayne%40serenity.io \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"note.list\\\",\\n  \\\"notes\\\": [\\n    {\\n      \\\"type\\\": \\\"note\\\",\\n      \\\"id\\\": \\\"1\\\",\\n      \\\"created_at\\\": 1389913941,\\n      \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n      \\\"author\\\": {\\n        \\\"type\\\": \\\"admin\\\",\\n        \\\"id\\\": \\\"21\\\",\\n        \\\"name\\\": \\\"Jayne Cobb\\\",\\n        \\\"email\\\": \\\"jayne@serenity.io\\\",\\n        \\\"companies\\\": []\\n      },\\n      \\\"user\\\": {\\n        \\\"type\\\": \\\"user\\\",\\n        \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\"\\n      }\\n    },\\n    {\\n      \\\"type\\\": \\\"note\\\",\\n      \\\"id\\\": \\\"2\\\",\\n      \\\"created_at\\\": 1389913951,\\n      \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n      \\\"user\\\": {\\n          \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\",\\n          \\\"type\\\": \\\"user\\\"\\n        }\\n    }\\n  ],\\n  \\\"pages\\\": {}\\n}\n\nExample ID Request\n$ curl \\\nhttps://api.intercom.io/notes?id=5310d8e8598c9a0b24000005 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n# Not exposed in Ruby client\n\n<?php\n$notes = $intercom->notes->getNotes([\"id\" => \"5965efd9aad5c02fc4750ee6\"]);\nforeach ($notes->notes as $note) {\n    print \"id:\".$note->id.\" body:\".$note->body.\"\\n\";\n}\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"id\", \"5310d8e8598c9a0b24000005\");\nnotes = Note.list(params);\nwhile (notes.hasNext()) {\n    out.println(notes.next().getBody());\n}\n\n\nA user's notes can be fetched by using a GET request to https://api.intercom.io/notes with an Intercom user id or user_id or email query parameter.\n\nThe value of the email parameter should be url encoded before sending.\n\nParameters\nParameter\tRequired\tDescription\nuser_id\tone of\tThe user id you have defined for the user\nemail\tone of\tThe email you have defined for the user\nid\tone of\tThe Intercom defined id representing the user\nReturns\n\nA list of note objects for that User.\n\nNote List Object\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'note.list'\nnotes\tarray\tA list of note objects"
  },
  {
    "title": "Sheets Action",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/actioncomponents/sheets-action/",
    "html": "Sheets Action\n\nA sheet action opens the link you give within the Messenger as an embedded iframe.\n\nMore on how Sheets work is in our Canvas Kit documentation.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsheet\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which hosts your sheet.\nExample Object\naction: {\n  type: \"sheet\",\n  url:  \"http://example.com\"\n}\n"
  },
  {
    "title": "Submit action",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/actioncomponents/submit-action/",
    "html": "Submit action\n\nA submit action triggers a Submit Request to be sent. This request will include all values which have been entered into all the interactive components on the current canvas.\n\nParameters\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsubmit\tYes\tThe type of action you are attaching to a component.\nExample Object\naction: {\n  \"type\": \"submit\"\n}\n"
  },
  {
    "title": "Text",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/presentationcomponents/text/",
    "html": "Text\n\nThe text component is used for rendering blocks of text. Links and bold font can be rendered through Markdown. There are different styles provided which edit the color, weight, and font size. These cannot be edited through Markdown.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttext\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\ntext\tAny stringMarkdown Links []()Markdown Bold **\tYes\tThe text that will be rendered.\nalign\tleft``center``right\tNo\tAligns the text. Default is left.\nstyle\theader``paragraph``muted``error\tNo\tStyles the text. Default is paragraph.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "Tags",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/tags/tags/",
    "html": "Tags\n\nA tag allows you to label your users and companies and list them using that tag.\n\nThis section describes how tags can be created, updated and deleted. It also describes how users and companies can be tagged or untagged individually or in bulk.\n\nHow to query using a tag is described in the respective sections for users and companies - see \"List by Tag, Segment, Company\" for Users, and \"List by Tag or Segment\" for Companies."
  },
  {
    "title": "View a Segment",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/segments/view-a-segment/",
    "html": "View a Segment\nExample Request\n$ curl https://api.intercom.io/segments/53203e244cba153d39000062 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"segment\",\n  \"id\": \"53203e244cba153d39000062\",\n  \"name\": \"New\",\n  \"created_at\": 1394621988,\n  \"updated_at\": 1394622004\n}\n\nintercom.segments.find(:id => '1234')\n\nSegment segment = Segment.find(\"1234\");\n\n\nEach segment has its own URL -\n\nhttps://api.intercom.io/segments/{id}\n\nWhere {id} is the value of the segment's id field. A GET request to a segment's URL will return the segment object.\n\nYou can also get a count for an individual user segment by adding the parameter include_count=true\n\n$ curl https://api.intercom.io/segments/58a707924f6651b07b94376c?include_count=true \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"segment\",\n    \"id\": \"58a707924f6651b07b94376c\",\n    \"name\": \"id=10\",\n    \"created_at\": 1487341458,\n    \"updated_at\": 1487341459,\n    \"person_type\": \"user\",\n    \"count\": 5\n}\n\nReturns\n\nA segment object."
  },
  {
    "title": "Text",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/presentationcomponents/text/",
    "html": "Text\n\nThe text component is used for rendering blocks of text. Links and bold font can be rendered through Markdown. There are different styles provided which edit the color, weight, and font size. These cannot be edited through Markdown.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttext\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\ntext\tAny stringMarkdown Links []()Markdown Bold **\tYes\tThe text that will be rendered.\nalign\tleft``center``right\tNo\tAligns the text. Default is left.\nstyle\theader``paragraph``muted``error\tNo\tStyles the text. Default is paragraph.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "Single-Select",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/interactivecomponents/single-select/",
    "html": "Single-Select\n\nA single-select component is used to capture a choice from up to 10 options that you provide. You can submit the value of the select option by:\n\nAdding an action to the single-select component\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the single-select component used as the key and the id from the chosen option as the value.\n\nSingle-Select Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tsingle-select\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of options.Can provide 2 to 10.\nlabel\tAny string\tNo\tThe text shown above the options.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOptions Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Segments",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/segments/segments/",
    "html": "Segments\n\nA segment is a group of your users defined by rules that you set. Users are automatically added to the segment every time the user updates to match those rules. Segments are different to tags, in that users need to be added to tags manually and tag members are not automatically managed.\n\nThe API supports fetching the list of segments created in your App, however creating and managing segments must be done through Intercom. For more information about segmenting users, please see the product documentation."
  },
  {
    "title": "List Tags for an App",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/tags/list-tags-for-an-app/",
    "html": "List Tags for an App\nExample List Tag Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/tags \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\n{\\n  \\\"type\\\": \\\"tag.list\\\",\\n  \\\"tags\\\": [\\n    {\\n      \\\"type\\\": \\\"tag\\\",\\n      \\\"name\\\": \\\"Beta User\\\",\\n      \\\"id\\\": 1\\n    },\\n    {\\n      \\\"type\\\": \\\"tag\\\",\\n      \\\"name\\\": \\\"Amazing User\\\",\\n      \\\"id\\\": 2\\n    },\\n    {\\n      \\\"type\\\": \\\"tag\\\",\\n      \\\"name\\\": \\\"Epic User\\\",\\n      \\\"id\\\": 3\\n    }\\n  ]\\n}\n\n\nYou can fetch the tags for an App by sending a GET request to https://api.intercom.io/tags.\n\nParameters\n\nNone.\n\nReturns\n\nA list of tag objects for the App.\n\nTag List\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'tag.list'\ntags\tarray\tA list of tag objects"
  },
  {
    "title": "List Segments",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/segments/list-segments/",
    "html": "List Segments\nExample Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/segments\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"segment.list\\\",\\n  \\\"segments\\\": [\\n    {\\n      \\\"created_at\\\": 1393613031,\\n      \\\"id\\\": \\\"5310d8e7598c9a0b24000002\\\",\\n      \\\"name\\\": \\\"Active\\\",\\n      \\\"type\\\": \\\"segment\\\",\\n      \\\"updated_at\\\": 1393613031\\n    },\\n    {\\n      \\\"created_at\\\": 1393613030,\\n      \\\"id\\\": \\\"5310d8e6598c9a0b24000001\\\",\\n      \\\"name\\\": \\\"New\\\",\\n      \\\"type\\\": \\\"segment\\\",\\n      \\\"updated_at\\\": 1393613030\\n    },\\n    {\\n      \\\"created_at\\\": 1393613031,\\n      \\\"id\\\": \\\"5310d8e7598c9a0b24000003\\\",\\n      \\\"name\\\": \\\"Slipping Away\\\",\\n      \\\"type\\\": \\\"segment\\\",\\n      \\\"updated_at\\\": 1393613031\\n    }\\n  ]\\n}\n\n\nYou can list the user segments for your App by sending a GET request to https://api.intercom.io/segments. Company segments can be listed by sending a GET request to https://api.intercom.io/segments?type=company.\n\nYou can also include counts in your segment model in the response if you add the parameter include_count=true in the request. Note that this is only relevant for user segments.\n\n$ curl 'https://api.intercom.io/segments?include_count=true'\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"segment.list\",\n    \"segments\": [\n        {\n            \"type\": \"segment\",\n            \"id\": \"56cc69cd8618d37b4500000c\",\n            \"name\": \"Active\",\n            \"created_at\": 1456237005,\n            \"updated_at\": 1487064099,\n            \"person_type\": \"user\",\n            \"count\": 3\n        },\n        {\n            \"type\": \"segment\",\n            \"id\": \"56cc69cc8618d37b4500000b\",\n            \"name\": \"New\",\n            \"created_at\": 1456237004,\n            \"updated_at\": 1473241975,\n            \"person_type\": \"user\",\n            \"count\": 0\n        },\n        {\n            \"type\": \"segment\",\n            \"id\": \"56cc69cd8618d37b4500000d\",\n            \"name\": \"Slipping Away\",\n            \"created_at\": 1456237005,\n            \"updated_at\": 1473241975,\n            \"person_type\": \"user\",\n            \"count\": 0\n        },\n        {\n            \"type\": \"segment\",\n            \"id\": \"56e6f1f2b7ebc2061200000d\",\n            \"name\": \"test3WebSession\",\n            \"created_at\": 1457975794,\n            \"updated_at\": 1473241976,\n            \"person_type\": \"user\",\n            \"count\": 1\n        }\n    ]\n}\n\nSegment List\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'segment.list'\nsegments\tarray\tA list of segment objects\npages\tobject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch.\nReturns\n\nA list of segment objects for the App. The result may also have a pages object if the response is paginated."
  },
  {
    "title": "List",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/interactivecomponents/list/",
    "html": "List\n\nA list component renders a list of items which you provide in an array. You can make each list item take an action by adding the relevant action object to the item:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nList Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tlist\tYes\tThe type of component you are rendering.\nitems\tArray (see below)\tYes\tThe items that will be rendered in the list.\ndisabled\ttrue``false\tNo\tStyles all list items and prevents the action.Default is false.\nItem Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\titem\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the item.\ntitle\tAny string\tYes\tThe text shown as the title for the item.\nsubtitle\tAny string\tNo\tThe text shown underneath the item's title.\ntertiary_text\tAny string\tNo\tThe text shown next to the subtitle, separates by a bullet.\nimage\tA valid HTTPS URL\tNo\tAn image that will be displayed to the left of the item.\nimage_width\tAny integer\tYes (if image provided)\tThe exact width of the image in pixels.\nimage_height\tAny integer\tYes (if image provided)\tThe exact height of the image in pixels.\nrounded_image\ttrue``false\tNo\tRounds the corners of the image.Default is false.\ndisabled\ttrue``false\tNo\tThe defined state of the inputted value to render a specific style.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nPreview"
  },
  {
    "title": "Create and Update Tags",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/tags/create-and-update-tags/",
    "html": "Create and Update Tags\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/tags \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d'\\n{\\n  \\\"name\\\": \\\"Independent\\\"\\n}'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"tag\\\",\\n  \\\"name\\\": \\\"Independent\\\",\\n  \\\"id\\\": \\\"17513\\\"\\n}\n\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/tags \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d'\\n{\\n  \\\"id\\\": \\\"17513\\\",\\n  \\\"name\\\": \\\"Independent\\\"\\n}'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"tag\\\",\\n  \\\"name\\\": \\\"Independent\\\",\\n  \\\"id\\\": \\\"17513\\\"\\n}\n\n\nYou can create a new tag by submitting a POST to https://api.intercom.io/tags along with a name for the tag. The tag name may contain whitespace and punctuation.\n\nIf the same tag name is sent multiple times, only one tag will be created for that name - this lets you avoid checking if a tag exists first.\n\nTag names are case insensitive - 'MyTag' and 'mytag' will result in a single tag being created.\n\nA tag's name can also be updated by posting a tag to https://api.intercom.io/tags. The submitted tag object will contain the id of the tag to update and a new name for the tag. A successful request will update the name value for that tag and return the updated tag in the response.\n\nAttributes\nAttribute\tRequired\tDescription\nname\tYes\tThe name of the tag, which will be created if not found, or the new name for the tag if this is an update request.\nid\tYes for update\tThe id of tag to updates.\nReturns\n\nThe newly created or updated tag object containing its name and id fields."
  },
  {
    "title": "Tag or Untag Users, Companies & Leads (Contacts)",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/tags/tag-or-untag-users-companies-leads-contacts/",
    "html": "Tag or Untag Users, Companies & Leads (Contacts)\nExample Tag Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/tags \\\\\\n-XPOST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d'\\n{\\n  \\\"name\\\": \\\"Independent\\\",\\n  \\\"users\\\": [\\n    {\\n      \\\"id\\\" : \\\"53427b7ecce5722303000003\\\"\\n    },\\n    {\\n      \\\"user_id\\\" : \\\"22\\\"\\n    },\\n    {\\n      \\\"email\\\" : \\\"a@b.com\\\"\\n    }\\n  ]\\n}\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"tag\\\",\\n  \\\"name\\\": \\\"Independent\\\",\\n  \\\"id\\\": \\\"17513\\\"\\n}\n\n\nYou can also tag users, companies, or leads (contacts) using a POST to https://api.intercom.io/tags. This lets you assign a tag to multiple users or companies at once. If the tag does not already exist it will be created for you.\n\nUsers can be tagged by supplying a users array. The array contains objects identifying users by their id, email or user_id fields.\n\nCompanies can be tagged by sending a companies array. The array contains objects identifying companies by their idor company_id fields.\n\nContacts/Leads can be tagged by supplying a users array. The array contains objects identifying leads by their id fields.\n\nCompanies and user tag directives cannot be mixed in the same request - a request will not process both company and user arrays.\n\nWe recommend tagging no more than 50 users at a time as larger amounts could result in a timeout.\n\nExample Untag Request\n\n$ curl https://api.intercom.io/tags \\\n-XPOST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d'\n{\n  \"name\": \"Independent\",\n  \"users\": [\n    {\n      \"id\" : \"53427b7ecce5722303000003\",\n      \"untag\": true\n    },\n    {\n      \"user_id\" : \"22\"\n    }\n  ]\n}\n\nintercom.tags.untag(name: 'blue', users: [{ id: \"42ea2f1b93891f6a99000427\" }])\n\n<?php\n$intercom->tagUsers(array(\n  \"name\" => \"Independent\",\n  \"users\" => array(\n    array(\"user_id\" => \"22\", \"untag\" => true)\n  )\n));\n?>\n\nUser user = new User()\n  .setEmail(\"simon@serenity.io\")\n  .untag();\nList<User> users = Lists.newArrayList(user);\nTag.tag(tag, new UserCollection(users));\n\nHTTP/1.1 200 Ok\n\n{\n  \"type\": \"tag\",\n  \"name\": \"Follow Up\",\n  \"id\": \"17513\"\n}\n\n\nTo untag a company or user, each user or company object sent in the tagging request can be submitted with an untag field whose value is set to true.\n\nObjects submitted with an untag field can be mixed with other objects being tagged. This allows tag and untag operations to be performed in a single request.\n\nThe default behaviour if untag is not suppled is to tag the object. Setting the untagvalue to false is the same as requesting the object be tagged.\n\nAttributes\nAttribute\tRequired\tDescription\nname\trequired\tThe name of the tag, which will be created if not found.\nusers\toptional\tAn array of objects identifying users.\ncompanies\toptional\tAn array of objects identifying companies.\nReturns\n\nThe tag object containing its name and id fields."
  },
  {
    "title": "Scroll over all users",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/users/iterating-over-all-users/",
    "html": "Scroll over all users\n\nThe List Users functionality does not work well for huge datasets, and can result in errors and performance problems when paging deeply. The Scroll API provides an efficient mechanism for iterating over all users in a dataset.\n\nEach workspace can only have 1 scroll open at a time. You'll get an error message if you try to have more than one open per workspace.\nIf the scroll isn't used for 1 minute, it expires and calls with that scroll param will fail\nIf the end of the scroll is reached, \"users\" will be empty and the scroll parameter will expire\n# Send a GET request to get the first page of users\n$ curl \\\n'https://api.intercom.io/users/scroll' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n# To get the next page use the scroll param returned in the response\n$ curl \\\n'https://api.intercom.io/users/scroll?scroll_param=562bc29f-ea55-4823-aaaf-f3faadceaa59' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"user.list\",\n  \"users\": [\n    {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ],\n  \"scroll_param\": \"25b649f7-4d33-4ef6-88f5-60e5b8244309\"\n}\n\n# You can use the scroll method to list all your users\nintercom.users.scroll.each { |user| puts user.name}\n# Alternatively you can use the scroll.next method to get 100 users with each request\nresult = intercom.users.scroll.next\nresult.scroll_param\n=> \"0730e341-63ef-44da-ab9c-9113f886326d\"\nresult = intercom.users.scroll.next(\"0730e341-63ef-44da-ab9c-9113f886326d\");\n\nSCROLL PARAMETER\n\nYou can get the first page of users by simply sending a GET request to the scroll endpoint. For subsequent requests you will need to use the scroll parameter from the response.\n\n❗️ Scroll network timeouts\n\nSince scroll is often used on large datasets network errors such as timeouts can be encountered. When this occurs you will need to restart your scroll query as it is not possible to continue from a specific point when using scroll.\n\nWhen this occurs you will see a HTTP 500 error with the following message:\n\"Request failed due to an internal network error. Please restart the scroll operation.\""
  },
  {
    "title": "Input",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/interactivecomponents/input/",
    "html": "Input\n\nAn input component is used to capture text input from the end user. You can submit the value of the input by:\n\nAdding an action to the input component (which will render an inline button)\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tinput\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the input.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.Will be overriden if save_state is saved.\nPreview"
  },
  {
    "title": "Dropdown",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/interactivecomponents/dropdown/",
    "html": "Dropdown\n\nA dropdown component is used to capture a choice from the options that you provide. You can submit the value of the select option by:\n\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the dropdown component used as the key and the id from the chosen option as the value.\n\nDropdown Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tdropdown\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of 2 or more options.\nlabel\tAny string\tNo\tThe text shown above the dropdown.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOption Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Checkbox",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/interactivecomponents/checkbox/",
    "html": "Checkbox\n\nA checkbox component is used to capture multiple choices from as many options as you want to provide. You can submit the options by:\n\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the checkbox component used as the key and an array containing the id of each chosen option as the value.\n\nCheckbox Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tcheckbox\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noption\tArray (See Below)\tYes\tThe list of options.Minimum of 1.\nlabel\tAny string\tNo\tThe text shown above the options.\nvalue\tArray containing the id of option's\tNo\tThe option's that are selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\nOptions Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown next to the checkbox.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Single-Select",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/interactivecomponents/single-select/",
    "html": "Single-Select\n\nA single-select component is used to capture a choice from up to 10 options that you provide. You can submit the value of the select option by:\n\nAdding an action to the single-select component\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the single-select component used as the key and the id from the chosen option as the value.\n\nSingle-Select Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tsingle-select\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of options.Can provide 2 to 10.\nlabel\tAny string\tNo\tThe text shown above the options.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOptions Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "List",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/interactivecomponents/list/",
    "html": "List\n\nA list component renders a list of items which you provide in an array. You can make each list item take an action by adding the relevant action object to the item:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nList Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tlist\tYes\tThe type of component you are rendering.\nitems\tArray (see below)\tYes\tThe items that will be rendered in the list.\ndisabled\ttrue``false\tNo\tStyles all list items and prevents the action.Default is false.\nItem Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\titem\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the item.\ntitle\tAny string\tYes\tThe text shown as the title for the item.\nsubtitle\tAny string\tNo\tThe text shown underneath the item's title.\ntertiary_text\tAny string\tNo\tThe text shown next to the subtitle, separates by a bullet.\nimage\tA valid HTTPS URL\tNo\tAn image that will be displayed to the left of the item.\nimage_width\tAny integer\tYes (if image provided)\tThe exact width of the image in pixels.\nimage_height\tAny integer\tYes (if image provided)\tThe exact height of the image in pixels.\nrounded_image\ttrue``false\tNo\tRounds the corners of the image.Default is false.\ndisabled\ttrue``false\tNo\tThe defined state of the inputted value to render a specific style.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nPreview"
  },
  {
    "title": "Button",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/interactivecomponents/button/",
    "html": "Button\n\nA button component is used to take an action by clicking a button. This can either:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tbutton\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tYes\tThe text that will be rendered inside the button.\naction\tAction Object\tYes\tThis can be a Submit Action, URL Action, or Sheets Action.\nstyle\tprimary``secondary``link\tNo\tStyles the button.Default is primary.\ndisabled\tfalse``true\tNo\tStyles the button and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Checkbox",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/interactivecomponents/checkbox/",
    "html": "Checkbox\n\nA checkbox component is used to capture multiple choices from as many options as you want to provide. You can submit the options by:\n\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the checkbox component used as the key and an array containing the id of each chosen option as the value.\n\nCheckbox Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tcheckbox\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noption\tArray (See Below)\tYes\tThe list of options.Minimum of 1.\nlabel\tAny string\tNo\tThe text shown above the options.\nvalue\tArray containing the id of option's\tNo\tThe option's that are selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\nOptions Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown next to the checkbox.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Input",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/interactivecomponents/input/",
    "html": "Input\n\nAn input component is used to capture text input from the end user. You can submit the value of the input by:\n\nAdding an action to the input component (which will render an inline button)\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tinput\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the input.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.Will be overriden if save_state is saved.\nPreview"
  },
  {
    "title": "Dropdown",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/interactivecomponents/dropdown/",
    "html": "Dropdown\n\nA dropdown component is used to capture a choice from the options that you provide. You can submit the value of the select option by:\n\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the dropdown component used as the key and the id from the chosen option as the value.\n\nDropdown Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tdropdown\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of 2 or more options.\nlabel\tAny string\tNo\tThe text shown above the dropdown.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOption Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "View a Note",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/notes/view-a-note/",
    "html": "View a Note\nExample Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/notes/2 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"note\\\",\\n  \\\"id\\\": \\\"2\\\",\\n  \\\"created_at\\\": 1389913951,\\n  \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n  \\\"user\\\": {\\n      \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\",\\n      \\\"type\\\": \\\"user\\\"\\n    },\\n  \\\"author\\\": {\\n    \\\"type\\\": \\\"admin\\\",\\n    \\\"id\\\": \\\"21\\\",\\n    \\\"name\\\": \\\"Jayne Cobb\\\",\\n    \\\"email\\\": \\\"jayne@serenity.io\\\",\\n    \\\"avatar\\\" : {\\n       \\\"type\\\":\\\"avatar\\\",\\n      \\\"image_url\\\": \\\"http://example.org/128Jayne.jpg\\\"\\n    },\\n    \\\"companies\\\": []\\n  }\\n}\n\n\nEach note has its own URL -\n\nhttps://api.intercom.io/notes/{id}\n\nWhere {id} is the value of the note's id field. A GET request to a note's URL will return the note object.\n\nReturns\n\nA note object."
  },
  {
    "title": "Retrieve a visitor",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/visitors/view-a-visitor/",
    "html": "Retrieve a visitor\nExample ID Request\n$ curl \\\n-s https://api.intercom.io/visitors/<id> \\   \n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nor \n\n$ curl \\\n-s https://api.intercom.io/visitors\\?user_id\\=16e690c0-485a-4e87-ae98-a326e788a4f7 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"visitor\",\n  \"id\": \"573479f784c5acde6a000575\",\n  \"user_id\": \"16e690c0-485a-4e87-ae98-a326e788a4f7\",\n  \"email\": \"winstonsmith@truth.org\",\n  \"name\": \"Winston Smith\",\n  ...\n}\n# NB: Full Visitor objects are returned\n\nvisitor = intercom.visitors.find(:id => \"530370b477ad7120001d\")\nvisitor = intercom.visitors.find(:user_id => \"8a88a590-e1c3-41e2-a502-e0649dbf721c\")\n\n\nYou can fetch the details of a single visitor.\n\nRequest Path Parameters\nParameter\tRequired?\tDescription\nid\tOne of\tId provided by Intercom.\n?user_id=\tOne of\tTo get the visitor user_id from the browser you can use the Intercom JS SDK following method : Intercom('getVisitorId').\nResponse\n\nThis will return a Visitor Model."
  },
  {
    "title": "The visitor model",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/visitors/visitor-object/",
    "html": "The visitor model\n\nVisitors are useful for representing anonymous people that have not yet been identified. They usually represent website visitors. Visitors are not visible in Intercom platform.\nThe Visitors resource provides methods to fetch, update, convert and delete.\n\nVisitor Object\nAttribute\tType\tDescription\ntype\tString\tValue is 'visitor'.\nid\tString\tThe Intercom defined id representing the Visitor.\ncreated_at\tDate (UNIX timestamp)\tThe time the Visitor was added to Intercom.\nupdated_at\tDate (UNIX timestamp)\tThe last time the Visitor was updated.\nuser_id\tString\tAutomatically generated identifier for the Visitor.\nname\tString\tThe name of the Visitor.\ncustom_attributes\tObject\tThe custom attributes you have set on the Visitor.\nlast_request_at\tDate (UNIX timestamp)\tThe time the Lead last recorded making a request.\navatar\tObject\tAn avatar object for the Visitor.\nunsubscribed_from_emails\tBoolean\tWhether the Visitor is unsubscribed from emails.\nlocation_data\tObject\tA Location Object relating to the Visitor.\nsocial_profiles\tList\tA list of social profiles associated with the Visitor.\nsegments\tList\tA list of segments the Visitor.\ntags\tList\tA list of tags associated with the Visitor."
  },
  {
    "title": "Update a visitor",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/visitors/update-a-visitor/",
    "html": "Update a visitor\nExample Request\n$ curl https://api.intercom.io/visitors \\\n-X PUT \\\n-H 'Authorization:Bearer <Your access token>'  \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"user_id\": \"124\",\n  \"name\": \"Winston Smith\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 9\n  }\n}'\n\nHTTP/1.1 200 OK\n\n{\n  \"user_id\": \"124\",\n  \"name\": \"Winston Smith\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 9\n  }\n  \n  # and the rest of the Visitor model\n}'\n\nvisitor.name = \"Winston Smith\"\nvisitor.custom_attribute[:foo] = 'bar'\nintercom.visitors.save(visitor)\n\n\nSending a PUT request to /visitors and passing identifiers (user_id or id) in the body will result in an update of an existing Visitor.\n\nRequest Body Parameters\nArgument\tType\tRequired?\tDescription\nid\tString\tOne of\tA unique identified for the visitor which is given by Intercom.\nuser_id\tString\tOne of\tA unique identified for the visitor which is given by you.\nname\tString\tNo\tThe visitor's name.\ncustom_attributes\tObject\tNo\tThe custom attributes which are set for the visitor.\nResponse\n\nThis will return a Visitor Model of the visitor you just updated."
  },
  {
    "title": "Delete a visitor",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/visitors/delete-a-visitor/",
    "html": "Delete a visitor\nExample Request & Response\ncurlcurl\n$ curl \\\\\\nhttps://api.intercom.io/visitors/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"visitor\\\",\\n  \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n  \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  ...\\n}\\n\n\n\nYou can delete a single visitor.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the visitor which is given by Intercom.\nResponse\n\nThis will return a Visitor Model of the visitor you just deleted."
  },
  {
    "title": "Segment Model",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/segments/segment-model/",
    "html": "Segment Model\nExample Object\n{\\n  \\\"type\\\": \\\"segment\\\",\\n  \\\"id\\\": \\\"53203e244cba153d39000062\\\",\\n  \\\"name\\\": \\\"New\\\",\\n  \\\"created_at\\\": 1394621988,\\n  \\\"updated_at\\\": 1394622004\\n}\n\nSegment Object\n\nA segment has a name and an id field along with created_at and updated_at timestamps. It can optionally include a count of the items in the segment when view or listing user segments.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is segment'\nid\tstring\tThe id representing the segment\nname\tstring\tThe name of the segment\ncreated_at\ttimestamp\tThe time the segment was created\nupdated_at\ttimestamp\tThe time the segment was updated\nperson_type\tstring\tType of the record: user or lead.\ncount\tinteger\tThe number of items in the user segment. It's returned when include_count=true is included in the request."
  },
  {
    "title": "View a Team",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/teams/view-a-team/",
    "html": "View a Team\nRetrieve a single team\n$ curl https://api.intercom.io/teams/2744328 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"admin_ids\": [\n        646303,\n        814860\n    ],\n    \"id\": \"2744328\",\n    \"name\": \"the_a_team\",\n    \"type\": \"team\"\n}\n\n\nEach admin object has its own URL, where the {id} is the value of the teams id field:\n\nhttps://api.intercom.io/teams/{id}"
  },
  {
    "title": "Stored Data",
    "url": "https://developers.intercom.com/docs/references/2.0/canvas-kit/responseobjects/stored-data/",
    "html": "Stored Data\nDescription\n\nA canvas object may optionally contain a stored_data object. This is where you can add key-value pairs of data that you want to be sent in whatever the next request is.\n\nFor example, the flow of your app might have multiple canvases with data being inputted on each one. You may want to have all this data available to use at the end of the flow for the final canvas. You can therefore put all this data in the stored_data object so it's sent in subsequent requests and is available at the end.\n\nExample Object\nstored_data: {\"key\": \"value\"} //Can be more than one pair\n"
  },
  {
    "title": "User",
    "url": "https://developers.intercom.com/docs/references/1.1/canvas-kit/requestobjects/user/",
    "html": "User\n\nThe user object provides information on the Intercom end-user. It is sent to your web-service as part of the submit flow when an end-user interacts with a card.\n\nMore on the user object can be found on the REST API Reference through this link. The user object provided in the messenger framework will contain the same attributes as noted in the REST API Reference."
  },
  {
    "title": "Create a Note",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/notes/create-a-note/",
    "html": "Create a Note\nExample Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/notes \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'  \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"admin_id\\\" : \\\"21\\\",\\n  \\\"body\\\": \\\"Text for my note\\\",\\n  \\\"user\\\": {\\n    \\\"id\\\" : \\\"5310d8e8598c9a0b24000005\\\"\\n  }\\n}'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"note\\\",\\n  \\\"id\\\": \\\"16\\\",\\n  \\\"created_at\\\": 1389913941,\\n  \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n  \\\"author\\\": {\\n    \\\"type\\\": \\\"admin\\\",\\n    \\\"id\\\": \\\"21\\\",\\n    \\\"name\\\": \\\"Jayne Cobb\\\",\\n    \\\"email\\\": \\\"jayne@serenity.io\\\",\\n    \\\"companies\\\": []\\n  },\\n  \\\"user\\\": {\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\"\\n  }\\n}\n\n\nNotes can be created via a POST method to https://api.intercom.io/notes, which accepts a JSON object describing the note.\n\nAttributes\n\nThe table below shows the fields you can use to create a note -\n\nArgument\tRequired\tDescription\nuser\tYes\tRepresentation of the user the note is to be created about.\nuser.user_id\tone of\tYour user_id for the user\nuser.email\tone of\tYour email address for the user\nuser.id\tone of\tThe user id for the user\nadmin_id\tNo\tThe id of the admin creating the note.\nbody\tYes\tThe text of the note.\nReturns\n\nA note object. The submitted body may be enclosed with html p elements in the response."
  },
  {
    "title": "Segment Model",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/segments/segment-model/",
    "html": "Segment Model\nExample Object\n{\\n  \\\"type\\\": \\\"segment\\\",\\n  \\\"id\\\": \\\"53203e244cba153d39000062\\\",\\n  \\\"name\\\": \\\"New\\\",\\n  \\\"created_at\\\": 1394621988,\\n  \\\"updated_at\\\": 1394622004\\n}\n\nSegment Object\n\nA segment has a name and an id field along with created_at and updated_at timestamps. It can optionally include a count of the items in the segment when view or listing user segments.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is segment'\nid\tstring\tThe id representing the segment\nname\tstring\tThe name of the segment\ncreated_at\ttimestamp\tThe time the segment was created\nupdated_at\ttimestamp\tThe time the segment was updated\nperson_type\tstring\tType of the record: user or lead.\ncount\tinteger\tThe number of items in the user segment. It's returned when include_count=true is included in the request."
  },
  {
    "title": "Tag Model",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/tags/tag-model/",
    "html": "Tag Model\nExample Object\n{\\n  \\\"id\\\": \\\"17513\\\",\\n  \\\"name\\\": \\\"independent\\\",\\n  \\\"type\\\": \\\"tag\\\"\\n}\n\nTag Object\n\nA tag has a name and an id field. Once created the id field cannot be changed, but the name field can be updated later to allow tag renaming.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'tag'\nid\tstring\tThe id of the tag\nname\tstring\tThe name of the tag"
  },
  {
    "title": "Tag Model",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/tags/tag-model/",
    "html": "Tag Model\nExample Object\n{\\n  \\\"id\\\": \\\"17513\\\",\\n  \\\"name\\\": \\\"independent\\\",\\n  \\\"type\\\": \\\"tag\\\"\\n}\n\nTag Object\n\nA tag has a name and an id field. Once created the id field cannot be changed, but the name field can be updated later to allow tag renaming.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'tag'\nid\tstring\tThe id of the tag\nname\tstring\tThe name of the tag"
  },
  {
    "title": "Segment Model",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/segments/segment-model/",
    "html": "Segment Model\nExample Object\n{\\n  \\\"type\\\": \\\"segment\\\",\\n  \\\"id\\\": \\\"53203e244cba153d39000062\\\",\\n  \\\"name\\\": \\\"New\\\",\\n  \\\"created_at\\\": 1394621988,\\n  \\\"updated_at\\\": 1394622004\\n}\n\nSegment Object\n\nA segment has a name and an id field along with created_at and updated_at timestamps. It can optionally include a count of the items in the segment when view or listing user segments.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is segment'\nid\tstring\tThe id representing the segment\nname\tstring\tThe name of the segment\ncreated_at\ttimestamp\tThe time the segment was created\nupdated_at\ttimestamp\tThe time the segment was updated\nperson_type\tstring\tType of the record: user or lead.\ncount\tinteger\tThe number of items in the user segment. It's returned when include_count=true is included in the request."
  },
  {
    "title": "View a User",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/users/view-a-user/",
    "html": "View a User\nExample ID Request\n$ curl \\\n-s https://api.intercom.io/users/5714dd359a3fd47136000001 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n{\n    \"type\": \"user\",\n    \"id\": \"5714dd359a3fd47136000001\",\n    \"user_id\": \"25\",\n    \"anonymous\": false,\n    \"email\": \"wash@serenity.io\",\n    \"phone\": \"555671243\",\n    \"name\": \"Hoban Washburne\",\n    \"pseudonym\": null,\n  ...\n}\n# NB: Full User objects are returned\n\nintercom.users.find(:id => \"5714dd359a3fd47136000001\")\n\n<?php\n\n$user = $intercom->users->getUser(\"596f35f744c4c5f0cd30c8ef\");\nprint_r($user->id);\n?>\n\nExample User ID Request\n$ curl \\\n-s https://api.intercom.io/users?user_id=25 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nintercom.users.find(:user_id => \"128\")\n\n<?php\n\n$user = $intercom->users->getUser(\"\", [\"user_id\" => \"111\"]);\nprint_r($user->id);\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"user_id\", \"1\");\nUser user = User.find(params);\n\nExample Email Request\ncurlcurlrubyphpjava\n$ curl \\\\\\n-s https://api.intercom.io/users?email=wash%40serenity.io \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n{\\n  \\\"pages\\\": {\\n    \\\"type\\\": \\\"pages\\\",\\n    \\\"next\\\": null,\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 1\\n  },\\n  \\\"total_count\\\": 1,\\n  \\\"limited\\\": false,\\n  \\\"type\\\": \\\"user.list\\\",\\n  \\\"users\\\": [\\n    {\\n      \\\"type\\\": \\\"user\\\",\\n      \\\"id\\\": \\\"5714dd359a3fd47136000001\\\",\\n      \\\"user_id\\\": \\\"25\\\",\\n      \\\"anonymous\\\": false,\\n      \\\"email\\\": \\\"wash@serenity.io\\\",\\n      \\\"phone\\\": \\\"555671243\\\",\\n      \\\"name\\\": \\\"Hoban Washburne\\\",\\n      \\\"pseudonym\\\": null\\n    }\\n  ]\\n}\\n# NB: Full User objects are returned\n\n\nEach user object has its own URL\n\nhttps://api.intercom.io/users/{id}\n\nWhere {id} is the value of the user's id field. This URL is the user's canonical address in the API.\n\nRequest Parameters\nParameter\tRequired\tDescription\nuser_id\tno\tThe user id you have defined for the user\nemail\tno\tThe email you have defined for the user\n\nA user can also be fetched using a user_id parameter in the url -\n\nhttps://api.intercom.io/users?user_id={user_id}\nReturns\n\nA user object.\n\nNote: When fetching users using an email or user_id parameter only the ones of type 'user' will be returned. However, it is possible to view a person of type 'contact' (lead) when viewing using their canonical address in the API, namely their id field."
  },
  {
    "title": "View a User",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/users/view-a-user/",
    "html": "View a User\nExample ID Request\n$ curl \\\n-s https://api.intercom.io/users/5714dd359a3fd47136000001 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n{\n    \"type\": \"user\",\n    \"id\": \"5714dd359a3fd47136000001\",\n    \"user_id\": \"25\",\n    \"anonymous\": false,\n    \"email\": \"wash@serenity.io\",\n    \"phone\": \"555671243\",\n    \"name\": \"Hoban Washburne\",\n    \"pseudonym\": null,\n  ...\n}\n# NB: Full User objects are returned\n\nintercom.users.find(:id => \"5714dd359a3fd47136000001\")\n\n<?php\n\n$user = $intercom->users->getUser(\"596f35f744c4c5f0cd30c8ef\");\nprint_r($user->id);\n?>\n\nExample User ID Request\n$ curl \\\n-s https://api.intercom.io/users?user_id=25 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nintercom.users.find(:user_id => \"128\")\n\n<?php\n\n$user = $intercom->users->getUser(\"\", [\"user_id\" => \"111\"]);\nprint_r($user->id);\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"user_id\", \"1\");\nUser user = User.find(params);\n\nExample Email Request\ncurlcurlrubyphpjava\n$ curl \\\\\\n-s https://api.intercom.io/users?email=wash%40serenity.io \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n{\\n  \\\"pages\\\": {\\n    \\\"type\\\": \\\"pages\\\",\\n    \\\"next\\\": null,\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 1\\n  },\\n  \\\"total_count\\\": 1,\\n  \\\"limited\\\": false,\\n  \\\"type\\\": \\\"user.list\\\",\\n  \\\"users\\\": [\\n    {\\n      \\\"type\\\": \\\"user\\\",\\n      \\\"id\\\": \\\"5714dd359a3fd47136000001\\\",\\n      \\\"user_id\\\": \\\"25\\\",\\n      \\\"anonymous\\\": false,\\n      \\\"email\\\": \\\"wash@serenity.io\\\",\\n      \\\"phone\\\": \\\"555671243\\\",\\n      \\\"name\\\": \\\"Hoban Washburne\\\",\\n      \\\"pseudonym\\\": null\\n    }\\n  ]\\n}\\n# NB: Full User objects are returned\n\n\nEach user object has its own URL\n\nhttps://api.intercom.io/users/{id}\n\nWhere {id} is the value of the user's id field. This URL is the user's canonical address in the API.\n\nRequest Parameters\nParameter\tRequired\tDescription\nuser_id\tno\tThe user id you have defined for the user\nemail\tno\tThe email you have defined for the user\n\nA user can also be fetched using a user_id or email parameter in the url, whose values are the company's user_id or email fields -\n\nhttps://api.intercom.io/users?user_id={user_id}\nhttps://api.intercom.io/users?email={email}\n\nThe email parameter value should be url encoded when sending.\n\nReturns\n\nA user object.\n\nNote: When fetching users using an email or user_id parameter only the ones of type 'user' will be returned. However, it is possible to view a person of type 'contact' (lead) when viewing using their canonical address in the API, namely their id field."
  },
  {
    "title": "Updating the Last Seen Time",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/users/updating-the-last-seen-time/",
    "html": "Updating the Last Seen Time\nExample Update for Last Seen Time\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/users \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"user_id\\\": \\\"25\\\",\\n  \\\"last_request_at\\\": 1480076371\\n}'\n\n{\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5714dd359a3fd47136000001\\\",\\n    \\\"user_id\\\": \\\"25\\\",\\n    \\\"anonymous\\\": false,\\n    \\\"email\\\": \\\"wash@serenity.io\\\",\\n    \\\"phone\\\": \\\"555671243\\\",\\n    \\\"name\\\": \\\"Hoban Washburne\\\",\\n    \\\"pseudonym\\\": null,\\n    \\\"avatar\\\": {\\n        \\\"type\\\": \\\"avatar\\\",\\n        \\\"image_url\\\": \\\"https://secure.gravatar.com/avatar/0c3c17fd49f45c43f482730782b36d36?s=24&d=identicon\\\"\\n    },\\n    \\\"app_id\\\": \\\"ja43hiec\\\",\\n    \\\"companies\\\": {\\n        \\\"type\\\": \\\"company.list\\\",\\n        \\\"companies\\\": [\\n            {\\n                \\\"type\\\": \\\"company\\\",\\n                \\\"company_id\\\": \\\"366\\\",\\n                \\\"id\\\": \\\"574854e3ecd0c547ae0000e4\\\",\\n                \\\"name\\\": \\\"Serenity\\\"\\n            }\\n        ]\\n    },\\n    \\\"location_data\\\": {\\n        ...\\n    },\\n    \\\"last_request_at\\\": 1480076371,\\n    \\\"last_seen_ip\\\": \\\"1.2.3.4\\\",\\n    \\\"created_at\\\": 1460985141,\\n    \\\"remote_created_at\\\": 1392731331,\\n    \\\"signed_up_at\\\": 1392731331,\\n    \\\"updated_at\\\": 1480076399,\\n    \\\"session_count\\\": 0,\\n    \\\"social_profiles\\\": {\\n        \\\"type\\\": \\\"social_profile.list\\\",\\n        \\\"social_profiles\\\": [\\n         ...\\n        ]\\n    },\\n    \\\"unsubscribed_from_emails\\\": false,\\n    \\\"user_agent_data\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9\\\",\\n    \\\"tags\\\": {\\n        \\\"type\\\": \\\"tag.list\\\",\\n        \\\"tags\\\": []\\n    },\\n    \\\"segments\\\": {\\n        \\\"type\\\": \\\"segment.list\\\",\\n        \\\"segments\\\": []\\n    },\\n    \\\"custom_attributes\\\": {\\n        \\\"paid_subscriber\\\": true,\\n        \\\"monthly_spend\\\": 155.5,\\n        \\\"team_mates\\\": 9,\\n        \\\"last_order_at\\\": 1475569818\\n    }\\n}\n\n\nTo update the last time the user was seen in your App, send the time in the last_request_at field in a user update request. You can also send update_last_request_at: true to tell the API to update the last request time to the time of your call (in UTC)."
  },
  {
    "title": "View a User",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/users/view-a-user/",
    "html": "View a User\nExample ID Request\n$ curl \\\n-s https://api.intercom.io/users/5714dd359a3fd47136000001 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"user\",\n    \"id\": \"5714dd359a3fd47136000001\",\n    \"user_id\": \"25\",\n    \"anonymous\": false,\n    \"email\": \"wash@serenity.io\",\n    \"phone\": \"555671243\",\n    \"name\": \"Hoban Washburne\",\n    \"pseudonym\": null,\n  ...\n}\n# NB: Full User objects are returned\n\nintercom.users.find(:id => \"5714dd359a3fd47136000001\")\n\n<?php\n\n$user = $intercom->users->getUser(\"596f35f744c4c5f0cd30c8ef\");\nprint_r($user->id);\n?>\n\nExample User ID Request\n$ curl \\\n-s https://api.intercom.io/users?user_id=25 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nintercom.users.find(:user_id => \"128\")\n\n<?php\n\n$user = $intercom->users->getUser(\"\", [\"user_id\" => \"111\"]);\nprint_r($user->id);\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"user_id\", \"1\");\nUser user = User.find(params);\n\nExample Email Request\n$ curl \\\n-s https://api.intercom.io/users?email=wash%40serenity.io \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nintercom.users.find(:email => \"bob@example.com\")\n\n<?php\n\n$user = $intercom->users->getUser(\"\", [\"email\" => \"plato@phil.com\"]);\nprint_r($user->id);\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"email\", \"malcolm@serenity.io\");\nUser user = User.find(params);\n\n\nEach user object has its own URL\n\nhttps://api.intercom.io/users/{id}\n\nWhere {id} is the value of the user's id field. This URL is the user's canonical address in the API.\n\nRequest Parameters\nParameter\tRequired\tDescription\nuser_id\tno\tThe user id you have defined for the user\nemail\tno\tThe email you have defined for the user\n\nA user can also be fetched using a user_id in the url.\n\nhttps://api.intercom.io/users?user_id={user_id}\nReturns\n\nA user object.\n\nNote: When fetching users using an email or user_id parameter only the ones of type 'user' will be returned. However, it is possible to view a person of type 'contact' (lead) when viewing using their canonical address in the API, namely their id field."
  },
  {
    "title": "User Model",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/users/user-model/",
    "html": "User Model\nExample User Object (i.e. example JSON response)\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n  \\\"user_id\\\": \\\"25\\\",\\n  \\\"email\\\": \\\"wash@serenity.io\\\",\\n  \\\"phone\\\": \\\"+1123456789\\\",\\n  \\\"name\\\": \\\"Hoban Washburne\\\",\\n  \\\"updated_at\\\": 1392734388,\\n  \\\"unsubscribed_from_emails\\\": false,\\n  \\\"last_request_at\\\": 1397574667,\\n  \\\"signed_up_at\\\": 1392731331,\\n  \\\"created_at\\\": 1392734388,\\n  \\\"session_count\\\": 179,\\n  \\\"pseudonym\\\": null,\\n  \\\"anonymous\\\": false,\\n  \\\"referrer\\\": \\\"https://example.org\\\",\\n  \\\"owner_id\\\": \\\"321452\\\",\\n  \\\"utm_campaign\\\": null,\\n  \\\"utm_content\\\": null,\\n  \\\"utm_medium\\\": null,\\n  \\\"utm_source\\\": null,\\n  \\\"utm_term\\\": null,\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"monthly_spend\\\": 155.5,\\n    \\\"team_mates\\\": 1\\n  },\\n  \\\"avatar\\\": {\\n    \\\"type\\\":\\\"avatar\\\",\\n    \\\"image_url\\\": \\\"https://example.org/128Wash.jpg\\\"\\n  },\\n  \\\"location_data\\\": {\\n      \\\"type\\\": \\\"location_data\\\",\\n      \\\"city_name\\\": \\\"Dublin\\\",\\n      \\\"continent_code\\\": \\\"EU\\\",\\n      \\\"country_code\\\": \\\"IRL\\\",\\n      \\\"country_name\\\": \\\"Ireland\\\",\\n      \\\"postal_code\\\": null,\\n      \\\"region_name\\\": \\\"Dublin\\\",\\n      \\\"timezone\\\": \\\"Europe/Dublin\\\"\\n  },\\n  \\\"social_profiles\\\": {\\n    \\\"type\\\":\\\"social_profile.list\\\",\\n    \\\"social_profiles\\\": [\\n      {\\n        \\\"name\\\": \\\"Twitter\\\",\\n        \\\"id\\\": \\\"1235d3213\\\",\\n        \\\"username\\\": \\\"th1sland\\\",\\n        \\\"url\\\": \\\"http://twitter.com/th1sland\\\"\\n      }\\n    ]\\n  },\\n  \\\"companies\\\": {\\n    \\\"type\\\": \\\"company.list\\\",\\n    \\\"companies\\\": [\\n      {\\n        \\\"id\\\" : \\\"530370b477ad7120001e\\\"\\n      }\\n    ]\\n  },\\n  \\\"segments\\\": {\\n    \\\"type\\\": \\\"segment.list\\\",\\n    \\\"segments\\\": [ ]\\n  },\\n  \\\"tags\\\": {\\n    \\\"type\\\": \\\"tag.list\\\",\\n    \\\"tags\\\": [\\n      {\\n        \\\"id\\\": \\\"202\\\"\\n      }\\n    ]\\n  }\\n}\n\nExample List of Users\n{\\n  \\\"type\\\": \\\"user.list\\\",\\n  \\\"total_count\\\": 1, \\n  \\\"users\\\": [\\n    # an array of user objects\\n  ],\\n  \\\"pages\\\": {}\\n}\n\nUser Object\n\nA user object contains the following fields\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user' or 'contact'\nid\tstring\tThe Intercom defined id representing the user\ncreated_at\ttimestamp\tThe time (in seconds) the user was added to Intercom\nsigned_up_at\ttimestamp\tThe time (in seconds) the user signed up\nupdated_at\ttimestamp\tThe last time the user was updated\nuser_id\tstring\tThe user id you have defined for the user. (Max limit of 255 UTF-8 characters, and should not have trailing or leading spaces)\nemail\tstring\tThe email you have defined for the user. (Max limit of 255 UTF-8 characters, and should not have trailing or leading spaces)\nphone\tstring\tThe phone number of the user\ncustom_attributes\tobject\tThe custom attributes you have set on the user (case sensitive).\nlast_request_at\ttimestamp\tThe time the user last recorded making a request\nsession_count\tinteger\tHow many sessions the user has recorded\navatar\tobject\tAn avatar object for the user.\nunsubscribed_from_emails\tboolean\tWhether the user is unsubscribed from emails\nlocation_data\tobject\tA Location Object relating to the user\npseudonym\tstring\tThe pseudonym used if this user was previously a Lead (https://www.intercom.com/help/en/Intercom-for-customer-communication/the-intercom-messenger)\nanonymous\tboolean\tWhether or not this is a Lead. Always false\ncompanies\tlist\tA list of companies for the user\nsocial_profiles\tlist\tA list of social profiles associated with the user\nsegments\tlist\tThis will return an empty list of segments as part of our effort to deprecate this attribute on the user model for performance and accuracy reasons.\ntags\tlist\tA list of tags associated with the user\nname\tstring\tThe full name of the user\nreferrer\tstring\tThe URL of the page the user was last on\nutm_source\tstring\tIdentifies which site sent the traffic\nutm_medium\tstring\tIdentifies what type of link was used\nutm_campaign\tstring\tIdentifies a specific product promotion or strategic campaign\nutm_term\tstring\tIdentifies search terms\nutm_content\tstring\tIdentifies what specifically was clicked to bring the user to the site\n\nNote that in some parts of the API, the user id field may be referred to using intercom_user_id.\nAny integer values in the user model are limited to the int32 range -2^31 to 2^31 -1\n\nSocial Profile Object\nAttribute\tType\tDescription\ntype\tstring\tValue is 'social_profile'\nname\tstring\tThe name of the service (e.g., twitter, facebook)\nusername\tstring\tUser name or handle on the service\nurl\tstring\tThe user homepage on the service\nid\tstring\tOptional. User ID on the service\n\nSocial data is read only and can not be updated via the API.\n\nAvatar Object\nAttribute\tType\tDescription\ntype\tstring\tValue is 'avatar'\nimage_url\tstring\tAn avatar image URL. note: the image url needs to be https.\nLocation Object\nAttribute\tType\tDescription\ntype\tstring\tValue is 'location_data'\ncity_name\tstring\tOptional. A city name\ncontinent_code\tstring\tOptional. A continent code\ncountry_code\tstring\tOptional. An ISO 3166 country code\ncountry_name\tstring\tOptional. The country name\nlatitude\tnumber\tOptional. The latitude\nlongitude\tnumber\tOptional. The longitude\npostal_code\tstring\tOptional. A postal code\nregion_name\tstring\tOptional. A region name\ntimezone\tstring\tOptional. An ISO 8601 timezone\n\nLocation data is read only and can not be updated via the API.\n\nUser List\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user.list'\ntotal_count\tinteger\tThe number of users for this app\npages\tobject\tA Pagination object\nusers\tarray\tA list of users\n\nThe user list does not return Leads - this means all objects in the list will have an anonymous value of false. Any user in the list that was converted from a Lead will retain their pseudonym value."
  },
  {
    "title": "List Users",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/users/list-users/",
    "html": "List Users\nOverview\nRequest Parameters\n\nYou can optionally request the result page size and which page to fetch as follows:\n\nParameter\tRequired?\tWorks with...\tDescription\npage\tno\tAll, Email, Phone\tWhat page of results to fetch. Defaults to first page.\nper_page\tno\tAll, Email, Phone\tHow many results per page. Defaults to 50, Max is 60.\norder\tno\tAll\tReturns the users in ascending or descending order. Valid values: asc or desc. Defaults to desc.\nsort\tno\tAll\tWhat field to sort the results by. Valid values: created_at, last_request_at, signed_up_at, updated_at.\ncreated_since\tno\tAll\tLimits results to users that were created in that last number of days.\nReturns\n\nA pageable list of users. The user list contains a pages object that indicates if more users exist via the next field, whose value is a URL that can be used to fetch the next page. If the next field is not present, that indicates there are no further users in the list.\n\nWhen using the Users endpoint and the pages object to iterate through the returned users, there is a limit of 10,000 Users that can be returned. If you need to list or iterate on more than 10,000 Users, please use the Scroll API.\n\nList all Users\nList all Users\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/users \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept: application/json'\n\nHTTP/1.1 200 OK{  \\\"type\\\": \\\"user.list\\\",  \\\"total_count\\\": 105,  \\\"users\\\": [    {      \\\"type\\\": \\\"user\\\",      \\\"id\\\": \\\"530370b477ad7120001d\\\",       ...     },     ...   ],  \\\"pages\\\": {    \\\"next\\\": \\\"https://api.intercom.io/users?per_page=50&page=2\\\",    \\\"page\\\": 1,    \\\"per_page\\\": 50,    \\\"total_pages\\\": 3  }}# NB: Full User objects are returned\n\n\nYou can fetch a list of all users. The user list is sorted by the created_at field and by default is ordered descending, most recently created first.\n\nList Users by Email\nList by Email\n$ curl https://api.intercom.io/users?email=test@test.com \\\n-H 'Authorization: Bearer YOUR_ACCESS_TOKEN' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\n\n{\n    \"limited\": false,\n    \"pages\": {\n        \"next\": null,\n        \"page\": 1,\n        \"per_page\": 50,\n        \"total_pages\": 1,\n        \"type\": \"pages\"\n    },\n    \"total_count\": 3,\n    \"type\": \"user.list\",\n    \"users\": [\n        {\n            \"anonymous\": false,\n            \"app_id\": \"fyq3wodw\",\n            \"created_at\": 1506339558,\n            \"custom_attributes\": {},\n            \"do_not_track\": null,\n            \"email\": \"test@test.com\",\n            \"has_hard_bounced\": false,\n            \"id\": \"45c8eae6fac10f5584e7508e\",\n            \"last_request_at\": 1529737920,\n            \"last_seen_ip\": \"78.144.182.179\",\n            ....\n            ....\n        },\n        {\n            \"anonymous\": true,\n            \"app_id\": \"fyq3wodw\",\n            \"created_at\": 1503488750,\n            \"custom_attributes\": {},\n            \"do_not_track\": null,\n            \"email\": \"test@test.com\",\n            \"has_hard_bounced\": false,\n            \"id\": \"5123d6aeeda850883ed8ba7c2\",\n            \"last_request_at\": 1503488749,\n            ....\n            ....\n        },\n        {\n            \"anonymous\": false,\n            \"app_id\": \"fyq3wodw\",\n            \"created_at\": 1494940172,\n            \"custom_attributes\": {},\n            \"do_not_track\": null,\n            \"email\": \"test@test.com\",\n            \"has_hard_bounced\": false,\n            \"id\": \"789afa0cb781d52fd3044ecc\",\n            \"last_request_at\": 1494940211,\n            ....\n            ....\n        }\n    ]\n}\n\n\nYou can fetch Users with a given email by querying the users resource with an email parameter.\n\nThe email parameter value should be url encoded when sending.\n\nList Users by Phone\nList by Phone\n$ curl https://api.intercom.io/users?phone=00353876543210 \\\n-H 'Authorization: Bearer YOUR_ACCESS_TOKEN' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\n\n{\n    \"limited\": false,\n    \"pages\": {\n        \"next\": null,\n        \"page\": 1,\n        \"per_page\": 50,\n        \"total_pages\": 1,\n        \"type\": \"pages\"\n    },\n    \"total_count\": 3,\n    \"type\": \"user.list\",\n    \"users\": [\n        {\n            \"anonymous\": false,\n            \"app_id\": \"fyq3wodw\",\n            \"created_at\": 1506339558,\n            \"custom_attributes\": {},\n            \"do_not_track\": null,\n            \"email\": \"test@test.com\",\n            \"has_hard_bounced\": false,\n            \"id\": \"45c8eae6fac10f5584e7508e\",\n            \"last_request_at\": 1529737920,\n            \"last_seen_ip\": \"78.144.182.179\",\n            \"phone\": \"00353876543210\"\n            ....\n            ....\n        },\n        {\n            \"anonymous\": true,\n            \"app_id\": \"fyq3wodw\",\n            \"created_at\": 1503488750,\n            \"custom_attributes\": {},\n            \"do_not_track\": null,\n            \"email\": \"test@test.com\",\n            \"has_hard_bounced\": false,\n            \"id\": \"5123d6aeeda850883ed8ba7c2\",\n            \"last_request_at\": 1503488749,\n            \"phone\": \"00353876543210\"\n            ....\n            ....\n        },\n        {\n            \"anonymous\": false,\n            \"app_id\": \"fyq3wodw\",\n            \"created_at\": 1494940172,\n            \"custom_attributes\": {},\n            \"do_not_track\": null,\n            \"email\": \"test@test.com\",\n            \"has_hard_bounced\": false,\n            \"id\": \"789afa0cb781d52fd3044ecc\",\n            \"last_request_at\": 1494940211,\n\t\t\t\t\t\t\"phone\": \"00353876543210\"\n            ....\n            ....\n        }\n    ]\n}\n\n\nYou can fetch Users with a given phone number by querying the users resource with a phone parameter."
  },
  {
    "title": "List Users",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/users/list-users/",
    "html": "List Users\nList Users Example\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/users \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept: application/json'\n\nHTTP/1.1 200 OK{  \\\"type\\\": \\\"user.list\\\",  \\\"total_count\\\": 105,  \\\"users\\\": [    {      \\\"type\\\": \\\"user\\\",      \\\"id\\\": \\\"530370b477ad7120001d\\\",       ...     },     ...   ],  \\\"pages\\\": {    \\\"next\\\": \\\"https://api.intercom.io/users?per_page=50&page=2\\\",    \\\"page\\\": 1,    \\\"per_page\\\": 50,    \\\"total_pages\\\": 3  }}# NB: Full User objects are returned\n\n\nYou can fetch a list of users. The user list is sorted by the created_at field and by default is ordered descending, most recently created first.\n\nRequest Parameters\n\nYou can optionally request the result page size and which page to fetch as follows -\n\nParameter\tRequired\tDescription\npage\tno\twhat page of results to fetch defaults to first page.\nper_page\tno\thow many results per page defaults to 50, max is 60.\norder\tno\tasc or desc. Return the users in ascending or descending order. defaults to desc.\nsort\tno\twhat field to sort the results by. Valid values: created_at, last_request_at, signed_up_at, updated_at,\ncreated_since\tno\tlimit results to users that were created in that last number of days.\nReturns\n\nA pageable list of users. The user list contains a pages object that indicates if more users exist via the next field, whose value is a URL that can be used to fetch the next page. If the next field is not present, that indicates there are no further users in the list.\n\nWhen using the Users endpoint and the pages object to iterate through the returned users, there is a limit of 10,000 Users that can be returned. If you need to list or iterate on more than 10,000 Users, please use the Scroll API."
  },
  {
    "title": "Updating the Last Seen Time",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/users/updating-the-last-seen-time/",
    "html": "Updating the Last Seen Time\nExample Update for Last Seen Time\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/users \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"user_id\\\": \\\"25\\\",\\n  \\\"last_request_at\\\": 1480076371\\n}'\n\n{\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5714dd359a3fd47136000001\\\",\\n    \\\"user_id\\\": \\\"25\\\",\\n    \\\"anonymous\\\": false,\\n    \\\"email\\\": \\\"wash@serenity.io\\\",\\n    \\\"phone\\\": \\\"555671243\\\",\\n    \\\"name\\\": \\\"Hoban Washburne\\\",\\n    \\\"pseudonym\\\": null,\\n    \\\"avatar\\\": {\\n        \\\"type\\\": \\\"avatar\\\",\\n        \\\"image_url\\\": \\\"https://secure.gravatar.com/avatar/0c3c17fd49f45c43f482730782b36d36?s=24&d=identicon\\\"\\n    },\\n    \\\"app_id\\\": \\\"ja43hiec\\\",\\n    \\\"companies\\\": {\\n        \\\"type\\\": \\\"company.list\\\",\\n        \\\"companies\\\": [\\n            {\\n                \\\"type\\\": \\\"company\\\",\\n                \\\"company_id\\\": \\\"366\\\",\\n                \\\"id\\\": \\\"574854e3ecd0c547ae0000e4\\\",\\n                \\\"name\\\": \\\"Serenity\\\"\\n            }\\n        ]\\n    },\\n    \\\"location_data\\\": {\\n        ...\\n    },\\n    \\\"last_request_at\\\": 1480076371,\\n    \\\"last_seen_ip\\\": \\\"1.2.3.4\\\",\\n    \\\"created_at\\\": 1460985141,\\n    \\\"remote_created_at\\\": 1392731331,\\n    \\\"signed_up_at\\\": 1392731331,\\n    \\\"updated_at\\\": 1480076399,\\n    \\\"session_count\\\": 0,\\n    \\\"social_profiles\\\": {\\n        \\\"type\\\": \\\"social_profile.list\\\",\\n        \\\"social_profiles\\\": [\\n         ...\\n        ]\\n    },\\n    \\\"unsubscribed_from_emails\\\": false,\\n    \\\"user_agent_data\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9\\\",\\n    \\\"tags\\\": {\\n        \\\"type\\\": \\\"tag.list\\\",\\n        \\\"tags\\\": []\\n    },\\n    \\\"segments\\\": {\\n        \\\"type\\\": \\\"segment.list\\\",\\n        \\\"segments\\\": []\\n    },\\n    \\\"custom_attributes\\\": {\\n        \\\"paid_subscriber\\\": true,\\n        \\\"monthly_spend\\\": 155.5,\\n        \\\"team_mates\\\": 9,\\n        \\\"last_order_at\\\": 1475569818\\n    }\\n}\n\n\nTo update the last time the user was seen in your App, send the time in the last_request_at field in a user update request. You can also send update_last_request_at: true to tell the API to update the last request time to the time of your call (in UTC)."
  },
  {
    "title": "User Model",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/users/user-model/",
    "html": "User Model\nExample User Object (i.e. example JSON response)\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n  \\\"user_id\\\": \\\"25\\\",\\n  \\\"email\\\": \\\"wash@serenity.io\\\",\\n  \\\"phone\\\": \\\"+1123456789\\\",\\n  \\\"name\\\": \\\"Hoban Washburne\\\",\\n  \\\"updated_at\\\": 1392734388,\\n  \\\"unsubscribed_from_emails\\\": false,\\n  \\\"last_request_at\\\": 1397574667,\\n  \\\"signed_up_at\\\": 1392731331,\\n  \\\"created_at\\\": 1392734388,\\n  \\\"session_count\\\": 179,\\n  \\\"pseudonym\\\": null,\\n  \\\"anonymous\\\": false,\\n  \\\"referrer\\\": \\\"https://example.org\\\",\\n  \\\"owner_id\\\": \\\"321452\\\",\\n  \\\"utm_campaign\\\": null,\\n  \\\"utm_content\\\": null,\\n  \\\"utm_medium\\\": null,\\n  \\\"utm_source\\\": null,\\n  \\\"utm_term\\\": null,\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"monthly_spend\\\": 155.5,\\n    \\\"team_mates\\\": 1\\n  },\\n  \\\"avatar\\\": {\\n    \\\"type\\\":\\\"avatar\\\",\\n    \\\"image_url\\\": \\\"https://example.org/128Wash.jpg\\\"\\n  },\\n  \\\"location_data\\\": {\\n      \\\"type\\\": \\\"location_data\\\",\\n      \\\"city_name\\\": \\\"Dublin\\\",\\n      \\\"continent_code\\\": \\\"EU\\\",\\n      \\\"country_code\\\": \\\"IRL\\\",\\n      \\\"country_name\\\": \\\"Ireland\\\",\\n      \\\"postal_code\\\": null,\\n      \\\"region_name\\\": \\\"Dublin\\\",\\n      \\\"timezone\\\": \\\"Europe/Dublin\\\"\\n  },\\n  \\\"social_profiles\\\": {\\n    \\\"type\\\":\\\"social_profile.list\\\",\\n    \\\"social_profiles\\\": [\\n      {\\n        \\\"name\\\": \\\"Twitter\\\",\\n        \\\"id\\\": \\\"1235d3213\\\",\\n        \\\"username\\\": \\\"th1sland\\\",\\n        \\\"url\\\": \\\"http://twitter.com/th1sland\\\"\\n      }\\n    ]\\n  },\\n  \\\"companies\\\": {\\n    \\\"type\\\": \\\"company.list\\\",\\n    \\\"companies\\\": [\\n      {\\n        \\\"id\\\" : \\\"530370b477ad7120001e\\\"\\n      }\\n    ]\\n  },\\n  \\\"segments\\\": {\\n    \\\"type\\\": \\\"segment.list\\\",\\n    \\\"segments\\\": [ ]\\n  },\\n  \\\"tags\\\": {\\n    \\\"type\\\": \\\"tag.list\\\",\\n    \\\"tags\\\": [\\n      {\\n        \\\"id\\\": \\\"202\\\"\\n      }\\n    ]\\n  }\\n}\n\nExample List of Users\n{\\n  \\\"type\\\": \\\"user.list\\\",\\n  \\\"total_count\\\": 1, \\n  \\\"users\\\": [\\n    # an array of user objects\\n  ],\\n  \\\"pages\\\": {}\\n}\n\nUser Object\n\nA user object contains the following fields\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user' or 'contact'\nid\tstring\tThe Intercom defined id representing the user\ncreated_at\ttimestamp\tThe time (in seconds) the user was added to Intercom\nsigned_up_at\ttimestamp\tThe time (in seconds) the user signed up\nupdated_at\ttimestamp\tThe last time the user was updated\nuser_id\tstring\tThe user id you have defined for the user. (Max limit of 255 UTF-8 characters, and should not have trailing or leading spaces)\nemail\tstring\tThe email you have defined for the user. (Max limit of 255 UTF-8 characters, and should not have trailing or leading spaces)\nphone\tstring\tThe phone number of the user\ncustom_attributes\tobject\tThe custom attributes you have set on the user (case sensitive).\nlast_request_at\ttimestamp\tThe time the user last recorded making a request\nsession_count\tinteger\tHow many sessions the user has recorded\navatar\tobject\tAn avatar object for the user.\nunsubscribed_from_emails\tboolean\tWhether the user is unsubscribed from emails\nlocation_data\tobject\tA Location Object relating to the user\npseudonym\tstring\tThe pseudonym used if this user was previously a Lead (https://www.intercom.com/help/en/Intercom-for-customer-communication/the-intercom-messenger)\nanonymous\tboolean\tWhether or not this is a Lead. Always false\ncompanies\tlist\tA list of companies for the user\nsocial_profiles\tlist\tA list of social profiles associated with the user\nsegments\tlist\tThis will return an empty list of segments as part of our effort to deprecate this attribute on the user model for performance and accuracy reasons.\ntags\tlist\tA list of tags associated with the user\nname\tstring\tThe full name of the user\nreferrer\tstring\tThe URL of the page the user was last on\nutm_source\tstring\tIdentifies which site sent the traffic\nutm_medium\tstring\tIdentifies what type of link was used\nutm_campaign\tstring\tIdentifies a specific product promotion or strategic campaign\nutm_term\tstring\tIdentifies search terms\nutm_content\tstring\tIdentifies what specifically was clicked to bring the user to the site\n\nNote that in some parts of the API, the user id field may be referred to using intercom_user_id.\nAny integer values in the user model are limited to the int32 range -2^31 to 2^31 -1\n\nSocial Profile Object\nAttribute\tType\tDescription\ntype\tstring\tValue is 'social_profile'\nname\tstring\tThe name of the service (e.g., twitter, facebook)\nusername\tstring\tUser name or handle on the service\nurl\tstring\tThe user homepage on the service\nid\tstring\tOptional. User ID on the service\n\nSocial data is read only and can not be updated via the API.\n\nAvatar Object\nAttribute\tType\tDescription\ntype\tstring\tValue is 'avatar'\nimage_url\tstring\tAn avatar image URL. note: the image url needs to be https.\nLocation Object\nAttribute\tType\tDescription\ntype\tstring\tValue is 'location_data'\ncity_name\tstring\tOptional. A city name\ncontinent_code\tstring\tOptional. A continent code\ncountry_code\tstring\tOptional. An ISO 3166 country code\ncountry_name\tstring\tOptional. The country name\nlatitude\tnumber\tOptional. The latitude\nlongitude\tnumber\tOptional. The longitude\npostal_code\tstring\tOptional. A postal code\nregion_name\tstring\tOptional. A region name\ntimezone\tstring\tOptional. An ISO 8601 timezone\n\nLocation data is read only and can not be updated via the API.\n\nUser List\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user.list'\ntotal_count\tinteger\tThe number of users for this app\npages\tobject\tA Pagination object\nusers\tarray\tA list of users\n\nThe user list does not return Leads - this means all objects in the list will have an anonymous value of false. Any user in the list that was converted from a Lead will retain their pseudonym value."
  },
  {
    "title": "User Model",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/users/user-model/",
    "html": "User Model\nExample User Object (i.e. example JSON response)\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n  \\\"user_id\\\": \\\"25\\\",\\n  \\\"email\\\": \\\"wash@serenity.io\\\",\\n  \\\"phone\\\": \\\"+1123456789\\\",\\n  \\\"name\\\": \\\"Hoban Washburne\\\",\\n  \\\"updated_at\\\": 1392734388,\\n  \\\"unsubscribed_from_emails\\\": false,\\n  \\\"last_request_at\\\": 1397574667,\\n  \\\"signed_up_at\\\": 1392731331,\\n  \\\"created_at\\\": 1392734388,\\n  \\\"session_count\\\": 179,\\n  \\\"pseudonym\\\": null,\\n  \\\"anonymous\\\": false,\\n  \\\"referrer\\\": \\\"https://example.org\\\",\\n  \\\"owner_id\\\": \\\"321452\\\",\\n  \\\"utm_campaign\\\": null,\\n  \\\"utm_content\\\": null,\\n  \\\"utm_medium\\\": null,\\n  \\\"utm_source\\\": null,\\n  \\\"utm_term\\\": null,\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"monthly_spend\\\": 155.5,\\n    \\\"team_mates\\\": 1\\n  },\\n  \\\"avatar\\\": {\\n    \\\"type\\\":\\\"avatar\\\",\\n    \\\"image_url\\\": \\\"https://example.org/128Wash.jpg\\\"\\n  },\\n  \\\"location_data\\\": {\\n      \\\"type\\\": \\\"location_data\\\",\\n      \\\"city_name\\\": \\\"Dublin\\\",\\n      \\\"continent_code\\\": \\\"EU\\\",\\n      \\\"country_code\\\": \\\"IRL\\\",\\n      \\\"country_name\\\": \\\"Ireland\\\",\\n      \\\"postal_code\\\": null,\\n      \\\"region_name\\\": \\\"Dublin\\\",\\n      \\\"timezone\\\": \\\"Europe/Dublin\\\"\\n  },\\n  \\\"social_profiles\\\": {\\n    \\\"type\\\":\\\"social_profile.list\\\",\\n    \\\"social_profiles\\\": [\\n      {\\n        \\\"name\\\": \\\"Twitter\\\",\\n        \\\"id\\\": \\\"1235d3213\\\",\\n        \\\"username\\\": \\\"th1sland\\\",\\n        \\\"url\\\": \\\"http://twitter.com/th1sland\\\"\\n      }\\n    ]\\n  },\\n  \\\"companies\\\": {\\n    \\\"type\\\": \\\"company.list\\\",\\n    \\\"companies\\\": [\\n      {\\n        \\\"id\\\" : \\\"530370b477ad7120001e\\\"\\n      }\\n    ]\\n  },\\n  \\\"segments\\\": {\\n    \\\"type\\\": \\\"segment.list\\\",\\n    \\\"segments\\\": [ ]\\n  },\\n  \\\"tags\\\": {\\n    \\\"type\\\": \\\"tag.list\\\",\\n    \\\"tags\\\": [\\n      {\\n        \\\"id\\\": \\\"202\\\"\\n      }\\n    ]\\n  }\\n}\n\nExample List of Users\n{\\n  \\\"type\\\": \\\"user.list\\\",\\n  \\\"total_count\\\": 1, \\n  \\\"users\\\": [\\n    # an array of user objects\\n  ],\\n  \\\"pages\\\": {}\\n}\n\nUser Object\n\nA user object contains the following fields\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user' or 'contact'\nid\tstring\tThe Intercom defined id representing the user\ncreated_at\ttimestamp\tThe time (in seconds) the user was added to Intercom\nsigned_up_at\ttimestamp\tThe time (in seconds) the user signed up\nupdated_at\ttimestamp\tThe last time the user was updated\nuser_id\tstring\tThe user id you have defined for the user. (Max limit of 255 UTF-8 characters, and should not have trailing or leading spaces)\nemail\tstring\tThe email you have defined for the user. (Max limit of 255 UTF-8 characters, and should not have trailing or leading spaces)\nphone\tstring\tThe phone number of the user\ncustom_attributes\tobject\tThe custom attributes you have set on the user (case sensitive).\nlast_request_at\ttimestamp\tThe time the user last recorded making a request\nsession_count\tinteger\tHow many sessions the user has recorded\navatar\tobject\tAn avatar object for the user.\nunsubscribed_from_emails\tboolean\tWhether the user is unsubscribed from emails\nlocation_data\tobject\tA Location Object relating to the user\npseudonym\tstring\tThe pseudonym used if this user was previously a Lead (https://www.intercom.com/help/en/Intercom-for-customer-communication/the-intercom-messenger)\nanonymous\tboolean\tWhether or not this is a Lead. Always false\ncompanies\tlist\tA list of companies for the user\nsocial_profiles\tlist\tA list of social profiles associated with the user\nsegments\tlist\tThis will return an empty list of segments as part of our effort to deprecate this attribute on the user model for performance and accuracy reasons.\ntags\tlist\tA list of tags associated with the user\nname\tstring\tThe full name of the user\nreferrer\tstring\tThe URL of the page the user was last on\nutm_source\tstring\tIdentifies which site sent the traffic\nutm_medium\tstring\tIdentifies what type of link was used\nutm_campaign\tstring\tIdentifies a specific product promotion or strategic campaign\nutm_term\tstring\tIdentifies search terms\nutm_content\tstring\tIdentifies what specifically was clicked to bring the user to the site\n\nNote that in some parts of the API, the user id field may be referred to using intercom_user_id.\nAny integer values in the user model are limited to the int32 range -2^31 to 2^31 -1\n\nSocial Profile Object\nAttribute\tType\tDescription\ntype\tstring\tValue is 'social_profile'\nname\tstring\tThe name of the service (e.g., twitter, facebook)\nusername\tstring\tUser name or handle on the service\nurl\tstring\tThe user homepage on the service\nid\tstring\tOptional. User ID on the service\n\nSocial data is read only and can not be updated via the API.\n\nAvatar Object\nAttribute\tType\tDescription\ntype\tstring\tValue is 'avatar'\nimage_url\tstring\tAn avatar image URL. note: the image url needs to be https.\nLocation Object\nAttribute\tType\tDescription\ntype\tstring\tValue is 'location_data'\ncity_name\tstring\tOptional. A city name\ncontinent_code\tstring\tOptional. A continent code\ncountry_code\tstring\tOptional. An ISO 3166 country code\ncountry_name\tstring\tOptional. The country name\npostal_code\tstring\tOptional. A postal code\nregion_name\tstring\tOptional. A region name\ntimezone\tstring\tOptional. An ISO 8601 timezone\n\nLocation data is read only and can not be updated via the API.\n\nUser List\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user.list'\ntotal_count\tinteger\tThe number of users for this app\npages\tobject\tA Pagination object\nusers\tarray\tA list of users\n\nThe user list does not return Leads - this means all objects in the list will have an anonymous value of false. Any user in the list that was converted from a Lead will retain their pseudonym value."
  },
  {
    "title": "Tag Model",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/tags/tag-model/",
    "html": "Tag Model\nExample Object\n{\\n  \\\"id\\\": \\\"17513\\\",\\n  \\\"name\\\": \\\"independent\\\",\\n  \\\"type\\\": \\\"tag\\\"\\n}\n\nTag Object\n\nA tag has a name and an id field. Once created the id field cannot be changed, but the name field can be updated later to allow tag renaming.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'tag'\nid\tstring\tThe id of the tag\nname\tstring\tThe name of the tag"
  },
  {
    "title": "List by Email",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/users/list-by-email-1/",
    "html": "List by Email\nList Users by Email\n$ curl https://api.intercom.io/users?email=test@test.com \\\n-H 'Authorization: Bearer YOUR_ACCESS_TOKEN' \\\n-H 'Accept: application/json' \\\n-H 'Intercom-Version: 1.1'\n\nHTTP/1.1 200 OK\n\n{\n    \"limited\": false,\n    \"pages\": {\n        \"next\": null,\n        \"page\": 1,\n        \"per_page\": 50,\n        \"total_pages\": 1,\n        \"type\": \"pages\"\n    },\n    \"total_count\": 3,\n    \"type\": \"user.list\",\n    \"users\": [\n        {\n            \"anonymous\": false,\n            \"app_id\": \"fyq3wodw\",\n            \"created_at\": 1506339558,\n            \"custom_attributes\": {},\n            \"do_not_track\": null,\n            \"email\": \"test@test.com\",\n            \"has_hard_bounced\": false,\n            \"id\": \"45c8eae6fac10f5584e7508e\",\n            \"last_request_at\": 1529737920,\n            \"last_seen_ip\": \"78.144.182.179\",\n            ....\n            ....\n        },\n        {\n            \"anonymous\": true,\n            \"app_id\": \"fyq3wodw\",\n            \"created_at\": 1503488750,\n            \"custom_attributes\": {},\n            \"do_not_track\": null,\n            \"email\": \"test@test.com\",\n            \"has_hard_bounced\": false,\n            \"id\": \"5123d6aeeda850883ed8ba7c2\",\n            \"last_request_at\": 1503488749,\n            ....\n            ....\n        },\n        {\n            \"anonymous\": false,\n            \"app_id\": \"fyq3wodw\",\n            \"created_at\": 1494940172,\n            \"custom_attributes\": {},\n            \"do_not_track\": null,\n            \"email\": \"test@test.com\",\n            \"has_hard_bounced\": false,\n            \"id\": \"789afa0cb781d52fd3044ecc\",\n            \"last_request_at\": 1494940211,\n            ....\n            ....\n        }\n    ]\n}\n\n{\n    \"limited\": false,\n    \"pages\": {\n        \"next\": null,\n        \"page\": 1,\n        \"per_page\": 50,\n        \"total_pages\": 0,\n        \"type\": \"pages\"\n    },\n    \"total_count\": 0,\n    \"type\": \"user.list\",\n    \"users\": []\n}\n\n\nYou can list users by email to find all users with the same email address.\n\nThe email should be url encoded.\n\nRequest Parameters\n\nYou can optionally request the result page size and which page to fetch as follows -\n\nParameter\tRequired\tDescription\npage\tno\twhat page of results to fetch defaults to first page.\nper_page\tno\thow many results per page defaults to 50, max is 60.\nReturns\n\nA pageable list of users. The user list contains a pages object that indicates if more users exist via the next field, whose value is a URL that can be used to fetch the next page. If the next field is not present, that indicates there are no further users in the list."
  },
  {
    "title": "Incrementing User Sessions",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/users/incrementing-user-sessions/",
    "html": "Incrementing User Sessions\n\nTo indicate the update is part of an active session pass new_session: true when you update the user. The API will then follow the rules for web sessions outlined in our session docs to decide whether the session count should be updated for the user."
  },
  {
    "title": "Scroll over all users",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/users/iterating-over-all-users/",
    "html": "Scroll over all users\n\nThe List Users functionality does not work well for huge datasets, and can result in errors and performance problems when paging deeply. The Scroll API provides an efficient mechanism for iterating over all users in a dataset.\n\nEach workspace can only have 1 scroll open at a time. You'll get an error message if you try to have more than one open per workspace.\nIf the scroll isn't used for 1 minute, it expires and calls with that scroll param will fail\nIf the end of the scroll is reached, \"users\" will be empty and the scroll parameter will expire\n# Send a GET request to get the first page of users\n$ curl \\\n'https://api.intercom.io/users/scroll' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n# To get the next page use the scroll param returned in the response\n$ curl \\\n'https://api.intercom.io/users/scroll?scroll_param=562bc29f-ea55-4823-aaaf-f3faadceaa59' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"user.list\",\n  \"users\": [\n    {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ],\n  \"scroll_param\": \"25b649f7-4d33-4ef6-88f5-60e5b8244309\"\n}\n\n# You can use the scroll method to list all your users\nintercom.users.scroll.each { |user| puts user.name}\n# Alternatively you can use the scroll.next method to get 100 users with each request\nresult = intercom.users.scroll.next\nresult.scroll_param\n=> \"0730e341-63ef-44da-ab9c-9113f886326d\"\nresult = intercom.users.scroll.next(\"0730e341-63ef-44da-ab9c-9113f886326d\");\n\nSCROLL PARAMETER\n\nYou can get the first page of users by simply sending a GET request to the scroll endpoint. For subsequent requests you will need to use the scroll parameter from the response.\n\n❗️ Scroll network timeouts\n\nSince scroll is often used on large datasets network errors such as timeouts can be encountered. When this occurs you will need to restart your scroll query as it is not possible to continue from a specific point when using scroll.\n\nWhen this occurs you will see a HTTP 500 error with the following message:\n\"Request failed due to an internal network error. Please restart the scroll operation.\""
  },
  {
    "title": "List by Tag, Segment, Company",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/users/list-by-tag-segment-company/",
    "html": "List by Tag, Segment, Company\nExample Tag Request\n$ curl https://api.intercom.io/users?tag_id=3142 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nintercom.users.find_all({ :tag_id => '30126' })\n\n<?php\n$user = $intercom->users->getUsers([\"tag_id\" => '730128']);\nprint_r($user->users[0]->email);\necho \"\\n\";\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"tag_id\", \"30126\");\nUserCollection users = User.list(params);\nwhile (users.hasNext()) {\n    out.println(users.next().getId());\n}\n\nExample Segment Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/users?segment_id=5926 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"user.list\\\",\\n  \\\"total_count\\\": 105,\\n  \\\"users\\\": [\\n    {\\n      \\\"type\\\": \\\"user\\\",\\n      \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n       ...\\n     },\\n     ...\\n  ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/users?tag_id=3142&per_page=50&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 3\\n  }\\n}\\n\\n# NB: Full User objects are returned\n\n\nYou can fetch segmented users/leads by querying the users resource with a segment_id parameter, indicating the id of the segment to query with.\n\nTo fetch tagged users/leads, you can use a tag_id parameter to indicate the id of the tag. For information on tagging users see the section Tag or Untag Users, Companies & Leads (Contacts).\n\nNote that you can not combine tag and segment parameters in the same request.\n\nTo list users belonging to a company, you can use the companies API. See the section List Company Users for details.\n\nRequest Parameters\nParameter\tRequired\tDescription\ntag_id\tno\tThe id of the tag to filter by.\nsegment_id\tno\tThe id of the segment to filter by.\nReturns\n\nA pageable list of users and leads.\n\nLike a plain company list, the result contains a pages object that indicates if more users exist via the next field."
  },
  {
    "title": "Scroll over all users",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/users/iterating-over-all-users/",
    "html": "Scroll over all users\n\nThe List Users functionality does not work well for huge datasets, and can result in errors and performance problems when paging deeply. The Scroll API provides an efficient mechanism for iterating over all users in a dataset.\n\nEach workspace can only have 1 scroll open at a time. You'll get an error message if you try to have more than one open per workspace.\nIf the scroll isn't used for 1 minute, it expires and calls with that scroll param will fail\nIf the end of the scroll is reached, \"users\" will be empty and the scroll parameter will expire\n# Send a GET request to get the first page of users\n$ curl \\\n'https://api.intercom.io/users/scroll' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n# To get the next page use the scroll param returned in the response\n$ curl \\\n'https://api.intercom.io/users/scroll?scroll_param=562bc29f-ea55-4823-aaaf-f3faadceaa59' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"user.list\",\n  \"users\": [\n    {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ],\n  \"scroll_param\": \"25b649f7-4d33-4ef6-88f5-60e5b8244309\"\n}\n\n# You can use the scroll method to list all your users\nintercom.users.scroll.each { |user| puts user.name}\n# Alternatively you can use the scroll.next method to get 100 users with each request\nresult = intercom.users.scroll.next\nresult.scroll_param\n=> \"0730e341-63ef-44da-ab9c-9113f886326d\"\nresult = intercom.users.scroll.next(\"0730e341-63ef-44da-ab9c-9113f886326d\");\n\nSCROLL PARAMETER\n\nYou can get the first page of users by simply sending a GET request to the scroll endpoint. For subsequent requests you will need to use the scroll parameter from the response.\n\n❗️ Scroll network timeouts\n\nSince scroll is often used on large datasets network errors such as timeouts can be encountered. When this occurs you will need to restart your scroll query as it is not possible to continue from a specific point when using scroll.\n\nWhen this occurs you will see a HTTP 500 error with the following message:\n\"Request failed due to an internal network error. Please restart the scroll operation.\""
  },
  {
    "title": "List by Tag, Segment, Company",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/users/list-by-tag-segment-company/",
    "html": "List by Tag, Segment, Company\nExample Tag Request\n$ curl https://api.intercom.io/users?tag_id=3142 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nintercom.users.find_all({ :tag_id => '30126' })\n\n<?php\n$user = $intercom->users->getUsers([\"tag_id\" => '730128']);\nprint_r($user->users[0]->email);\necho \"\\n\";\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"tag_id\", \"30126\");\nUserCollection users = User.list(params);\nwhile (users.hasNext()) {\n    out.println(users.next().getId());\n}\n\nExample Segment Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/users?segment_id=5926 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"user.list\\\",\\n  \\\"total_count\\\": 105,\\n  \\\"users\\\": [\\n    {\\n      \\\"type\\\": \\\"user\\\",\\n      \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n       ...\\n     },\\n     ...\\n  ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/users?tag_id=3142&per_page=50&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 3\\n  }\\n}\\n\\n# NB: Full User objects are returned\n\n\nYou can fetch segmented users/leads by querying the users resource with a segment_id parameter, indicating the id of the segment to query with.\n\nTo fetch tagged users/leads, you can use a tag_id parameter to indicate the id of the tag. For information on tagging users see the section Tag or Untag Users, Companies & Leads (Contacts).\n\nNote that you can not combine tag and segment parameters in the same request.\n\nTo list users belonging to a company, you can use the companies API. See the section List Company Users for details.\n\nRequest Parameters\nParameter\tRequired\tDescription\ntag_id\tno\tThe id of the tag to filter by.\nsegment_id\tno\tThe id of the segment to filter by.\nReturns\n\nA pageable list of users and leads.\n\nLike a plain company list, the result contains a pages object that indicates if more users exist via the next field."
  },
  {
    "title": "Scroll over all users",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/users/iterating-over-all-users/",
    "html": "Scroll over all users\n\nThe List Users functionality does not work well for huge datasets, and can result in errors and performance problems when paging deeply. The Scroll API provides an efficient mechanism for iterating over all users in a dataset.\n\nEach workspace can only have 1 scroll open at a time. You'll get an error message if you try to have more than one open per workspace.\nIf the scroll isn't used for 1 minute, it expires and calls with that scroll param will fail\nIf the end of the scroll is reached, \"users\" will be empty and the scroll parameter will expire\n# Send a GET request to get the first page of users\n$ curl \\\n'https://api.intercom.io/users/scroll' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n# To get the next page use the scroll param returned in the response\n$ curl \\\n'https://api.intercom.io/users/scroll?scroll_param=562bc29f-ea55-4823-aaaf-f3faadceaa59' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"user.list\",\n  \"users\": [\n    {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ],\n  \"scroll_param\": \"25b649f7-4d33-4ef6-88f5-60e5b8244309\"\n}\n\n# You can use the scroll method to list all your users\nintercom.users.scroll.each { |user| puts user.name}\n# Alternatively you can use the scroll.next method to get 100 users with each request\nresult = intercom.users.scroll.next\nresult.scroll_param\n=> \"0730e341-63ef-44da-ab9c-9113f886326d\"\nresult = intercom.users.scroll.next(\"0730e341-63ef-44da-ab9c-9113f886326d\");\n\nSCROLL PARAMETER\n\nYou can get the first page of users by simply sending a GET request to the scroll endpoint. For subsequent requests you will need to use the scroll parameter from the response.\n\n❗️ Scroll network timeouts\n\nSince scroll is often used on large datasets network errors such as timeouts can be encountered. When this occurs you will need to restart your scroll query as it is not possible to continue from a specific point when using scroll.\n\nWhen this occurs you will see a HTTP 500 error with the following message:\n\"Request failed due to an internal network error. Please restart the scroll operation.\""
  },
  {
    "title": "Incrementing User Sessions",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/users/incrementing-user-sessions/",
    "html": "Incrementing User Sessions\n\nTo indicate the update is part of an active session pass new_session: true when you update the user. The API will then follow the rules for web sessions outlined in our session docs to decide whether the session count should be updated for the user."
  },
  {
    "title": "Permanently delete a user",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/users/delete-users/",
    "html": "Permanently delete a user\n\nUser Delete Requests allow you to irrevocably remove data about a User. After creating a User Delete Request, the User's data will be hard-deleted within 90 days. This deletion cannot be cancelled or reversed.\n\nUser Delete Requests can be created via a POST to\nhttps://api.intercom.io/user_delete_requests\nThis endpoint accepts an internal Intercom ID as described below.\n\nAttributes\nParameter\tRequired\tDescription\nintercom_user_id\tYes\tThe internal ID of the User to irrevocably delete\nReturns\n\nThe ID of the User Delete Request, for your reference.\nUser Delete Requests cannot be altered.\n\nHARD DELETE\n\nImportant: If you delete a user/lead by mistake, contact us within 7 days (via the Messenger) and we can retrieve the information. After 7 days this data will be permanently destroyed.\n\nPermanently delete users\ncurlhttp\ncurl https://api.intercom.io/user_delete_requests \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"intercom_user_id\\\": \\\"530370b477ad7120001d\\\"\\n}'\n"
  },
  {
    "title": "Create or Update User",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/users/create-or-update-user/",
    "html": "Create or Update User\nCreate or Update Users\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/users \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"user_id\\\": \\\"25\\\",\\n  \\\"email\\\": \\\"wash@serenity.io\\\",\\n  \\\"name\\\": \\\"Hoban Washburne\\\",\\n  \\\"phone\\\": \\\"555671243\\\",\\n  \\\"signed_up_at\\\": 1392731331,\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"monthly_spend\\\": 155.5,\\n    \\\"team_mates\\\": 9,\\n    \\\"last_order_at\\\":1475569818\\n  },\\n  \\\"companies\\\": [\\n    {\\n      \\\"company_id\\\" : \\\"366\\\",\\n      \\\"name\\\" : \\\"Serenity\\\",\\n      \\\"monthly_spend\\\" : 500\\n    }\\n  ]\\n}\n\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5714dd359a3fd47136000001\\\",\\n    \\\"user_id\\\": \\\"25\\\",\\n    \\\"anonymous\\\": false,\\n    \\\"email\\\": \\\"wash@serenity.io\\\",\\n    \\\"phone\\\": \\\"555671243\\\",\\n    \\\"name\\\": \\\"Hoban Washburne\\\",\\n    \\\"pseudonym\\\": null,\\n    \\\"avatar\\\": {\\n        \\\"type\\\": \\\"avatar\\\",\\n        \\\"image_url\\\": \\\"https://secure.gravatar.com/avatar/0c3c17fd49f45c43f482730782b36d36?s=24&d=identicon\\\"\\n    },\\n    \\\"app_id\\\": \\\"ja43hiec\\\",\\n    \\\"companies\\\": {\\n        \\\"type\\\": \\\"company.list\\\",\\n        \\\"companies\\\": [\\n            {\\n                \\\"type\\\": \\\"company\\\",\\n                \\\"company_id\\\": \\\"366\\\",\\n                \\\"id\\\": \\\"574854e3ecd0c547ae0000e4\\\",\\n                \\\"name\\\": \\\"Serenity\\\"\\n            }\\n        ]\\n    },\\n    \\\"location_data\\\": {\\n\\t\\t...\\n    },\\n    \\\"last_request_at\\\": null,\\n    \\\"last_seen_ip\\\": null,\\n    \\\"created_at\\\": 1460985141,\\n    \\\"remote_created_at\\\": 1392731331,\\n    \\\"signed_up_at\\\": 1392731331,\\n    \\\"updated_at\\\": 1480075457,\\n    \\\"session_count\\\": 0,\\n    \\\"social_profiles\\\": {\\n        \\\"type\\\": \\\"social_profile.list\\\",\\n        \\\"social_profiles\\\": [\\n            ...\\n        ]\\n    },\\n    \\\"unsubscribed_from_emails\\\": false,\\n    \\\"user_agent_data\\\": null,\\n    \\\"tags\\\": {\\n        \\\"type\\\": \\\"tag.list\\\",\\n        \\\"tags\\\": []\\n    },\\n    \\\"segments\\\": {\\n        \\\"type\\\": \\\"segment.list\\\",\\n        \\\"segments\\\": []\\n    },\\n    \\\"custom_attributes\\\": {\\n        \\\"paid_subscriber\\\": true,\\n        \\\"monthly_spend\\\": 155.5,\\n        \\\"team_mates\\\": 9,\\n        \\\"last_order_at\\\": 1475569818\\n    }\\n}\n\n\nUsers can be created or updated via a POST method to https://api.intercom.io/users, which accepts a JSON object describing the user.\n\nUsers not found via email or user_id will be created, and those that are found will be updated.\n\nNote that the following lookup order applies when updating users - id then user_id then email, and results in the following logic:\n\nid is matched - the user_id and email will be updated if they are sent.\nuser_id match - the email will be updated, the id is not updated.\nemail match where no user_id set on the matching user - the user_id will be set to the value sent in the request, the id is not updated.\nemail match where there is a user_id set on the matching user - a new unique record with new id will be created if a new value for user_id is sent in the request.\n\nNote that email values are downcased after they have been submitted to our API.\n\nAttributes\n\nThe table below shows the fields you can create or update for a user:\n\nParameter\tRequired\tDescription\nuser_id\tRequired if no email is supplied.\tA unique string identifier for the user. It is required on creation if an email is not supplied.\nemail\tRequired if no user_id is supplied.\tThe user's email address. It is required on creation if a user_id is not supplied.\nphone\tno\tThe user's phone number.\nid\tno\tThe id may be used for user updates.\nsigned_up_at\tno\tThe time the user signed up\nname\tno\tThe user's full name\ncustom_attributes\tno\tA hash of key/value pairs containing any other data about the user you want Intercom to store.\ncompanies\tno\tIdentifies the companies this user belongs to.\nlast_request_at\tno\tA UNIX timestamp (in seconds) representing the date the user last visited your application.\nunsubscribed_from_emails\tno\tA boolean value representing the users unsubscribed status. default value if not sent is false.\nupdate_last_request_at\tno\tA boolean value, which if true, instructs Intercom to update the users' last_request_at value to the current API service time in UTC. default value if not sent is false.\nnew_session\tno\tA boolean value, which if true, instructs Intercom to register the request as a session.\n\nIn particular, please note that location data and social profiles are computed by the server and can not be updated via the API.\n\nCustom Attributes\n\nThe custom_attributes object allows you to send any information you wish about a user with the following restrictions\n\nField names must not contain Periods ('.') or Dollar ('$') characters:\n\nField names must be no longer than 190 characters.\nField values must be JSON Strings, Numbers or Booleans - Objects and Arrays will be rejected.\nString field values must be no longer than 255 characters.\nMaximum of 250 fields.\nCUSTOM ATTRIBUTE AS DATE\n\nYou can send dates as custom attributes by sending a unix timestamp. If the name of your custom attribute ends with _at then we'll automatically treat it as a date, rather than a number. See here for more info\n\nReturns\n\nA created or updated user object.\n\nNew user objects will be provided with an id field - this value cannot be created or edited by clients. Social profiles, location data and avatars are processed asynchronously, and may require a subsequent call to fetch their details."
  },
  {
    "title": "Spacer",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/presentationcomponents/spacer/",
    "html": "Spacer\n\nA spacer component is used to create empty space between components.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tspacer\t\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nsize\txs``s``m``l``xl\tNo\tThe amount of space between components.Default is s.\nPreview"
  },
  {
    "title": "Permanently delete a user",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/users/delete-users/",
    "html": "Permanently delete a user\n\nUser Delete Requests allow you to irrevocably remove data about a User. After creating a User Delete Request, the User's data will be hard-deleted within 90 days. This deletion cannot be cancelled or reversed.\n\nUser Delete Requests can be created via a POST to\nhttps://api.intercom.io/user_delete_requests\nThis endpoint accepts an internal Intercom ID as described below.\n\nAttributes\nParameter\tRequired\tDescription\nintercom_user_id\tYes\tThe internal ID of the User to irrevocably delete\nReturns\n\nThe ID of the User Delete Request, for your reference.\nUser Delete Requests cannot be altered.\n\nHARD DELETE\n\nImportant: If you delete a user/lead by mistake, contact us within 7 days (via the Messenger) and we can retrieve the information. After 7 days this data will be permanently destroyed.\n\nPermanently delete users\ncurlhttp\ncurl https://api.intercom.io/user_delete_requests \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"intercom_user_id\\\": \\\"530370b477ad7120001d\\\"\\n}'\n"
  },
  {
    "title": "Image",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/presentationcomponents/image/",
    "html": "Image\n\nAn image component is used to display an image.\n\n🚧 HTTPS Images\n\nIf your request URLs (or website URLs) are over HTTPS, you will need to ensure that images are loaded over HTTPS likewise. Otherwise, they will not work.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\timage\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nurl\tA valid HTTPS URL\tYes\tThe URL where the image is located.\nalign\tleft``center``right``full_width\tNo\tAligns the image inside the component.Default is left.\nwidth\tAny integer\tYes\tThe exact width of the image in pixels.\nheight\tAny integer\tYes\tThe exact height of the image in pixels.\nrounded\ttrue``false\tNo\tRounds the corners of the image. Default is false.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\naction\tAction Object\tNo\tThis can be a URL Action only.\nPreview"
  },
  {
    "title": "View a Note",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/notes/view-a-note/",
    "html": "View a Note\nExample Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/notes/2 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"note\\\",\\n  \\\"id\\\": \\\"2\\\",\\n  \\\"created_at\\\": 1389913951,\\n  \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n  \\\"user\\\": {\\n      \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\",\\n      \\\"type\\\": \\\"user\\\"\\n    },\\n  \\\"author\\\": {\\n    \\\"type\\\": \\\"admin\\\",\\n    \\\"id\\\": \\\"21\\\",\\n    \\\"name\\\": \\\"Jayne Cobb\\\",\\n    \\\"email\\\": \\\"jayne@serenity.io\\\",\\n    \\\"avatar\\\" : {\\n       \\\"type\\\":\\\"avatar\\\",\\n      \\\"image_url\\\": \\\"http://example.org/128Jayne.jpg\\\"\\n    },\\n    \\\"companies\\\": []\\n  }\\n}\n\n\nEach note has its own URL -\n\nhttps://api.intercom.io/notes/{id}\n\nWhere {id} is the value of the note's id field. A GET request to a note's URL will return the note object.\n\nReturns\n\nA note object."
  },
  {
    "title": "Button",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/interactivecomponents/button/",
    "html": "Button\n\nA button component is used to take an action by clicking a button. This can either:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tbutton\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tYes\tThe text that will be rendered inside the button.\naction\tAction Object\tYes\tThis can be a Submit Action, URL Action, or Sheets Action.\nstyle\tprimary``secondary``link\tNo\tStyles the button.Default is primary.\ndisabled\tfalse``true\tNo\tStyles the button and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "List Notes for a User",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/notes/list-notes-for-a-user/",
    "html": "List Notes for a User\nExample User ID Request\n$ curl https://api.intercom.io/notes?user_id=25 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nintercom.notes.find_all(:user_id => '123').each {|note| puts note.body}\n\n<?php\n$notes = $intercom->notes->getNotes([\"user_id\" => \"20413\"]);\nforeach ($notes->notes as $note) {\n    print \"id:\".$note->id.\" body:\".$note->body.\"\\n\";\n}\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"user_id\", \"123\");\nNoteCollection notes = Note.list(params);\nwhile (notes.hasNext()) {\n    out.println(notes.next().getBody());\n}\n\nExample Email Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/notes?email=jayne%40serenity.io \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"note.list\\\",\\n  \\\"notes\\\": [\\n    {\\n      \\\"type\\\": \\\"note\\\",\\n      \\\"id\\\": \\\"1\\\",\\n      \\\"created_at\\\": 1389913941,\\n      \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n      \\\"author\\\": {\\n        \\\"type\\\": \\\"admin\\\",\\n        \\\"id\\\": \\\"21\\\",\\n        \\\"name\\\": \\\"Jayne Cobb\\\",\\n        \\\"email\\\": \\\"jayne@serenity.io\\\",\\n        \\\"companies\\\": []\\n      },\\n      \\\"user\\\": {\\n        \\\"type\\\": \\\"user\\\",\\n        \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\"\\n      }\\n    },\\n    {\\n      \\\"type\\\": \\\"note\\\",\\n      \\\"id\\\": \\\"2\\\",\\n      \\\"created_at\\\": 1389913951,\\n      \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n      \\\"user\\\": {\\n          \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\",\\n          \\\"type\\\": \\\"user\\\"\\n        }\\n    }\\n  ],\\n  \\\"pages\\\": {}\\n}\n\nExample ID Request\n$ curl \\\nhttps://api.intercom.io/notes?id=5310d8e8598c9a0b24000005 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n# Not exposed in Ruby client\n\n<?php\n$notes = $intercom->notes->getNotes([\"id\" => \"5965efd9aad5c02fc4750ee6\"]);\nforeach ($notes->notes as $note) {\n    print \"id:\".$note->id.\" body:\".$note->body.\"\\n\";\n}\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"id\", \"5310d8e8598c9a0b24000005\");\nnotes = Note.list(params);\nwhile (notes.hasNext()) {\n    out.println(notes.next().getBody());\n}\n\n\nA user's notes can be fetched by using a GET request to https://api.intercom.io/notes with an Intercom user id or user_id or email query parameter.\n\nThe value of the email parameter should be url encoded before sending.\n\nParameters\nParameter\tRequired\tDescription\nuser_id\tone of\tThe user id you have defined for the user\nemail\tone of\tThe email you have defined for the user\nid\tone of\tThe Intercom defined id representing the user\nReturns\n\nA list of note objects for that User.\n\nNote List Object\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'note.list'\nnotes\tarray\tA list of note objects"
  },
  {
    "title": "Notes",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/notes/notes/",
    "html": "Notes\n\nNotes allow you to annotate and comment on your users.\n\nA note can be authored by an admin about a user, and the notes associated with a user can be listed."
  },
  {
    "title": "Note Model",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/notes/note-model/",
    "html": "Note Model\nExample Object\n{\\n  \\\"type\\\": \\\"note\\\",\\n  \\\"id\\\": \\\"16\\\",\\n  \\\"created_at\\\": 1389913941,\\n  \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n  \\\"author\\\": {\\n    \\\"type\\\": \\\"admin\\\",\\n    \\\"id\\\": \\\"21\\\",\\n    \\\"name\\\": \\\"Jayne Cobb\\\",\\n    \\\"email\\\": \\\"jayne@serenity.io\\\",\\n    \\\"companies\\\": []\\n  },\\n  \\\"user\\\": {\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\"\\n  }\\n}\n\nNote Object\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'note'\nid\tstring\tThe id representing the note\ncreated_at\ttimestamp\tThe time the note was created\nuser\tUser\tThe user the note was created about\nbody\tstring\tThe body text of the note.\nauthor\tAdmin\tOptional. Represents the Admin that created the note"
  },
  {
    "title": "Event Metadata Types",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/data-events/event-metadata-types/",
    "html": "Event Metadata Types\nEvent Metadata Types\n$ curl https://api.intercom.io/events \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Content-Type: application/json\" -d'\n{\n  \"event_name\" : \"placed-order\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"314159\",\n  \"metadata\": {\n    \"order_date\": 1392036272,\n    \"stripe_invoice\": \"inv_3434343434\",\n    \"order_number\": {\n      \"value\":\"3434-3434\",\n      \"url\": \"https://example.org/orders/3434-3434\"\n    },\n    \"price\": {\n      \"currency\":\"usd\",\n      \"amount\": 2999\n    }\n  }\n}'\n\nvar more_metadata = {\n  order_date: 1392036272,\n  stripe_invoice: 'inv_3434343434',\n  order_number: {\n    value: \"3434-3434\",\n    url: 'https://example.org/orders/3434-3434'\n  },\n  price: {\n    currency: 'usd',\n    amount: 2999\n  }\n};\nIntercom('trackEvent', 'placed-order', more_metadata);\n\nmore_metadata = {\n  :order_date => Time.now.to_i,\n  :stripe_invoice => 'inv_3434343434',\n  :order_number => {\n    :value => '3434-3434',\n    :url => 'https://example.org/orders/3434-3434'\n  },\n  price: {\n    :currency => 'usd',\n    :amount => 2999\n  }\n}\nintercom.events.create({\n  :event_name => \"placed-order\",\n  :email => current_user.email,\n  :created_at => 1391691571,\n  :metadata => more_metadata\n})\n\n<?php\n$metadata = ([\n    \"order_date\" => time(),\n    \"stripe_invoice\" => \"inv_3434343434\",\n    \"order_number\" => ([\n        \"value\" => \"3434-3434\",\n        \"url\" => \"https://example.org/orders/3434-3434\"]),\n        \"price\" => ([\n            \"currency\" => \"usd\",\n            \"amount\" => 2999])\n]);\n\n$intercom->events->create([\n    \"event_name\" => \"placed-order\",\n    \"created_at\" => 1500907515,\n    \"user_id\" => \"20413\",\n    \"metadata\" => $metadata\n]);\n?>\n\nMap<String,Object> order = Maps.newHashMap();\norder.put(\"value\", \"3434-3434\");\norder.put(\"url\", \"https://example.org/orders/3434-3434\");\n\nMap<String,Object> price = Maps.newHashMap();\nprice.put(\"currency\", \"usd\");\nprice.put(\"amount\", 2999);\n\nMap<String,Object> meta = Maps.newHashMap();\nmeta.put(\"order_date\", currentTimeMillis()/1000L);\nmeta.put(\"stripe_invoice\", \"inv_3434343434\");\nmeta.put(\"price\", price);\nmeta.put(\"order_number\", order);\n\nEvent event = new Event()\n  .setEventName(\"placed-order\")\n  .setUserID(\"314159\")\n  .setMetadata(meta);\n\nEvent.create(event);\n\n# The metadata key values in the example\n# are treated as follows-\n#\n# - order_date: a Date\n#    (key ends with '_date').\n#\n# - stripe_invoice: The identifier of the Stripe invoice\n#     (has a 'stripe_invoice' key)\n#\n# - order_number: Rich Link\n#     (contains 'url' and 'value')\n#\n# - price: Amount in US Dollars\n#     (contains 'amount' and 'currency')\n\n\nMetadata Objects support a few simple types that Intercom can present on your behalf -\n\nType\tDescription\tExample\nString\tThe value is a JSON String\t\"source\":\"desktop\"\nNumber\tThe value is a JSON Number\t\"load\": 3.67\nDate\tThe key ends with the String _date and the value is a Unix timestamp, assumed to be in the UTC timezone.\t\"contact_date\": 1392036272\nLink\tThe value is a HTTP or HTTPS URI.\t\"article\": \"https://example.org/ab1de.html\"\nRich Link\tThe value is a JSON object that contains url and value keys.\t\"article\": {\"url\": \"https://example.org/ab1de.html\", \"value\":\"the dude abides\"}\nStripe Data\tThe key is one of - 'stripe_customer', 'stripe_invoice', 'stripe_charge'. The value is a Stripe identifier.\t\"stripe_customer\": \"cus_42424242424\"\nMonetary Amount\tThe value is a JSON object that contains amount and currency keys. The amount key is a positive integer representing the amount in cents. The price in the example to the right denotes €349.99.\t\"price\": {\"amount\": 34999, \"currency\": \"eur\"}\nAPI Responses\nSuccessful responses to submitted events return 202 Accepted with an empty body.\nUnauthorised access will be rejected with a 401 Unauthorized or 403 Forbidden response code.\nEvents sent about users that cannot be found will return a 404 Not Found.\nEvent lists containing duplicate events will have those duplicates ignored.\nServer errors will return a 500 response code and may contain an error message in the body."
  },
  {
    "title": "Data Events",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/data-events/events/",
    "html": "Data Events\n\nEvents are how you can submit user activity to Intercom. Once you're sending Intercom event data, you can filter your user base with those events and create Auto Messages to send whenever an event occurs. Every event is associated with an event name, the time it happened, the user that caused the event, and optionally some extra metadata. Events record the count, first and last occurrence of an event.\n\nEvents are different to Custom Attributes in that events are information on what Users did and when they did it, whereas Custom Attributes represent the User's current state as seen in their profile. For example, the first time they subscribed to a paid plan, or the most recent time they changed their plan would be represented by events, whereas a User Attribute would be used to record their current plan.\n\nBecause Events are used for filtering and messaging, and event names are used directly in Intercom by your App's Admins we recommend sending high-level activity about your users that you would like to message on, rather than raw clickstream or user interface actions. For example an order action is a good candidate for an Event, versus all the clicks and actions that were taken to get to that point. We also recommend sending event names that combine a past tense verb and nouns, such as 'created-project'.\n\nThe Events API varies slightly from the rest of the APIs as follows -\n\nYou can submit events using JavaScript using the trackEvent method.\nWhen there's an error or errors, a list structure is returned instead of a single error."
  },
  {
    "title": "URL Action",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/actioncomponents/url-action/",
    "html": "URL Action\n\nA URL action opens a given link in a new browser tab.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\turl\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which will open in a new tab.\nExample Object\naction: {\n  \"type\": \"url\",\n  \"url\":  \"https://www.example.com\"\n}\n"
  },
  {
    "title": "Text",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/presentationcomponents/text/",
    "html": "Text\n\nThe text component is used for rendering blocks of text. Links and bold font can be rendered through Markdown. There are different styles provided which edit the color, weight, and font size. These cannot be edited through Markdown.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttext\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\ntext\tAny stringMarkdown Links []()Markdown Bold **\tYes\tThe text that will be rendered.\nalign\tleft``center``right\tNo\tAligns the text. Default is left.\nstyle\theader``paragraph``muted``error\tNo\tStyles the text. Default is paragraph.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "Webhooks",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/webhooks/webhooks/",
    "html": "Webhooks\nOverview\n\nWebhooks are a powerful resource that you can use to automate your use cases and improve your productivity. You can find more about them through this link if you're unfamiliar.\n\nUnlike the API resources, which represent static data that you can create, update and retrieve as needed, webhooks represent dynamic resources. You can configure them to automatically notify you when a customer has taken a particular action, such as making a purchase or replying to a conversation.\n\nThe main concepts for webhooks are subscriptions, topics, and notifications.\n\nSubscriptions\n\nA subscription is where you select a topic you wanted to be notified about. Intercom will setup subscriptions for selected topics when that app is installed on a workspace.\n\nTopics\n\nA subscription will contain one or more topics. Topics are types of notifications that you want to be informed about.\n\nNotifications\n\nThe object delivered to a webhook is a notification. Notifications have payloads, which contain the API's existing JSON objects, such as user or conversations. You will need to provide a URL where Intercom will send these request.\n\nWebhooks FAQs\nDo webhooks belong to my workspace or my app?\n\nWebhooks are associated with an app. You configure your webhooks per app just like you configure your access tokens. When you configure a webhook you tell Intercom where you want notifications to be sent to for one or more webhook topics.\n\nWhere do I enable webhook notifications?\n\nYou don't enable webhooks, Intercom will enable them for you when you install an app on a workspace.\n\nIf I am developing apps for other people what do I need to do?\n\nYou will need to select the permissions on the Authorization page of your app and then subscribe to the relevant topics on the Webhooks page.\n\nCan I subscribe for webhook topics via the API?\n\nNo, you can only subscribe to webhooks now via your Developer Hub. This is to make it easier for people to setup webhooks. Previously people had to keep track of all their webhooks and know when to subscribe and unsubscribe from them as needed. Intercom does this for you now so it should be easier to configure.\n\nI previously configured webhooks via the API. Can I still do that?\n\nYes, anyone that has previously used webhooks can continue to work in the same way. Intercom will not delete your webhooks or reconfigure them in anyway. We hope that you will start using the new approach from now on since it is much easier to manage.\n\nIf I need to trust specific IP addresses to accept inbound webhook requests from Intercom, which are they?\n\nThese are as follows: 34.231.68.152, 34.197.76.213, 35.171.78.91, 35.169.138.21, 52.70.27.159, 52.44.63.161."
  },
  {
    "title": "Context",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/requestobjects/context/",
    "html": "Context\nDescription\n\nThe context object provides additional details on where the app has been added (or is currently being used), what page the app is being used on, and information on the Messenger settings. This is in order for you give a fully customised experience based on the customers use case.\n\nIf the location is conversation then you will also be given a conversation_id. If you need to use details about the conversation, then you have to use the conversation_id to make a call to our Conversations API and retrieve the conversation object.\n\nAttributes\nKey\tType\tLocation\tDescription\nconversation_id\tinteger\tConversation\tThe id of the conversation where the app is added or being used.\nlocation\tstring\tConversation, Messenger Home, Message, Operator\tWhere the app is added or the action took place. Can be either 'conversation', 'home', 'message', or 'operator'.\nlocale\tstring\tConversation, Messenger Home, Message, Operator\tThe default end-user language of the Messenger. Use to localise Messenger App content.\nmessenger_action_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers action colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nmessenger_background_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers background colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nreferrer\tstring\tConversation, Messenger Home, Message, Operator\tThe current page URL where the app is being used.\nExample Objects\n{\n  conversation_id: 4294967297,\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n\n{\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n"
  },
  {
    "title": "Admin",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/requestobjects/admin/",
    "html": "Admin\nDescription\n\nThe admin object provides information on the Intercom teammate. You can see more about this on the Admin Model page of our API Reference.\n\nExample Object\n{\n  admin: {\n    type: \"admin\",\n    id: \"814860\",\n    name: \"IntercomTest\",\n    email: \"theadmin@example.com\",\n    job_title: \"Existentialist\",\n    away_mode_enabled: false,\n    away_mode_reassign: false,\n    avatar: {\n      image_url: \"https://static.site.test.icon\"\n    },\n    team_ids: [\n      814865\n    ]\n  }\n}\n"
  },
  {
    "title": "Current Canvas",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/requestobjects/current-canvas/",
    "html": "Current Canvas\nDescription\n\nThe current_canvas object mirrors the same format as the Canvas Object. This will be the canvas that was most recently showing before the request was sent.\n\nExample Object\n{\n  current_canvas: {\n    content: { \n      components : [\n        {\n          \"type\": \"button\",\n          \"id\": \"button-1\",\n          \"label\": \"This canvas showed before I was clicked\",\n          \"action\": {\n            \"type\": \"submit\"\n          }\n        }\n      ]\n    }\n  }\n}\n"
  },
  {
    "title": "Context",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/requestobjects/context/",
    "html": "Context\nDescription\n\nThe context object provides additional details on where the app has been added (or is currently being used), what page the app is being used on, and information on the Messenger settings. This is in order for you give a fully customised experience based on the customers use case.\n\nIf the location is conversation then you will also be given a conversation_id. If you need to use details about the conversation, then you have to use the conversation_id to make a call to our Conversations API and retrieve the conversation object.\n\nAttributes\nKey\tType\tLocation\tDescription\nconversation_id\tinteger\tConversation\tThe id of the conversation where the app is added or being used.\nlocation\tstring\tConversation, Messenger Home, Message, Operator\tWhere the app is added or the action took place. Can be either 'conversation', 'home', 'message', or 'operator'.\nlocale\tstring\tConversation, Messenger Home, Message, Operator\tThe default end-user language of the Messenger. Use to localise Messenger App content.\nmessenger_action_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers action colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nmessenger_background_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers background colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nreferrer\tstring\tConversation, Messenger Home, Message, Operator\tThe current page URL where the app is being used.\nExample Objects\n{\n  conversation_id: 4294967297,\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n\n{\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n"
  },
  {
    "title": "Segment Model",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/segments/segment-model/",
    "html": "Segment Model\nExample Object\n{\\n  \\\"type\\\": \\\"segment\\\",\\n  \\\"id\\\": \\\"53203e244cba153d39000062\\\",\\n  \\\"name\\\": \\\"New\\\",\\n  \\\"created_at\\\": 1394621988,\\n  \\\"updated_at\\\": 1394622004\\n}\n\nSegment Object\n\nA segment has a name and an id field along with created_at and updated_at timestamps. It can optionally include a count of the items in the segment when view or listing user segments.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is segment'\nid\tstring\tThe id representing the segment\nname\tstring\tThe name of the segment\ncreated_at\ttimestamp\tThe time the segment was created\nupdated_at\ttimestamp\tThe time the segment was updated\nperson_type\tstring\tType of the record: user or lead.\ncount\tinteger\tThe number of items in the user segment. It's returned when include_count=true is included in the request."
  },
  {
    "title": "Tag Model",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/tags/tag-model/",
    "html": "Tag Model\nExample Object\n{\\n  \\\"id\\\": \\\"17513\\\",\\n  \\\"name\\\": \\\"independent\\\",\\n  \\\"type\\\": \\\"tag\\\"\\n}\n\nTag Object\n\nA tag has a name and an id field. Once created the id field cannot be changed, but the name field can be updated later to allow tag renaming.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'tag'\nid\tstring\tThe id of the tag\nname\tstring\tThe name of the tag"
  },
  {
    "title": "Card Creation Options",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/requestobjects/card-creation-options/",
    "html": "Card Creation Options\nDescription\n\nThe card_creation_options object is a JSON hash containing key-value pairs. These key-value pairs either represent:\n\nData that was sent within the results object in response to the Configure request.\nData that was sent within the card_creation_options object in response to the Submit request.\nExample Object\ncard_creation_options: { \"key\": \"value\" } //Can be more than one pair\n"
  },
  {
    "title": "Contact",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/requestobjects/contact/",
    "html": "Contact\nDescription\n\nThe contact object provides information on the Intercom contact. You can see more about this on the Contacts Model page of our API Reference.\n\nExample Object\n{\n  \"type\": \"contact\",\n  \"id\": \"5ba682d23d7cf92bef87bfd4\",\n  \"workspace_id\": \"ecahpwf5\",\n  \"external_id\": \"25\",\n  \"role\": \"user\",\n  \"email\": \"wash@serenity.io\",\n  \"phone\": \"+1123456789\",\n  \"name\": \"Hoban Washburn\",\n  \"avatar\": \"https://example.org/128Wash.jpg\",\n  \"owner_id\": 127,\n  \"social_profiles\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"social_profile\",\n        \"name\": \"Twitter\",\n        \"url\": \"http://twitter.com/th1sland\"\n      }\n    ]\n  },\n  \"has_hard_bounced\": false,\n  \"marked_email_as_spam\": false,\n  \"unsubscribed_from_emails\": false,\n  \"created_at\": 1571672154,\n  \"updated_at\": 1571672158,\n  \"signed_up_at\": 1571069751,\n  \"last_seen_at\": 1571069751,\n  \"last_replied_at\": 1571672158,\n  \"last_contacted_at\": 1571672158,\n  \"last_email_opened_at\": 1571673478,\n  \"last_email_clicked_at\": 1571676789,\n  \"language_override\": null,\n  \"browser\": \"chrome\",\n  \"browser_version\": \"77.0.3865.90\",\n  \"browser_language\": \"en\",\n  \"os\": \"OS X 10.14.6\",\n  \"location\": {\n    \"type\": \"location\",\n    \"country\": \"Ireland\",\n    \"region\": \"Dublin\",\n    \"city\": \"Dublin\"\n  },\n  \"android_app_name\": null,\n  \"android_app_version\": null,\n  \"android_device\": null,\n  \"android_os_version\": null,\n  \"android_sdk_version\": null,\n  \"android_last_seen_at\": null,\n  \"ios_app_name\": null,\n  \"ios_app_version\": null,\n  \"ios_device\": null,\n  \"ios_os_version\": null,\n  \"ios_sdk_version\": null,\n  \"ios_last_seen_at\": null,\n  \"custom_attributes\": {\n    \"paid_subscriber\": true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 1\n  },\n  \"tags\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"tag\",\n        \"id\": \"2\",\n        \"url\": \"/tags/2\"\n      },\n      {\n        \"type\": \"tag\",\n        \"id\": \"4\",\n        \"url\": \"/tags/4\"\n      },\n      {\n        \"type\": \"tag\",\n        \"id\": \"5\",\n        \"url\": \"/tags/5\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/tags\",\n    \"total_count\": 3,\n    \"has_more\": false\n  },\n  \"notes\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"note\",\n        \"id\": \"20114858\",\n        \"url\": \"/notes/20114858\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/notes\",\n    \"total_count\": 1,\n    \"has_more\": false\n  },\n  \"companies\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"company\",\n        \"id\": \"5ba686093d7cf93552a3dc99\",\n        \"url\": \"/companies/5ba686093d7cf93552a3dc99\"\n        \n      },\n      {\n        \"type\": \"company\",\n        \"id\": \"5cee64a03d7cf90c51b36f19\",\n        \"url\": \"/companies/5cee64a03d7cf90c51b36f19\"\n      },\n      {\n        \"type\": \"company\",\n        \"id\": \"5d7668883d7cf944dbc5c791\",\n        \"url\": \"/companies/5d7668883d7cf944dbc5c791\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/companies\",\n    \"total_count\": 3,\n    \"has_more\": false\n  }\n}\n"
  },
  {
    "title": "Admin",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/requestobjects/admin/",
    "html": "Admin\nDescription\n\nThe admin object provides information on the Intercom teammate. You can see more about this on the Admin Model page of our API Reference.\n\nExample Object\n{\n  admin: {\n    type: \"admin\",\n    id: \"814860\",\n    name: \"IntercomTest\",\n    email: \"theadmin@example.com\",\n    job_title: \"Existentialist\",\n    away_mode_enabled: false,\n    away_mode_reassign: false,\n    avatar: {\n      image_url: \"https://static.site.test.icon\"\n    },\n    team_ids: [\n      814865\n    ]\n  }\n}\n"
  },
  {
    "title": "User Model",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/users/user-model/",
    "html": "User Model\nExample User Object (i.e. example JSON response)\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n  \\\"user_id\\\": \\\"25\\\",\\n  \\\"email\\\": \\\"wash@serenity.io\\\",\\n  \\\"phone\\\": \\\"+1123456789\\\",\\n  \\\"name\\\": \\\"Hoban Washburne\\\",\\n  \\\"updated_at\\\": 1392734388,\\n  \\\"last_seen_ip\\\" : null,\\n  \\\"unsubscribed_from_emails\\\": false,\\n  \\\"last_request_at\\\": 1397574667,\\n  \\\"signed_up_at\\\": 1392731331,\\n  \\\"created_at\\\": 1392734388,\\n  \\\"session_count\\\": 179,\\n  \\\"user_agent_data\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9\\\",\\n  \\\"pseudonym\\\": null,\\n  \\\"anonymous\\\": false,\\n  \\\"referrer\\\": \\\"https://example.org\\\",\\n  \\\"owner_id\\\": \\\"321452\\\",\\n  \\\"utm_campaign\\\": null,\\n  \\\"utm_content\\\": null,\\n  \\\"utm_medium\\\": null,\\n  \\\"utm_source\\\": null,\\n  \\\"utm_term\\\": null,\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"monthly_spend\\\": 155.5,\\n    \\\"team_mates\\\": 1\\n  },\\n  \\\"avatar\\\": {\\n    \\\"type\\\":\\\"avatar\\\",\\n    \\\"image_url\\\": \\\"https://example.org/128Wash.jpg\\\"\\n  },\\n  \\\"location_data\\\": {\\n      \\\"type\\\": \\\"location_data\\\",\\n      \\\"city_name\\\": \\\"Dublin\\\",\\n      \\\"continent_code\\\": \\\"EU\\\",\\n      \\\"country_code\\\": \\\"IRL\\\",\\n      \\\"country_name\\\": \\\"Ireland\\\",\\n      \\\"latitude\\\": 53.159233,\\n      \\\"longitude\\\": -6.723,\\n      \\\"postal_code\\\": null,\\n      \\\"region_name\\\": \\\"Dublin\\\",\\n      \\\"timezone\\\": \\\"Europe/Dublin\\\"\\n  },\\n  \\\"social_profiles\\\": {\\n    \\\"type\\\":\\\"social_profile.list\\\",\\n    \\\"social_profiles\\\": [\\n      {\\n        \\\"name\\\": \\\"Twitter\\\",\\n        \\\"id\\\": \\\"1235d3213\\\",\\n        \\\"username\\\": \\\"th1sland\\\",\\n        \\\"url\\\": \\\"http://twitter.com/th1sland\\\"\\n      }\\n    ]\\n  },\\n  \\\"companies\\\": {\\n    \\\"type\\\": \\\"company.list\\\",\\n    \\\"companies\\\": [\\n      {\\n        \\\"id\\\" : \\\"530370b477ad7120001e\\\"\\n      }\\n    ]\\n  },\\n  \\\"segments\\\": {\\n    \\\"type\\\": \\\"segment.list\\\",\\n    \\\"segments\\\": [ ]\\n  },\\n  \\\"tags\\\": {\\n    \\\"type\\\": \\\"tag.list\\\",\\n    \\\"tags\\\": [\\n      {\\n        \\\"id\\\": \\\"202\\\"\\n      }\\n    ]\\n  }\\n}\n\nExample List of Users\n{\\n  \\\"type\\\": \\\"user.list\\\",\\n  \\\"total_count\\\": 1, \\n  \\\"users\\\": [\\n    # an array of user objects\\n  ],\\n  \\\"pages\\\": {}\\n}\n\nUser Object\n\nA user object contains the following fields\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user' or 'contact'\nid\tstring\tThe Intercom defined id representing the user\ncreated_at\ttimestamp\tThe time (in seconds) the user was added to Intercom\nsigned_up_at\ttimestamp\tThe time (in seconds) the user signed up\nupdated_at\ttimestamp\tThe last time the user was updated\nuser_id\tstring\tThe user id you have defined for the user. (Max limit of 255 UTF-8 characters, and should not have trailing or leading spaces)\nemail\tstring\tThe email you have defined for the user. (Max limit of 255 UTF-8 characters, and should not have trailing or leading spaces)\nphone\tstring\tThe phone number of the user\ncustom_attributes\tobject\tThe custom attributes you have set on the user (case sensitive).\nlast_request_at\ttimestamp\tThe time the user last recorded making a request\nsession_count\tinteger\tHow many sessions the user has recorded\navatar\tobject\tAn avatar object for the user.\nunsubscribed_from_emails\tboolean\tWhether the user is unsubscribed from emails\nlocation_data\tobject\tA Location Object relating to the user\nuser_agent_data\tstring\tData about the last user agent the user was seen using\nlast_seen_ip\tnull\tThis will return null in an effort to remove PII from our API.\npseudonym\tstring\tThe pseudonym used if this user was previously a Lead (https://www.intercom.com/help/en/Intercom-for-customer-communication/the-intercom-messenger)\nanonymous\tboolean\tWhether or not this is a Lead. Always false\ncompanies\tlist\tA list of companies for the user\nsocial_profiles\tlist\tA list of social profiles associated with the user\nsegments\tlist\tThis will return an empty list of segments as part of our effort to deprecate this attribute on the user model for performance and accuracy reasons.\ntags\tlist\tA list of tags associated with the user\nname\tstring\tThe full name of the user\nreferrer\tstring\tThe URL of the page the user was last on\nutm_source\tstring\tIdentifies which site sent the traffic\nutm_medium\tstring\tIdentifies what type of link was used\nutm_campaign\tstring\tIdentifies a specific product promotion or strategic campaign\nutm_term\tstring\tIdentifies search terms\nutm_content\tstring\tIdentifies what specifically was clicked to bring the user to the site\n\nNote that in some parts of the API, the user id field may be referred to using intercom_user_id.\nAny integer values in the user model are limited to the int32 range -2^31 to 2^31 -1\n\nSocial Profile Object\nAttribute\tType\tDescription\ntype\tstring\tValue is 'social_profile'\nname\tstring\tThe name of the service (e.g., twitter, facebook)\nusername\tstring\tUser name or handle on the service\nurl\tstring\tThe user homepage on the service\nid\tstring\tOptional. User ID on the service\n\nSocial data is read only and can not be updated via the API.\n\nAvatar Object\nAttribute\tType\tDescription\ntype\tstring\tValue is 'avatar'\nimage_url\tstring\tAn avatar image URL. note: the image url needs to be https.\nLocation Object\nAttribute\tType\tDescription\ntype\tstring\tValue is 'location_data'\ncity_name\tstring\tOptional. A city name\ncontinent_code\tstring\tOptional. A continent code\ncountry_code\tstring\tOptional. An ISO 3166 country code\ncountry_name\tstring\tOptional. The country name\nlatitude\tnumber\tOptional. The latitude\nlongitude\tnumber\tOptional. The longitude\npostal_code\tstring\tOptional. A postal code\nregion_name\tstring\tOptional. A region name\ntimezone\tstring\tOptional. An ISO 8601 timezone\n\nLocation data is read only and can not be updated via the API.\n\nUser List\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user.list'\ntotal_count\tinteger\tThe number of users for this app\npages\tobject\tA Pagination object\nusers\tarray\tA list of users\n\nThe user list does not return Leads - this means all objects in the list will have an anonymous value of false. Any user in the list that was converted from a Lead will retain their pseudonym value."
  },
  {
    "title": "List by Tag, Segment, Company",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/users/list-by-tag-segment-company/",
    "html": "List by Tag, Segment, Company\nExample Tag Request\n$ curl https://api.intercom.io/users?tag_id=3142 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nintercom.users.find_all({ :tag_id => '30126' })\n\n<?php\n$user = $intercom->users->getUsers([\"tag_id\" => '730128']);\nprint_r($user->users[0]->email);\necho \"\\n\";\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"tag_id\", \"30126\");\nUserCollection users = User.list(params);\nwhile (users.hasNext()) {\n    out.println(users.next().getId());\n}\n\nExample Segment Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/users?segment_id=5926 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"user.list\\\",\\n  \\\"total_count\\\": 105,\\n  \\\"users\\\": [\\n    {\\n      \\\"type\\\": \\\"user\\\",\\n      \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n       ...\\n     },\\n     ...\\n  ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/users?tag_id=3142&per_page=50&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 3\\n  }\\n}\\n\\n# NB: Full User objects are returned\n\n\nYou can fetch segmented users/leads by querying the users resource with a segment_id parameter, indicating the id of the segment to query with.\n\nTo fetch tagged users/leads, you can use a tag_id parameter to indicate the id of the tag. For information on tagging users see the section Tag or Untag Users, Companies & Leads (Contacts).\n\nNote that you can not combine tag and segment parameters in the same request.\n\nTo list users belonging to a company, you can use the companies API. See the section List Company Users for details.\n\nRequest Parameters\nParameter\tRequired\tDescription\ntag_id\tno\tThe id of the tag to filter by.\nsegment_id\tno\tThe id of the segment to filter by.\nReturns\n\nA pageable list of users and leads.\n\nLike a plain company list, the result contains a pages object that indicates if more users exist via the next field."
  },
  {
    "title": "Updating the Last Seen Time",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/users/updating-the-last-seen-time/",
    "html": "Updating the Last Seen Time\nExample Update for Last Seen Time\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/users \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"user_id\\\": \\\"25\\\",\\n  \\\"last_request_at\\\": 1480076371\\n}'\n\n{\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5714dd359a3fd47136000001\\\",\\n    \\\"user_id\\\": \\\"25\\\",\\n    \\\"anonymous\\\": false,\\n    \\\"email\\\": \\\"wash@serenity.io\\\",\\n    \\\"phone\\\": \\\"555671243\\\",\\n    \\\"name\\\": \\\"Hoban Washburne\\\",\\n    \\\"pseudonym\\\": null,\\n    \\\"avatar\\\": {\\n        \\\"type\\\": \\\"avatar\\\",\\n        \\\"image_url\\\": \\\"https://secure.gravatar.com/avatar/0c3c17fd49f45c43f482730782b36d36?s=24&d=identicon\\\"\\n    },\\n    \\\"app_id\\\": \\\"ja43hiec\\\",\\n    \\\"companies\\\": {\\n        \\\"type\\\": \\\"company.list\\\",\\n        \\\"companies\\\": [\\n            {\\n                \\\"type\\\": \\\"company\\\",\\n                \\\"company_id\\\": \\\"366\\\",\\n                \\\"id\\\": \\\"574854e3ecd0c547ae0000e4\\\",\\n                \\\"name\\\": \\\"Serenity\\\"\\n            }\\n        ]\\n    },\\n    \\\"location_data\\\": {\\n        ...\\n    },\\n    \\\"last_request_at\\\": 1480076371,\\n    \\\"last_seen_ip\\\": \\\"1.2.3.4\\\",\\n    \\\"created_at\\\": 1460985141,\\n    \\\"remote_created_at\\\": 1392731331,\\n    \\\"signed_up_at\\\": 1392731331,\\n    \\\"updated_at\\\": 1480076399,\\n    \\\"session_count\\\": 0,\\n    \\\"social_profiles\\\": {\\n        \\\"type\\\": \\\"social_profile.list\\\",\\n        \\\"social_profiles\\\": [\\n         ...\\n        ]\\n    },\\n    \\\"unsubscribed_from_emails\\\": false,\\n    \\\"user_agent_data\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9\\\",\\n    \\\"tags\\\": {\\n        \\\"type\\\": \\\"tag.list\\\",\\n        \\\"tags\\\": []\\n    },\\n    \\\"segments\\\": {\\n        \\\"type\\\": \\\"segment.list\\\",\\n        \\\"segments\\\": []\\n    },\\n    \\\"custom_attributes\\\": {\\n        \\\"paid_subscriber\\\": true,\\n        \\\"monthly_spend\\\": 155.5,\\n        \\\"team_mates\\\": 9,\\n        \\\"last_order_at\\\": 1475569818\\n    }\\n}\n\n\nTo update the last time the user was seen in your App, send the time in the last_request_at field in a user update request. You can also send update_last_request_at: true to tell the API to update the last request time to the time of your call (in UTC)."
  },
  {
    "title": "List Users",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/users/list-users/",
    "html": "List Users\nList Users Example\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/users \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept: application/json'\n\nHTTP/1.1 200 OK{  \\\"type\\\": \\\"user.list\\\",  \\\"total_count\\\": 105,  \\\"users\\\": [    {      \\\"type\\\": \\\"user\\\",      \\\"id\\\": \\\"530370b477ad7120001d\\\",       ...     },     ...   ],  \\\"pages\\\": {    \\\"next\\\": \\\"https://api.intercom.io/users?per_page=50&page=2\\\",    \\\"page\\\": 1,    \\\"per_page\\\": 50,    \\\"total_pages\\\": 3  }}# NB: Full User objects are returned\n\n\nYou can fetch a list of users. The user list is sorted by the created_at field and by default is ordered descending, most recently created first.\n\nRequest Parameters\n\nYou can optionally request the result page size and which page to fetch as follows -\n\nParameter\tRequired\tDescription\npage\tno\twhat page of results to fetch defaults to first page.\nper_page\tno\thow many results per page defaults to 50, max is 60.\norder\tno\tasc or desc. Return the users in ascending or descending order. defaults to desc.\nsort\tno\twhat field to sort the results by. Valid values: created_at, last_request_at, signed_up_at, updated_at,\ncreated_since\tno\tlimit results to users that were created in that last number of days.\nReturns\n\nA pageable list of users. The user list contains a pages object that indicates if more users exist via the next field, whose value is a URL that can be used to fetch the next page. If the next field is not present, that indicates there are no further users in the list.\n\nWhen using the Users endpoint and the pages object to iterate through the returned users, there is a limit of 10,000 Users that can be returned. If you need to list or iterate on more than 10,000 Users, please use the Scroll API.\n\nA pageable list of users. The user list contains a pages object that indicates if more users exist via the next field, whose value is a URL that can be used to fetch the next page. If the next field is not present, that indicates there are no further users in the list.\n\nWhen using the Users endpoint and the pages object to iterate through the returned users, there is a limit of 10,000 Users that can be returned. If you need to list or iterate on more than 10,000 Users, please use the Scroll API."
  },
  {
    "title": "Incrementing User Sessions",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/users/incrementing-user-sessions/",
    "html": "Incrementing User Sessions\n\nTo indicate the update is part of an active session pass new_session: true when you update the user. The API will then follow the rules for web sessions outlined in our session docs to decide whether the session count should be updated for the user."
  },
  {
    "title": "Permanently delete a user",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/users/delete-users/",
    "html": "Permanently delete a user\n\nUser Delete Requests allow you to irrevocably remove data about a User. After creating a User Delete Request, the User's data will be hard-deleted within 90 days. This deletion cannot be cancelled or reversed.\n\nUser Delete Requests can be created via a POST to\nhttps://api.intercom.io/user_delete_requests\nThis endpoint accepts an internal Intercom ID as described below.\n\nAttributes\nParameter\tRequired\tDescription\nintercom_user_id\tYes\tThe internal ID of the User to irrevocably delete\nReturns\n\nThe ID of the User Delete Request, for your reference.\nUser Delete Requests cannot be altered.\n\nHARD DELETE\n\nImportant: If you delete a user/lead by mistake, contact us within 7 days (via the Messenger) and we can retrieve the information. After 7 days this data will be permanently destroyed.\n\nPermanently delete users\ncurlhttp\ncurl https://api.intercom.io/user_delete_requests \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"intercom_user_id\\\": \\\"530370b477ad7120001d\\\"\\n}'\n"
  },
  {
    "title": "Create or Update User",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/users/create-or-update-user/",
    "html": "Create or Update User\nCreate or Update Users\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/users \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"user_id\\\": \\\"25\\\",\\n  \\\"email\\\": \\\"wash@serenity.io\\\",\\n  \\\"name\\\": \\\"Hoban Washburne\\\",\\n  \\\"phone\\\": \\\"555671243\\\",\\n  \\\"signed_up_at\\\": 1392731331,\\n  \\\"last_seen_user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9\\\",\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"monthly_spend\\\": 155.5,\\n    \\\"team_mates\\\": 9,\\n    \\\"last_order_at\\\":1475569818\\n  },\\n  \\\"companies\\\": [\\n    {\\n      \\\"company_id\\\" : \\\"366\\\",\\n      \\\"name\\\" : \\\"Serenity\\\",\\n      \\\"monthly_spend\\\" : 500\\n    }\\n  ]\\n}\n\nHTTP/1.1 200 OK \\n#Example Response\\n{\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5714dd359a3fd47136000001\\\",\\n    \\\"user_id\\\": \\\"25\\\",\\n    \\\"anonymous\\\": false,\\n    \\\"email\\\": \\\"wash@serenity.io\\\",\\n    \\\"phone\\\": \\\"555671243\\\",\\n    \\\"name\\\": \\\"Hoban Washburne\\\",\\n    \\\"pseudonym\\\": null,\\n    \\\"avatar\\\": {\\n        \\\"type\\\": \\\"avatar\\\",\\n        \\\"image_url\\\": \\\"https://secure.gravatar.com/avatar/0c3c17fd49f45c43f482730782b36d36?s=24&d=identicon\\\"\\n    },\\n    \\\"app_id\\\": \\\"ja43hiec\\\",\\n    \\\"companies\\\": {\\n        \\\"type\\\": \\\"company.list\\\",\\n        \\\"companies\\\": [\\n            {\\n                \\\"type\\\": \\\"company\\\",\\n                \\\"company_id\\\": \\\"366\\\",\\n                \\\"id\\\": \\\"574854e3ecd0c547ae0000e4\\\",\\n                \\\"name\\\": \\\"Serenity\\\"\\n            }\\n        ]\\n    },\\n    \\\"location_data\\\": {\\n\\t\\t...\\n    },\\n    \\\"last_request_at\\\": null,\\n    \\\"created_at\\\": 1460985141,\\n    \\\"remote_created_at\\\": 1392731331,\\n    \\\"signed_up_at\\\": 1392731331,\\n    \\\"updated_at\\\": 1480075457,\\n    \\\"session_count\\\": 0,\\n    \\\"social_profiles\\\": {\\n        \\\"type\\\": \\\"social_profile.list\\\",\\n        \\\"social_profiles\\\": [\\n            ...\\n        ]\\n    },\\n    \\\"unsubscribed_from_emails\\\": false,\\n    \\\"user_agent_data\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9\\\",\\n    \\\"tags\\\": {\\n        \\\"type\\\": \\\"tag.list\\\",\\n        \\\"tags\\\": []\\n    },\\n    \\\"segments\\\": {\\n        \\\"type\\\": \\\"segment.list\\\",\\n        \\\"segments\\\": []\\n    },\\n    \\\"custom_attributes\\\": {\\n        \\\"paid_subscriber\\\": true,\\n        \\\"monthly_spend\\\": 155.5,\\n        \\\"team_mates\\\": 9,\\n        \\\"last_order_at\\\": 1475569818\\n    }\\n}\n\n\nUsers can be created or updated via a POST method to https://api.intercom.io/users, which accepts a JSON object describing the user.\n\nUsers not found via email or user_id will be created, and those that are found will be updated.\n\nNote that the following lookup order applies when updating users - id then user_id then email, and results in the following logic:\n\nid is matched - the user_id and email will be updated if they are sent.\nuser_id match - the email will be updated, the id is not updated.\nemail match where no user_id set on the matching user - the user_id will be set to the value sent in the request, the id is not updated.\nemail match where there is a user_id set on the matching user - a new unique record with new id will be created if a new value for user_id is sent in the request.\n\nNote that email values are downcased after they have been submitted to our API.\n\nAttributes\n\nThe table below shows the fields you can create or update for a user.\n\nParameter\tRequired\tDescription\nuser_id\tRequired if no email is supplied.\tA unique string identifier for the user. It is required on creation if an email is not supplied.\nemail\tRequired if no user_id is supplied.\tThe user's email address. It is required on creation if a user_id is not supplied.\nphone\tno\tThe user's phone number.\nid\tno\tThe id may be used for user updates.\nsigned_up_at\tno\tThe time the user signed up\nname\tno\tThe user's full name\ncustom_attributes\tno\tA hash of key/value pairs containing any other data about the user you want Intercom to store.\nlast_seen_user_agent\tno\tThe user agent the user last visited your application with.\ncompanies\tno\tIdentifies the companies this user belongs to.\nlast_request_at\tno\tA UNIX timestamp (in seconds) representing the date the user last visited your application.\nunsubscribed_from_emails\tno\tA boolean value representing the users unsubscribed status. default value if not sent is false.\nupdate_last_request_at\tno\tA boolean value, which if true, instructs Intercom to update the users' last_request_at value to the current API service time in UTC. default value if not sent is false.\nnew_session\tno\tA boolean value, which if true, instructs Intercom to register the request as a session.\n\nIn particular, please note that location data and social profiles are computed by the server and can not be updated via the API.\n\nCustom Attributes\n\nThe custom_attributes object allows you to send any information you wish about a user with the following restrictions\n\nField names must not contain Periods ('.') or Dollar ('$') characters:\n\nField names must be no longer than 190 characters.\nField values must be JSON Strings, Numbers or Booleans - Objects and Arrays will be rejected.\nString field values must be no longer than 255 characters.\nMaximum of 250 fields.\nCUSTOM ATTRIBUTE AS DATE\n\nYou can send dates as custom attributes by sending a unix timestamp. If the name of your custom attribute ends with _at then we'll automatically treat it as a date, rather than a number. See here for more info\n\nReturns\n\nA created or updated user object.\n\nNew user objects will be provided with an id field - this value cannot be created or edited by clients. Social profiles, location data and avatars are processed asynchronously, and may require a subsequent call to fetch their details."
  },
  {
    "title": "Text Area",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/interactivecomponents/text-area/",
    "html": "Text Area\n\nA text area component is used to capture a large amount of text as input with a multi-line text box. You can submit the value of the text area by:\n\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttextarea\tYes\tThe type of component you are rendering\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the text area.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\nerror\tfalse``true\tNo\tStyles the input as failed.Default is false.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Text Area",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/interactivecomponents/text-area/",
    "html": "Text Area\n\nA text area component is used to capture a large amount of text as input with a multi-line text box. You can submit the value of the text area by:\n\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttextarea\tYes\tThe type of component you are rendering\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the text area.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\nerror\tfalse``true\tNo\tStyles the input as failed.Default is false.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Companies and Users",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/users/companies-and-users/",
    "html": "Companies and Users\nAssociate a Company with a User\n$ curl https://api.intercom.io/users \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"id\": \"531ee472cce572a6ec000005\",\n  \"companies\": [\n    {\n    \"company_id\" : \"366\",\n    \"name\" : \"Serenity\"\n    }\n  ]\n}\n\nintercom.users.create(user_id: 111, companies: [{company_id: 10}])\n\n<?php\n$intercom->users->create([\n    \"user_id\" => \"111\",\n    \"companies\" => [\n        [\n            \"company_id\" => \"10\"\n        ]\n    ]\n]);\n?>\n\nUser user = User.find(\"541a144b201ebf2ec5000001\");\nuser.addCompany(company);\nUser.update(user);\n\nRemove a User from a Company\n$ curl https://api.intercom.io/users \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"id\": \"531ee472cce572a6ec000005\",\n  \"companies\": [\n    {\n      \"company_id\" : \"3\",\n     \"remove\" : true\n    }\n  ]\n}\n\nuser.companies = [{ :company_id => \"1234\", :remove => true}]\n\n<?php\n$intercom->users->create([\n    \"email\" => \"plato@phil.com\",\n    \"companies\" => [\n        [\n            \"company_id\" => \"9\",\n            \"remove\" => true\n        ]\n    ]\n]);\n?>\n\nCOMPANIES FIELD IS AN ARRAY\n\nNote that when associating a company with a user, the companies field used is an array, not an object (as is the case when the user is being fetched)\n\nCREATE OR UPDATE COMPANIES?\n\nUsers may be created or updated with a company object. If the company object does not already exist, it will be created for you. This saves having to create a company or check it exists before creating or updating a user.\n\nTo remove a company from a user add the field remove with a value of true to the embedded company object and submit the user as a update request. You must also submit the id of the company.\n\nNote: the \"id\" to be used for the \"companies\" object is the company\\_id."
  },
  {
    "title": "Archive a user",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/users/archive-a-user/",
    "html": "Archive a user\nPERMANENTLY DELETE A USER\n\nThe archive action will not perform a 'hard' delete. If you want to permanently delete your user then you will need to use the Permanently delete a user endpoint.\n\nExample ID Archive Request\ncurlcurlrubyphpjava\n$ curl \\\\\\n-s https://api.intercom.io/users/5321a20f72cdbb4192000013 \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\\n\\n{\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5714dd359a3fd47136000001\\\",\\n    \\\"user_id\\\": \\\"25\\\",\\n    \\\"anonymous\\\": false,\\n    \\\"email\\\": \\\"wash@serenity.io\\\",\\n    \\\"phone\\\": \\\"555671243\\\",\\n    \\\"name\\\": \\\"Hoban Washburne\\\",\\n    \\\"pseudonym\\\": null,\\n  ...\\n}\\n# NB: Full User objects are returned\n\nExample User ID Archive Request\n$ curl \\\n-s https://api.intercom.io/users?user_id=25 \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"type\": \"user\",\n    \"id\": \"5714dd359a3fd47136000001\",\n    \"user_id\": \"25\",\n    \"anonymous\": false,\n    \"email\": \"wash@serenity.io\",\n    \"phone\": \"555671243\",\n    \"name\": \"Hoban Washburne\",\n    \"pseudonym\": null,\n  ...\n}\n# NB: Full User objects are returned\n\nuser = intercom.users.find(:user_id => \"1\")\nintercom.users.delete(user)\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"user_id\", \"1\");\nuser = User.find(params);\nUser.delete(user.getId());\n\n<?php\n$intercom->users->deleteUser(\"\", [\"user_id\" => \"5087\"]);\n?>\n\nExample User Email Archive Request\n$ curl \\\n-s https://api.intercom.io/users?email=wash%40serenity.io \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"type\": \"user\",\n    \"id\": \"5714dd359a3fd47136000001\",\n    \"user_id\": \"25\",\n    \"anonymous\": false,\n    \"email\": \"wash@serenity.io\",\n    \"phone\": \"555671243\",\n    \"name\": \"Hoban Washburne\",\n    \"pseudonym\": null,\n  ...\n}\n# NB: Full User objects are returned\n\nuser = intercom.users.find(:email => \"foo@bar.com\")\nintercom.users.delete(user)\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"email\", \"malcolm@serenity.io\");\nuser = User.find(params);\nUser.delete(user.getId());\n\n<?php\n$intercom->users->deleteUser(\"\", [\"email\" => \"test@example.com\"]);\n?>\n\n\nA user can be archived by sending a DELETE request to its URL using the user's id field as part of the path -\n\nhttps://api.intercom.io/users/{id}\n\nAlternatively, you can archive a user by sending a DELETE request using the email or user_id as query parameters -\n\nhttps://api.intercom.io/users?email={email}\nhttps://api.intercom.io/users?user_id={user_id}\nRequest Parameters\nParameter\tRequired\tDescription\nemail\tno\tThe email you have defined for the user\nuser_id\tno\tThe user id you have defined for the user\n\nPlease note that when a user is archived, all of their conversations and message history will also be archived.\n\nReturns\n\nA User object."
  },
  {
    "title": "Notes",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/notes/notes/",
    "html": "Notes\n\nNotes allow you to annotate and comment on your users.\n\nA note can be authored by an admin about a user, and the notes associated with a user can be listed."
  },
  {
    "title": "Webhook Models",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/webhooks/webhooks/webhook-models-1/",
    "html": "Webhook Models\nWebhook Topics\n\nThe following topics are available and you can be notified when an action relating to that topic occurs. You just need to tell us where to send the notification. The 'Item Type' column shows the API type that will be sent as the data of the notification.\n\nTopic\tItem Type\tDescription\nconversation.user.created\tConversation\tSubscribe to user/lead initiated conversations\nconversation.user.replied\tConversation\tSubscribe to contact user/lead conversation replies\nconversation.admin.replied\tConversation\tSubscribe to admin conversation replies\nconversation.admin.single.created\tConversation\tSubscribe to admin initiated 1:1 conversations\nconversation.admin.assigned\tConversation\tSubscribe to admin conversation assignments\nconversation.admin.noted\tConversation\tSubscribe to admin conversation notes\nconversation.admin.closed\tConversation\tSubscribe to admin conversation closes\nconversation.admin.opened\tConversation\tSubscribe to admin conversation opens\nconversation.admin.snoozed\tConversation\tSubscribe to admin conversation snoozes\nconversation.admin.unsnoozed\tConversation\tSubscribe to admin conversation unsnoozes\nconversation_part.tag.created\tConversation\tSubscribe to conversation parts being tagged\nconversation_part.redacted\tConversation\tSubscribe to conversation parts being deleted\nconversation.rating.added\tConversation\tSubscribe to conversations getting a rating\nconversation.deleted\tConversation\tSubscribe to conversation deleted\nuser.created\tUser\tSubscribe to user creations\nuser.deleted\tUser\tSubscribe to user deletions\nuser.unsubscribed\tUser\tSubscribe to user unsubscriptions from email\nuser.email.updated\tUser\tSubscribe to user email address being updated\nuser.tag.created\tUserTag\tSubscribe to users being tagged\nuser.tag.deleted\tUserTag\tSubscribe to users being untagged\ncontact.created\tLead\tSubscribe to lead creations\ncontact.signed_up\tLead\tSubscribe to leads converting to users\ncontact.added_email\tLead\tSubscribe to emails being added to leads\ncontact.tag.created\tContactTag\tSubscribe to leads being tagged\ncontact.tag.deleted\tContactTag\tSubscribe to leads being untagged\nvisitor.signed_up\tVisitor\tSubscribe to visitors converting to users\ncompany.created\tCompany\tSubscribe to company creations\nevent.created\tEvent\tSubscribe to events\nping\tPing\tSent when a post to the subscription's ping resource is received, or periodically by Intercom. Ping is always subscribed to.\nWebhooks and Permissions\n\nEach webhook topic is associated with one or more permission scopes. If you would like to setup a webhook for a particular topic then you will need to select the appropriate permission scope to be able to request a notification for that topic.\n\nMULTIPLE PERMISSIONS\n\nSome topic are associated with multiple permissions. In these cases you don't need to select all of these permissions to subscribe to that topic.\n\nWebhook topic\tWorks with permissions\tGroups\nconversation_part.tag.created\tRead conversations\tConversation data\nconversation_part.redacted\tRead conversations\tConversation data\nconversation.rating.added\tRead conversations\tConversation data\nconversation.admin.assigned\tRead conversations\tConversation data\nconversation.admin.closed\tRead conversations\tConversation data\nconversation.admin.noted\tRead conversations\tConversation data\nconversation.admin.opened\tRead conversations\tConversation data\nconversation.admin.replied\tRead conversations\tConversation data\nconversation.admin.single. created\tRead conversations\tConversation data\nconversation.admin.snoozed\tRead conversations\tConversation data\nconversation.admin.unsnoozed\tRead conversations\tConversation data\nconversation.user.created\tRead conversations\tConversation data\nconversation.user.replied\tRead conversations\tConversation data\nconversation.deleted\tRead conversations\tConversation data\ncontact.added_email\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.email.updated\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.unsubscribed\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nvisitor.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nevent.created\tRead events\tCustomer event data\ncompany.created\tRead users and companies, Read one user and one company\tCompany data\nWebhook Notification Object\n\nA notification object contains the following fields:\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'notification_event'\nid\tstring\tThe Intercom defined id representing the notification.\nself\tstring\tThe Intercom defined URL for the subscription. Optional.\ncreated_at\ttimestamp\tThe timestamp the notification was created.\ntopic\tstring\tCorresponds to a topic.\ndelivery_attempts\tnumber\tThe number of times this notification has been attempted.\nfirst_sent_at\ttimestamp\tThe first time the delivery was attempted.\ndata\tobject\tA container for the data associated with the notification.\ndata.item\tobject\tThe data associated with the notification, which will have a 'type' field.\n\nThe contents of data.item object will be defined according to its type field. In the example to the right, the type value of company indicates a company object.\n\n{\n  \"type\": \"notification_event\",\n  \"topic\": \"company.created\",\n  \"id\": \"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b3\",\n  \"app_id\" : \"a86dr8yl\",\n  \"created_at\": 1392731331,\n  \"delivery_attempts\": 1,\n  \"first_sent_at\": 1392731392,\n  \"data\": {\n    \"item\": {\n      \"type\": \"company\",\n      \"id\": \"531ee472cce572a6ec000006\",\n      \"name\": \"Blue Sun\",\n      \"company_id\": \"6\",\n      \"remote_created_at\": 1394531169,\n      \"created_at\": 1394533506,\n      \"updated_at\": 1396874658,\n      \"custom_attributes\": {\n      }\n    }\n  }\n}\n\nHandling Webhook Notifications\n\nWhen you setup a subscription you will receive notifications on your chosen topics. How you handle those notifications, i.e. the HTTP status code returned, will determine the subsequent state of that subscription.\n\nResponse Code\tDescription\tAction\n2xx\tSuccess\tThe webhook was successfully delivered.\n410\tGone\tWhen a 410 is received, we assume the resource is no longer available. We will disable the subscription and no more notifications will be sent.\n429\tToo many requests\tWhen a 429 is received, all notifications from that subscription will be throttled. Depending on the rate of delivery, this delay can be between 1 minute to 2 hours. If 429s continue and any notification is delayed for > 2 hours then we will drop that notification.\n4xx (excl. 429) 5xx\tClient or service errors\tWe will retry after 1 minute for all other errors. If the 2nd retry fails then we mark the notification delivery as failed.\nTIMEOUT\n\nYou have 5 seconds to respond to a notification. If you don't send a response inside that time, the notification is treated as failed and will be retried only once after 1 minute.\n\nSigned Notifications\n\nEach webhook notification is signed by Intercom via an X-Hub-Signature header. We do this so that you can verify the notification came from Intercom by decoding the signature.\n\nThe value of this X-Hub-Signature header is computed by creating a signature using the body of the JSON request and your app's client_secret value, which you can find on the Basic Info page of your app.\n\nThe signature is the hexadecimal (40-byte) representation of a SHA-1 signature computed using the HMAC algorithm as defined in RFC2104.\n\nThe X-Hub-Signature header value starts with the string sha1= followed by the signature.\n\nPOST https://example.org/hooks\nUser-Agent: intercom-parrot-service-client/1.0\nX-Hub-Signature: sha1=21ff2e149e0fdcac6f947740f6177f6434bda921\nAccept: application/json\nContent-Type: application/json\n\n{\n  \"type\" : \"notification_event\",\n  \"id\" : \"notif_78c122d0-23ba-11e4-9464-79b01267cc2e\",\n  \"topic\" : \"user.created\",\n  \"app_id\" : \"a86dr8yl\",\n  \"data\" : {\n    \"type\" : \"notification_event_data\",\n    \"item\" : {\n      \"type\" : \"user\",\n      \"id\" : \"530370b477ad7120001d\",\n      \"user_id\" : \"25\",\n      \"name\" : \"Hoban Washburne\",\n      \"unsubscribed_from_emails\" : false,\n      \"custom_attributes\" : {}\n    }\n  }\n}\n\nContact Tag Model for Webhooks\n\nThe Contact Tag model is only returned for webhooks. It is not used with the Lead (i.e. contact) or Tag endpoints themselves. You can see an example object below:\n\nExample Contact Tag Model in Webhooks\n{  \\\"type\\\": \\\"contact_tag\\\",  \\\"created_at\\\": 1392731331,  \\\"tag\\\" : {      \\\"id\\\": \\\"1287\\\",      \\\"name\\\": \\\"independent\\\",      \\\"type\\\": \\\"tag\\\"    },  \\\"contact\\\" : {      \\\"type\\\": \\\"contact\\\",      \\\"id\\\": \\\"1287ab1287fefe\\\",      \\\"user_id\\\": \\\"12\\\"  }}\n\n\nA contact tag is composed from the existing contact and tag JSON and is sent when contacts are tagged and untagged via the contact.tag.created and contact.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'contact_tag'.\ncreated_at\ttimestamp\tThe time the contact tag object was created.\ntag\tTag\tThe tag that was added or removed.\ncontact\tcontact\tThe contact that was tagged or untagged.\nUser Tag Model for Webhooks\n\nThe User Tag model is only returned for webhooks. It is not used with the User or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"user_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"17513\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"user\" : {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n      \"user_id\": \"25\"\n  }\n}\n\n\nA user tag is composed from the existing user and tag JSON and is sent when users are tagged and untagged via the user.tag.created and user.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user_tag'.\ncreated_at\ttimestamp\tThe time the user tag object was created.\ntag\tTag\tThe tag that was added or removed.\nuser\tUser\tThe user that was tagged or untagged."
  },
  {
    "title": "Convert a visitor",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/visitors/convert-a-visitor-to-a-user/",
    "html": "Convert a visitor\n\nYou can merge a Visitor to a Contact of role type lead or user.\n\nWHAT HAPPENS UPON A VISITOR BEING CONVERTED?\n\nIf the User exists, then the Visitor will be merged into it, the Visitor deleted and the User returned. If the User does not exist, the Visitor will be converted to a User, with the User identifiers replacing it's Visitor identifiers.\n\nRequest Body Parameters\nArgument\tType\tRequired?\tDescription\nvisitor\tObject\tYes\tThe unique identifiers to convert a single Visitor.\nuser\tObject\tYes\tThe unique identifiers retained after converting or merging.\ntype\tString\tYes\tRepresents the role of the Contact model. Accepts lead or user.\nVisitor object\nArgument\tType\tRequired?\tDescription\nid\tString\tOne of\tThe unique identifier for the contact which is given by Intercom.\nuser_id\tString\tOne of\tA unique identifier for the contact which is given to Intercom.\nemail\tString\tOne of\tThe visitor's email.\nUser object (a contact)\nArgument\tType\tRequired?\tDescription\nid\tString\tOne of\tThe unique identifier for the contact which is given by Intercom.\nuser_id\tString\tOne of\tA unique identifier for the contact which is given to Intercom, which will be represented as external_id.\nemail\tString\tNo\tThe contact's email, retained by default if one is present.\nExample Request & Response\ncurlcurl\n$ curl \\\\https://api.intercom.io/visitors/convert \\\\-X POST \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json' \\\\-H 'Content-Type: application/json' -d '{  \\\"visitor\\\": {    \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"  },  \\\"user\\\": {    \\\"email\\\": \\\"winstonsmith@truth.org\\\"  },  \\\"type\\\": \\\"user\\\"}'\n\n# NB: Full User objects are returned{  \\\"type\\\": \\\"lead\\\",  \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"}\n\nResponse\n\nThis will return a Contact model of the visitor you just converted or merged into."
  },
  {
    "title": "Note Model",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/notes/note-model/",
    "html": "Note Model\nExample Object\n{\\n  \\\"type\\\": \\\"note\\\",\\n  \\\"id\\\": \\\"16\\\",\\n  \\\"created_at\\\": 1389913941,\\n  \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n  \\\"author\\\": {\\n    \\\"type\\\": \\\"admin\\\",\\n    \\\"id\\\": \\\"21\\\",\\n    \\\"name\\\": \\\"Jayne Cobb\\\",\\n    \\\"email\\\": \\\"jayne@serenity.io\\\",\\n    \\\"companies\\\": []\\n  },\\n  \\\"user\\\": {\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\"\\n  }\\n}\n\nNote Object\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'note'\nid\tstring\tThe id representing the note\ncreated_at\ttimestamp\tThe time the note was created\nuser\tUser\tThe user the note was created about\nbody\tstring\tThe body text of the note.\nauthor\tAdmin\tOptional. Represents the Admin that created the note"
  },
  {
    "title": "List Notes for a User",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/notes/list-notes-for-a-user/",
    "html": "List Notes for a User\nExample User ID Request\n$ curl https://api.intercom.io/notes?user_id=25 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nintercom.notes.find_all(:user_id => '123').each {|note| puts note.body}\n\n<?php\n$notes = $intercom->notes->getNotes([\"user_id\" => \"20413\"]);\nforeach ($notes->notes as $note) {\n    print \"id:\".$note->id.\" body:\".$note->body.\"\\n\";\n}\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"user_id\", \"123\");\nNoteCollection notes = Note.list(params);\nwhile (notes.hasNext()) {\n    out.println(notes.next().getBody());\n}\n\nExample Email Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/notes?email=jayne%40serenity.io \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"note.list\\\",\\n  \\\"notes\\\": [\\n    {\\n      \\\"type\\\": \\\"note\\\",\\n      \\\"id\\\": \\\"1\\\",\\n      \\\"created_at\\\": 1389913941,\\n      \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n      \\\"author\\\": {\\n        \\\"type\\\": \\\"admin\\\",\\n        \\\"id\\\": \\\"21\\\",\\n        \\\"name\\\": \\\"Jayne Cobb\\\",\\n        \\\"email\\\": \\\"jayne@serenity.io\\\",\\n        \\\"companies\\\": []\\n      },\\n      \\\"user\\\": {\\n        \\\"type\\\": \\\"user\\\",\\n        \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\"\\n      }\\n    },\\n    {\\n      \\\"type\\\": \\\"note\\\",\\n      \\\"id\\\": \\\"2\\\",\\n      \\\"created_at\\\": 1389913951,\\n      \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n      \\\"user\\\": {\\n          \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\",\\n          \\\"type\\\": \\\"user\\\"\\n        }\\n    }\\n  ],\\n  \\\"pages\\\": {}\\n}\n\nExample ID Request\n$ curl \\\nhttps://api.intercom.io/notes?id=5310d8e8598c9a0b24000005 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n# Not exposed in Ruby client\n\n<?php\n$notes = $intercom->notes->getNotes([\"id\" => \"5965efd9aad5c02fc4750ee6\"]);\nforeach ($notes->notes as $note) {\n    print \"id:\".$note->id.\" body:\".$note->body.\"\\n\";\n}\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"id\", \"5310d8e8598c9a0b24000005\");\nnotes = Note.list(params);\nwhile (notes.hasNext()) {\n    out.println(notes.next().getBody());\n}\n\n\nA user's notes can be fetched by using a GET request to https://api.intercom.io/notes with an Intercom user id or user_id or email query parameter.\n\nThe value of the email parameter should be url encoded before sending.\n\nParameters\nParameter\tRequired\tDescription\nuser_id\tone of\tThe user id you have defined for the user\nemail\tone of\tThe email you have defined for the user\nid\tone of\tThe Intercom defined id representing the user\nReturns\n\nA list of note objects for that User.\n\nNote List Object\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'note.list'\nnotes\tarray\tA list of note objects"
  },
  {
    "title": "Webhook Topics",
    "url": "https://developers.intercom.com/docs/references/2.0/webhooks/webhook-models/",
    "html": "Webhook Topics\n\nThe following topics are available and you can be notified when an action relating to that topic occurs. You just need to tell us where to send the notification. The 'Item Type' column shows the API type that will be sent as the data of the notification.\n\nTopic\tItem Type\tDescription\nconversation.user.created\tConversation\tSubscribe to user/lead initiated conversations\nconversation.user.replied\tConversation\tSubscribe to contact user/lead conversation replies\nconversation.admin.replied\tConversation\tSubscribe to admin conversation replies\nconversation.admin.single.created\tConversation\tSubscribe to admin initiated 1:1 conversations\nconversation.admin.assigned\tConversation\tSubscribe to admin conversation assignments\nconversation.admin.noted\tConversation\tSubscribe to admin conversation notes\nconversation.admin.closed\tConversation\tSubscribe to admin conversation closes\nconversation.admin.opened\tConversation\tSubscribe to admin conversation opens\nconversation.admin.snoozed\tConversation\tSubscribe to admin conversation snoozes\nconversation.admin.unsnoozed\tConversation\tSubscribe to admin conversation unsnoozes\nconversation_part.tag.created\tConversation\tSubscribe to conversation parts being tagged\nconversation_part.redacted\tConversation\tSubscribe to conversation parts being deleted\nconversation.rating.added\tConversation\tSubscribe to conversations getting a rating\nconversation.deleted\tConversation\tSubscribe to conversation deleted\nuser.created\tUser\tSubscribe to user creations\nuser.deleted\tUser\tSubscribe to user deletions\nuser.unsubscribed\tUser\tSubscribe to user unsubscriptions from email\nuser.email.updated\tUser\tSubscribe to user email address being updated\nuser.tag.created\tUserTag\tSubscribe to users being tagged\nuser.tag.deleted\tUserTag\tSubscribe to users being untagged\ncontact.created\tLead\tSubscribe to lead creations\ncontact.signed_up\tLead\tSubscribe to leads converting to users\ncontact.added_email\tLead\tSubscribe to emails being added to leads\ncontact.tag.created\tContactTag\tSubscribe to leads being tagged\ncontact.tag.deleted\tContactTag\tSubscribe to leads being untagged\nvisitor.signed_up\tVisitor\tSubscribe to visitors converting to users\ncompany.created\tCompany\tSubscribe to company creations\nevent.created\tEvent\tSubscribe to events\nping\tPing\tSent when a post to the subscription's ping resource is received, or periodically by Intercom. Ping is always subscribed to.\nWebhooks and Permissions\n\nEach webhook topic is associated with one or more permission scopes. If you would like to setup a webhook for a particular topic then you will need to select the appropriate permission scope to be able to request a notification for that topic.\n\n🚧 Multiple permissions\n\nSome topic are associated with multiple permissions. In these cases you don't need to select all of these permissions to subscribe to that topic.\n\nWebhook topic\tWorks with permissions\tGroups\nconversation_part.tag.created\tRead conversations\tConversation data\nconversation_part.redacted\tRead conversations\tConversation data\nconversation.rating.added\tRead conversations\tConversation data\nconversation.admin.assigned\tRead conversations\tConversation data\nconversation.admin.closed\tRead conversations\tConversation data\nconversation.admin.noted\tRead conversations\tConversation data\nconversation.admin.opened\tRead conversations\tConversation data\nconversation.admin.replied\tRead conversations\tConversation data\nconversation.admin.single. created\tRead conversations\tConversation data\nconversation.admin.snoozed\tRead conversations\tConversation data\nconversation.admin.unsnoozed\tRead conversations\tConversation data\nconversation.user.created\tRead conversations\tConversation data\nconversation.user.replied\tRead conversations\tConversation data\nconversation.deleted\tRead conversations\tConversation data\ncontact.added_email\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.email.updated\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.unsubscribed\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nvisitor.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nevent.created\tRead events\tCustomer event data\ncompany.created\tRead users and companies, Read one user and one company\tCompany data\nWebhook Notification Object\n\nA notification object contains the following fields:\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'notification_event'\nid\tstring\tThe Intercom defined id representing the notification.\nself\tstring\tThe Intercom defined URL for the subscription. Optional.\ncreated_at\ttimestamp\tThe timestamp the notification was created.\ntopic\tstring\tCorresponds to a topic.\ndelivery_attempts\tnumber\tThe number of times this notification has been attempted.\nfirst_sent_at\ttimestamp\tThe first time the delivery was attempted.\ndata\tobject\tA container for the data associated with the notification.\ndata.item\tobject\tThe data associated with the notification, which will have a 'type' field.\n\nThe contents of data.item object will be defined according to its type field. In the example to the right, the type value of company indicates a company object.\n\n{\n  \"type\": \"notification_event\",\n  \"topic\": \"company.created\",\n  \"id\": \"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b3\",\n  \"app_id\" : \"a86dr8yl\",\n  \"created_at\": 1392731331,\n  \"delivery_attempts\": 1,\n  \"first_sent_at\": 1392731392,\n  \"data\": {\n    \"item\": {\n      \"type\": \"company\",\n      \"id\": \"531ee472cce572a6ec000006\",\n      \"name\": \"Blue Sun\",\n      \"company_id\": \"6\",\n      \"remote_created_at\": 1394531169,\n      \"created_at\": 1394533506,\n      \"updated_at\": 1396874658,\n      \"custom_attributes\": {\n      }\n    }\n  }\n}\n\nHandling Webhook Notifications\n\nWhen you setup a subscription you will receive notifications on your chosen topics. How you handle those notifications, i.e. the HTTP status code returned, will determine the subsequent state of that subscription.\n\nResponse Code\tDescription\tAction\n2xx\tSuccess\tThe webhook was successfully delivered.\n410\tGone\tWhen a 410 is received, we assume the resource is no longer available. We will disable the subscription and no more notifications will be sent.\n429\tToo many requests\tWhen a 429 is received, all notifications from that subscription will be throttled. Depending on the rate of delivery, this delay can be between 1 minute to 2 hours. If 429s continue and any notification is delayed for > 2 hours then we will drop that notification.\n4xx (excl. 429) 5xx\tClient or service errors\tWe will retry after 1 minute for all other errors. If the 2nd retry fails then we mark the notification delivery as failed.\n\n❗️ Timeout\n\nYou have 5 seconds to respond to a notification. If you don't send a response inside that time, the notification is treated as failed and will be retried only once after 1 minute.\n\nSigned Notifications\n\nEach webhook notification is signed by Intercom via an X-Hub-Signature header. We do this so that you can verify the notification came from Intercom by decoding the signature.\n\nThe value of this X-Hub-Signature header is computed by creating a signature using the body of the JSON request and your app's client_secret value, which you can find on the Basic Info page of your app.\n\nThe signature is the hexadecimal (40-byte) representation of a SHA-1 signature computed using the HMAC algorithm as defined in RFC2104.\n\nThe X-Hub-Signature header value starts with the string sha1= followed by the signature.\n\nPOST https://example.org/hooks\nUser-Agent: intercom-parrot-service-client/1.0\nX-Hub-Signature: sha1=21ff2e149e0fdcac6f947740f6177f6434bda921\nAccept: application/json\nContent-Type: application/json\n\n{\n  \"type\" : \"notification_event\",\n  \"id\" : \"notif_78c122d0-23ba-11e4-9464-79b01267cc2e\",\n  \"topic\" : \"user.created\",\n  \"app_id\" : \"a86dr8yl\",\n  \"data\" : {\n    \"type\" : \"notification_event_data\",\n    \"item\" : {\n      \"type\" : \"user\",\n      \"id\" : \"530370b477ad7120001d\",\n      \"user_id\" : \"25\",\n      \"name\" : \"Hoban Washburne\",\n      \"unsubscribed_from_emails\" : false,\n      \"custom_attributes\" : {}\n    }\n  }\n}\n\nContact Tag Model for Webhooks\n\nThe Contact Tag model is only returned for webhooks. It is not used with the Lead (i.e. contact) or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"contact_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"1287\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"contact\" : {\n      \"type\": \"contact\",\n      \"id\": \"1287ab1287fefe\",\n      \"user_id\": \"12\"\n  }\n}\n\n\nA contact tag is composed from the existing contact and tag JSON and is sent when contacts are tagged and untagged via the contact.tag.created and contact.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'contact_tag'.\ncreated_at\ttimestamp\tThe time the contact tag object was created.\ntag\tTag\tThe tag that was added or removed.\ncontact\tcontact\tThe contact that was tagged or untagged.\nUser Tag Model for Webhooks\n\nThe User Tag model is only returned for webhooks. It is not used with the User or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"user_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"17513\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"user\" : {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n      \"user_id\": \"25\"\n  }\n}\n\n\nA user tag is composed from the existing user and tag JSON and is sent when users are tagged and untagged via the user.tag.created and user.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user_tag'.\ncreated_at\ttimestamp\tThe time the user tag object was created.\ntag\tTag\tThe tag that was added or removed.\nuser\tUser\tThe user that was tagged or untagged."
  },
  {
    "title": "Canvas",
    "url": "https://developers.intercom.com/docs/references/1.1/canvas-kit/responseobjects/canvas/",
    "html": "Canvas\n\nCanvases are one of the most common objects in most app cycles. They enable Intercom to determine what your app will render, alongside how this content will be rendered. These can either be:\n\nStatic: the given content in the canvas will remain until an action is taken to change this.\nLive: the given content in the canvas can change dynamically whenever anybody views the card. More about the Live Canvas can be found here.\nStatic Canvas\n{\n  canvas: {\n    content: {\n      components: [\n        {\n          type: \"text\",\n          text: \"Hello World!\"\n        }\n      ]\n    },\n    stored_data: {} //optional\n  }\n}\n\nKey\tType\tDescription\ncontent\tobject\tMore on the content object can be found here. Max Size is 64KB.\nstored_data\tobject\tMore on the stored_data object can be found here. Max Size is 64KB.\nLive Canvas\n{\n  canvas: {\n    content_url: \"https://messengerapp.com/get-content-here\",\n    stored_data: {} //optional\n  }\n}\n\nKey\tType\tDescription\ncontent_url\tstring\tThe URL which we make Live Canvas requests to. You must respond to these with a Content Object. Max size is 64KB.\nstored_data\tobject\tOptional Stored Data that you want to be returned in the next sent request. Max Size is 64KB."
  },
  {
    "title": "Users",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/users/users/",
    "html": "Users\n\nThe Users resource is the primary way of interacting with Intercom. You can create, update and delete your users, and add custom attributes describing them. Users can be viewed individually or as a list, and can be queried using tags or segments."
  },
  {
    "title": "Users",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/users/users/",
    "html": "Users\n\nThe Users resource is the primary way of interacting with Intercom. You can create, update and delete your users, and add custom attributes describing them. Users can be viewed individually or as a list, and can be queried using tags or segments."
  },
  {
    "title": "Create a Note",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/notes/create-a-note/",
    "html": "Create a Note\nExample Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/notes \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'  \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"admin_id\\\" : \\\"21\\\",\\n  \\\"body\\\": \\\"Text for my note\\\",\\n  \\\"user\\\": {\\n    \\\"id\\\" : \\\"5310d8e8598c9a0b24000005\\\"\\n  }\\n}'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"note\\\",\\n  \\\"id\\\": \\\"16\\\",\\n  \\\"created_at\\\": 1389913941,\\n  \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n  \\\"author\\\": {\\n    \\\"type\\\": \\\"admin\\\",\\n    \\\"id\\\": \\\"21\\\",\\n    \\\"name\\\": \\\"Jayne Cobb\\\",\\n    \\\"email\\\": \\\"jayne@serenity.io\\\",\\n    \\\"companies\\\": []\\n  },\\n  \\\"user\\\": {\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\"\\n  }\\n}\n\n\nNotes can be created via a POST method to https://api.intercom.io/notes, which accepts a JSON object describing the note.\n\nAttributes\n\nThe table below shows the fields you can use to create a note -\n\nArgument\tRequired\tDescription\nuser\tYes\tRepresentation of the user the note is to be created about.\nuser.user_id\tone of\tYour user_id for the user\nuser.email\tone of\tYour email address for the user\nuser.id\tone of\tThe user id for the user\nadmin_id\tNo\tThe id of the admin creating the note.\nbody\tYes\tThe text of the note.\nReturns\n\nA note object. The submitted body may be enclosed with html p elements in the response."
  },
  {
    "title": "Leads Object",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/leads/leads-object/",
    "html": "Leads Object\nExample Lead Object (i.e. example JSON response)\nLead example object\n{\\n    \\\"anonymous\\\": true,\\n    \\\"app_id\\\": \\\"abc3wodw\\\",\\n    \\\"avatar\\\": {\\n        \\\"image_url\\\": \\\"https://secure.gravatar.com/avatar/af060c6?\\\",\\n        \\\"type\\\": \\\"avatar\\\"\\n    },\\n    \\\"companies\\\": {\\n        \\\"companies\\\": [],\\n        \\\"type\\\": \\\"company.list\\\"\\n    },\\n    \\\"created_at\\\": 1503488750,\\n    \\\"custom_attributes\\\": {},\\n    \\\"do_not_track\\\": null,\\n    \\\"email\\\": \\\"test@example.com\\\",\\n    \\\"has_hard_bounced\\\": false,\\n    \\\"id\\\": \\\"599d6aeeda883ed8ba7c2\\\",\\n    \\\"last_request_at\\\": 1503488749,\\n    \\\"location_data\\\": {\\n        \\\"city_name\\\": \\\"Pretoria\\\",\\n        \\\"continent_code\\\": \\\"AF\\\",\\n        \\\"country_code\\\": \\\"ZAF\\\",\\n        \\\"country_name\\\": \\\"South Africa\\\",\\n        \\\"postal_code\\\": \\\"0118\\\",\\n        \\\"region_name\\\": \\\"Gauteng\\\",\\n        \\\"timezone\\\": \\\"Africa/Johannesburg\\\",\\n        \\\"type\\\": \\\"location_data\\\"\\n    },\\n    \\\"marked_email_as_spam\\\": false,\\n    \\\"name\\\": null,\\n    \\\"owner_id\\\": \\\"321452\\\",\\n    \\\"phone\\\": null,\\n    \\\"pseudonym\\\": \\\"Test from Pretoria\\\",\\n    \\\"referrer\\\": null,\\n    \\\"remote_created_at\\\": null,\\n    \\\"segments\\\": {\\n        \\\"segments\\\": [],\\n        \\\"type\\\": \\\"segment.list\\\"\\n    },\\n    \\\"session_count\\\": 0,\\n    \\\"signed_up_at\\\": null,\\n    \\\"social_profiles\\\": {\\n        \\\"social_profiles\\\": [\\n            {\\n                \\\"id\\\": \\\"123456\\\",\\n                \\\"name\\\": \\\"GooglePlus\\\",\\n                \\\"type\\\": \\\"social_profile\\\",\\n                \\\"url\\\": \\\"https://plus.google.com/123456\\\",\\n                \\\"username\\\": null\\n            }\\n        ],\\n        \\\"type\\\": \\\"social_profile.list\\\"\\n    },\\n    \\\"tags\\\": {\\n        \\\"tags\\\": [],\\n        \\\"type\\\": \\\"tag.list\\\"\\n    },\\n    \\\"type\\\": \\\"contact\\\",\\n    \\\"unsubscribed_from_emails\\\": false,\\n    \\\"updated_at\\\": 1520946390,\\n    \\\"user_id\\\": \\\"e477-55c-47d5-96d3-e45bf\\\",\\n    \\\"utm_campaign\\\": null,\\n    \\\"utm_content\\\": null,\\n    \\\"utm_medium\\\": null,\\n    \\\"utm_source\\\": null,\\n    \\\"utm_term\\\": null\\n}\n\n\nA lead object contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'contact'\nid\tstring\tThe Intercom defined id representing the Lead\ncreated_at\ttimestamp\tThe time the Lead was added to Intercom\nupdated_at\ttimestamp\tThe last time the Lead was updated\nuser_id\tstring\tAutomatically generated identifier for the Lead\nemail\tstring\tThe email you have defined for the Lead\nphone\tstring\tThe phone number you have defined for the lead\nname\tstring\tThe name of the Lead\ncustom_attributes\tobject\tThe custom attributes you have set on the Lead\nlast_request_at\ttimestamp\tThe time the Lead last recorded making a request\navatar\tobject\tAn avatar object for the Lead\nunsubscribed_from_emails\tboolean\tWhether the Lead is unsubscribed from emails\nlocation_data\tobject\tA Location Object relating to the Lead\ncompanies\tlist\tA list of companies for the Lead\nsocial_profiles\tlist\tA list of social profiles associated with the Lead\nsegments\tlist\tThis will return an empty list of segments as part of our effort to deprecate this attribute on the lead model for performance and accuracy reasons.\ntags\tlist\tA list of tags associated with the Lead.\nreferrer\tstring\tThe URL of the page the lead was last on\nutm_source\tstring\tIdentifies which site sent the traffic\nutm_medium\tstring\tIdentifies what type of link was used\nutm_campaign\tstring\tIdentifies a specific product promotion or strategic campaign\nutm_term\tstring\tIdentifies search terms\nutm_content\tstring\tIdentifies what specifically was clicked to bring the user to the site\n\nInformation on social profile, avatar and location objects can be found under the Users documentation."
  },
  {
    "title": "Single-Select",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/interactivecomponents/single-select/",
    "html": "Single-Select\n\nA single-select component is used to capture a choice from up to 10 options that you provide. You can submit the value of the select option by:\n\nAdding an action to the single-select component\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the single-select component used as the key and the id from the chosen option as the value.\n\nSingle-Select Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tsingle-select\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of options.Can provide 2 to 10.\nlabel\tAny string\tNo\tThe text shown above the options.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOptions Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Create a Note",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/notes/create-a-note/",
    "html": "Create a Note\nExample Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/notes \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'  \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"admin_id\\\" : \\\"21\\\",\\n  \\\"body\\\": \\\"Text for my note\\\",\\n  \\\"user\\\": {\\n    \\\"id\\\" : \\\"5310d8e8598c9a0b24000005\\\"\\n  }\\n}'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"note\\\",\\n  \\\"id\\\": \\\"16\\\",\\n  \\\"created_at\\\": 1389913941,\\n  \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n  \\\"author\\\": {\\n    \\\"type\\\": \\\"admin\\\",\\n    \\\"id\\\": \\\"21\\\",\\n    \\\"name\\\": \\\"Jayne Cobb\\\",\\n    \\\"email\\\": \\\"jayne@serenity.io\\\",\\n    \\\"companies\\\": []\\n  },\\n  \\\"user\\\": {\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\"\\n  }\\n}\n\n\nNotes can be created via a POST method to https://api.intercom.io/notes, which accepts a JSON object describing the note.\n\nAttributes\n\nThe table below shows the fields you can use to create a note -\n\nArgument\tRequired\tDescription\nuser\tYes\tRepresentation of the user the note is to be created about.\nuser.user_id\tone of\tYour user_id for the user\nuser.email\tone of\tYour email address for the user\nuser.id\tone of\tThe user id for the user\nadmin_id\tNo\tThe id of the admin creating the note.\nbody\tYes\tThe text of the note.\nReturns\n\nA note object. The submitted body may be enclosed with html p elements in the response."
  },
  {
    "title": "Users",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/users/users/",
    "html": "Users\n\nThe Users resource is the primary way of interacting with Intercom. You can create, update and delete your users, and add custom attributes describing them. Users can be viewed individually or as a list, and can be queried using tags or segments."
  },
  {
    "title": "Leads",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/leads/leads/",
    "html": "Leads\n\nLeads are useful for representing logged-out users of your application. The Leads resource provides methods to fetch, create, update and delete Leads within Intercom.\n\nLeads were previously known as 'Contacts'. Our object names and types continue to be referred to as 'contacts/contact'. We will migrate to 'Leads/Lead' models at a future date."
  },
  {
    "title": "Update Lead",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/leads/update-lead/",
    "html": "Update Lead\nExample Request\n$ curl https://api.intercom.io/contacts \\\n-XPOST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"id\": \"5811f6bbe6b4704ddfa84ac0\",\n  \"user_id\": \"77177570-cf5d-4f1a-bc75-75202af47d4f\",\n  \"phone\": \"123987456\",\n  \"email\": \"obrien@truth.org\",\n  \"name\": \"OBrien\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 9\n  }\n}'\n\ncontact.name = \"Winston Smith\"\nintercom.contacts.save(contact)\n\ncontact.setName(\"Winston Smith\");\nContact updated = Contact.update(contact);\n\n<?php\n$intercom->leads->create([\n    \"id\" => \"596f6b60d797879302bd7ac1\",\n    \"phone\" => \"5552345657\"\n]);\n?>\n\nHTTP/1.1 200 OK\n{\n    \"type\": \"contact\",\n    \"id\": \"5811f6bbe6b4704ddfa84ac0\",\n    \"user_id\": \"77177570-cf5d-4f1a-bc75-75202af47d4f\",\n    \"anonymous\": true,\n    \"email\": \"obrien@truth.org\",\n    \"phone\": \"00353875551234\",\n    \"name\": \"OBrien\",\n    \"pseudonym\": \"Lime Camel from Dublin\",\n    \"avatar\": {\n        \"type\": \"avatar\",\n        \"image_url\": null\n    },\n    \"app_id\": \"ja43hiec\",\n    \"companies\": {\n        \"type\": \"company.list\",\n        \"companies\": []\n    },\n    \"location_data\": {\n        \"type\": \"location_data\",\n        \"city_name\": \"Mukilteo\",\n        \"continent_code\": \"NA\",\n        \"country_name\": \"United States\",\n        \"latitude\": 47.913,\n        \"longitude\": -122.3042,\n        \"postal_code\": \"98275\",\n        \"region_name\": \"Washington\",\n        \"timezone\": \"America/Los_Angeles\",\n        \"country_code\": \"USA\"\n    },\n    \"last_request_at\": 1477660267,\n    \"last_seen_ip\": \"1.2.3.4\",\n    \"created_at\": 1477572283,\n    \"remote_created_at\": null,\n    \"signed_up_at\": null,\n    \"updated_at\": 1480068674,\n    \"session_count\": 0,\n    \"social_profiles\": {\n        \"type\": \"social_profile.list\",\n        \"social_profiles\": []\n    },\n    \"unsubscribed_from_emails\": false,\n    \"user_agent_data\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9\",\n    \"tags\": {\n        \"type\": \"tag.list\",\n        \"tags\": []\n    },\n    \"segments\": {\n        \"type\": \"segment.list\",\n        \"segments\": []\n    },\n    \"custom_attributes\": {\n        \"paid_subscriber\": true,\n        \"monthly_spend\": 155.5,\n        \"team_mates\": 9\n    }\n}\n# contact response\n\n\nSending a POST request to /contacts and passing identifiers (user_id or id) in the body will result in an update of an existing Lead.\n\nIt is not possible to uniquely identify a Lead for an update with an email address."
  },
  {
    "title": "Text",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/presentationcomponents/text/",
    "html": "Text\n\nThe text component is used for rendering blocks of text. Links and bold font can be rendered through Markdown. There are different styles provided which edit the color, weight, and font size. These cannot be edited through Markdown.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttext\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\ntext\tAny stringMarkdown Links []()Markdown Bold **\tYes\tThe text that will be rendered.\nalign\tleft``center``right\tNo\tAligns the text. Default is left.\nstyle\theader``paragraph``muted``error\tNo\tStyles the text. Default is paragraph.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "Event Model",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/data-events/event-model/",
    "html": "Event Model\nEvent Object\n{\n  \"event_name\" : \"invited-friend\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"342311\"\n}\n\n// Sufficient to send just the event name\nIntercom('trackEvent', 'invited-friend');\n\n# create an event as a hash\nevent = {\n  :event_name => \"invited-friend\",\n  :email => current_user.email,\n  :created_at => 1391691571\n}\nintercom.events.create event\n\n<?php\n$event = array(\n  \"event_name\" => \"invited-friend\",\n  \"created_at\" => 1391691571,\n  \"user_id\" => \"314159\"\n);\n$intercom->events->create($event);\n?>\n\nEvent event = new Event()\n  .setEventName(\"invited-friend\")\n  .setUserID(\"1314159\");\n  .setCreatedAt(currentTimeMillis()/1000L);\n\nEvent.create(event);\n\nEvent Object\n\nAn Event Object describes the event and contains the following fields\n\nAttribute\tRequired\tDescription\nevent_name\tyes\tThe name of the event that occurred. This is presented to your App's admins when filtering and creating segments - a good event name is typically a past tense 'verb-noun' combination, to improve readability, for example updated-plan.\ncreated_at\tyes\tThe time the event occurred as a UTC Unix timestamp\nuser_id\tyes if no email\tYour identifier for the user.\nid\tyes if no email or user_id.\tYour identifier for a lead or a user.\nemail\tyes if no user_id\tAn email address for your user. An email should only be used where your application uses email to uniquely identify users\nmetadata\tno\toptional metadata about the event.\n\nThe event_name field is processed as follows -\n\nNames are treated as case insensitive - 'Completed-Order' and 'completed-order' will be considered the same event for your application.\nPeriods (.) and dollars ($) in event names are replaced with hyphens. e.g., 'completed.order' will be stored as 'completed-order'.\n\nTo avoid confusion we recommend submitting lower case event names that do not contain periods or dollars!\n\nMetadata Object\n\nSending an event with metadata\n\n$ curl https://api.intercom.io/events \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Content-Type: application/json\" -d'\n{\n  \"event_name\" : \"invited-friend\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"314159\",\n  \"metadata\": {\n     \"invitee_email\": \"pi@example.org\",\n     \"invite_code\": \"ADDAFRIEND\"\n  }\n}'\n\nvar metadata = {\n  invitee_email: 'pi@example.org',\n  invite_code: 'ADDAFRIEND'\n};\nIntercom('trackEvent', 'invited-friend', metadata);\n\nmetadata = {\n  :invitee_email => 'pi@example.org',\n  :invite_code => 'ADDAFRIEND'\n}\nintercom.events.create {\n  :event_name => \"invited-friend\",\n  :email => current_user.email,\n  :created_at => 1391691571,\n  :metadata => metadata\n}\n\n<?php\n$metadata = array(\n  \"invitee_email\" => \"pi@example.org\",\n  \"invite_code\" => \"ADDAFRIEND\"\n);\n$intercom->events->create(array(\n  \"event_name\" => \"invited-friend\",\n  \"created_at\" => 1391691571,\n  \"user_id\" => \"314159\",\n  \"metadata\" => $metadata\n));\n?>\n\nEvent event = new Event()\n  .setEventName(\"invited-friend\")\n  .setUserID(\"314159\")\n  .putMetadata(\"invite_mail\", \"pi@example.org\")\n  .putMetadata(\"invite_code\", \"ADDAFRIEND\")\n  .putMetadata(\"found_date\", currentTimeMillis()/1000L);\n\nEvent.create(event);\n\n\nMetadata can be used to submit an event with extra key value data. Each event can contain up to ten metadata key values.\n\nSome use cases for event metadata are -\n\nLinking an event back to a page in your website.\nDescribing before and after values for a subscription plan change.\nSending contextual information about an online order, a booking.\n\nYou can now trigger messages to your users based on event and event metadata and also include the metadata in the messages. For more information on how this works, learn more about event based messaging\n\nSee the section 'Metadata Types' for more information on the kinds of metadata you can send."
  },
  {
    "title": "Submitting Events",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/data-events/submitting-events/",
    "html": "Submitting Events\nSubmit an Event\n$ curl https://api.intercom.io/events \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Content-Type: application/json\" -d'\n{\n  \"event_name\" : \"invited-friend\",\n  \"created_at\": 1391691571,\n  \"user_id\" : \"314159\"\n}'\n\nHTTP/1.1 202 Accepted\n\nIntercom('trackEvent', 'invited-friend');\n\nintercom.events.create(event_name: \"invited-friend\", email: user.email, created_at: 1391691571)\n\n<?php\n$intercom->events->create([\n    \"event_name\" => \"php-test\",\n    \"created_at\" => 1500907513,\n    \"user_id\" => \"1276\"\n]);\n?>\n\nEvent event = new Event()\n  .setEventName(\"invited-friend\")\n  .setCreatedAt(1234L)\n  .setUserID(\"314159\");\n\nEvent.create(event);\n\n\nYou will need an Access Token that has write permissions to send Events. Once you have a key you can submit events via POST to the Events resource, which is located at https://api.intercom.io/events, or you can send events using one of the client libraries. When working with the HTTP API directly a client should send the event with a Content-Type of application/json.\n\nWhen using the JavaScript API, adding the code to your app makes the Events API available. Once added, you can submit an event using the trackEvent method. This will associate the event with the Lead or currently logged-in user or logged-out visitor/lead and send it to Intercom. The final parameter is a map that can be used to send optional metadata about the event.\n\nWith the Ruby client you pass a hash describing the event to Intercom::Event.create, or call the track_user method directly on the current user object (e.g. user.track_event).\n\nLEAD EVENTS\n\nWhen submitting events for Leads, you will need to specify the Lead's id.\n\nHTTP API Responses\nSuccessful responses to submitted events return 202 Accepted with an empty body.\nUnauthorised access will be rejected with a 401 Unauthorized or 403 Forbidden response code.\nEvents sent about users that cannot be found will return a 404 Not Found.\nServer errors will return a 500 response code and may contain an error message in the body."
  },
  {
    "title": "List Events",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/data-events/list-user-events/",
    "html": "List Events\n\nPlease note that you can only 'list' events that are less than 90 days old. Event counts and summaries will still include your events older than 90 days but you cannot 'list' these events individually if they are older than 90 days\n\nList all customer events\ncurlcurlrubyphpjava\n$ curl 'https://api.intercom.io/events?type=user&user_id=314159' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"event.list\\\",\\n  \\\"events\\\": [\\n      {\\n        \\\"event_name\\\" : \\\"ordered-item\\\",\\n        \\\"created_at\\\": 1391691571,\\n        \\\"user_id\\\" : \\\"314159\\\"\\n      },\\n      {\\n        \\\"event_name\\\" : \\\"invited-friend\\\",\\n        \\\"created_at\\\": 1389913941,\\n        \\\"user_id\\\" : \\\"314159\\\",\\n        \\\"metadata\\\": {\\n         \\\"invitee_email\\\": \\\"pi@example.org\\\",\\n         \\\"invite_code\\\": \\\"ADDAFRIEND\\\"\\n         }\\n      },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/events?type=user&intercom_user_id=55a3b&before=144474756550\\\"\\n  }\\n}\\n\\n# NB: Full event objects are returned\n\n\nThe events belonging to a customer can be listed by sending a GET request to https://api.intercom.io/events with a user or lead identifier along with a type parameter. The identifier parameter can be one of user_id, email or intercom_user_id. The type parameter value must be user.\n\nhttps://api.intercom.io/events?type=user&user_id={user_id}\nhttps://api.intercom.io/events?type=user&email={email}\nhttps://api.intercom.io/events?type=user&intercom_user_id={id} (this call can be used to list leads)\n\nThe email parameter value should be url encoded when sending.\n\nYou can optionally define the result page size as well with the per_page parameter.\n\nRequest Parameters\nParameter\tRequired\tDescription\ntype\tyes\tThe value must be user\nuser_id\tno\tThe user id you have defined for the user\nemail\tno\tThe email you have defined for the user\nintercom_user_id\tno\tThe Intercom defined id for the user\nper_page\tno\tHow many results to return per page defaults to 50.\nsummary\tno\tBoolean value. When set to true, event counts are returned grouped by event name.\nReturns\n\nA pageable list of events. The event list contains a pages object that indicates if more events exist for the customer via the next field, whose value is a URL that can be used to fetch the next page. If the next field is not present, that indicates there are no further events for the user. Clients should note that the parameters in the returned link are not assured to be the same as those sent in the request.\n\nThe event list is sorted by the created_at field and ordered descending, most recently created first.\n\nAs well as the fields that were supplied when the event was posted to Intercom (see Event model for details) the event payload will also contain an id field that uniquely identifies the event and may optionally contain an intercom_user_id containing the Intercom defined id representing the user.\n\nYou can use the API to get counts of users, leads and companies filtered by certain criteria.\n\nCounts are a good way to periodically obtain data for the purposes of tracking rates of change in user and company data."
  },
  {
    "title": "List",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/interactivecomponents/list/",
    "html": "List\n\nA list component renders a list of items which you provide in an array. You can make each list item take an action by adding the relevant action object to the item:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nList Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tlist\tYes\tThe type of component you are rendering.\nitems\tArray (see below)\tYes\tThe items that will be rendered in the list.\ndisabled\ttrue``false\tNo\tStyles all list items and prevents the action.Default is false.\nItem Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\titem\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the item.\ntitle\tAny string\tYes\tThe text shown as the title for the item.\nsubtitle\tAny string\tNo\tThe text shown underneath the item's title.\ntertiary_text\tAny string\tNo\tThe text shown next to the subtitle, separates by a bullet.\nimage\tA valid HTTPS URL\tNo\tAn image that will be displayed to the left of the item.\nimage_width\tAny integer\tYes (if image provided)\tThe exact width of the image in pixels.\nimage_height\tAny integer\tYes (if image provided)\tThe exact height of the image in pixels.\nrounded_image\ttrue``false\tNo\tRounds the corners of the image.Default is false.\ndisabled\ttrue``false\tNo\tThe defined state of the inputted value to render a specific style.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nPreview"
  },
  {
    "title": "Input",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/interactivecomponents/input/",
    "html": "Input\n\nAn input component is used to capture text input from the end user. You can submit the value of the input by:\n\nAdding an action to the input component (which will render an inline button)\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tinput\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the input.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.Will be overriden if save_state is saved.\nPreview"
  },
  {
    "title": "Dropdown",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/interactivecomponents/dropdown/",
    "html": "Dropdown\n\nA dropdown component is used to capture a choice from the options that you provide. You can submit the value of the select option by:\n\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the dropdown component used as the key and the id from the chosen option as the value.\n\nDropdown Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tdropdown\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of 2 or more options.\nlabel\tAny string\tNo\tThe text shown above the dropdown.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOption Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Event de-duplication",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/data-events/event-de-duplication/",
    "html": "Event de-duplication\n\nThe API may detect and ignore duplicate events. Each event is uniquely identified as a combination of the following data - the App identifier, the User identifier, the Event name and the Event created time. As a result, it is strongly recommended to send a second granularity Unix timestamp in the created_at field.\n\nDuplicated events are responded to using the normal 202 Accepted code - an error is not thrown, however repeat requests will be counted against any rate limit that is in place."
  },
  {
    "title": "URL Action",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/actioncomponents/url-action/",
    "html": "URL Action\n\nA URL action opens a given link in a new browser tab.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\turl\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which will open in a new tab.\nExample Object\naction: {\n  \"type\": \"url\",\n  \"url\":  \"https://www.example.com\"\n}\n"
  },
  {
    "title": "Checkbox",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/interactivecomponents/checkbox/",
    "html": "Checkbox\n\nA checkbox component is used to capture multiple choices from as many options as you want to provide. You can submit the options by:\n\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the checkbox component used as the key and an array containing the id of each chosen option as the value.\n\nCheckbox Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tcheckbox\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noption\tArray (See Below)\tYes\tThe list of options.Minimum of 1.\nlabel\tAny string\tNo\tThe text shown above the options.\nvalue\tArray containing the id of option's\tNo\tThe option's that are selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\nOptions Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown next to the checkbox.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Contact",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/requestobjects/contact/",
    "html": "Contact\nDescription\n\nThe contact object provides information on the Intercom contact. You can see more about this on the Contacts Model page of our API Reference.\n\nExample Object\n{\n  \"type\": \"contact\",\n  \"id\": \"5ba682d23d7cf92bef87bfd4\",\n  \"workspace_id\": \"ecahpwf5\",\n  \"external_id\": \"25\",\n  \"role\": \"user\",\n  \"email\": \"wash@serenity.io\",\n  \"phone\": \"+1123456789\",\n  \"name\": \"Hoban Washburn\",\n  \"avatar\": \"https://example.org/128Wash.jpg\",\n  \"owner_id\": 127,\n  \"social_profiles\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"social_profile\",\n        \"name\": \"Twitter\",\n        \"url\": \"http://twitter.com/th1sland\"\n      }\n    ]\n  },\n  \"has_hard_bounced\": false,\n  \"marked_email_as_spam\": false,\n  \"unsubscribed_from_emails\": false,\n  \"created_at\": 1571672154,\n  \"updated_at\": 1571672158,\n  \"signed_up_at\": 1571069751,\n  \"last_seen_at\": 1571069751,\n  \"last_replied_at\": 1571672158,\n  \"last_contacted_at\": 1571672158,\n  \"last_email_opened_at\": 1571673478,\n  \"last_email_clicked_at\": 1571676789,\n  \"language_override\": null,\n  \"browser\": \"chrome\",\n  \"browser_version\": \"77.0.3865.90\",\n  \"browser_language\": \"en\",\n  \"os\": \"OS X 10.14.6\",\n  \"location\": {\n    \"type\": \"location\",\n    \"country\": \"Ireland\",\n    \"region\": \"Dublin\",\n    \"city\": \"Dublin\"\n  },\n  \"android_app_name\": null,\n  \"android_app_version\": null,\n  \"android_device\": null,\n  \"android_os_version\": null,\n  \"android_sdk_version\": null,\n  \"android_last_seen_at\": null,\n  \"ios_app_name\": null,\n  \"ios_app_version\": null,\n  \"ios_device\": null,\n  \"ios_os_version\": null,\n  \"ios_sdk_version\": null,\n  \"ios_last_seen_at\": null,\n  \"custom_attributes\": {\n    \"paid_subscriber\": true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 1\n  },\n  \"tags\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"tag\",\n        \"id\": \"2\",\n        \"url\": \"/tags/2\"\n      },\n      {\n        \"type\": \"tag\",\n        \"id\": \"4\",\n        \"url\": \"/tags/4\"\n      },\n      {\n        \"type\": \"tag\",\n        \"id\": \"5\",\n        \"url\": \"/tags/5\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/tags\",\n    \"total_count\": 3,\n    \"has_more\": false\n  },\n  \"notes\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"note\",\n        \"id\": \"20114858\",\n        \"url\": \"/notes/20114858\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/notes\",\n    \"total_count\": 1,\n    \"has_more\": false\n  },\n  \"companies\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"company\",\n        \"id\": \"5ba686093d7cf93552a3dc99\",\n        \"url\": \"/companies/5ba686093d7cf93552a3dc99\"\n        \n      },\n      {\n        \"type\": \"company\",\n        \"id\": \"5cee64a03d7cf90c51b36f19\",\n        \"url\": \"/companies/5cee64a03d7cf90c51b36f19\"\n      },\n      {\n        \"type\": \"company\",\n        \"id\": \"5d7668883d7cf944dbc5c791\",\n        \"url\": \"/companies/5d7668883d7cf944dbc5c791\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/companies\",\n    \"total_count\": 3,\n    \"has_more\": false\n  }\n}\n"
  },
  {
    "title": "Context",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/requestobjects/context/",
    "html": "Context\nDescription\n\nThe context object provides additional details on where the app has been added (or is currently being used), what page the app is being used on, and information on the Messenger settings. This is in order for you give a fully customised experience based on the customers use case.\n\nIf the location is conversation then you will also be given a conversation_id. If you need to use details about the conversation, then you have to use the conversation_id to make a call to our Conversations API and retrieve the conversation object.\n\nAttributes\nKey\tType\tLocation\tDescription\nconversation_id\tinteger\tConversation\tThe id of the conversation where the app is added or being used.\nlocation\tstring\tConversation, Messenger Home, Message, Operator\tWhere the app is added or the action took place. Can be either 'conversation', 'home', 'message', or 'operator'.\nlocale\tstring\tConversation, Messenger Home, Message, Operator\tThe default end-user language of the Messenger. Use to localise Messenger App content.\nmessenger_action_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers action colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nmessenger_background_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers background colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nreferrer\tstring\tConversation, Messenger Home, Message, Operator\tThe current page URL where the app is being used.\nExample Objects\n{\n  conversation_id: 4294967297,\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n\n{\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n"
  },
  {
    "title": "Current Canvas",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/requestobjects/current-canvas/",
    "html": "Current Canvas\nDescription\n\nThe current_canvas object mirrors the same format as the Canvas Object. This will be the canvas that was most recently showing before the request was sent.\n\nExample Object\n{\n  current_canvas: {\n    content: { \n      components : [\n        {\n          \"type\": \"button\",\n          \"id\": \"button-1\",\n          \"label\": \"This canvas showed before I was clicked\",\n          \"action\": {\n            \"type\": \"submit\"\n          }\n        }\n      ]\n    }\n  }\n}\n"
  },
  {
    "title": "Card Creation Options",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/requestobjects/card-creation-options/",
    "html": "Card Creation Options\nDescription\n\nThe card_creation_options object is a JSON hash containing key-value pairs. These key-value pairs either represent:\n\nData that was sent within the results object in response to the Configure request.\nData that was sent within the card_creation_options object in response to the Submit request.\nExample Object\ncard_creation_options: { \"key\": \"value\" } //Can be more than one pair\n"
  },
  {
    "title": "List Company Data Attributes",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/data-attributes/list-company-data-attributes/",
    "html": "List Company Data Attributes\n\nList of your company data attributes\n\n$ curl https://api.intercom.io/data_attributes/company \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n{\n    \"type\": \"data_attribute.list\",\n    \"data_attributes\": [\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"name\",\n            \"full_name\": \"name\",\n            \"label\": \"Company name\",\n            \"description\": \"The name of a company\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": true,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"company_id\",\n            \"full_name\": \"company_id\",\n            \"label\": \"Company ID\",\n            \"description\": \"A number identifying a company\",\n            \"data_type\": \"string\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"last_request_at\",\n            \"full_name\": \"last_request_at\",\n            \"label\": \"Company last seen\",\n            \"description\": \"The last day anyone from a company visited your site or app\",\n            \"data_type\": \"date\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"remote_created_at\",\n            \"full_name\": \"remote_created_at\",\n            \"label\": \"Company created at\",\n            \"description\": \"The day a company was added to Intercom\",\n            \"data_type\": \"date\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"user_count\",\n            \"full_name\": \"user_count\",\n            \"label\": \"People\",\n            \"description\": \"The number of people in a company\",\n            \"data_type\": \"integer\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"session_count\",\n            \"full_name\": \"session_count\",\n            \"label\": \"Company web sessions\",\n            \"description\": \"All visits from anyone in a company to your product's site or app\",\n            \"data_type\": \"integer\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"website\",\n            \"full_name\": \"website\",\n            \"label\": \"Company website\",\n            \"description\": \"The web address for the company's primary marketing site\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": true,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"subdomain\",\n            \"full_name\": \"custom_attributes.subdomain\",\n            \"label\": \"subdomain\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1500395363,\n            \"updated_at\": 1500395363\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"creation_source\",\n            \"full_name\": \"custom_attributes.creation_source\",\n            \"label\": \"creation_source\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1500477452,\n            \"updated_at\": 1500477452\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"paid_subscriber\",\n            \"full_name\": \"custom_attributes.paid_subscriber\",\n            \"label\": \"paid_subscriber\",\n            \"data_type\": \"boolean\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1511192754,\n            \"updated_at\": 1511192754\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"team_mates\",\n            \"full_name\": \"custom_attributes.team_mates\",\n            \"label\": \"team_mates\",\n            \"data_type\": \"integer\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1511192755,\n            \"updated_at\": 1511192755\n        }\n    ]\n}\n\nList Company attributes\n\nYou can fetch a list of all the company data attributes for your app by using https://api.intercom.io/data_attributes/company.\n\nReturns\n\nList of data attributes\n\nBy default a list of all unarchived data attributes is returned. You can include the following parameter to retrieve all the company data attributes for your app (i.e. including archived attributes)\n\nParameter\tType\tDescription\ninclude_archived\tboolean\tInclude archived attributes in the list. By default we return only non archived data attributes\nList of your company data attributes including archived\n$ curl https://api.intercom.io/data_attributes/company?include_archived=true \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n{\n    \"type\": \"data_attribute.list\",\n    \"data_attributes\": [\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"name\",\n            \"full_name\": \"name\",\n            \"label\": \"Company name\",\n            \"description\": \"The name of a company\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": true,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"company_id\",\n            \"full_name\": \"company_id\",\n            \"label\": \"Company ID\",\n            \"description\": \"A number identifying a company\",\n            \"data_type\": \"string\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"last_request_at\",\n            \"full_name\": \"last_request_at\",\n            \"label\": \"Company last seen\",\n            \"description\": \"The last day anyone from a company visited your site or app\",\n            \"data_type\": \"date\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"remote_created_at\",\n            \"full_name\": \"remote_created_at\",\n            \"label\": \"Company created at\",\n            \"description\": \"The day a company was added to Intercom\",\n            \"data_type\": \"date\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"user_count\",\n            \"full_name\": \"user_count\",\n            \"label\": \"People\",\n            \"description\": \"The number of people in a company\",\n            \"data_type\": \"integer\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"session_count\",\n            \"full_name\": \"session_count\",\n            \"label\": \"Company web sessions\",\n            \"description\": \"All visits from anyone in a company to your product's site or app\",\n            \"data_type\": \"integer\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"name\",\n            \"full_name\": \"plan.name\",\n            \"label\": \"Plan\",\n            \"description\": \"A specific plan or level within your product that companies have signed up to\",\n            \"data_type\": \"string\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"monthly_spend\",\n            \"full_name\": \"monthly_spend\",\n            \"label\": \"Monthly Spend\",\n            \"description\": \"The monthly revenue you receive from a company\",\n            \"data_type\": \"float\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"size\",\n            \"full_name\": \"size\",\n            \"label\": \"Company size\",\n            \"description\": \"The number of people employed in this company, expressed as a single number\",\n            \"data_type\": \"integer\",\n            \"api_writable\": true,\n            \"ui_writable\": true,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"industry\",\n            \"full_name\": \"industry\",\n            \"label\": \"Company industry\",\n            \"description\": \"The category or domain this company belongs to e.g. 'ecommerce' or 'SaaS'\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": true,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"website\",\n            \"full_name\": \"website\",\n            \"label\": \"Company website\",\n            \"description\": \"The web address for the company's primary marketing site\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": true,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"subdomain\",\n            \"full_name\": \"custom_attributes.subdomain\",\n            \"label\": \"subdomain\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1500395363,\n            \"updated_at\": 1500395363\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"creation_source\",\n            \"full_name\": \"custom_attributes.creation_source\",\n            \"label\": \"creation_source\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1500477452,\n            \"updated_at\": 1500477452\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"paid_subscriber\",\n            \"full_name\": \"custom_attributes.paid_subscriber\",\n            \"label\": \"paid_subscriber\",\n            \"data_type\": \"boolean\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1511192754,\n            \"updated_at\": 1511192754\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"team_mates\",\n            \"full_name\": \"custom_attributes.team_mates\",\n            \"label\": \"team_mates\",\n            \"data_type\": \"integer\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1511192755,\n            \"updated_at\": 1511192755\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"monthly_spend\",\n            \"full_name\": \"custom_attributes.monthly_spend\",\n            \"label\": \"monthly_spend\",\n            \"data_type\": \"integer\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": true,\n            \"created_at\": 1511192755,\n            \"updated_at\": 1511192755\n        }\n    ]\n}\n"
  },
  {
    "title": "List Customer Data Attributes",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/data-attributes/list-customer-data-attributes/",
    "html": "List Customer Data Attributes\nList of your customer data attributes\n$ curl https://api.intercom.io/data_attributes/customer \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n{\n  \"type\": \"data_attribute.list\",\n  \"data_attributes\": [\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"paid_subscriber\",\n      \"full_name\": \"custom_attributes.paid_subscriber\",\n      \"label\": \"paid_subscriber\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"options\": [\n        \"pick_value_1\",\n        \"pick_value_2\"\n      ],\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": true,\n      \"archived\": false,\n      \"admin_id\": \"1\",\n      \"created_at\": 1392734388,\n      \"updated_at\": 1392734388\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"cda2\",\n      \"full_name\": \"custom_attributes.cda2\",\n      \"label\": \"cda2\",\n      \"description\": \"\",\n      \"data_type\": \"integer\",\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": true,\n      \"archived\": false,\n      \"admin_id\": \"1\",\n      \"created_at\": 1392734388,\n      \"updated_at\": 1392734388\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"email\",\n      \"full_name\": \"email\",\n      \"label\": \"Email\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": false,\n      \"archived\": false\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"region_name\",\n      \"full_name\": \"location_data.region_name\",\n      \"label\": \"Region\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"api_writable\": false,\n      \"ui_writable\": true,\n      \"custom\": false,\n      \"archived\": false\n    }\n  ]\n}\n\nList customer attributes\n\nYou can fetch a list of data attributes belonging to customers by using https://api.intercom.io/data_attributes/customer. Customer attributes describe attributes belonging to users, leads and visitors. All 3 models have the same data attributes.\n\nReturns\n\nList of data attributes\n\nYou can also include the archived attributes by adding this parameter:\n\nParameter\tType\tDescription\ninclude_archived\tboolean\tInclude archived attributes in the list. By default we return only non archived data attributes\nList of your customer data attributes including archived\n$ curl https://api.intercom.io/data_attributes/customer?include_archived=true \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n{\n  \"type\": \"data_attribute.list\",\n  \"data_attributes\": [\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"paid_subscriber\",\n      \"full_name\": \"custom_attributes.paid_subscriber\",\n      \"label\": \"paid_subscriber\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"options\": [\n        \"pick_value_1\",\n        \"pick_value_2\"\n      ],\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": true,\n      \"archived\": false,\n      \"admin_id\": \"1\",\n      \"created_at\": 1392734388,\n      \"updated_at\": 1392734388\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"cda2\",\n      \"full_name\": \"custom_attributes.cda2\",\n      \"label\": \"cda2\",\n      \"description\": \"\",\n      \"data_type\": \"integer\",\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": true,\n      \"archived\": false,\n      \"admin_id\": \"1\",\n      \"created_at\": 1392734388,\n      \"updated_at\": 1392734388\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"email\",\n      \"full_name\": \"email\",\n      \"label\": \"Email\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": false,\n      \"archived\": false\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"region_name\",\n      \"full_name\": \"location_data.region_name\",\n      \"label\": \"Region\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"api_writable\": false,\n      \"ui_writable\": true,\n      \"custom\": false,\n      \"archived\": false\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"Department\",\n      \"full_name\": \"custom_attributes.foo\",\n      \"label\": \"Department\",\n      \"data_type\": \"string\",\n      \"api_writable\": true,\n      \"ui_writable\": false,\n      \"custom\": true,\n      \"archived\": true,\n      \"created_at\": 1500460535,\n      \"updated_at\": 1511274873\n    }\n  ]\n}\n"
  },
  {
    "title": "Admin",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/requestobjects/admin/",
    "html": "Admin\nDescription\n\nThe admin object provides information on the Intercom teammate. You can see more about this on the Admin Model page of our API Reference.\n\nExample Object\n{\n  admin: {\n    type: \"admin\",\n    id: \"814860\",\n    name: \"IntercomTest\",\n    email: \"theadmin@example.com\",\n    job_title: \"Existentialist\",\n    away_mode_enabled: false,\n    away_mode_reassign: false,\n    avatar: {\n      image_url: \"https://static.site.test.icon\"\n    },\n    team_ids: [\n      814865\n    ]\n  }\n}\n"
  },
  {
    "title": "Data Attributes",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/data-attributes/data-attributes/",
    "html": "Data Attributes\n\nData Attributes are a type of metadata used to describe your customer and company models. These include standard and custom attributes. In other words data attributes are properties that help to describe your customers and companies in more detail. Using the data attributes endpoint you can get the global list of attributes for your app as well as the metadata (i.e. datatype and format) associated with each attribute."
  },
  {
    "title": "Contact",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/requestobjects/contact/",
    "html": "Contact\nDescription\n\nThe contact object provides information on the Intercom contact. You can see more about this on the Contacts Model page of our API Reference.\n\nExample Object\n{\n  \"type\": \"contact\",\n  \"id\": \"5ba682d23d7cf92bef87bfd4\",\n  \"workspace_id\": \"ecahpwf5\",\n  \"external_id\": \"25\",\n  \"role\": \"user\",\n  \"email\": \"wash@serenity.io\",\n  \"phone\": \"+1123456789\",\n  \"name\": \"Hoban Washburn\",\n  \"avatar\": \"https://example.org/128Wash.jpg\",\n  \"owner_id\": 127,\n  \"social_profiles\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"social_profile\",\n        \"name\": \"Twitter\",\n        \"url\": \"http://twitter.com/th1sland\"\n      }\n    ]\n  },\n  \"has_hard_bounced\": false,\n  \"marked_email_as_spam\": false,\n  \"unsubscribed_from_emails\": false,\n  \"created_at\": 1571672154,\n  \"updated_at\": 1571672158,\n  \"signed_up_at\": 1571069751,\n  \"last_seen_at\": 1571069751,\n  \"last_replied_at\": 1571672158,\n  \"last_contacted_at\": 1571672158,\n  \"last_email_opened_at\": 1571673478,\n  \"last_email_clicked_at\": 1571676789,\n  \"language_override\": null,\n  \"browser\": \"chrome\",\n  \"browser_version\": \"77.0.3865.90\",\n  \"browser_language\": \"en\",\n  \"os\": \"OS X 10.14.6\",\n  \"location\": {\n    \"type\": \"location\",\n    \"country\": \"Ireland\",\n    \"region\": \"Dublin\",\n    \"city\": \"Dublin\"\n  },\n  \"android_app_name\": null,\n  \"android_app_version\": null,\n  \"android_device\": null,\n  \"android_os_version\": null,\n  \"android_sdk_version\": null,\n  \"android_last_seen_at\": null,\n  \"ios_app_name\": null,\n  \"ios_app_version\": null,\n  \"ios_device\": null,\n  \"ios_os_version\": null,\n  \"ios_sdk_version\": null,\n  \"ios_last_seen_at\": null,\n  \"custom_attributes\": {\n    \"paid_subscriber\": true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 1\n  },\n  \"tags\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"tag\",\n        \"id\": \"2\",\n        \"url\": \"/tags/2\"\n      },\n      {\n        \"type\": \"tag\",\n        \"id\": \"4\",\n        \"url\": \"/tags/4\"\n      },\n      {\n        \"type\": \"tag\",\n        \"id\": \"5\",\n        \"url\": \"/tags/5\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/tags\",\n    \"total_count\": 3,\n    \"has_more\": false\n  },\n  \"notes\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"note\",\n        \"id\": \"20114858\",\n        \"url\": \"/notes/20114858\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/notes\",\n    \"total_count\": 1,\n    \"has_more\": false\n  },\n  \"companies\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"company\",\n        \"id\": \"5ba686093d7cf93552a3dc99\",\n        \"url\": \"/companies/5ba686093d7cf93552a3dc99\"\n        \n      },\n      {\n        \"type\": \"company\",\n        \"id\": \"5cee64a03d7cf90c51b36f19\",\n        \"url\": \"/companies/5cee64a03d7cf90c51b36f19\"\n      },\n      {\n        \"type\": \"company\",\n        \"id\": \"5d7668883d7cf944dbc5c791\",\n        \"url\": \"/companies/5d7668883d7cf944dbc5c791\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/companies\",\n    \"total_count\": 3,\n    \"has_more\": false\n  }\n}\n"
  },
  {
    "title": "Current Canvas",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/requestobjects/current-canvas/",
    "html": "Current Canvas\nDescription\n\nThe current_canvas object mirrors the same format as the Canvas Object. This will be the canvas that was most recently showing before the request was sent.\n\nExample Object\n{\n  current_canvas: {\n    content: { \n      components : [\n        {\n          \"type\": \"button\",\n          \"id\": \"button-1\",\n          \"label\": \"This canvas showed before I was clicked\",\n          \"action\": {\n            \"type\": \"submit\"\n          }\n        }\n      ]\n    }\n  }\n}\n"
  },
  {
    "title": "Input Values",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/requestobjects/input-values/",
    "html": "Input Values\nDescription\n\nThe input_values object is a JSON hash containing key-value pairs. These key-value pairs represent the data that's been inputted by customers and teammates with a given component.\n\nThe key will be the component_id and the value will be the data that was inputted by this component.\n\nExample Object\ninput_values: { \"<component_id>\": \"<Value entered in component>\" }, //Can be more than one pair\n"
  },
  {
    "title": "Card Creation Options",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/requestobjects/card-creation-options/",
    "html": "Card Creation Options\nDescription\n\nThe card_creation_options object is a JSON hash containing key-value pairs. These key-value pairs either represent:\n\nData that was sent within the results object in response to the Configure request.\nData that was sent within the card_creation_options object in response to the Submit request.\nExample Object\ncard_creation_options: { \"key\": \"value\" } //Can be more than one pair\n"
  },
  {
    "title": "Leads",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/leads/leads/",
    "html": "Leads\n\nLeads are useful for representing logged-out users of your application. The Leads resource provides methods to fetch, create, update and delete Leads within Intercom.\n\nLeads were previously known as 'Contacts'. Our object names and types continue to be referred to as 'contacts/contact'. We will migrate to 'Leads/Lead' models at a future date."
  },
  {
    "title": "List by Email",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/leads/list-by-email/",
    "html": "List by Email\nExample Request\ncurlcurlrubyjavaphp\n$ curl \\\\\\nhttps://api.intercom.io/contacts?email=obrien@truth.org \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\n{\\n    \\\"type\\\": \\\"contact.list\\\",\\n    \\\"pages\\\": {\\n        \\\"type\\\": \\\"pages\\\",\\n        \\\"next\\\": null,\\n        \\\"page\\\": 1,\\n        \\\"per_page\\\": 50,\\n        \\\"total_pages\\\": 1\\n    },\\n    \\\"contacts\\\": [\\n        {\\n            \\\"type\\\": \\\"contact\\\",\\n            \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n            \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n            \\\"anonymous\\\": true,\\n            \\\"email\\\": \\\"obrien@truth.org\\\",\\n            \\\"phone\\\": \\\"00353875551234\\\",\\n            \\\"name\\\": \\\"O&#39;Brien\\\",\\n            \\\"pseudonym\\\": \\\"Lime Camel from Dublin\\\",\\n            \\\"avatar\\\": {\\n                \\\"type\\\": \\\"avatar\\\",\\n                \\\"image_url\\\": null\\n            },\\n            \\\"app_id\\\": \\\"ja43hiec\\\",\\n            \\\"companies\\\": {\\n                \\\"type\\\": \\\"company.list\\\",\\n                \\\"companies\\\": []\\n            },\\n            \\\"location_data\\\": {\\n                \\\"type\\\": \\\"location_data\\\",\\n                \\\"city_name\\\": \\\"Mukilteo\\\",\\n                \\\"continent_code\\\": \\\"NA\\\",\\n                \\\"country_name\\\": \\\"United States\\\",\\n                \\\"latitude\\\": 47.913,\\n                \\\"longitude\\\": -122.3042,\\n                \\\"postal_code\\\": \\\"98275\\\",\\n                \\\"region_name\\\": \\\"Washington\\\",\\n                \\\"timezone\\\": \\\"America/Los_Angeles\\\",\\n                \\\"country_code\\\": \\\"USA\\\"\\n            },\\n            \\\"last_request_at\\\": 1477660267,\\n            \\\"last_seen_ip\\\": \\\"1.2.3.4\\\",\\n            \\\"created_at\\\": 1477572283,\\n            \\\"remote_created_at\\\": null,\\n            \\\"signed_up_at\\\": null,\\n            \\\"updated_at\\\": 1480068674,\\n            \\\"session_count\\\": 0,\\n            \\\"social_profiles\\\": {\\n                \\\"type\\\": \\\"social_profile.list\\\",\\n                \\\"social_profiles\\\": []\\n            },\\n            \\\"unsubscribed_from_emails\\\": false,\\n            \\\"user_agent_data\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9\\\",\\n            \\\"tags\\\": {\\n                \\\"type\\\": \\\"tag.list\\\",\\n                \\\"tags\\\": []\\n            },\\n            \\\"segments\\\": {\\n                \\\"type\\\": \\\"segment.list\\\",\\n                \\\"segments\\\": []\\n            },\\n            \\\"custom_attributes\\\": {\\n                \\\"paid_subscriber\\\": true,\\n                \\\"monthly_spend\\\": 155.5,\\n                \\\"team_mates\\\": 9\\n            }\\n        }\\n    ],\\n    \\\"total_count\\\": 1,\\n    \\\"limited\\\": false\\n}\n\n\nYou can fetch all Leads with a given email by querying the leads resource with an email parameter."
  },
  {
    "title": "Users",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/users/users/",
    "html": "Users\n\nUsers is no longer available as a resource. In order to see information and take action on users, you should use the Contacts API."
  },
  {
    "title": "Users",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/users/users/",
    "html": "Users\n\nThe Users resource is the primary way of interacting with Intercom. You can create, update and delete your users, and add custom attributes describing them. Users can be viewed individually or as a list, and can be queried using tags or segments."
  },
  {
    "title": "Leads Object",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/leads/leads-object/",
    "html": "Leads Object\nExample Lead Object (i.e. example JSON response)\nLead example object\n{\\n    \\\"anonymous\\\": true,\\n    \\\"app_id\\\": \\\"abc3wodw\\\",\\n    \\\"avatar\\\": {\\n        \\\"image_url\\\": \\\"https://secure.gravatar.com/avatar/af060c6?\\\",\\n        \\\"type\\\": \\\"avatar\\\"\\n    },\\n    \\\"companies\\\": {\\n        \\\"companies\\\": [],\\n        \\\"type\\\": \\\"company.list\\\"\\n    },\\n    \\\"created_at\\\": 1503488750,\\n    \\\"custom_attributes\\\": {},\\n    \\\"do_not_track\\\": null,\\n    \\\"email\\\": \\\"test@example.com\\\",\\n    \\\"has_hard_bounced\\\": false,\\n    \\\"id\\\": \\\"599d6aeeda883ed8ba7c2\\\",\\n    \\\"last_request_at\\\": 1503488749,\\n    \\\"last_seen_ip\\\": null,\\n    \\\"location_data\\\": {\\n        \\\"city_name\\\": \\\"Pretoria\\\",\\n        \\\"continent_code\\\": \\\"AF\\\",\\n        \\\"country_code\\\": \\\"ZAF\\\",\\n        \\\"country_name\\\": \\\"South Africa\\\",\\n        \\\"latitude\\\": -0.0,\\n        \\\"longitude\\\": 0.0,\\n        \\\"postal_code\\\": \\\"0118\\\",\\n        \\\"region_name\\\": \\\"Gauteng\\\",\\n        \\\"timezone\\\": \\\"Africa/Johannesburg\\\",\\n        \\\"type\\\": \\\"location_data\\\"\\n    },\\n    \\\"marked_email_as_spam\\\": false,\\n    \\\"name\\\": null,\\n    \\\"owner_id\\\": \\\"321452\\\",\\n    \\\"phone\\\": null,\\n    \\\"pseudonym\\\": \\\"Test from Pretoria\\\",\\n    \\\"referrer\\\": null,\\n    \\\"remote_created_at\\\": null,\\n    \\\"segments\\\": {\\n        \\\"segments\\\": [],\\n        \\\"type\\\": \\\"segment.list\\\"\\n    },\\n    \\\"session_count\\\": 0,\\n    \\\"signed_up_at\\\": null,\\n    \\\"social_profiles\\\": {\\n        \\\"social_profiles\\\": [\\n            {\\n                \\\"id\\\": \\\"123456\\\",\\n                \\\"name\\\": \\\"GooglePlus\\\",\\n                \\\"type\\\": \\\"social_profile\\\",\\n                \\\"url\\\": \\\"https://plus.google.com/123456\\\",\\n                \\\"username\\\": null\\n            }\\n        ],\\n        \\\"type\\\": \\\"social_profile.list\\\"\\n    },\\n    \\\"tags\\\": {\\n        \\\"tags\\\": [],\\n        \\\"type\\\": \\\"tag.list\\\"\\n    },\\n    \\\"type\\\": \\\"contact\\\",\\n    \\\"unsubscribed_from_emails\\\": false,\\n    \\\"updated_at\\\": 1520946390,\\n    \\\"user_agent_data\\\": \\\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.101 Safari/537.36\\\",\\n    \\\"user_id\\\": \\\"e477-55c-47d5-96d3-e45bf\\\",\\n    \\\"utm_campaign\\\": null,\\n    \\\"utm_content\\\": null,\\n    \\\"utm_medium\\\": null,\\n    \\\"utm_source\\\": null,\\n    \\\"utm_term\\\": null\\n}\n\n\nA lead object contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'contact'\nid\tstring\tThe Intercom defined id representing the Lead\ncreated_at\ttimestamp\tThe time the Lead was added to Intercom\nupdated_at\ttimestamp\tThe last time the Lead was updated\nuser_id\tstring\tAutomatically generated identifier for the Lead\nemail\tstring\tThe email you have defined for the Lead\nphone\tstring\tThe phone number you have defined for the lead\nname\tstring\tThe name of the Lead\ncustom_attributes\tobject\tThe custom attributes you have set on the Lead\nlast_request_at\ttimestamp\tThe time the Lead last recorded making a request\navatar\tobject\tAn avatar object for the Lead\nunsubscribed_from_emails\tboolean\tWhether the Lead is unsubscribed from emails\nlocation_data\tobject\tA Location Object relating to the Lead\nuser_agent_data\tstring\tData about the last user agent the Lead was seen using\nlast_seen_ip\tno\tThis will return null in an effort to remove PII from our API.\ncompanies\tlist\tA list of companies for the Lead\nsocial_profiles\tlist\tA list of social profiles associated with the Lead\nsegments\tlist\tThis will return an empty list of segments as part of our effort to deprecate this attribute on the lead model for performance and accuracy reasons.\ntags\tlist\tA list of tags associated with the Lead.\nreferrer\tstring\tThe URL of the page the lead was last on\nutm_source\tstring\tIdentifies which site sent the traffic\nutm_medium\tstring\tIdentifies what type of link was used\nutm_campaign\tstring\tIdentifies a specific product promotion or strategic campaign\nutm_term\tstring\tIdentifies search terms\nutm_content\tstring\tIdentifies what specifically was clicked to bring the user to the site\n\nInformation on social profile, avatar and location objects can be found under the Users documentation."
  },
  {
    "title": "Create a Note",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/notes/create-a-note/",
    "html": "Create a Note\nExample Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/notes \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'  \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"admin_id\\\" : \\\"21\\\",\\n  \\\"body\\\": \\\"Text for my note\\\",\\n  \\\"user\\\": {\\n    \\\"id\\\" : \\\"5310d8e8598c9a0b24000005\\\"\\n  }\\n}'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"note\\\",\\n  \\\"id\\\": \\\"16\\\",\\n  \\\"created_at\\\": 1389913941,\\n  \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n  \\\"author\\\": {\\n    \\\"type\\\": \\\"admin\\\",\\n    \\\"id\\\": \\\"21\\\",\\n    \\\"name\\\": \\\"Jayne Cobb\\\",\\n    \\\"email\\\": \\\"jayne@serenity.io\\\",\\n    \\\"companies\\\": []\\n  },\\n  \\\"user\\\": {\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\"\\n  }\\n}\n\n\nNotes can be created via a POST method to https://api.intercom.io/notes, which accepts a JSON object describing the note.\n\nAttributes\n\nThe table below shows the fields you can use to create a note -\n\nArgument\tRequired\tDescription\nuser\tYes\tRepresentation of the user the note is to be created about.\nuser.user_id\tone of\tYour user_id for the user\nuser.email\tone of\tYour email address for the user\nuser.id\tone of\tThe user id for the user\nadmin_id\tNo\tThe id of the admin creating the note.\nbody\tYes\tThe text of the note.\nReturns\n\nA note object. The submitted body may be enclosed with html p elements in the response."
  },
  {
    "title": "Webhooks",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/webhooks/webhooks/",
    "html": "Webhooks\nOverview\n\nWebhooks are a powerful resource that you can use to automate your use cases and improve your productivity. You can find more about them through this link if you're unfamiliar.\n\nUnlike the API resources, which represent static data that you can create, update and retrieve as needed, webhooks represent dynamic resources. You can configure them to automatically notify you when a customer has taken a particular action, such as making a purchase or replying to a conversation.\n\nThe main concepts for webhooks are subscriptions, topics, and notifications.\n\nSubscriptions\n\nA subscription is where you select a topic you wanted to be notified about. Intercom will setup subscriptions for selected topics when that app is installed on a workspace.\n\nTopics\n\nA subscription will contain one or more topics. Topics are types of notifications that you want to be informed about.\n\nNotifications\n\nThe object delivered to a webhook is a notification. Notifications have payloads, which contain the API's existing JSON objects, such as user or conversations. You will need to provide a URL where Intercom will send these request.\n\nWebhooks FAQs\nDo webhooks belong to my workspace or my app?\n\nWebhooks are associated with an app. You configure your webhooks per app just like you configure your access tokens. When you configure a webhook you tell Intercom where you want notifications to be sent to for one or more webhook topics.\n\nWhere do I enable webhook notifications?\n\nYou don't enable webhooks, Intercom will enable them for you when you install an app on a workspace.\n\nIf I am developing apps for other people what do I need to do?\n\nYou will need to select the permissions on the Authorization page of your app and then subscribe to the relevant topics on the Webhooks page.\n\nCan I subscribe for webhook topics via the API?\n\nNo, you can only subscribe to webhooks now via your Developer Hub. This is to make it easier for people to setup webhooks. Previously people had to keep track of all their webhooks and know when to subscribe and unsubscribe from them as needed. Intercom does this for you now so it should be easier to configure.\n\nI previously configured webhooks via the API. Can I still do that?\n\nYes, anyone that has previously used webhooks can continue to work in the same way. Intercom will not delete your webhooks or reconfigure them in anyway. We hope that you will start using the new approach from now on since it is much easier to manage.\n\nIf I need to trust specific IP addresses to accept inbound webhook requests from Intercom, which are they?\n\nThese are as follows: 34.231.68.152, 34.197.76.213, 35.171.78.91, 35.169.138.21, 52.70.27.159, 52.44.63.161."
  },
  {
    "title": "Data Events",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/data-events/events/",
    "html": "Data Events\n\nEvents are how you can submit user activity to Intercom. Once you're sending Intercom event data, you can filter your user base with those events and create Auto Messages to send whenever an event occurs. Every event is associated with an event name, the time it happened, the user that caused the event, and optionally some extra metadata. Events record the count, first and last occurrence of an event.\n\nEvents are different to Custom Attributes in that events are information on what Users did and when they did it, whereas Custom Attributes represent the User's current state as seen in their profile. For example, the first time they subscribed to a paid plan, or the most recent time they changed their plan would be represented by events, whereas a User Attribute would be used to record their current plan.\n\nBecause Events are used for filtering and messaging, and event names are used directly in Intercom by your App's Admins we recommend sending high-level activity about your users that you would like to message on, rather than raw clickstream or user interface actions. For example an order action is a good candidate for an Event, versus all the clicks and actions that were taken to get to that point. We also recommend sending event names that combine a past tense verb and nouns, such as 'created-project'.\n\nThe Events API varies slightly from the rest of the APIs as follows -\n\nYou can submit events using JavaScript using the trackEvent method.\nWhen there's an error or errors, a list structure is returned instead of a single error."
  },
  {
    "title": "Event Model",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/data-events/event-model/",
    "html": "Event Model\nEvent Object\n{\n  \"event_name\" : \"invited-friend\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"342311\"\n}\n\n// Sufficient to send just the event name\nIntercom('trackEvent', 'invited-friend');\n\n# create an event as a hash\nevent = {\n  :event_name => \"invited-friend\",\n  :email => current_user.email,\n  :created_at => 1391691571\n}\nintercom.events.create event\n\n<?php\n$event = array(\n  \"event_name\" => \"invited-friend\",\n  \"created_at\" => 1391691571,\n  \"user_id\" => \"314159\"\n);\n$intercom->events->create($event);\n?>\n\nEvent event = new Event()\n  .setEventName(\"invited-friend\")\n  .setUserID(\"1314159\");\n  .setCreatedAt(currentTimeMillis()/1000L);\n\nEvent.create(event);\n\nEvent Object\n\nAn Event Object describes the event and contains the following fields\n\nAttribute\tRequired\tDescription\nevent_name\tyes\tThe name of the event that occurred. This is presented to your App's admins when filtering and creating segments - a good event name is typically a past tense 'verb-noun' combination, to improve readability, for example updated-plan.\ncreated_at\tyes\tThe time the event occurred as a UTC Unix timestamp\nuser_id\tyes if no email\tYour identifier for the user.\nid\tyes if no email or user_id.\tYour identifier for a lead or a user.\nemail\tyes if no user_id\tAn email address for your user. An email should only be used where your application uses email to uniquely identify users\nmetadata\tno\toptional metadata about the event.\n\nThe event_name field is processed as follows -\n\nNames are treated as case insensitive - 'Completed-Order' and 'completed-order' will be considered the same event for your application.\nPeriods (.) and dollars ($) in event names are replaced with hyphens. e.g., 'completed.order' will be stored as 'completed-order'.\n\nTo avoid confusion we recommend submitting lower case event names that do not contain periods or dollars!\n\nMetadata Object\n\nSending an event with metadata\n\n$ curl https://api.intercom.io/events \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Content-Type: application/json\" -d'\n{\n  \"event_name\" : \"invited-friend\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"314159\",\n  \"metadata\": {\n     \"invitee_email\": \"pi@example.org\",\n     \"invite_code\": \"ADDAFRIEND\"\n  }\n}'\n\nvar metadata = {\n  invitee_email: 'pi@example.org',\n  invite_code: 'ADDAFRIEND'\n};\nIntercom('trackEvent', 'invited-friend', metadata);\n\nmetadata = {\n  :invitee_email => 'pi@example.org',\n  :invite_code => 'ADDAFRIEND'\n}\nintercom.events.create {\n  :event_name => \"invited-friend\",\n  :email => current_user.email,\n  :created_at => 1391691571,\n  :metadata => metadata\n}\n\n<?php\n$metadata = array(\n  \"invitee_email\" => \"pi@example.org\",\n  \"invite_code\" => \"ADDAFRIEND\"\n);\n$intercom->events->create(array(\n  \"event_name\" => \"invited-friend\",\n  \"created_at\" => 1391691571,\n  \"user_id\" => \"314159\",\n  \"metadata\" => $metadata\n));\n?>\n\nEvent event = new Event()\n  .setEventName(\"invited-friend\")\n  .setUserID(\"314159\")\n  .putMetadata(\"invite_mail\", \"pi@example.org\")\n  .putMetadata(\"invite_code\", \"ADDAFRIEND\")\n  .putMetadata(\"found_date\", currentTimeMillis()/1000L);\n\nEvent.create(event);\n\n\nMetadata can be used to submit an event with extra key value data. Each event can contain up to ten metadata key values.\n\nSome use cases for event metadata are -\n\nLinking an event back to a page in your website.\nDescribing before and after values for a subscription plan change.\nSending contextual information about an online order, a booking.\n\nYou can now trigger messages to your users based on event and event metadata and also include the metadata in the messages. For more information on how this works, learn more about event based messaging\n\nSee the section 'Metadata Types' for more information on the kinds of metadata you can send."
  },
  {
    "title": "Results",
    "url": "https://developers.intercom.com/docs/references/1.1/canvas-kit/responseobjects/results/",
    "html": "Results\n\nThe results object should be sent as the final response during the configure flow, when you want to start the initialize flow after configuration to add the app is complete.\n\n{\n  results: {\n    name: \"Data one\", //Example teammate input\n    email: \"Data two\" //Example teammate input\n  }\n}\n\nKey\tType\tDescription\nresults\tobject\tSet of key-value pairs representing the configuration options entered by the teammate."
  },
  {
    "title": "Event",
    "url": "https://developers.intercom.com/docs/references/1.1/canvas-kit/responseobjects/event/",
    "html": "Event\n\nThe event object property enables Intercom to know more about the actions that were processed by your app, in the response to a submit or submit-sheet action.\n\n{\n  event: {\n  \ttype: \"completed\"\n  }\n}\n\nKey\tType\tDescription\ntype\tstring\tThe event type of the reported action. The only value currently accepted is completed."
  },
  {
    "title": "Content",
    "url": "https://developers.intercom.com/docs/references/1.1/canvas-kit/responseobjects/content/",
    "html": "Content\n\nThe content object specifies which components you want to render within the canvas of your apps card or frame. There's a small difference to note between a static and a live canvas:\n\nStatic: you can provide the content object within the canvas.\nLive: you will need to provide a content_url for us to POST a request to within the canvas, and subsequently respond with the content object there.\n{\n  content: {\n    components: [\n      {\n        type: \"text\",\n        text: \"This is your updated canvas\",\n        align: \"center\",\n        style: \"header\"\n      }\n    ]\n  }\n}\n\nKey\tType\tDescription\ncomponents\tarray[object]\tThe list of components to be rendered within a card or a frame. See our components further in this reference."
  },
  {
    "title": "View a Lead",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/leads/view-a-lead/",
    "html": "View a Lead\nExample ID Request\ncurlcurlrubyjavaphp\n$ curl \\\\\\nhttps://api.intercom.io/contacts/5811f6bbe6b4704ddfa84ac0 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\nor \\n\\n$ curl \\\\\\n-s https://api.intercom.io/contacts?user_id=77177570-cf5d-4f1a-bc75-75202af47d4f \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"contact\\\",\\n    \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n    \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n    \\\"anonymous\\\": true,\\n    \\\"email\\\": \\\"obrien@truth.org\\\",\\n    \\\"phone\\\": \\\"00353875551234\\\",\\n    \\\"name\\\": \\\"O&#39;Brien\\\",\\n    \\\"pseudonym\\\": \\\"Lime Camel from Dublin\\\",\\n  ...\\n}\\n# NB: Full Lead objects are returned\n\n\nLeads can be looked up individually via their id, with a user_id parameter, or with a phone parameter.\n\nUSER_ID FOR LEADS\n\nRemember that for leads the user_id will be automatically generated so it will look something like '8a88a590-e1c3-41e2-a502-e0649dbf721c'. (Note that this user_id is not retained when converting a lead to a user) For users the user_id is manually set so it will generally appear more like a regular number series e.g. '234'."
  },
  {
    "title": "Update Lead",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/leads/update-lead/",
    "html": "Update Lead\nExample Request\n$ curl https://api.intercom.io/contacts \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"id\": \"5811f6bbe6b4704ddfa84ac0\",\n  \"user_id\": \"77177570-cf5d-4f1a-bc75-75202af47d4f\",\n  \"phone\": \"123987456\",\n  \"email\": \"obrien@truth.org\",\n  \"name\": \"OBrien\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 9\n  }\n}'\n\ncontact.name = \"Winston Smith\"\nintercom.contacts.save(contact)\n\ncontact.setName(\"Winston Smith\");\nContact updated = Contact.update(contact);\n\n<?php\n$intercom->leads->create([\n    \"id\" => \"596f6b60d797879302bd7ac1\",\n    \"phone\" => \"5552345657\"\n]);\n?>\n\nHTTP/1.1 200 OK\n{\n    \"type\": \"contact\",\n    \"id\": \"5811f6bbe6b4704ddfa84ac0\",\n    \"user_id\": \"77177570-cf5d-4f1a-bc75-75202af47d4f\",\n    \"anonymous\": true,\n    \"email\": \"obrien@truth.org\",\n    \"phone\": \"00353875551234\",\n    \"name\": \"OBrien\",\n    \"pseudonym\": \"Lime Camel from Dublin\",\n    \"avatar\": {\n        \"type\": \"avatar\",\n        \"image_url\": null\n    },\n    \"app_id\": \"ja43hiec\",\n    \"companies\": {\n        \"type\": \"company.list\",\n        \"companies\": []\n    },\n    \"location_data\": {\n        \"type\": \"location_data\",\n        \"city_name\": \"Mukilteo\",\n        \"continent_code\": \"NA\",\n        \"country_name\": \"United States\",\n        \"latitude\": 47.913,\n        \"longitude\": -122.3042,\n        \"postal_code\": \"98275\",\n        \"region_name\": \"Washington\",\n        \"timezone\": \"America/Los_Angeles\",\n        \"country_code\": \"USA\"\n    },\n    \"last_request_at\": 1477660267,\n    \"last_seen_ip\": \"1.2.3.4\",\n    \"created_at\": 1477572283,\n    \"remote_created_at\": null,\n    \"signed_up_at\": null,\n    \"updated_at\": 1480068674,\n    \"session_count\": 0,\n    \"social_profiles\": {\n        \"type\": \"social_profile.list\",\n        \"social_profiles\": []\n    },\n    \"unsubscribed_from_emails\": false,\n    \"user_agent_data\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9\",\n    \"tags\": {\n        \"type\": \"tag.list\",\n        \"tags\": []\n    },\n    \"segments\": {\n        \"type\": \"segment.list\",\n        \"segments\": []\n    },\n    \"custom_attributes\": {\n        \"paid_subscriber\": true,\n        \"monthly_spend\": 155.5,\n        \"team_mates\": 9\n    }\n}\n# contact response\n\n\nSending a POST request to /contacts and passing identifiers (user_id or id) in the body will result in an update of an existing Lead.\n\nIt is not possible to uniquely identify a Lead for an update with an email address."
  },
  {
    "title": "List leads by Email",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/leads/list-by-email/",
    "html": "List leads by Email\nExample Request\ncurlcurlrubyjavaphp\n$ curl \\\\\\nhttps://api.intercom.io/contacts?email=obrien@truth.org \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\n{\\n    \\\"type\\\": \\\"contact.list\\\",\\n    \\\"pages\\\": {\\n        \\\"type\\\": \\\"pages\\\",\\n        \\\"next\\\": null,\\n        \\\"page\\\": 1,\\n        \\\"per_page\\\": 50,\\n        \\\"total_pages\\\": 1\\n    },\\n    \\\"contacts\\\": [\\n        {\\n            \\\"type\\\": \\\"contact\\\",\\n            \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n            \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n            \\\"anonymous\\\": true,\\n            \\\"email\\\": \\\"obrien@truth.org\\\",\\n            \\\"phone\\\": \\\"00353875551234\\\",\\n            \\\"name\\\": \\\"O&#39;Brien\\\",\\n            \\\"pseudonym\\\": \\\"Lime Camel from Dublin\\\",\\n            \\\"avatar\\\": {\\n                \\\"type\\\": \\\"avatar\\\",\\n                \\\"image_url\\\": null\\n            },\\n            \\\"app_id\\\": \\\"ja43hiec\\\",\\n            \\\"companies\\\": {\\n                \\\"type\\\": \\\"company.list\\\",\\n                \\\"companies\\\": []\\n            },\\n            \\\"location_data\\\": {\\n                \\\"type\\\": \\\"location_data\\\",\\n                \\\"city_name\\\": \\\"Mukilteo\\\",\\n                \\\"continent_code\\\": \\\"NA\\\",\\n                \\\"country_name\\\": \\\"United States\\\",\\n                \\\"latitude\\\": 47.913,\\n                \\\"longitude\\\": -122.3042,\\n                \\\"postal_code\\\": \\\"98275\\\",\\n                \\\"region_name\\\": \\\"Washington\\\",\\n                \\\"timezone\\\": \\\"America/Los_Angeles\\\",\\n                \\\"country_code\\\": \\\"USA\\\"\\n            },\\n            \\\"last_request_at\\\": 1477660267,\\n            \\\"last_seen_ip\\\": \\\"1.2.3.4\\\",\\n            \\\"created_at\\\": 1477572283,\\n            \\\"remote_created_at\\\": null,\\n            \\\"signed_up_at\\\": null,\\n            \\\"updated_at\\\": 1480068674,\\n            \\\"session_count\\\": 0,\\n            \\\"social_profiles\\\": {\\n                \\\"type\\\": \\\"social_profile.list\\\",\\n                \\\"social_profiles\\\": []\\n            },\\n            \\\"unsubscribed_from_emails\\\": false,\\n            \\\"user_agent_data\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9\\\",\\n            \\\"tags\\\": {\\n                \\\"type\\\": \\\"tag.list\\\",\\n                \\\"tags\\\": []\\n            },\\n            \\\"segments\\\": {\\n                \\\"type\\\": \\\"segment.list\\\",\\n                \\\"segments\\\": []\\n            },\\n            \\\"custom_attributes\\\": {\\n                \\\"paid_subscriber\\\": true,\\n                \\\"monthly_spend\\\": 155.5,\\n                \\\"team_mates\\\": 9\\n            }\\n        }\\n    ],\\n    \\\"total_count\\\": 1,\\n    \\\"limited\\\": false\\n}\n\n\nYou can fetch all Leads with a given email by querying the leads resource with an email parameter."
  },
  {
    "title": "List by Phone",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/leads/list-by-phone/",
    "html": "List by Phone\nExample Request\ncurlcurlrubyjavaphp\n$ curl \\\\\\nhttps://api.intercom.io/contacts?phone=00353875551234 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\n{\\n    \\\"type\\\": \\\"contact.list\\\",\\n    \\\"pages\\\": {\\n        \\\"type\\\": \\\"pages\\\",\\n        \\\"next\\\": null,\\n        \\\"page\\\": 1,\\n        \\\"per_page\\\": 50,\\n        \\\"total_pages\\\": 1\\n    },\\n    \\\"contacts\\\": [\\n        {\\n            \\\"type\\\": \\\"contact\\\",\\n            \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n            \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n            \\\"anonymous\\\": true,\\n            \\\"email\\\": \\\"obrien@truth.org\\\",\\n            \\\"phone\\\": \\\"00353875551234\\\",\\n            \\\"name\\\": \\\"O&#39;Brien\\\",\\n            \\\"pseudonym\\\": \\\"Lime Camel from Dublin\\\",\\n            \\\"avatar\\\": {\\n                \\\"type\\\": \\\"avatar\\\",\\n                \\\"image_url\\\": null\\n            },\\n            \\\"app_id\\\": \\\"ja43hiec\\\",\\n            \\\"companies\\\": {\\n                \\\"type\\\": \\\"company.list\\\",\\n                \\\"companies\\\": []\\n            },\\n            \\\"location_data\\\": {\\n                \\\"type\\\": \\\"location_data\\\",\\n                \\\"city_name\\\": \\\"Mukilteo\\\",\\n                \\\"continent_code\\\": \\\"NA\\\",\\n                \\\"country_name\\\": \\\"United States\\\",\\n                \\\"latitude\\\": 47.913,\\n                \\\"longitude\\\": -122.3042,\\n                \\\"postal_code\\\": \\\"98275\\\",\\n                \\\"region_name\\\": \\\"Washington\\\",\\n                \\\"timezone\\\": \\\"America/Los_Angeles\\\",\\n                \\\"country_code\\\": \\\"USA\\\"\\n            },\\n            \\\"last_request_at\\\": 1477660267,\\n            \\\"last_seen_ip\\\": \\\"1.2.3.4\\\",\\n            \\\"created_at\\\": 1477572283,\\n            \\\"remote_created_at\\\": null,\\n            \\\"signed_up_at\\\": null,\\n            \\\"updated_at\\\": 1480068674,\\n            \\\"session_count\\\": 0,\\n            \\\"social_profiles\\\": {\\n                \\\"type\\\": \\\"social_profile.list\\\",\\n                \\\"social_profiles\\\": []\\n            },\\n            \\\"unsubscribed_from_emails\\\": false,\\n            \\\"user_agent_data\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9\\\",\\n            \\\"tags\\\": {\\n                \\\"type\\\": \\\"tag.list\\\",\\n                \\\"tags\\\": []\\n            },\\n            \\\"segments\\\": {\\n                \\\"type\\\": \\\"segment.list\\\",\\n                \\\"segments\\\": []\\n            },\\n            \\\"custom_attributes\\\": {\\n                \\\"paid_subscriber\\\": true,\\n                \\\"monthly_spend\\\": 155.5,\\n                \\\"team_mates\\\": 9\\n            }\\n        }\\n    ],\\n    \\\"total_count\\\": 1,\\n    \\\"limited\\\": false\\n}\n\n\nYou can fetch all Leads with a given phone number by querying the leads resource with a phone parameter."
  },
  {
    "title": "List Leads",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/leads/list-leads/",
    "html": "List Leads\nExample Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/contacts \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\\n\\n\\n\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"contact.list\\\",\\n  \\\"total_count\\\": 105,\\n  \\\"contacts\\\": [\\n    {\\n      \\\"type\\\": \\\"contact\\\",\\n      \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n       ...\\n     },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/contacts?per_page=50&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 3\\n  }\\n}\\n\\n# NB: Full Contact objects are returned\n\n\nYou can fetch a list of all leads. The lead list is sorted by the created_at field and by default is ordered descending, most recently created first. Apart from sorting, the same parameters for the User list apply here."
  },
  {
    "title": "Leads Object",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/leads/leads-object/",
    "html": "Leads Object\nExample Lead Object (i.e. example JSON response)\nLead example object\n{\\n    \\\"anonymous\\\": true,\\n    \\\"app_id\\\": \\\"abc3wodw\\\",\\n    \\\"avatar\\\": {\\n        \\\"image_url\\\": \\\"https://secure.gravatar.com/avatar/af060c6?\\\",\\n        \\\"type\\\": \\\"avatar\\\"\\n    },\\n    \\\"companies\\\": {\\n        \\\"companies\\\": [],\\n        \\\"type\\\": \\\"company.list\\\"\\n    },\\n    \\\"created_at\\\": 1503488750,\\n    \\\"custom_attributes\\\": {},\\n    \\\"do_not_track\\\": null,\\n    \\\"email\\\": \\\"test@example.com\\\",\\n    \\\"has_hard_bounced\\\": false,\\n    \\\"id\\\": \\\"599d6aeeda883ed8ba7c2\\\",\\n    \\\"last_request_at\\\": 1503488749,\\n    \\\"location_data\\\": {\\n        \\\"city_name\\\": \\\"Pretoria\\\",\\n        \\\"continent_code\\\": \\\"AF\\\",\\n        \\\"country_code\\\": \\\"ZAF\\\",\\n        \\\"country_name\\\": \\\"South Africa\\\",\\n        \\\"postal_code\\\": \\\"0118\\\",\\n        \\\"region_name\\\": \\\"Gauteng\\\",\\n        \\\"timezone\\\": \\\"Africa/Johannesburg\\\",\\n        \\\"type\\\": \\\"location_data\\\"\\n    },\\n    \\\"marked_email_as_spam\\\": false,\\n    \\\"name\\\": null,\\n    \\\"owner_id\\\": \\\"321452\\\",\\n    \\\"phone\\\": null,\\n    \\\"pseudonym\\\": \\\"Test from Pretoria\\\",\\n    \\\"referrer\\\": null,\\n    \\\"remote_created_at\\\": null,\\n    \\\"segments\\\": {\\n        \\\"segments\\\": [],\\n        \\\"type\\\": \\\"segment.list\\\"\\n    },\\n    \\\"session_count\\\": 0,\\n    \\\"signed_up_at\\\": null,\\n    \\\"social_profiles\\\": {\\n        \\\"social_profiles\\\": [\\n            {\\n                \\\"id\\\": \\\"123456\\\",\\n                \\\"name\\\": \\\"GooglePlus\\\",\\n                \\\"type\\\": \\\"social_profile\\\",\\n                \\\"url\\\": \\\"https://plus.google.com/123456\\\",\\n                \\\"username\\\": null\\n            }\\n        ],\\n        \\\"type\\\": \\\"social_profile.list\\\"\\n    },\\n    \\\"tags\\\": {\\n        \\\"tags\\\": [],\\n        \\\"type\\\": \\\"tag.list\\\"\\n    },\\n    \\\"type\\\": \\\"contact\\\",\\n    \\\"unsubscribed_from_emails\\\": false,\\n    \\\"updated_at\\\": 1520946390,\\n    \\\"user_id\\\": \\\"e477-55c-47d5-96d3-e45bf\\\",\\n    \\\"utm_campaign\\\": null,\\n    \\\"utm_content\\\": null,\\n    \\\"utm_medium\\\": null,\\n    \\\"utm_source\\\": null,\\n    \\\"utm_term\\\": null\\n}\n\n\nA lead object contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'contact'\nid\tstring\tThe Intercom defined id representing the Lead\ncreated_at\ttimestamp\tThe time the Lead was added to Intercom\nupdated_at\ttimestamp\tThe last time the Lead was updated\nuser_id\tstring\tAutomatically generated identifier for the Lead\nemail\tstring\tThe email you have defined for the Lead\nphone\tstring\tThe phone number you have defined for the lead\nname\tstring\tThe name of the Lead\ncustom_attributes\tobject\tThe custom attributes you have set on the Lead\nlast_request_at\ttimestamp\tThe time the Lead last recorded making a request\navatar\tobject\tAn avatar object for the Lead\nunsubscribed_from_emails\tboolean\tWhether the Lead is unsubscribed from emails\nlocation_data\tobject\tA Location Object relating to the Lead\ncompanies\tlist\tA list of companies for the Lead\nsocial_profiles\tlist\tA list of social profiles associated with the Lead\nsegments\tlist\tThis will return an empty list of segments as part of our effort to deprecate this attribute on the lead model for performance and accuracy reasons.\ntags\tlist\tA list of tags associated with the Lead.\nreferrer\tstring\tThe URL of the page the lead was last on\nutm_source\tstring\tIdentifies which site sent the traffic\nutm_medium\tstring\tIdentifies what type of link was used\nutm_campaign\tstring\tIdentifies a specific product promotion or strategic campaign\nutm_term\tstring\tIdentifies search terms\nutm_content\tstring\tIdentifies what specifically was clicked to bring the user to the site\n\nInformation on social profile, avatar and location objects can be found under the Users documentation."
  },
  {
    "title": "Text Area",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/interactivecomponents/text-area/",
    "html": "Text Area\n\nA text area component is used to capture a large amount of text as input with a multi-line text box. You can submit the value of the text area by:\n\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttextarea\tYes\tThe type of component you are rendering\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the text area.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\nerror\tfalse``true\tNo\tStyles the input as failed.Default is false.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Delete a Lead",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/leads/delete-a-lead/",
    "html": "Delete a Lead\nExample ID Delete Request\ncurlcurlrubyjavaphp\n$ curl \\\\\\nhttps://api.intercom.io/contacts/5811f6bbe6b4704ddfa84ac0 \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\\n\\n{\\n    \\\"type\\\": \\\"contact\\\",\\n    \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n    \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n    \\\"anonymous\\\": true,\\n    \\\"email\\\": \\\"obrien@truth.org\\\",\\n    \\\"phone\\\": \\\"00353875551234\\\",\\n    \\\"name\\\": \\\"O&#39;Brien\\\",\\n    \\\"pseudonym\\\": \\\"Lime Camel from Dublin\\\",\\n  ...\\n}\\n# NB: Full Contact objects are returned\n\n\nLeads can be deleted via their id, or with a user_id parameter."
  },
  {
    "title": "Create Lead",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/leads/create-lead/",
    "html": "Create Lead\nExample Request\ncurlcurlrubyjavaphp\n$ curl https://api.intercom.io/contacts \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"phone\\\": \\\"123987456\\\",\\n  \\\"email\\\": \\\"winstonsmith@truth.org\\\",\\n  \\\"name\\\": \\\"Winston Smith\\\"\\n}'\\n\\n\n\nHTTP/1.1 200 OK\\n\\n# lead response\\n\\n{\\n    \\\"type\\\": \\\"contact\\\",\\n    \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n    \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n    \\\"anonymous\\\": true,\\n    \\\"email\\\": \\\"winstonsmith@truth.org\\\",\\n    \\\"phone\\\": \\\"00353875551234\\\",\\n    \\\"name\\\": \\\"Winston Smith\\\",\\n    \\\"pseudonym\\\": \\\"Lime Camel from Dublin\\\",\\n    \\\"avatar\\\": {\\n        \\\"type\\\": \\\"avatar\\\",\\n        \\\"image_url\\\": null\\n    },\\n    \\\"app_id\\\": \\\"ja43hiec\\\",\\n    \\\"companies\\\": {\\n        \\\"type\\\": \\\"company.list\\\",\\n        \\\"companies\\\": []\\n    },\\n    \\\"location_data\\\": {\\n        \\\"type\\\": \\\"location_data\\\",\\n        \\\"city_name\\\": \\\"Mukilteo\\\",\\n        \\\"continent_code\\\": \\\"NA\\\",\\n        \\\"country_name\\\": \\\"United States\\\",\\n        \\\"postal_code\\\": \\\"98275\\\",\\n        \\\"region_name\\\": \\\"Washington\\\",\\n        \\\"timezone\\\": \\\"America/Los_Angeles\\\",\\n        \\\"country_code\\\": \\\"USA\\\"\\n    },\\n    \\\"last_request_at\\\": 1477660267,\\n    \\\"created_at\\\": 1477572283,\\n    \\\"remote_created_at\\\": null,\\n    \\\"signed_up_at\\\": null,\\n    \\\"updated_at\\\": 1480067287,\\n    \\\"session_count\\\": 0,\\n    \\\"social_profiles\\\": {\\n        \\\"type\\\": \\\"social_profile.list\\\",\\n        \\\"social_profiles\\\": []\\n    },\\n    \\\"unsubscribed_from_emails\\\": false,\\n    \\\"tags\\\": {\\n        \\\"type\\\": \\\"tag.list\\\",\\n        \\\"tags\\\": []\\n    },\\n    \\\"utm_campaign\\\": null,\\n    \\\"utm_content\\\": null,\\n    \\\"utm_medium\\\": null,\\n    \\\"utm_source\\\": null,\\n    \\\"utm_term\\\": null,\\n    \\\"segments\\\": {\\n        \\\"type\\\": \\\"segment.list\\\",\\n        \\\"segments\\\": []\\n    },\\n    \\\"custom_attributes\\\": {\\n        \\\"paid_subscriber\\\": true,\\n        \\\"monthly_spend\\\": 155.5,\\n        \\\"team_mates\\\": 9\\n    }\\n}\n\n\nLeads can be created via a POST method to https://api.intercom.io/contacts, which accepts a JSON object describing the lead.\n\nNo identifying information is required to create a Lead, Intercom assigns a user_id to each new Lead. Indeed, it is not possible to assign these through the API - to work with self-assigned user_ids, use the Users resource.\n\nContrary to Users, signed_up_at and sessions are not available for Leads. Otherwise, attributes to update on a Lead are the same as for a User.\n\nNote that as with Users, user agent data is submitted as last_seen_user_agent."
  },
  {
    "title": "Scroll over all leads",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/leads/iterating-over-all-leads/",
    "html": "Scroll over all leads\n\nThe List Leads functionality does not work well for huge datasets, and can result in errors and performance problems when paging deeply. The Scroll API provides an efficient mechanism for iterating over all leads in a dataset.\n\nEach workspace can only have 1 scroll open at a time. You'll get an error message if you try to have more than one open per workspace.\nIf the scroll isn't used for 1 minute, it expires and calls with that scroll param will fail\nIf the end of the scroll is reached, \"contacts\" will be empty and the scroll parameter will expire\n# Send a GET request to get the first page of leads\n$ curl \\\n'https://api.intercom.io/contacts/scroll' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n# To get the next page use the scroll param returned in the response\n$ curl \\\n'https://api.intercom.io/contacts/scroll?scroll_param=562bc29f-ea55-4823-aaaf-f3faadceaa59' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"contact.list\",\n  \"users\": [\n    {\n      \"type\": \"contact\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ],\n  \"scroll_param\": \"25b649f7-4d33-4ef6-88f5-60e5b8244309\"\n}\n\n# You can use the scroll method to list all your users\nintercom.users.scroll.each { |lead| puts lead.name}\n# Alternatively you can use the scroll.next method to get 100 leads with each request\nresult = intercom.contacts.scroll.next\nresult.scroll_param\n=> \"0730e341-63ef-44da-ab9c-9113f886326d\"\nresult = intercom.contacts.scroll.next(\"0730e341-63ef-44da-ab9c-9113f886326d\");\n\nSCROLL PARAMETER\n\nYou can get the first page of leads by simply sending a GET request to the scroll endpoint. For subsequent requests you will need to use the scroll parameter from the response.\n\n❗️ Scroll network timeouts\n\nSince scroll is often used on large datasets network errors such as timeouts can be encountered. When this occurs you will need to restart your scroll query as it is not possible to continue from a specific point when using scroll.\n\nWhen this occurs you will see a HTTP 500 error with the following message:\n\"Request failed due to an internal network error. Please restart the scroll operation.\""
  },
  {
    "title": "View a Lead",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/leads/view-a-lead/",
    "html": "View a Lead\nExample ID Request\ncurlcurlrubyjavaphp\n$ curl \\\\\\nhttps://api.intercom.io/contacts/5811f6bbe6b4704ddfa84ac0 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\nor \\n\\n$ curl \\\\\\n-s https://api.intercom.io/contacts?user_id=77177570-cf5d-4f1a-bc75-75202af47d4f \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"contact\\\",\\n    \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n    \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n    \\\"anonymous\\\": true,\\n    \\\"email\\\": \\\"obrien@truth.org\\\",\\n    \\\"phone\\\": \\\"00353875551234\\\",\\n    \\\"name\\\": \\\"O&#39;Brien\\\",\\n    \\\"pseudonym\\\": \\\"Lime Camel from Dublin\\\",\\n  ...\\n}\\n# NB: Full Lead objects are returned\n\n\nLeads can be looked up individually via their id, with a user_id parameter, or with a phone parameter.\n\nUSER_ID FOR LEADS\n\nRemember that for leads the user_id will be automatically generated so it will look something like '8a88a590-e1c3-41e2-a502-e0649dbf721c'. (Note that this user_id is not retained when converting a lead to a user) For users the user_id is manually set so it will generally appear more like a regular number series e.g. '234'."
  },
  {
    "title": "Update Lead",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/leads/update-lead/",
    "html": "Update Lead\nExample Request\n$ curl https://api.intercom.io/contacts \\\n-XPOST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"id\": \"5811f6bbe6b4704ddfa84ac0\",\n  \"user_id\": \"77177570-cf5d-4f1a-bc75-75202af47d4f\",\n  \"phone\": \"123987456\",\n  \"email\": \"obrien@truth.org\",\n  \"name\": \"OBrien\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 9\n  }\n}'\n\ncontact.name = \"Winston Smith\"\nintercom.contacts.save(contact)\n\ncontact.setName(\"Winston Smith\");\nContact updated = Contact.update(contact);\n\n<?php\n$intercom->leads->create([\n    \"id\" => \"596f6b60d797879302bd7ac1\",\n    \"phone\" => \"5552345657\"\n]);\n?>\n\nHTTP/1.1 200 OK\n{\n    \"type\": \"contact\",\n    \"id\": \"5811f6bbe6b4704ddfa84ac0\",\n    \"user_id\": \"77177570-cf5d-4f1a-bc75-75202af47d4f\",\n    \"anonymous\": true,\n    \"email\": \"obrien@truth.org\",\n    \"phone\": \"00353875551234\",\n    \"name\": \"OBrien\",\n    \"pseudonym\": \"Lime Camel from Dublin\",\n    \"avatar\": {\n        \"type\": \"avatar\",\n        \"image_url\": null\n    },\n    \"app_id\": \"ja43hiec\",\n    \"companies\": {\n        \"type\": \"company.list\",\n        \"companies\": []\n    },\n    \"location_data\": {\n        \"type\": \"location_data\",\n        \"city_name\": \"Mukilteo\",\n        \"continent_code\": \"NA\",\n        \"country_name\": \"United States\",\n        \"latitude\": 47.913,\n        \"longitude\": -122.3042,\n        \"postal_code\": \"98275\",\n        \"region_name\": \"Washington\",\n        \"timezone\": \"America/Los_Angeles\",\n        \"country_code\": \"USA\"\n    },\n    \"last_request_at\": 1477660267,\n    \"last_seen_ip\": \"1.2.3.4\",\n    \"created_at\": 1477572283,\n    \"remote_created_at\": null,\n    \"signed_up_at\": null,\n    \"updated_at\": 1480068674,\n    \"session_count\": 0,\n    \"social_profiles\": {\n        \"type\": \"social_profile.list\",\n        \"social_profiles\": []\n    },\n    \"unsubscribed_from_emails\": false,\n    \"user_agent_data\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9\",\n    \"tags\": {\n        \"type\": \"tag.list\",\n        \"tags\": []\n    },\n    \"segments\": {\n        \"type\": \"segment.list\",\n        \"segments\": []\n    },\n    \"custom_attributes\": {\n        \"paid_subscriber\": true,\n        \"monthly_spend\": 155.5,\n        \"team_mates\": 9\n    }\n}\n# contact response\n\n\nSending a POST request to /contacts and passing identifiers (user_id or id) in the body will result in an update of an existing Lead.\n\nIt is not possible to uniquely identify a Lead for an update with an email address."
  },
  {
    "title": "List Leads",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/leads/list-leads/",
    "html": "List Leads\nList all Leads\nList all Leads\ncurlhttprubyphpjava\n$ curl https://api.intercom.io/contacts \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\n\nYou can fetch a list of all leads. The lead list is sorted by the created_at field and by default is ordered descending, most recently created first. Apart from sorting, the same parameters for the User list apply here.\n\nList Leads by Email\nList by Email\n$ curl https://api.intercom.io/contacts?email=obrien@truth.org \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"contact.list\",\n    \"pages\": {\n        \"type\": \"pages\",\n        \"next\": null,\n        \"page\": 1,\n        \"per_page\": 50,\n        \"total_pages\": 1\n    },\n    \"contacts\": [\n        {\n            \"type\": \"contact\",\n            \"id\": \"5811f6bbe6b4704ddfa84ac0\",\n            \"user_id\": \"77177570-cf5d-4f1a-bc75-75202af47d4f\",\n            \"anonymous\": true,\n            \"email\": \"obrien@truth.org\",\n            \"phone\": \"00353875551234\",\n            \"name\": \"O&#39;Brien\",\n            \"pseudonym\": \"Lime Camel from Dublin\",\n            \"avatar\": {\n                \"type\": \"avatar\",\n                \"image_url\": null\n            },\n            \"app_id\": \"ja43hiec\",\n            \"companies\": {\n                \"type\": \"company.list\",\n                \"companies\": []\n            },\n            \"location_data\": {\n                \"type\": \"location_data\",\n                \"city_name\": \"Mukilteo\",\n                \"continent_code\": \"NA\",\n                \"country_name\": \"United States\",\n                \"latitude\": 47.913,\n                \"longitude\": -122.3042,\n                \"postal_code\": \"98275\",\n                \"region_name\": \"Washington\",\n                \"timezone\": \"America/Los_Angeles\",\n                \"country_code\": \"USA\"\n            },\n            \"last_request_at\": 1477660267,\n            \"last_seen_ip\": \"1.2.3.4\",\n            \"created_at\": 1477572283,\n            \"remote_created_at\": null,\n            \"signed_up_at\": null,\n            \"updated_at\": 1480068674,\n            \"session_count\": 0,\n            \"social_profiles\": {\n                \"type\": \"social_profile.list\",\n                \"social_profiles\": []\n            },\n            \"unsubscribed_from_emails\": false,\n            \"user_agent_data\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9\",\n            \"tags\": {\n                \"type\": \"tag.list\",\n                \"tags\": []\n            },\n            \"segments\": {\n                \"type\": \"segment.list\",\n                \"segments\": []\n            },\n            \"custom_attributes\": {\n                \"paid_subscriber\": true,\n                \"monthly_spend\": 155.5,\n                \"team_mates\": 9\n            }\n        }\n    ],\n    \"total_count\": 1,\n    \"limited\": false\n}\n\ncontacts = intercom.contacts.find_all(email: \"winstonsmith@truth.org\")\n\nContactCollection contacts = Contact.listByEmail(\"winstonsmith@truth.org\");\n\n// get first page...\nList<Contact> items = contacts.getPageItems();\n\n// ...or iterate over all pages\nwhile (contacts.hasNext()) {\n    out.println(contacts.next().getID());\n}\n\n<?php\n$leads= $intercom->leads->getLeads(['email' => 'socrates@phil.com']);\nforeach ($leads->contacts as $lead) {\n    print_r($lead->id);\n    echo \"\\n\";\n}?>\n\n\nYou can fetch Leads with a given email by querying the leads resource with an email parameter.\n\nList Leads by Phone\nList by Phone\ncurlcurl\n$ curl \\\\\\nhttps://api.intercom.io/contacts?phone=00353875551234 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"contact.list\\\",\\n    \\\"pages\\\": {\\n        \\\"type\\\": \\\"pages\\\",\\n        \\\"next\\\": null,\\n        \\\"page\\\": 1,\\n        \\\"per_page\\\": 50,\\n        \\\"total_pages\\\": 1\\n    },\\n    \\\"contacts\\\": [\\n        {\\n            \\\"type\\\": \\\"contact\\\",\\n            \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n            \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n            \\\"anonymous\\\": true,\\n            \\\"email\\\": \\\"obrien@truth.org\\\",\\n            \\\"phone\\\": \\\"00353875551234\\\",\\n            \\\"name\\\": \\\"O&#39;Brien\\\",\\n            \\\"pseudonym\\\": \\\"Lime Camel from Dublin\\\",\\n            \\\"avatar\\\": {\\n                \\\"type\\\": \\\"avatar\\\",\\n                \\\"image_url\\\": null\\n            },\\n            \\\"app_id\\\": \\\"ja43hiec\\\",\\n            \\\"companies\\\": {\\n                \\\"type\\\": \\\"company.list\\\",\\n                \\\"companies\\\": []\\n            },\\n            \\\"location_data\\\": {\\n                \\\"type\\\": \\\"location_data\\\",\\n                \\\"city_name\\\": \\\"Mukilteo\\\",\\n                \\\"continent_code\\\": \\\"NA\\\",\\n                \\\"country_name\\\": \\\"United States\\\",\\n                \\\"latitude\\\": 47.913,\\n                \\\"longitude\\\": -122.3042,\\n                \\\"postal_code\\\": \\\"98275\\\",\\n                \\\"region_name\\\": \\\"Washington\\\",\\n                \\\"timezone\\\": \\\"America/Los_Angeles\\\",\\n                \\\"country_code\\\": \\\"USA\\\"\\n            },\\n            \\\"last_request_at\\\": 1477660267,\\n            \\\"last_seen_ip\\\": \\\"1.2.3.4\\\",\\n            \\\"created_at\\\": 1477572283,\\n            \\\"remote_created_at\\\": null,\\n            \\\"signed_up_at\\\": null,\\n            \\\"updated_at\\\": 1480068674,\\n            \\\"session_count\\\": 0,\\n            \\\"social_profiles\\\": {\\n                \\\"type\\\": \\\"social_profile.list\\\",\\n                \\\"social_profiles\\\": []\\n            },\\n            \\\"unsubscribed_from_emails\\\": false,\\n            \\\"user_agent_data\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9\\\",\\n            \\\"tags\\\": {\\n                \\\"type\\\": \\\"tag.list\\\",\\n                \\\"tags\\\": []\\n            },\\n            \\\"segments\\\": {\\n                \\\"type\\\": \\\"segment.list\\\",\\n                \\\"segments\\\": []\\n            },\\n            \\\"custom_attributes\\\": {\\n                \\\"paid_subscriber\\\": true,\\n                \\\"monthly_spend\\\": 155.5,\\n                \\\"team_mates\\\": 9\\n            }\\n        }\\n    ],\\n    \\\"total_count\\\": 1,\\n    \\\"limited\\\": false\\n}\n\n\nYou can fetch Leads with a given phone number by querying the leads resource with a phone parameter."
  },
  {
    "title": "Leads",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/leads/leads/",
    "html": "Leads\n\nLeads are useful for representing logged-out users of your application. The Leads resource provides methods to fetch, create, update and delete Leads within Intercom.\n\nLeads were previously known as 'Contacts'. Our object names and types continue to be referred to as 'contacts/contact'. We will migrate to 'Leads/Lead' models at a future date."
  },
  {
    "title": "Scroll over all leads",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/leads/iterating-over-all-leads/",
    "html": "Scroll over all leads\n\nThe List Leads functionality does not work well for huge datasets, and can result in errors and performance problems when paging deeply. The Scroll API provides an efficient mechanism for iterating over all leads in a dataset.\n\nEach workspace can only have 1 scroll open at a time. You'll get an error message if you try to have more than one open per workspace.\nIf the scroll isn't used for 1 minute, it expires and calls with that scroll param will fail\nIf the end of the scroll is reached, \"contacts\" will be empty and the scroll parameter will expire\n# Send a GET request to get the first page of leads\n$ curl \\\n'https://api.intercom.io/contacts/scroll' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n# To get the next page use the scroll param returned in the response\n$ curl \\\n'https://api.intercom.io/contacts/scroll?scroll_param=562bc29f-ea55-4823-aaaf-f3faadceaa59' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"contact.list\",\n  \"users\": [\n    {\n      \"type\": \"contact\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ],\n  \"scroll_param\": \"25b649f7-4d33-4ef6-88f5-60e5b8244309\"\n}\n\n# You can use the scroll method to list all your users\nintercom.users.scroll.each { |lead| puts lead.name}\n# Alternatively you can use the scroll.next method to get 100 leads with each request\nresult = intercom.contacts.scroll.next\nresult.scroll_param\n=> \"0730e341-63ef-44da-ab9c-9113f886326d\"\nresult = intercom.contacts.scroll.next(\"0730e341-63ef-44da-ab9c-9113f886326d\");\n\nSCROLL PARAMETER\n\nYou can get the first page of leads by simply sending a GET request to the scroll endpoint. For subsequent requests you will need to use the scroll parameter from the response.\n\n❗️ Scroll network timeouts\n\nSince scroll is often used on large datasets network errors such as timeouts can be encountered. When this occurs you will need to restart your scroll query as it is not possible to continue from a specific point when using scroll.\n\nWhen this occurs you will see a HTTP 500 error with the following message:\n\"Request failed due to an internal network error. Please restart the scroll operation.\""
  },
  {
    "title": "Delete a Lead",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/leads/delete-a-lead/",
    "html": "Delete a Lead\nExample ID Delete Request\ncurlcurlrubyjavaphp\n$ curl \\\\\\nhttps://api.intercom.io/contacts/5811f6bbe6b4704ddfa84ac0 \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\\n\\n{\\n    \\\"type\\\": \\\"contact\\\",\\n    \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n    \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n    \\\"anonymous\\\": true,\\n    \\\"email\\\": \\\"obrien@truth.org\\\",\\n    \\\"phone\\\": \\\"00353875551234\\\",\\n    \\\"name\\\": \\\"O&#39;Brien\\\",\\n    \\\"pseudonym\\\": \\\"Lime Camel from Dublin\\\",\\n  ...\\n}\\n# NB: Full Contact objects are returned\n\n\nLeads can be deleted via their id, or with a user_id parameter."
  },
  {
    "title": "Create Lead",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/leads/create-lead/",
    "html": "Create Lead\nExample Request\ncurlcurlrubyjavaphp\n$ curl https://api.intercom.io/contacts \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"phone\\\": \\\"123987456\\\",\\n  \\\"email\\\": \\\"winstonsmith@truth.org\\\",\\n  \\\"name\\\": \\\"Winston Smith\\\"\\n}'\\n\\n\n\nHTTP/1.1 200 OK\\n\\n# lead response\\n\\n{\\n    \\\"type\\\": \\\"contact\\\",\\n    \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n    \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n    \\\"anonymous\\\": true,\\n    \\\"email\\\": \\\"winstonsmith@truth.org\\\",\\n    \\\"phone\\\": \\\"00353875551234\\\",\\n    \\\"name\\\": \\\"Winston Smith\\\",\\n    \\\"pseudonym\\\": \\\"Lime Camel from Dublin\\\",\\n    \\\"avatar\\\": {\\n        \\\"type\\\": \\\"avatar\\\",\\n        \\\"image_url\\\": null\\n    },\\n    \\\"app_id\\\": \\\"ja43hiec\\\",\\n    \\\"companies\\\": {\\n        \\\"type\\\": \\\"company.list\\\",\\n        \\\"companies\\\": []\\n    },\\n    \\\"location_data\\\": {\\n        \\\"type\\\": \\\"location_data\\\",\\n        \\\"city_name\\\": \\\"Mukilteo\\\",\\n        \\\"continent_code\\\": \\\"NA\\\",\\n        \\\"country_name\\\": \\\"United States\\\",\\n        \\\"postal_code\\\": \\\"98275\\\",\\n        \\\"region_name\\\": \\\"Washington\\\",\\n        \\\"timezone\\\": \\\"America/Los_Angeles\\\",\\n        \\\"country_code\\\": \\\"USA\\\"\\n    },\\n    \\\"last_request_at\\\": 1477660267,\\n    \\\"created_at\\\": 1477572283,\\n    \\\"remote_created_at\\\": null,\\n    \\\"signed_up_at\\\": null,\\n    \\\"updated_at\\\": 1480067287,\\n    \\\"session_count\\\": 0,\\n    \\\"social_profiles\\\": {\\n        \\\"type\\\": \\\"social_profile.list\\\",\\n        \\\"social_profiles\\\": []\\n    },\\n    \\\"unsubscribed_from_emails\\\": false,\\n    \\\"tags\\\": {\\n        \\\"type\\\": \\\"tag.list\\\",\\n        \\\"tags\\\": []\\n    },\\n    \\\"utm_campaign\\\": null,\\n    \\\"utm_content\\\": null,\\n    \\\"utm_medium\\\": null,\\n    \\\"utm_source\\\": null,\\n    \\\"utm_term\\\": null,\\n    \\\"segments\\\": {\\n        \\\"type\\\": \\\"segment.list\\\",\\n        \\\"segments\\\": []\\n    },\\n    \\\"custom_attributes\\\": {\\n        \\\"paid_subscriber\\\": true,\\n        \\\"monthly_spend\\\": 155.5,\\n        \\\"team_mates\\\": 9\\n    }\\n}\n\n\nLeads can be created via a POST method to https://api.intercom.io/contacts, which accepts a JSON object describing the lead.\n\nNo identifying information is required to create a Lead, Intercom assigns a user_id to each new Lead. Indeed, it is not possible to assign these through the API - to work with self-assigned user_ids, use the Users resource.\n\nContrary to Users, signed_up_at and sessions are not available for Leads. Otherwise, attributes to update on a Lead are the same as for a User.\n\nNote that as with Users, user agent data is submitted as last_seen_user_agent."
  },
  {
    "title": "View a Lead",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/leads/view-a-lead/",
    "html": "View a Lead\nExample ID Request\ncurlcurlrubyjavaphp\n$ curl \\\\\\nhttps://api.intercom.io/contacts/5811f6bbe6b4704ddfa84ac0 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\nor \\n\\n$ curl \\\\\\n-s https://api.intercom.io/contacts?user_id=77177570-cf5d-4f1a-bc75-75202af47d4f \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"contact\\\",\\n    \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n    \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n    \\\"anonymous\\\": true,\\n    \\\"email\\\": \\\"obrien@truth.org\\\",\\n    \\\"phone\\\": \\\"00353875551234\\\",\\n    \\\"name\\\": \\\"O&#39;Brien\\\",\\n    \\\"pseudonym\\\": \\\"Lime Camel from Dublin\\\",\\n  ...\\n}\\n# NB: Full Lead objects are returned\n\n\nLeads can be looked up individually via their id, with a user_id parameter, or with a phone parameter.\n\nUSER_ID FOR LEADS\n\nRemember that for leads the user_id will be automatically generated so it will look something like '8a88a590-e1c3-41e2-a502-e0649dbf721c'. (Note that this user_id is not retained when converting a lead to a user) For users the user_id is manually set so it will generally appear more like a regular number series e.g. '234'."
  },
  {
    "title": "List Leads",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/leads/list-leads/",
    "html": "List Leads\nList all Leads\nList all Leads\ncurlhttprubyphpjava\n$ curl https://api.intercom.io/contacts \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\n\nYou can fetch a list of all leads. The lead list is sorted by the created_at field and by default is ordered descending, most recently created first. Apart from sorting, the same parameters for the User list apply here.\n\nList Leads by Email\nList by Email\n$ curl https://api.intercom.io/contacts?email=obrien@truth.org \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"contact.list\",\n    \"pages\": {\n        \"type\": \"pages\",\n        \"next\": null,\n        \"page\": 1,\n        \"per_page\": 50,\n        \"total_pages\": 1\n    },\n    \"contacts\": [\n        {\n            \"type\": \"contact\",\n            \"id\": \"5811f6bbe6b4704ddfa84ac0\",\n            \"user_id\": \"77177570-cf5d-4f1a-bc75-75202af47d4f\",\n            \"anonymous\": true,\n            \"email\": \"obrien@truth.org\",\n            \"phone\": \"00353875551234\",\n            \"name\": \"O&#39;Brien\",\n            \"pseudonym\": \"Lime Camel from Dublin\",\n            \"avatar\": {\n                \"type\": \"avatar\",\n                \"image_url\": null\n            },\n            \"app_id\": \"ja43hiec\",\n            \"companies\": {\n                \"type\": \"company.list\",\n                \"companies\": []\n            },\n            \"location_data\": {\n                \"type\": \"location_data\",\n                \"city_name\": \"Mukilteo\",\n                \"continent_code\": \"NA\",\n                \"country_name\": \"United States\",\n                \"latitude\": 47.913,\n                \"longitude\": -122.3042,\n                \"postal_code\": \"98275\",\n                \"region_name\": \"Washington\",\n                \"timezone\": \"America/Los_Angeles\",\n                \"country_code\": \"USA\"\n            },\n            \"last_request_at\": 1477660267,\n            \"last_seen_ip\": \"1.2.3.4\",\n            \"created_at\": 1477572283,\n            \"remote_created_at\": null,\n            \"signed_up_at\": null,\n            \"updated_at\": 1480068674,\n            \"session_count\": 0,\n            \"social_profiles\": {\n                \"type\": \"social_profile.list\",\n                \"social_profiles\": []\n            },\n            \"unsubscribed_from_emails\": false,\n            \"user_agent_data\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9\",\n            \"tags\": {\n                \"type\": \"tag.list\",\n                \"tags\": []\n            },\n            \"segments\": {\n                \"type\": \"segment.list\",\n                \"segments\": []\n            },\n            \"custom_attributes\": {\n                \"paid_subscriber\": true,\n                \"monthly_spend\": 155.5,\n                \"team_mates\": 9\n            }\n        }\n    ],\n    \"total_count\": 1,\n    \"limited\": false\n}\n\ncontacts = intercom.contacts.find_all(email: \"winstonsmith@truth.org\")\n\nContactCollection contacts = Contact.listByEmail(\"winstonsmith@truth.org\");\n\n// get first page...\nList<Contact> items = contacts.getPageItems();\n\n// ...or iterate over all pages\nwhile (contacts.hasNext()) {\n    out.println(contacts.next().getID());\n}\n\n<?php\n$leads= $intercom->leads->getLeads(['email' => 'socrates@phil.com']);\nforeach ($leads->contacts as $lead) {\n    print_r($lead->id);\n    echo \"\\n\";\n}?>\n\n\nYou can fetch Leads with a given email by querying the leads resource with an email parameter.\n\nList Leads by Phone\nList by Phone\ncurlcurl\n$ curl \\\\\\nhttps://api.intercom.io/contacts?phone=00353875551234 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"contact.list\\\",\\n    \\\"pages\\\": {\\n        \\\"type\\\": \\\"pages\\\",\\n        \\\"next\\\": null,\\n        \\\"page\\\": 1,\\n        \\\"per_page\\\": 50,\\n        \\\"total_pages\\\": 1\\n    },\\n    \\\"contacts\\\": [\\n        {\\n            \\\"type\\\": \\\"contact\\\",\\n            \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n            \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n            \\\"anonymous\\\": true,\\n            \\\"email\\\": \\\"obrien@truth.org\\\",\\n            \\\"phone\\\": \\\"00353875551234\\\",\\n            \\\"name\\\": \\\"O&#39;Brien\\\",\\n            \\\"pseudonym\\\": \\\"Lime Camel from Dublin\\\",\\n            \\\"avatar\\\": {\\n                \\\"type\\\": \\\"avatar\\\",\\n                \\\"image_url\\\": null\\n            },\\n            \\\"app_id\\\": \\\"ja43hiec\\\",\\n            \\\"companies\\\": {\\n                \\\"type\\\": \\\"company.list\\\",\\n                \\\"companies\\\": []\\n            },\\n            \\\"location_data\\\": {\\n                \\\"type\\\": \\\"location_data\\\",\\n                \\\"city_name\\\": \\\"Mukilteo\\\",\\n                \\\"continent_code\\\": \\\"NA\\\",\\n                \\\"country_name\\\": \\\"United States\\\",\\n                \\\"latitude\\\": 47.913,\\n                \\\"longitude\\\": -122.3042,\\n                \\\"postal_code\\\": \\\"98275\\\",\\n                \\\"region_name\\\": \\\"Washington\\\",\\n                \\\"timezone\\\": \\\"America/Los_Angeles\\\",\\n                \\\"country_code\\\": \\\"USA\\\"\\n            },\\n            \\\"last_request_at\\\": 1477660267,\\n            \\\"last_seen_ip\\\": \\\"1.2.3.4\\\",\\n            \\\"created_at\\\": 1477572283,\\n            \\\"remote_created_at\\\": null,\\n            \\\"signed_up_at\\\": null,\\n            \\\"updated_at\\\": 1480068674,\\n            \\\"session_count\\\": 0,\\n            \\\"social_profiles\\\": {\\n                \\\"type\\\": \\\"social_profile.list\\\",\\n                \\\"social_profiles\\\": []\\n            },\\n            \\\"unsubscribed_from_emails\\\": false,\\n            \\\"user_agent_data\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9\\\",\\n            \\\"tags\\\": {\\n                \\\"type\\\": \\\"tag.list\\\",\\n                \\\"tags\\\": []\\n            },\\n            \\\"segments\\\": {\\n                \\\"type\\\": \\\"segment.list\\\",\\n                \\\"segments\\\": []\\n            },\\n            \\\"custom_attributes\\\": {\\n                \\\"paid_subscriber\\\": true,\\n                \\\"monthly_spend\\\": 155.5,\\n                \\\"team_mates\\\": 9\\n            }\\n        }\\n    ],\\n    \\\"total_count\\\": 1,\\n    \\\"limited\\\": false\\n}\n\n\nYou can fetch Leads with a given phone number by querying the leads resource with a phone parameter."
  },
  {
    "title": "Leads",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/leads/leads/",
    "html": "Leads\n\nLeads are useful for representing logged-out users of your application. The Leads resource provides methods to fetch, create, update and delete Leads within Intercom.\n\nLeads were previously known as 'Contacts'. Our object names and types continue to be referred to as 'contacts/contact'. We will migrate to 'Leads/Lead' models at a future date."
  },
  {
    "title": "Leads Object",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/leads/leads-object/",
    "html": "Leads Object\nExample Lead Object (i.e. example JSON response)\nLead example object\n{\\n    \\\"anonymous\\\": true,\\n    \\\"app_id\\\": \\\"abc3wodw\\\",\\n    \\\"avatar\\\": {\\n        \\\"image_url\\\": \\\"https://secure.gravatar.com/avatar/af060c6?\\\",\\n        \\\"type\\\": \\\"avatar\\\"\\n    },\\n    \\\"companies\\\": {\\n        \\\"companies\\\": [],\\n        \\\"type\\\": \\\"company.list\\\"\\n    },\\n    \\\"created_at\\\": 1503488750,\\n    \\\"custom_attributes\\\": {},\\n    \\\"do_not_track\\\": null,\\n    \\\"email\\\": \\\"test@example.com\\\",\\n    \\\"has_hard_bounced\\\": false,\\n    \\\"id\\\": \\\"599d6aeeda883ed8ba7c2\\\",\\n    \\\"last_request_at\\\": 1503488749,\\n    \\\"location_data\\\": {\\n        \\\"city_name\\\": \\\"Pretoria\\\",\\n        \\\"continent_code\\\": \\\"AF\\\",\\n        \\\"country_code\\\": \\\"ZAF\\\",\\n        \\\"country_name\\\": \\\"South Africa\\\",\\n        \\\"postal_code\\\": \\\"0118\\\",\\n        \\\"region_name\\\": \\\"Gauteng\\\",\\n        \\\"timezone\\\": \\\"Africa/Johannesburg\\\",\\n        \\\"type\\\": \\\"location_data\\\"\\n    },\\n    \\\"marked_email_as_spam\\\": false,\\n    \\\"name\\\": null,\\n    \\\"owner_id\\\": \\\"321452\\\",\\n    \\\"phone\\\": null,\\n    \\\"pseudonym\\\": \\\"Test from Pretoria\\\",\\n    \\\"referrer\\\": null,\\n    \\\"remote_created_at\\\": null,\\n    \\\"segments\\\": {\\n        \\\"segments\\\": [],\\n        \\\"type\\\": \\\"segment.list\\\"\\n    },\\n    \\\"session_count\\\": 0,\\n    \\\"signed_up_at\\\": null,\\n    \\\"social_profiles\\\": {\\n        \\\"social_profiles\\\": [\\n            {\\n                \\\"id\\\": \\\"123456\\\",\\n                \\\"name\\\": \\\"GooglePlus\\\",\\n                \\\"type\\\": \\\"social_profile\\\",\\n                \\\"url\\\": \\\"https://plus.google.com/123456\\\",\\n                \\\"username\\\": null\\n            }\\n        ],\\n        \\\"type\\\": \\\"social_profile.list\\\"\\n    },\\n    \\\"tags\\\": {\\n        \\\"tags\\\": [],\\n        \\\"type\\\": \\\"tag.list\\\"\\n    },\\n    \\\"type\\\": \\\"contact\\\",\\n    \\\"unsubscribed_from_emails\\\": false,\\n    \\\"updated_at\\\": 1520946390,\\n    \\\"user_id\\\": \\\"e477-55c-47d5-96d3-e45bf\\\",\\n    \\\"utm_campaign\\\": null,\\n    \\\"utm_content\\\": null,\\n    \\\"utm_medium\\\": null,\\n    \\\"utm_source\\\": null,\\n    \\\"utm_term\\\": null\\n}\n\n\nA lead object contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'contact'\nid\tstring\tThe Intercom defined id representing the Lead\ncreated_at\ttimestamp\tThe time the Lead was added to Intercom\nupdated_at\ttimestamp\tThe last time the Lead was updated\nuser_id\tstring\tAutomatically generated identifier for the Lead\nemail\tstring\tThe email you have defined for the Lead\nphone\tstring\tThe phone number you have defined for the lead\nname\tstring\tThe name of the Lead\ncustom_attributes\tobject\tThe custom attributes you have set on the Lead\nlast_request_at\ttimestamp\tThe time the Lead last recorded making a request\navatar\tobject\tAn avatar object for the Lead\nunsubscribed_from_emails\tboolean\tWhether the Lead is unsubscribed from emails\nlocation_data\tobject\tA Location Object relating to the Lead\ncompanies\tlist\tA list of companies for the Lead\nsocial_profiles\tlist\tA list of social profiles associated with the Lead\nsegments\tlist\tThis will return an empty list of segments as part of our effort to deprecate this attribute on the lead model for performance and accuracy reasons.\ntags\tlist\tA list of tags associated with the Lead.\nreferrer\tstring\tThe URL of the page the lead was last on\nutm_source\tstring\tIdentifies which site sent the traffic\nutm_medium\tstring\tIdentifies what type of link was used\nutm_campaign\tstring\tIdentifies a specific product promotion or strategic campaign\nutm_term\tstring\tIdentifies search terms\nutm_content\tstring\tIdentifies what specifically was clicked to bring the user to the site\n\nInformation on social profile, avatar and location objects can be found under the Users documentation."
  },
  {
    "title": "Scroll over all leads",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/leads/iterating-over-all-leads/",
    "html": "Scroll over all leads\n\nThe List Leads functionality does not work well for huge datasets, and can result in errors and performance problems when paging deeply. The Scroll API provides an efficient mechanism for iterating over all leads in a dataset.\n\nEach workspace can only have 1 scroll open at a time. You'll get an error message if you try to have more than one open per workspace.\nIf the scroll isn't used for 1 minute, it expires and calls with that scroll param will fail\nIf the end of the scroll is reached, \"contacts\" will be empty and the scroll parameter will expire\n# Send a GET request to get the first page of leads\n$ curl \\\n'https://api.intercom.io/contacts/scroll' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n# To get the next page use the scroll param returned in the response\n$ curl \\\n'https://api.intercom.io/contacts/scroll?scroll_param=562bc29f-ea55-4823-aaaf-f3faadceaa59' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"contact.list\",\n  \"users\": [\n    {\n      \"type\": \"contact\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ],\n  \"scroll_param\": \"25b649f7-4d33-4ef6-88f5-60e5b8244309\"\n}\n\n# You can use the scroll method to list all your users\nintercom.users.scroll.each { |lead| puts lead.name}\n# Alternatively you can use the scroll.next method to get 100 leads with each request\nresult = intercom.contacts.scroll.next\nresult.scroll_param\n=> \"0730e341-63ef-44da-ab9c-9113f886326d\"\nresult = intercom.contacts.scroll.next(\"0730e341-63ef-44da-ab9c-9113f886326d\");\n\nSCROLL PARAMETER\n\nYou can get the first page of leads by simply sending a GET request to the scroll endpoint. For subsequent requests you will need to use the scroll parameter from the response.\n\n❗️ Scroll network timeouts\n\nSince scroll is often used on large datasets network errors such as timeouts can be encountered. When this occurs you will need to restart your scroll query as it is not possible to continue from a specific point when using scroll.\n\nWhen this occurs you will see a HTTP 500 error with the following message:\n\"Request failed due to an internal network error. Please restart the scroll operation.\""
  },
  {
    "title": "Delete a Lead",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/leads/delete-a-lead/",
    "html": "Delete a Lead\nExample ID Delete Request\ncurlcurlrubyjavaphp\n$ curl \\\\\\nhttps://api.intercom.io/contacts/5811f6bbe6b4704ddfa84ac0 \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\\n\\n{\\n    \\\"type\\\": \\\"contact\\\",\\n    \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n    \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n    \\\"anonymous\\\": true,\\n    \\\"email\\\": \\\"obrien@truth.org\\\",\\n    \\\"phone\\\": \\\"00353875551234\\\",\\n    \\\"name\\\": \\\"O&#39;Brien\\\",\\n    \\\"pseudonym\\\": \\\"Lime Camel from Dublin\\\",\\n  ...\\n}\\n# NB: Full Contact objects are returned\n\n\nLeads can be deleted via their id, or with a user_id parameter."
  },
  {
    "title": "Create Lead",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/leads/create-lead/",
    "html": "Create Lead\nExample Request\ncurlcurlrubyjavaphp\n$ curl https://api.intercom.io/contacts \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"phone\\\": \\\"123987456\\\",\\n  \\\"email\\\": \\\"winstonsmith@truth.org\\\",\\n  \\\"name\\\": \\\"Winston Smith\\\"\\n}'\\n\\n\n\nHTTP/1.1 200 OK\\n\\n# lead response\\n\\n{\\n    \\\"type\\\": \\\"contact\\\",\\n    \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n    \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n    \\\"anonymous\\\": true,\\n    \\\"email\\\": \\\"winstonsmith@truth.org\\\",\\n    \\\"phone\\\": \\\"00353875551234\\\",\\n    \\\"name\\\": \\\"Winston Smith\\\",\\n    \\\"pseudonym\\\": \\\"Lime Camel from Dublin\\\",\\n    \\\"avatar\\\": {\\n        \\\"type\\\": \\\"avatar\\\",\\n        \\\"image_url\\\": null\\n    },\\n    \\\"app_id\\\": \\\"ja43hiec\\\",\\n    \\\"companies\\\": {\\n        \\\"type\\\": \\\"company.list\\\",\\n        \\\"companies\\\": []\\n    },\\n    \\\"location_data\\\": {\\n        \\\"type\\\": \\\"location_data\\\",\\n        \\\"city_name\\\": \\\"Mukilteo\\\",\\n        \\\"continent_code\\\": \\\"NA\\\",\\n        \\\"country_name\\\": \\\"United States\\\",\\n        \\\"postal_code\\\": \\\"98275\\\",\\n        \\\"region_name\\\": \\\"Washington\\\",\\n        \\\"timezone\\\": \\\"America/Los_Angeles\\\",\\n        \\\"country_code\\\": \\\"USA\\\"\\n    },\\n    \\\"last_request_at\\\": 1477660267,\\n    \\\"created_at\\\": 1477572283,\\n    \\\"remote_created_at\\\": null,\\n    \\\"signed_up_at\\\": null,\\n    \\\"updated_at\\\": 1480067287,\\n    \\\"session_count\\\": 0,\\n    \\\"social_profiles\\\": {\\n        \\\"type\\\": \\\"social_profile.list\\\",\\n        \\\"social_profiles\\\": []\\n    },\\n    \\\"unsubscribed_from_emails\\\": false,\\n    \\\"tags\\\": {\\n        \\\"type\\\": \\\"tag.list\\\",\\n        \\\"tags\\\": []\\n    },\\n    \\\"utm_campaign\\\": null,\\n    \\\"utm_content\\\": null,\\n    \\\"utm_medium\\\": null,\\n    \\\"utm_source\\\": null,\\n    \\\"utm_term\\\": null,\\n    \\\"segments\\\": {\\n        \\\"type\\\": \\\"segment.list\\\",\\n        \\\"segments\\\": []\\n    },\\n    \\\"custom_attributes\\\": {\\n        \\\"paid_subscriber\\\": true,\\n        \\\"monthly_spend\\\": 155.5,\\n        \\\"team_mates\\\": 9\\n    }\\n}\n\n\nLeads can be created via a POST method to https://api.intercom.io/contacts, which accepts a JSON object describing the lead.\n\nNo identifying information is required to create a Lead, Intercom assigns a user_id to each new Lead. Indeed, it is not possible to assign these through the API - to work with self-assigned user_ids, use the Users resource.\n\nContrary to Users, signed_up_at and sessions are not available for Leads. Otherwise, attributes to update on a Lead are the same as for a User.\n\nNote that as with Users, user agent data is submitted as last_seen_user_agent."
  },
  {
    "title": "Spacer",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/presentationcomponents/spacer/",
    "html": "Spacer\n\nA spacer component is used to create empty space between components.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tspacer\t\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nsize\txs``s``m``l``xl\tNo\tThe amount of space between components.Default is s.\nPreview"
  },
  {
    "title": "Image",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/presentationcomponents/image/",
    "html": "Image\n\nAn image component is used to display an image.\n\n🚧 HTTPS Images\n\nIf your request URLs (or website URLs) are over HTTPS, you will need to ensure that images are loaded over HTTPS likewise. Otherwise, they will not work.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\timage\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nurl\tA valid HTTPS URL\tYes\tThe URL where the image is located.\nalign\tleft``center``right``full_width\tNo\tAligns the image inside the component.Default is left.\nwidth\tAny integer\tYes\tThe exact width of the image in pixels.\nheight\tAny integer\tYes\tThe exact height of the image in pixels.\nrounded\ttrue``false\tNo\tRounds the corners of the image. Default is false.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\naction\tAction Object\tNo\tThis can be a URL Action only.\nPreview"
  },
  {
    "title": "Divider",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/presentationcomponents/divider/",
    "html": "Divider\n\nA divider component is used to separate components with a line.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdivider\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "Data-Table",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/presentationcomponents/data-table/",
    "html": "Data-Table\n\nA data-table component is used for rendering a table of key-value pairs. For Messenger, text will wrap around on multiple lines. For Inbox and Frame (ie. Configure) views, we will truncate and use tooltips on hover if the text overflows.\n\nData-Table Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdata-table\tYes\tThe type of component you are rendering.\nitems\tArray (See Below)\tYes\tThe items that will be rendered in the data-table.\nField-Value Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tfield-value\tYes\tThe type of component you are rendering.\nfield\tAny string\tYes\tThe text of the key in your key-value pair.\nvalue\tAny string\tYes\tThe text of the value in your key-value pair.\nPreview"
  },
  {
    "title": "Results",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/responseobjects/results/",
    "html": "Results\nDescription\n\nThe results object should be sent when you want to end configuration of the app and trigger the Initialize request to be sent. You provide the key-value pairs of data you want access to and we will send these in the Initialize request within a card_creation_options object.\n\nExample Object\nresults: { \"key\": \"value\" } // Can be more than one pair\n"
  },
  {
    "title": "View User Event Summaries",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/data-events/view-user-events-summaries/",
    "html": "View User Event Summaries\nGet summary count of user events\ncurlcurl\n$ curl 'https://api.intercom.io/events?type=user&user_id=314159&summary=true' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\n{\\n    \\\"type\\\": \\\"event.summary\\\",\\n    \\\"email\\\": \\\"test-user@example.com\\\",\\n    \\\"intercom_user_id\\\": \\\"56e1e5d4a40df1cc57000101\\\",\\n    \\\"user_id\\\": \\\"314159\\\",\\n    \\\"events\\\": [\\n        {\\n            \\\"name\\\": \\\"updated-profile\\\",\\n            \\\"first\\\": \\\"2016-03-18T10:05:15.000Z\\\",\\n            \\\"last\\\": \\\"2016-03-18T13:28:38.000Z\\\",\\n            \\\"count\\\": 5,\\n            \\\"description\\\": null\\n        },    \\n        {\\n            \\\"name\\\": \\\"purchased-item\\\",\\n            \\\"first\\\": \\\"2016-09-30T11:39:06.000Z\\\",\\n            \\\"last\\\": \\\"2016-09-30T11:39:06.000Z\\\",\\n            \\\"count\\\": 4,\\n            \\\"description\\\": null\\n        },\\n        {\\n            \\\"name\\\": \\\"subscribed-for-demo\\\",\\n            \\\"first\\\": \\\"2016-11-24T12:26:34.000Z\\\",\\n            \\\"last\\\": \\\"2016-11-24T12:26:34.000Z\\\",\\n            \\\"count\\\": 2,\\n            \\\"description\\\": null\\n        }\\n    ]\\n}\n\n\nIf you simply want to get a count of the number of different events associated with a user then you can use the 'summary=true' parameter of the events endpoint. This means you do not receive the full list of all users events and just the counts of the different events per user."
  },
  {
    "title": "Admin",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/requestobjects/admin/",
    "html": "Admin\nDescription\n\nThe admin object provides information on the Intercom teammate. You can see more about this on the Admin Model page of our API Reference.\n\nExample Object\n{\n  admin: {\n    type: \"admin\",\n    id: \"814860\",\n    name: \"IntercomTest\",\n    email: \"theadmin@example.com\",\n    job_title: \"Existentialist\",\n    away_mode_enabled: false,\n    away_mode_reassign: false,\n    avatar: {\n      image_url: \"https://static.site.test.icon\"\n    },\n    team_ids: [\n      814865\n    ]\n  }\n}\n"
  },
  {
    "title": "Spacer",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/presentationcomponents/spacer/",
    "html": "Spacer\n\nA spacer component is used to create empty space between components.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tspacer\t\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nsize\txs``s``m``l``xl\tNo\tThe amount of space between components.Default is s.\nPreview"
  },
  {
    "title": "Image",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/presentationcomponents/image/",
    "html": "Image\n\nAn image component is used to display an image.\n\n🚧 HTTPS Images\n\nIf your request URLs (or website URLs) are over HTTPS, you will need to ensure that images are loaded over HTTPS likewise. Otherwise, they will not work.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\timage\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nurl\tA valid HTTPS URL\tYes\tThe URL where the image is located.\nalign\tleft``center``right``full_width\tNo\tAligns the image inside the component.Default is left.\nwidth\tAny integer\tYes\tThe exact width of the image in pixels.\nheight\tAny integer\tYes\tThe exact height of the image in pixels.\nrounded\ttrue``false\tNo\tRounds the corners of the image. Default is false.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\naction\tAction Object\tNo\tThis can be a URL Action only.\nPreview"
  },
  {
    "title": "Divider",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/presentationcomponents/divider/",
    "html": "Divider\n\nA divider component is used to separate components with a line.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdivider\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "Data-Table",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/presentationcomponents/data-table/",
    "html": "Data-Table\n\nA data-table component is used for rendering a table of key-value pairs. For Messenger, text will wrap around on multiple lines. For Inbox and Frame (ie. Configure) views, we will truncate and use tooltips on hover if the text overflows.\n\nData-Table Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdata-table\tYes\tThe type of component you are rendering.\nitems\tArray (See Below)\tYes\tThe items that will be rendered in the data-table.\nField-Value Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tfield-value\tYes\tThe type of component you are rendering.\nfield\tAny string\tYes\tThe text of the key in your key-value pair.\nvalue\tAny string\tYes\tThe text of the value in your key-value pair.\nPreview"
  },
  {
    "title": "Button",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/interactivecomponents/button/",
    "html": "Button\n\nA button component is used to take an action by clicking a button. This can either:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tbutton\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tYes\tThe text that will be rendered inside the button.\naction\tAction Object\tYes\tThis can be a Submit Action, URL Action, or Sheets Action.\nstyle\tprimary``secondary``link\tNo\tStyles the button.Default is primary.\ndisabled\tfalse``true\tNo\tStyles the button and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "The visitor model",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/visitors/visitor-object/",
    "html": "The visitor model\n\nVisitors are useful for representing anonymous people that have not yet been identified. They usually represent website visitors. Visitors are not visible in Intercom platform.\nThe Visitors resource provides methods to fetch, update, convert and delete.\n\nVisitor Object\nAttribute\tType\tDescription\ntype\tString\tValue is 'visitor'.\nid\tString\tThe Intercom defined id representing the Visitor.\ncreated_at\tDate (UNIX timestamp)\tThe time the Visitor was added to Intercom.\nupdated_at\tDate (UNIX timestamp)\tThe last time the Visitor was updated.\nuser_id\tString\tAutomatically generated identifier for the Visitor.\nname\tString\tThe name of the Visitor.\ncustom_attributes\tObject\tThe custom attributes you have set on the Visitor.\nlast_request_at\tDate (UNIX timestamp)\tThe time the Lead last recorded making a request.\navatar\tObject\tAn avatar object for the Visitor.\nunsubscribed_from_emails\tBoolean\tWhether the Visitor is unsubscribed from emails.\nlocation_data\tObject\tA Location Object relating to the Visitor.\nsocial_profiles\tList\tA list of social profiles associated with the Visitor.\nsegments\tList\tA list of segments the Visitor.\ntags\tList\tA list of tags associated with the Visitor."
  },
  {
    "title": "Content",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/responseobjects/content/",
    "html": "Content\nDescription\n\nThe content object is where you specify the UI of your app. You provide us with a set of components in a components array that we then render.\n\nThe content object should usually be returned within the canvas object. If you're responding to a Live Canvas request however, then you should only respond with the content object.\n\nAttributes\nKey\tType\tDescription\ncomponents\tarray\tThe list of components to be rendered. See the components further in this reference.\nExample Object\n{\n  content: {\n    components: [\n      {\n        \"type\": \"text\",\n        \"id\": \"component-1\",\n        \"text\": \"This is the first component\",\n        \"align\": \"center\",\n        \"style\": \"header\"\n      },\n      {\n        \"type\": \"button\",\n        \"id\": \"component-2\",\n        \"label\": \"This is the second component\",\n        \"action\": {\n          \"type\": \"submit\"\n        }\n      }\n    ]\n  }\n}\n"
  },
  {
    "title": "Retrieve a visitor",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/visitors/view-a-visitor/",
    "html": "Retrieve a visitor\nExample ID Request\n$ curl \\\n-s https://api.intercom.io/visitors/<id> \\   \n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nor \n\n$ curl \\\n-s https://api.intercom.io/visitors\\?user_id\\=16e690c0-485a-4e87-ae98-a326e788a4f7 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"visitor\",\n  \"id\": \"573479f784c5acde6a000575\",\n  \"user_id\": \"16e690c0-485a-4e87-ae98-a326e788a4f7\",\n  \"email\": \"winstonsmith@truth.org\",\n  \"name\": \"Winston Smith\",\n  ...\n}\n# NB: Full Visitor objects are returned\n\nvisitor = intercom.visitors.find(:id => \"530370b477ad7120001d\")\nvisitor = intercom.visitors.find(:user_id => \"8a88a590-e1c3-41e2-a502-e0649dbf721c\")\n\n\nYou can fetch the details of a single visitor.\n\nRequest Path Parameters\nParameter\tRequired?\tDescription\nid\tOne of\tId provided by Intercom.\n?user_id=\tOne of\tTo get the visitor user_id from the browser you can use the Intercom JS SDK following method : Intercom('getVisitorId').\nResponse\n\nThis will return a Visitor Model."
  },
  {
    "title": "Update a visitor",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/visitors/update-a-visitor/",
    "html": "Update a visitor\nExample Request\n$ curl https://api.intercom.io/visitors \\\n-X PUT \\\n-H 'Authorization:Bearer <Your access token>'  \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"user_id\": \"124\",\n  \"name\": \"Winston Smith\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 9\n  }\n}'\n\nHTTP/1.1 200 OK\n\n{\n  \"user_id\": \"124\",\n  \"name\": \"Winston Smith\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 9\n  }\n  \n  # and the rest of the Visitor model\n}'\n\nvisitor.name = \"Winston Smith\"\nvisitor.custom_attribute[:foo] = 'bar'\nintercom.visitors.save(visitor)\n\n\nSending a PUT request to /visitors and passing identifiers (user_id or id) in the body will result in an update of an existing Visitor.\n\nRequest Body Parameters\nArgument\tType\tRequired?\tDescription\nid\tString\tOne of\tA unique identified for the visitor which is given by Intercom.\nuser_id\tString\tOne of\tA unique identified for the visitor which is given by you.\nname\tString\tNo\tThe visitor's name.\ncustom_attributes\tObject\tNo\tThe custom attributes which are set for the visitor.\nResponse\n\nThis will return a Visitor Model of the visitor you just updated."
  },
  {
    "title": "Sheets Action",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/actioncomponents/sheets-action/",
    "html": "Sheets Action\n\nA sheet action opens the link you give within the Messenger as an embedded iframe.\n\nMore on how Sheets work is in our Canvas Kit documentation.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsheet\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which hosts your sheet.\nExample Object\naction: {\n  type: \"sheet\",\n  url:  \"http://example.com\"\n}\n"
  },
  {
    "title": "Delete a visitor",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/visitors/delete-a-visitor/",
    "html": "Delete a visitor\nExample Request & Response\ncurlcurl\n$ curl \\\\\\nhttps://api.intercom.io/visitors/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"visitor\\\",\\n  \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n  \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  ...\\n}\\n\n\n\nYou can delete a single visitor.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the visitor which is given by Intercom.\nResponse\n\nThis will return a Visitor Model of the visitor you just deleted."
  },
  {
    "title": "Submit action",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/actioncomponents/submit-action/",
    "html": "Submit action\n\nA submit action triggers a Submit Request to be sent. This request will include all values which have been entered into all the interactive components on the current canvas.\n\nParameters\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsubmit\tYes\tThe type of action you are attaching to a component.\nExample Object\naction: {\n  \"type\": \"submit\"\n}\n"
  },
  {
    "title": "HTTP Responses",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/errors/http-responses/",
    "html": "HTTP Responses\n\nThe API returns HTTP responses on each request to indicate the success or otherwise of API requests. The codes listed below are often used, and the API may use others. Note that 4xx and 5xx responses may be returned for any request and clients should cater for them.\n\nResponse Code\tDescription\n400\tBad Request -- General client error, possibly malformed data.\n401\tUnauthorized -- The API Key was not authorised (or no API Key was found).\n402\tPayment Required -- The API is not available on your current plan.\n403\tForbidden -- The request is not allowed.\n404\tNot Found -- The resource was not found.\n405\tMethod Not Allowed -- The resource does not accept the HTTP method.\n406\tNot Acceptable -- The resource cannot return the client's required content type.\n408\tRequest Timeout -- The server would not wait any longer for the client.\n409\tConflict - Multiple existing users match this email address - must be more specific using user_id\n415\tUnsupported Media Type - The server doesn't accept the submitted content-type.\n422\tUnprocessable Entity -- The data was well-formed but invalid.\n429\tToo Many Requests -- The client has reached or exceeded a rate limit, or the server is overloaded.\n500, 502, 503, 504\tServer errors - something went wrong with Intercom's servers. These responses are most likely momentary operational errors (e.g. temporary unavailability), and, as a result, requests should be retried once."
  },
  {
    "title": "Results",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/responseobjects/results/",
    "html": "Results\nDescription\n\nThe results object should be sent when you want to end configuration of the app and trigger the Initialize request to be sent. You provide the key-value pairs of data you want access to and we will send these in the Initialize request within a card_creation_options object.\n\nExample Object\nresults: { \"key\": \"value\" } // Can be more than one pair\n"
  },
  {
    "title": "Input Values",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/requestobjects/input-values/",
    "html": "Input Values\nDescription\n\nThe input_values object is a JSON hash containing key-value pairs. These key-value pairs represent the data that's been inputted by customers and teammates with a given component.\n\nThe key will be the component_id and the value will be the data that was inputted by this component.\n\nExample Object\ninput_values: { \"<component_id>\": \"<Value entered in component>\" }, //Can be more than one pair\n"
  },
  {
    "title": "Data Attribute Model",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/data-attributes/data-attribute-model/",
    "html": "Data Attribute Model\nExample Data Attribute Object\n{\\n  \\\"type\\\": \\\"data_attribute\\\",\\n  \\\"name\\\": \\\"paid_subscriber\\\",\\n  \\\"full_name\\\": \\\"custom_attributes.paid_subscriber\\\", \\n  \\\"label\\\": \\\"paid_subscriber\\\", \\n  \\\"description\\\": \\\"\\\",\\n  \\\"data_type\\\": \\\"string\\\", \\n  \\\"options\\\": [\\n    \\\"pick_value_1\\\",\\n    \\\"pick_value_2\\\"\\n  ],\\n  \\\"api_writable\\\": true, \\n  \\\"ui_writable\\\": true, \\n  \\\"custom\\\": true, \\n  \\\"archived\\\": false, \\n  \\\"admin_id\\\": \\\"1\\\",\\n  \\\"created_at\\\": 1392734388,\\n  \\\"updated_at\\\": 1392734388\\n}\\n\n\nData Attribute Object\n\nA data attribute object contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'data_attribute'\nid\tinteger\tThe unique identifier for the data attribute which is given by Intercom. Only available for custom attributes.\nname\tstring\tname of the attribute\n\nExamples:\nemail\nregion_name for region_name for stored in location_data object\nimage_url for image_url for stored in avatar object\npaid_subscriber for CDA named paid_subscriber\nfull_name\tstring\tFull name of the attribute. Should match the name unless it's a nested attribute.\n\nExamples:\nemail\nlocation_data.region_name\navatar.image_url\ncustom_attributes.paid_subscriber\n\nWe can split full_name on . to access nested user object values.\nExamples:\nuser['location_data']['region_name']\nuser['custom_attributes']['paid_subscriber']\nlabel\tstring\tReadable name of the attribute (i.e. name you see in the UI)\ndescription\tstring\tReadable description of the attribute\ndata_type\tstring\tType of data stored in the attribute.\nPossible values:\nstring\ninteger\nfloat\nboolean\ndate\noptions\tlist\tList of predefined options for attribute value.\nExample:\n[\"option_1\", \"option_2\"]\napi_writable\tboolean\tCan this attribute be updated through API\nui_writable\tboolean\tCan this attribute be updated in the UI\ncustom\tboolean\tSet to true if this is a CDA\narchived\tboolean\tOnly applicable to CDAs\ncreated_at\ttimestamp\tThe time the CDA was created.\nOnly applicable to CDAs.\nupdated_at\ttimestamp\tThe last time the CDA was updated.\nOnly applicable to CDAs.\nadmin_id\tstring\tTeammate who created the attribute.\nOnly applicable for CDAs"
  },
  {
    "title": "Canvas",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/responseobjects/canvas/",
    "html": "Canvas\nDescription\n\nYou have to respond to the majority of requests with a canvas object. This will tell us what UI to show for your app.\n\nA canvas can either be static (meaning we send you the next request only when an action takes place) or live (meaning we send you the next request when someone views the app).\n\nA static canvas needs a Content Object which will contain the components to show.\nA live canvas needs a content_url which we we will make the Live Canvas requests to when the app is viewed. This is only possible for apps viewed or used in the Messenger.\nAttributes\nKey\tType\tCanvas Type\tDescription\ncontent\tobject\tStatic\tThe Content that will be shown as the UI of the app. Max Size is 64KB.\ncontent_url\tstring\tLive\tThe URL which we make Live Canvas requests to. You must respond to these with a Content Object. Max size is 64KB.\nstored_data\tobject\tStatic, Live\tOptional Stored Data that you want to be returned in the next sent request. Max Size is 64KB.\nExample Objects\n{\n  canvas: {\n    content: {\n      components: [\n        {\n          \"type\": \"text\",\n          \"text\": \"This is a text component.\"\n        }\n      ]\n    },\n    stored_data: { \"key\": \"value\" } //Can be more than one pair \n  }\n}\n\n{\n  canvas: {\n    content_url: \"https://messengerapp.com/get-content-here\",\n    stored_data: { \"key\": \"value\" } //Can be more than one pair \n  }\n}\n"
  },
  {
    "title": "Submitting Events",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/data-events/submitting-events/",
    "html": "Submitting Events\nSubmit an Event\n$ curl https://api.intercom.io/events \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Content-Type: application/json\" -d'\n{\n  \"event_name\" : \"invited-friend\",\n  \"created_at\": 1391691571,\n  \"user_id\" : \"314159\"\n}'\n\nHTTP/1.1 202 Accepted\n\nIntercom('trackEvent', 'invited-friend');\n\nintercom.events.create(event_name: \"invited-friend\", email: user.email, created_at: 1391691571)\n\n<?php\n$intercom->events->create([\n    \"event_name\" => \"php-test\",\n    \"created_at\" => 1500907513,\n    \"user_id\" => \"1276\"\n]);\n?>\n\nEvent event = new Event()\n  .setEventName(\"invited-friend\")\n  .setCreatedAt(1234L)\n  .setUserID(\"314159\");\n\nEvent.create(event);\n\n\nYou will need an Access Token that has write permissions to send Events. Once you have a key you can submit events via POST to the Events resource, which is located at https://api.intercom.io/events, or you can send events using one of the client libraries. When working with the HTTP API directly a client should send the event with a Content-Type of application/json.\n\nWhen using the JavaScript API, adding the code to your app makes the Events API available. Once added, you can submit an event using the trackEvent method. This will associate the event with the Lead or currently logged-in user or logged-out visitor/lead and send it to Intercom. The final parameter is a map that can be used to send optional metadata about the event.\n\nWith the Ruby client you pass a hash describing the event to Intercom::Event.create, or call the track_user method directly on the current user object (e.g. user.track_event).\n\nLEAD EVENTS\n\nWhen submitting events for Leads, you will need to specify the Lead's id.\n\nHTTP API Responses\nSuccessful responses to submitted events return 202 Accepted with an empty body.\nUnauthorised access will be rejected with a 401 Unauthorized or 403 Forbidden response code.\nEvents sent about users that cannot be found will return a 404 Not Found.\nServer errors will return a 500 response code and may contain an error message in the body."
  },
  {
    "title": "Event",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/responseobjects/event/",
    "html": "Event\nDescription\n\nThe event object enables Intercom to know more about the actions that took place in your app. Currently, you can only tell us when an app's flow has been completed.\n\nAttributes\nKey\tType\tDescription\ntype\tstring\tWhat action took place. The only value currently accepted is completed.\nExample Object\nevent: { \"type\": \"completed\" } // Optional. Recorded by Intercom.\n"
  },
  {
    "title": "Submitting Events",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/data-events/submitting-events/",
    "html": "Submitting Events\nSubmit an Event\n$ curl https://api.intercom.io/events \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Content-Type: application/json\" -d'\n{\n  \"event_name\" : \"invited-friend\",\n  \"created_at\": 1391691571,\n  \"user_id\" : \"314159\"\n}'\n\nHTTP/1.1 202 Accepted\n\nIntercom('trackEvent', 'invited-friend');\n\nintercom.events.create(event_name: \"invited-friend\", email: user.email, created_at: 1391691571)\n\n<?php\n$intercom->events->create([\n    \"event_name\" => \"php-test\",\n    \"created_at\" => 1500907513,\n    \"user_id\" => \"1276\"\n]);\n?>\n\nEvent event = new Event()\n  .setEventName(\"invited-friend\")\n  .setCreatedAt(1234L)\n  .setUserID(\"314159\");\n\nEvent.create(event);\n\n\nYou will need an Access Token that has write permissions to send Events. Once you have a key you can submit events via POST to the Events resource, which is located at https://api.intercom.io/events, or you can send events using one of the client libraries. When working with the HTTP API directly a client should send the event with a Content-Type of application/json.\n\nWhen using the JavaScript API, adding the code to your app makes the Events API available. Once added, you can submit an event using the trackEvent method. This will associate the event with the Lead or currently logged-in user or logged-out visitor/lead and send it to Intercom. The final parameter is a map that can be used to send optional metadata about the event.\n\nWith the Ruby client you pass a hash describing the event to Intercom::Event.create, or call the track_user method directly on the current user object (e.g. user.track_event).\n\nLEAD EVENTS\n\nWhen submitting events for Leads, you will need to specify the Lead's id.\n\nHTTP API Responses\nSuccessful responses to submitted events return 202 Accepted with an empty body.\nUnauthorised access will be rejected with a 401 Unauthorized or 403 Forbidden response code.\nEvents sent about users that cannot be found will return a 404 Not Found.\nServer errors will return a 500 response code and may contain an error message in the body."
  },
  {
    "title": "Input Values",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/requestobjects/input-values/",
    "html": "Input Values\nDescription\n\nThe input_values object is a JSON hash containing key-value pairs. These key-value pairs represent the data that's been inputted by customers and teammates with a given component.\n\nThe key will be the component_id and the value will be the data that was inputted by this component.\n\nExample Object\ninput_values: { \"<component_id>\": \"<Value entered in component>\" }, //Can be more than one pair\n"
  },
  {
    "title": "Event Model",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/data-events/event-model/",
    "html": "Event Model\nEvent Object\n{\n  \"event_name\" : \"invited-friend\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"342311\"\n}\n\n// Sufficient to send just the event name\nIntercom('trackEvent', 'invited-friend');\n\n# create an event as a hash\nevent = {\n  :event_name => \"invited-friend\",\n  :email => current_user.email,\n  :created_at => 1391691571\n}\nintercom.events.create event\n\n<?php\n$event = array(\n  \"event_name\" => \"invited-friend\",\n  \"created_at\" => 1391691571,\n  \"user_id\" => \"314159\"\n);\n$intercom->events->create($event);\n?>\n\nEvent event = new Event()\n  .setEventName(\"invited-friend\")\n  .setUserID(\"1314159\");\n  .setCreatedAt(currentTimeMillis()/1000L);\n\nEvent.create(event);\n\nEvent Object\n\nAn Event Object describes the event and contains the following fields\n\nAttribute\tRequired\tDescription\nevent_name\tyes\tThe name of the event that occurred. This is presented to your App's admins when filtering and creating segments - a good event name is typically a past tense 'verb-noun' combination, to improve readability, for example updated-plan.\ncreated_at\tyes\tThe time the event occurred as a UTC Unix timestamp\nuser_id\tyes if no email\tYour identifier for the user.\nid\tyes if no email or user_id.\tYour identifier for a lead or a user.\nemail\tyes if no user_id\tAn email address for your user. An email should only be used where your application uses email to uniquely identify users\nmetadata\tno\toptional metadata about the event.\n\nThe event_name field is processed as follows -\n\nNames are treated as case insensitive - 'Completed-Order' and 'completed-order' will be considered the same event for your application.\nPeriods (.) and dollars ($) in event names are replaced with hyphens. e.g., 'completed.order' will be stored as 'completed-order'.\n\nTo avoid confusion we recommend submitting lower case event names that do not contain periods or dollars!\n\nMetadata Object\n\nSending an event with metadata\n\n$ curl https://api.intercom.io/events \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Content-Type: application/json\" -d'\n{\n  \"event_name\" : \"invited-friend\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"314159\",\n  \"metadata\": {\n     \"invitee_email\": \"pi@example.org\",\n     \"invite_code\": \"ADDAFRIEND\"\n  }\n}'\n\nvar metadata = {\n  invitee_email: 'pi@example.org',\n  invite_code: 'ADDAFRIEND'\n};\nIntercom('trackEvent', 'invited-friend', metadata);\n\nmetadata = {\n  :invitee_email => 'pi@example.org',\n  :invite_code => 'ADDAFRIEND'\n}\nintercom.events.create {\n  :event_name => \"invited-friend\",\n  :email => current_user.email,\n  :created_at => 1391691571,\n  :metadata => metadata\n}\n\n<?php\n$metadata = array(\n  \"invitee_email\" => \"pi@example.org\",\n  \"invite_code\" => \"ADDAFRIEND\"\n);\n$intercom->events->create(array(\n  \"event_name\" => \"invited-friend\",\n  \"created_at\" => 1391691571,\n  \"user_id\" => \"314159\",\n  \"metadata\" => $metadata\n));\n?>\n\nEvent event = new Event()\n  .setEventName(\"invited-friend\")\n  .setUserID(\"314159\")\n  .putMetadata(\"invite_mail\", \"pi@example.org\")\n  .putMetadata(\"invite_code\", \"ADDAFRIEND\")\n  .putMetadata(\"found_date\", currentTimeMillis()/1000L);\n\nEvent.create(event);\n\n\nMetadata can be used to submit an event with extra key value data. Each event can contain up to ten metadata key values.\n\nSome use cases for event metadata are -\n\nLinking an event back to a page in your website.\nDescribing before and after values for a subscription plan change.\nSending contextual information about an online order, a booking.\n\nYou can now trigger messages to your users based on event and event metadata and also include the metadata in the messages. For more information on how this works, learn more about event based messaging\n\nSee the section 'Metadata Types' for more information on the kinds of metadata you can send."
  },
  {
    "title": "Data Events",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/data-events/events/",
    "html": "Data Events\n\nEvents are how you can submit user activity to Intercom. Once you're sending Intercom event data, you can filter your user base with those events and create Auto Messages to send whenever an event occurs. Every event is associated with an event name, the time it happened, the user that caused the event, and optionally some extra metadata. Events record the count, first and last occurrence of an event.\n\nEvents are different to Custom Attributes in that events are information on what Users did and when they did it, whereas Custom Attributes represent the User's current state as seen in their profile. For example, the first time they subscribed to a paid plan, or the most recent time they changed their plan would be represented by events, whereas a User Attribute would be used to record their current plan.\n\nBecause Events are used for filtering and messaging, and event names are used directly in Intercom by your App's Admins we recommend sending high-level activity about your users that you would like to message on, rather than raw clickstream or user interface actions. For example an order action is a good candidate for an Event, versus all the clicks and actions that were taken to get to that point. We also recommend sending event names that combine a past tense verb and nouns, such as 'created-project'.\n\nThe Events API varies slightly from the rest of the APIs as follows -\n\nYou can submit events using JavaScript using the trackEvent method.\nWhen there's an error or errors, a list structure is returned instead of a single error."
  },
  {
    "title": "List Events",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/data-events/list-user-events/",
    "html": "List Events\n\nPlease note that you can only 'list' events that are less than 90 days old. Event counts and summaries will still include your events older than 90 days but you cannot 'list' these events individually if they are older than 90 days\n\nList all customer events\ncurlcurlrubyphpjava\n$ curl 'https://api.intercom.io/events?type=user&user_id=314159' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"event.list\\\",\\n  \\\"events\\\": [\\n      {\\n        \\\"event_name\\\" : \\\"ordered-item\\\",\\n        \\\"created_at\\\": 1391691571,\\n        \\\"user_id\\\" : \\\"314159\\\"\\n      },\\n      {\\n        \\\"event_name\\\" : \\\"invited-friend\\\",\\n        \\\"created_at\\\": 1389913941,\\n        \\\"user_id\\\" : \\\"314159\\\",\\n        \\\"metadata\\\": {\\n         \\\"invitee_email\\\": \\\"pi@example.org\\\",\\n         \\\"invite_code\\\": \\\"ADDAFRIEND\\\"\\n         }\\n      },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/events?type=user&intercom_user_id=55a3b&before=144474756550\\\"\\n  }\\n}\\n\\n# NB: Full event objects are returned\n\n\nThe events belonging to a customer can be listed by sending a GET request to https://api.intercom.io/events with a user or lead identifier along with a type parameter. The identifier parameter can be one of user_id, email or intercom_user_id. The type parameter value must be user.\n\nhttps://api.intercom.io/events?type=user&user_id={user_id}\nhttps://api.intercom.io/events?type=user&email={email}\nhttps://api.intercom.io/events?type=user&intercom_user_id={id} (this call can be used to list leads)\n\nThe email parameter value should be url encoded when sending.\n\nYou can optionally define the result page size as well with the per_page parameter.\n\nRequest Parameters\nParameter\tRequired\tDescription\ntype\tyes\tThe value must be user\nuser_id\tno\tThe user id you have defined for the user\nemail\tno\tThe email you have defined for the user\nintercom_user_id\tno\tThe Intercom defined id for the user\nper_page\tno\tHow many results to return per page defaults to 50.\nsummary\tno\tBoolean value. When set to true, event counts are returned grouped by event name.\nReturns\n\nA pageable list of events. The event list contains a pages object that indicates if more events exist for the customer via the next field, whose value is a URL that can be used to fetch the next page. If the next field is not present, that indicates there are no further events for the user. Clients should note that the parameters in the returned link are not assured to be the same as those sent in the request.\n\nThe event list is sorted by the created_at field and ordered descending, most recently created first.\n\nAs well as the fields that were supplied when the event was posted to Intercom (see Event model for details) the event payload will also contain an id field that uniquely identifies the event and may optionally contain an intercom_user_id containing the Intercom defined id representing the user.\n\nYou can use the API to get counts of users, leads and companies filtered by certain criteria.\n\nCounts are a good way to periodically obtain data for the purposes of tracking rates of change in user and company data."
  },
  {
    "title": "Event Metadata Types",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/data-events/event-metadata-types/",
    "html": "Event Metadata Types\nEvent Metadata Types\n$ curl https://api.intercom.io/events \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Content-Type: application/json\" -d'\n{\n  \"event_name\" : \"placed-order\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"314159\",\n  \"metadata\": {\n    \"order_date\": 1392036272,\n    \"stripe_invoice\": \"inv_3434343434\",\n    \"order_number\": {\n      \"value\":\"3434-3434\",\n      \"url\": \"https://example.org/orders/3434-3434\"\n    },\n    \"price\": {\n      \"currency\":\"usd\",\n      \"amount\": 2999\n    }\n  }\n}'\n\nvar more_metadata = {\n  order_date: 1392036272,\n  stripe_invoice: 'inv_3434343434',\n  order_number: {\n    value: \"3434-3434\",\n    url: 'https://example.org/orders/3434-3434'\n  },\n  price: {\n    currency: 'usd',\n    amount: 2999\n  }\n};\nIntercom('trackEvent', 'placed-order', more_metadata);\n\nmore_metadata = {\n  :order_date => Time.now.to_i,\n  :stripe_invoice => 'inv_3434343434',\n  :order_number => {\n    :value => '3434-3434',\n    :url => 'https://example.org/orders/3434-3434'\n  },\n  price: {\n    :currency => 'usd',\n    :amount => 2999\n  }\n}\nintercom.events.create({\n  :event_name => \"placed-order\",\n  :email => current_user.email,\n  :created_at => 1391691571,\n  :metadata => more_metadata\n})\n\n<?php\n$metadata = ([\n    \"order_date\" => time(),\n    \"stripe_invoice\" => \"inv_3434343434\",\n    \"order_number\" => ([\n        \"value\" => \"3434-3434\",\n        \"url\" => \"https://example.org/orders/3434-3434\"]),\n        \"price\" => ([\n            \"currency\" => \"usd\",\n            \"amount\" => 2999])\n]);\n\n$intercom->events->create([\n    \"event_name\" => \"placed-order\",\n    \"created_at\" => 1500907515,\n    \"user_id\" => \"20413\",\n    \"metadata\" => $metadata\n]);\n?>\n\nMap<String,Object> order = Maps.newHashMap();\norder.put(\"value\", \"3434-3434\");\norder.put(\"url\", \"https://example.org/orders/3434-3434\");\n\nMap<String,Object> price = Maps.newHashMap();\nprice.put(\"currency\", \"usd\");\nprice.put(\"amount\", 2999);\n\nMap<String,Object> meta = Maps.newHashMap();\nmeta.put(\"order_date\", currentTimeMillis()/1000L);\nmeta.put(\"stripe_invoice\", \"inv_3434343434\");\nmeta.put(\"price\", price);\nmeta.put(\"order_number\", order);\n\nEvent event = new Event()\n  .setEventName(\"placed-order\")\n  .setUserID(\"314159\")\n  .setMetadata(meta);\n\nEvent.create(event);\n\n# The metadata key values in the example\n# are treated as follows-\n#\n# - order_date: a Date\n#    (key ends with '_date').\n#\n# - stripe_invoice: The identifier of the Stripe invoice\n#     (has a 'stripe_invoice' key)\n#\n# - order_number: Rich Link\n#     (contains 'url' and 'value')\n#\n# - price: Amount in US Dollars\n#     (contains 'amount' and 'currency')\n\n\nMetadata Objects support a few simple types that Intercom can present on your behalf -\n\nType\tDescription\tExample\nString\tThe value is a JSON String\t\"source\":\"desktop\"\nNumber\tThe value is a JSON Number\t\"load\": 3.67\nDate\tThe key ends with the String _date and the value is a Unix timestamp, assumed to be in the UTC timezone.\t\"contact_date\": 1392036272\nLink\tThe value is a HTTP or HTTPS URI.\t\"article\": \"https://example.org/ab1de.html\"\nRich Link\tThe value is a JSON object that contains url and value keys.\t\"article\": {\"url\": \"https://example.org/ab1de.html\", \"value\":\"the dude abides\"}\nStripe Data\tThe key is one of - 'stripe_customer', 'stripe_invoice', 'stripe_charge'. The value is a Stripe identifier.\t\"stripe_customer\": \"cus_42424242424\"\nMonetary Amount\tThe value is a JSON object that contains amount and currency keys. The amount key is a positive integer representing the amount in cents. The price in the example to the right denotes €349.99.\t\"price\": {\"amount\": 34999, \"currency\": \"eur\"}\nAPI Responses\nSuccessful responses to submitted events return 202 Accepted with an empty body.\nUnauthorised access will be rejected with a 401 Unauthorized or 403 Forbidden response code.\nEvents sent about users that cannot be found will return a 404 Not Found.\nEvent lists containing duplicate events will have those duplicates ignored.\nServer errors will return a 500 response code and may contain an error message in the body."
  },
  {
    "title": "Event Model",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/data-events/event-model/",
    "html": "Event Model\nEvent Object\n{\n  \"event_name\" : \"invited-friend\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"342311\"\n}\n\n// Sufficient to send just the event name\nIntercom('trackEvent', 'invited-friend');\n\n# create an event as a hash\nevent = {\n  :event_name => \"invited-friend\",\n  :email => current_user.email,\n  :created_at => 1391691571\n}\nintercom.events.create event\n\n<?php\n$event = array(\n  \"event_name\" => \"invited-friend\",\n  \"created_at\" => 1391691571,\n  \"user_id\" => \"314159\"\n);\n$intercom->events->create($event);\n?>\n\nEvent event = new Event()\n  .setEventName(\"invited-friend\")\n  .setUserID(\"1314159\");\n  .setCreatedAt(currentTimeMillis()/1000L);\n\nEvent.create(event);\n\nEvent Object\n\nAn Event Object describes the event and contains the following fields\n\nAttribute\tRequired\tDescription\nevent_name\tyes\tThe name of the event that occurred. This is presented to your App's admins when filtering and creating segments - a good event name is typically a past tense 'verb-noun' combination, to improve readability, for example updated-plan.\ncreated_at\tyes\tThe time the event occurred as a UTC Unix timestamp\nuser_id\tyes if no email\tYour identifier for the user.\nid\tyes if no email or user_id.\tYour identifier for a lead or a user.\nemail\tyes if no user_id\tAn email address for your user. An email should only be used where your application uses email to uniquely identify users\nmetadata\tno\toptional metadata about the event.\n\nThe event_name field is processed as follows -\n\nNames are treated as case insensitive - 'Completed-Order' and 'completed-order' will be considered the same event for your application.\nPeriods (.) and dollars ($) in event names are replaced with hyphens. e.g., 'completed.order' will be stored as 'completed-order'.\n\nTo avoid confusion we recommend submitting lower case event names that do not contain periods or dollars!\n\nMetadata Object\n\nSending an event with metadata\n\n$ curl https://api.intercom.io/events \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Content-Type: application/json\" -d'\n{\n  \"event_name\" : \"invited-friend\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"314159\",\n  \"metadata\": {\n     \"invitee_email\": \"pi@example.org\",\n     \"invite_code\": \"ADDAFRIEND\"\n  }\n}'\n\nvar metadata = {\n  invitee_email: 'pi@example.org',\n  invite_code: 'ADDAFRIEND'\n};\nIntercom('trackEvent', 'invited-friend', metadata);\n\nmetadata = {\n  :invitee_email => 'pi@example.org',\n  :invite_code => 'ADDAFRIEND'\n}\nintercom.events.create {\n  :event_name => \"invited-friend\",\n  :email => current_user.email,\n  :created_at => 1391691571,\n  :metadata => metadata\n}\n\n<?php\n$metadata = array(\n  \"invitee_email\" => \"pi@example.org\",\n  \"invite_code\" => \"ADDAFRIEND\"\n);\n$intercom->events->create(array(\n  \"event_name\" => \"invited-friend\",\n  \"created_at\" => 1391691571,\n  \"user_id\" => \"314159\",\n  \"metadata\" => $metadata\n));\n?>\n\nEvent event = new Event()\n  .setEventName(\"invited-friend\")\n  .setUserID(\"314159\")\n  .putMetadata(\"invite_mail\", \"pi@example.org\")\n  .putMetadata(\"invite_code\", \"ADDAFRIEND\")\n  .putMetadata(\"found_date\", currentTimeMillis()/1000L);\n\nEvent.create(event);\n\n\nMetadata can be used to submit an event with extra key value data. Each event can contain up to ten metadata key values.\n\nSome use cases for event metadata are -\n\nLinking an event back to a page in your website.\nDescribing before and after values for a subscription plan change.\nSending contextual information about an online order, a booking.\n\nYou can now trigger messages to your users based on event and event metadata and also include the metadata in the messages. For more information on how this works, learn more about event based messaging\n\nSee the section 'Metadata Types' for more information on the kinds of metadata you can send."
  },
  {
    "title": "List Events",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/data-events/list-user-events/",
    "html": "List Events\n\nPlease note that you can only 'list' events that are less than 90 days old. Event counts and summaries will still include your events older than 90 days but you cannot 'list' these events individually if they are older than 90 days\n\nList all customer events\ncurlcurlrubyphpjava\n$ curl 'https://api.intercom.io/events?type=user&user_id=314159' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"event.list\\\",\\n  \\\"events\\\": [\\n      {\\n        \\\"event_name\\\" : \\\"ordered-item\\\",\\n        \\\"created_at\\\": 1391691571,\\n        \\\"user_id\\\" : \\\"314159\\\"\\n      },\\n      {\\n        \\\"event_name\\\" : \\\"invited-friend\\\",\\n        \\\"created_at\\\": 1389913941,\\n        \\\"user_id\\\" : \\\"314159\\\",\\n        \\\"metadata\\\": {\\n         \\\"invitee_email\\\": \\\"pi@example.org\\\",\\n         \\\"invite_code\\\": \\\"ADDAFRIEND\\\"\\n         }\\n      },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/events?type=user&intercom_user_id=55a3b&before=144474756550\\\"\\n  }\\n}\\n\\n# NB: Full event objects are returned\n\n\nThe events belonging to a customer can be listed by sending a GET request to https://api.intercom.io/events with a user or lead identifier along with a type parameter. The identifier parameter can be one of user_id, email or intercom_user_id. The type parameter value must be user.\n\nhttps://api.intercom.io/events?type=user&user_id={user_id}\nhttps://api.intercom.io/events?type=user&email={email}\nhttps://api.intercom.io/events?type=user&intercom_user_id={id} (this call can be used to list leads)\n\nThe email parameter value should be url encoded when sending.\n\nYou can optionally define the result page size as well with the per_page parameter.\n\nRequest Parameters\nParameter\tRequired\tDescription\ntype\tyes\tThe value must be user\nuser_id\tno\tThe user id you have defined for the user\nemail\tno\tThe email you have defined for the user\nintercom_user_id\tno\tThe Intercom defined id for the user\nper_page\tno\tHow many results to return per page defaults to 50.\nsummary\tno\tBoolean value. When set to true, event counts are returned grouped by event name.\nReturns\n\nA pageable list of events. The event list contains a pages object that indicates if more events exist for the customer via the next field, whose value is a URL that can be used to fetch the next page. If the next field is not present, that indicates there are no further events for the user. Clients should note that the parameters in the returned link are not assured to be the same as those sent in the request.\n\nThe event list is sorted by the created_at field and ordered descending, most recently created first.\n\nAs well as the fields that were supplied when the event was posted to Intercom (see Event model for details) the event payload will also contain an id field that uniquely identifies the event and may optionally contain an intercom_user_id containing the Intercom defined id representing the user.\n\nYou can use the API to get counts of users, leads and companies filtered by certain criteria.\n\nCounts are a good way to periodically obtain data for the purposes of tracking rates of change in user and company data."
  },
  {
    "title": "Data Events",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/data-events/events/",
    "html": "Data Events\n\nEvents are how you can submit user activity to Intercom. Once you're sending Intercom event data, you can filter your user base with those events and create Auto Messages to send whenever an event occurs. Every event is associated with an event name, the time it happened, the user that caused the event, and optionally some extra metadata. Events record the count, first and last occurrence of an event.\n\nEvents are different to Custom Attributes in that events are information on what Users did and when they did it, whereas Custom Attributes represent the User's current state as seen in their profile. For example, the first time they subscribed to a paid plan, or the most recent time they changed their plan would be represented by events, whereas a User Attribute would be used to record their current plan.\n\nBecause Events are used for filtering and messaging, and event names are used directly in Intercom by your App's Admins we recommend sending high-level activity about your users that you would like to message on, rather than raw clickstream or user interface actions. For example an order action is a good candidate for an Event, versus all the clicks and actions that were taken to get to that point. We also recommend sending event names that combine a past tense verb and nouns, such as 'created-project'.\n\nThe Events API varies slightly from the rest of the APIs as follows -\n\nYou can submit events using JavaScript using the trackEvent method.\nWhen there's an error or errors, a list structure is returned instead of a single error."
  },
  {
    "title": "Event Metadata Types",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/data-events/event-metadata-types/",
    "html": "Event Metadata Types\nEvent Metadata Types\n$ curl https://api.intercom.io/events \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Content-Type: application/json\" -d'\n{\n  \"event_name\" : \"placed-order\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"314159\",\n  \"metadata\": {\n    \"order_date\": 1392036272,\n    \"stripe_invoice\": \"inv_3434343434\",\n    \"order_number\": {\n      \"value\":\"3434-3434\",\n      \"url\": \"https://example.org/orders/3434-3434\"\n    },\n    \"price\": {\n      \"currency\":\"usd\",\n      \"amount\": 2999\n    }\n  }\n}'\n\nvar more_metadata = {\n  order_date: 1392036272,\n  stripe_invoice: 'inv_3434343434',\n  order_number: {\n    value: \"3434-3434\",\n    url: 'https://example.org/orders/3434-3434'\n  },\n  price: {\n    currency: 'usd',\n    amount: 2999\n  }\n};\nIntercom('trackEvent', 'placed-order', more_metadata);\n\nmore_metadata = {\n  :order_date => Time.now.to_i,\n  :stripe_invoice => 'inv_3434343434',\n  :order_number => {\n    :value => '3434-3434',\n    :url => 'https://example.org/orders/3434-3434'\n  },\n  price: {\n    :currency => 'usd',\n    :amount => 2999\n  }\n}\nintercom.events.create({\n  :event_name => \"placed-order\",\n  :email => current_user.email,\n  :created_at => 1391691571,\n  :metadata => more_metadata\n})\n\n<?php\n$metadata = ([\n    \"order_date\" => time(),\n    \"stripe_invoice\" => \"inv_3434343434\",\n    \"order_number\" => ([\n        \"value\" => \"3434-3434\",\n        \"url\" => \"https://example.org/orders/3434-3434\"]),\n        \"price\" => ([\n            \"currency\" => \"usd\",\n            \"amount\" => 2999])\n]);\n\n$intercom->events->create([\n    \"event_name\" => \"placed-order\",\n    \"created_at\" => 1500907515,\n    \"user_id\" => \"20413\",\n    \"metadata\" => $metadata\n]);\n?>\n\nMap<String,Object> order = Maps.newHashMap();\norder.put(\"value\", \"3434-3434\");\norder.put(\"url\", \"https://example.org/orders/3434-3434\");\n\nMap<String,Object> price = Maps.newHashMap();\nprice.put(\"currency\", \"usd\");\nprice.put(\"amount\", 2999);\n\nMap<String,Object> meta = Maps.newHashMap();\nmeta.put(\"order_date\", currentTimeMillis()/1000L);\nmeta.put(\"stripe_invoice\", \"inv_3434343434\");\nmeta.put(\"price\", price);\nmeta.put(\"order_number\", order);\n\nEvent event = new Event()\n  .setEventName(\"placed-order\")\n  .setUserID(\"314159\")\n  .setMetadata(meta);\n\nEvent.create(event);\n\n# The metadata key values in the example\n# are treated as follows-\n#\n# - order_date: a Date\n#    (key ends with '_date').\n#\n# - stripe_invoice: The identifier of the Stripe invoice\n#     (has a 'stripe_invoice' key)\n#\n# - order_number: Rich Link\n#     (contains 'url' and 'value')\n#\n# - price: Amount in US Dollars\n#     (contains 'amount' and 'currency')\n\n\nMetadata Objects support a few simple types that Intercom can present on your behalf -\n\nType\tDescription\tExample\nString\tThe value is a JSON String\t\"source\":\"desktop\"\nNumber\tThe value is a JSON Number\t\"load\": 3.67\nDate\tThe key ends with the String _date and the value is a Unix timestamp, assumed to be in the UTC timezone.\t\"contact_date\": 1392036272\nLink\tThe value is a HTTP or HTTPS URI.\t\"article\": \"https://example.org/ab1de.html\"\nRich Link\tThe value is a JSON object that contains url and value keys.\t\"article\": {\"url\": \"https://example.org/ab1de.html\", \"value\":\"the dude abides\"}\nStripe Data\tThe key is one of - 'stripe_customer', 'stripe_invoice', 'stripe_charge'. The value is a Stripe identifier.\t\"stripe_customer\": \"cus_42424242424\"\nMonetary Amount\tThe value is a JSON object that contains amount and currency keys. The amount key is a positive integer representing the amount in cents. The price in the example to the right denotes €349.99.\t\"price\": {\"amount\": 34999, \"currency\": \"eur\"}\nAPI Responses\nSuccessful responses to submitted events return 202 Accepted with an empty body.\nUnauthorised access will be rejected with a 401 Unauthorized or 403 Forbidden response code.\nEvents sent about users that cannot be found will return a 404 Not Found.\nEvent lists containing duplicate events will have those duplicates ignored.\nServer errors will return a 500 response code and may contain an error message in the body."
  },
  {
    "title": "List Leads",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/leads/list-leads/",
    "html": "List Leads\nExample Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/contacts \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\\n\\n\\n\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"contact.list\\\",\\n  \\\"total_count\\\": 105,\\n  \\\"contacts\\\": [\\n    {\\n      \\\"type\\\": \\\"contact\\\",\\n      \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n       ...\\n     },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/contacts?per_page=50&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 3\\n  }\\n}\\n\\n# NB: Full Contact objects are returned\n\n\nYou can fetch a list of all leads. The lead list is sorted by the created_at field and by default is ordered descending, most recently created first. Apart from sorting, the same parameters for the User list apply here."
  },
  {
    "title": "Leads",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/leads/leads/",
    "html": "Leads\n\nLeads are useful for representing logged-out users of your application. The Leads resource provides methods to fetch, create, update and delete Leads within Intercom.\n\nLeads were previously known as 'Contacts'. Our object names and types continue to be referred to as 'contacts/contact'. We will migrate to 'Leads/Lead' models at a future date."
  },
  {
    "title": "Update Lead",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/leads/update-lead/",
    "html": "Update Lead\nExample Request\ncurlcurlrubyjavaphp\n$ curl https://api.intercom.io/contacts \\\\\\n-XPOST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n  \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n  \\\"phone\\\": \\\"123987456\\\",\\n  \\\"email\\\": \\\"obrien@truth.org\\\",\\n  \\\"name\\\": \\\"OBrien\\\",\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"monthly_spend\\\": 155.5,\\n    \\\"team_mates\\\": 9\\n  }\\n}'\n\nHTTP/1.1 200 OK\\n{\\n    \\\"type\\\": \\\"contact\\\",\\n    \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n    \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n    \\\"anonymous\\\": true,\\n    \\\"email\\\": \\\"obrien@truth.org\\\",\\n    \\\"phone\\\": \\\"00353875551234\\\",\\n    \\\"name\\\": \\\"OBrien\\\",\\n    \\\"pseudonym\\\": \\\"Lime Camel from Dublin\\\",\\n    \\\"avatar\\\": {\\n        \\\"type\\\": \\\"avatar\\\",\\n        \\\"image_url\\\": null\\n    },\\n    \\\"app_id\\\": \\\"ja43hiec\\\",\\n    \\\"companies\\\": {\\n        \\\"type\\\": \\\"company.list\\\",\\n        \\\"companies\\\": []\\n    },\\n    \\\"location_data\\\": {\\n        \\\"type\\\": \\\"location_data\\\",\\n        \\\"city_name\\\": \\\"Mukilteo\\\",\\n        \\\"continent_code\\\": \\\"NA\\\",\\n        \\\"country_name\\\": \\\"United States\\\",\\n        \\\"latitude\\\": null,\\n        \\\"longitude\\\": null,\\n        \\\"postal_code\\\": \\\"98275\\\",\\n        \\\"region_name\\\": \\\"Washington\\\",\\n        \\\"timezone\\\": \\\"America/Los_Angeles\\\",\\n        \\\"country_code\\\": \\\"USA\\\"\\n    },\\n    \\\"last_request_at\\\": 1477660267,\\n    \\\"last_seen_ip\\\": null,\\n    \\\"created_at\\\": 1477572283,\\n    \\\"remote_created_at\\\": null,\\n    \\\"signed_up_at\\\": null,\\n    \\\"updated_at\\\": 1480068674,\\n    \\\"session_count\\\": 0,\\n    \\\"social_profiles\\\": {\\n        \\\"type\\\": \\\"social_profile.list\\\",\\n        \\\"social_profiles\\\": []\\n    },\\n    \\\"unsubscribed_from_emails\\\": false,\\n    \\\"user_agent_data\\\": null,\\n    \\\"tags\\\": {\\n        \\\"type\\\": \\\"tag.list\\\",\\n        \\\"tags\\\": []\\n    },\\n    \\\"segments\\\": {\\n        \\\"type\\\": \\\"segment.list\\\",\\n        \\\"segments\\\": []\\n    },\\n    \\\"custom_attributes\\\": {\\n        \\\"paid_subscriber\\\": true,\\n        \\\"monthly_spend\\\": 155.5,\\n        \\\"team_mates\\\": 9\\n    }\\n}\\n# contact response\n\n\nSending a POST request to /contacts and passing identifiers (user_id or id) in the body will result in an update of an existing Lead.\n\nIt is not possible to uniquely identify a Lead for an update with an email address."
  },
  {
    "title": "List leads by Email",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/leads/list-by-email/",
    "html": "List leads by Email\nExample Request\ncurlcurlrubyjavaphp\n$ curl \\\\\\nhttps://api.intercom.io/contacts?email=obrien@truth.org \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\n{\\n    \\\"type\\\": \\\"contact.list\\\",\\n    \\\"pages\\\": {\\n        \\\"type\\\": \\\"pages\\\",\\n        \\\"next\\\": null,\\n        \\\"page\\\": 1,\\n        \\\"per_page\\\": 50,\\n        \\\"total_pages\\\": 1\\n    },\\n    \\\"contacts\\\": [\\n        {\\n            \\\"type\\\": \\\"contact\\\",\\n            \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n            \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n            \\\"anonymous\\\": true,\\n            \\\"email\\\": \\\"obrien@truth.org\\\",\\n            \\\"phone\\\": \\\"00353875551234\\\",\\n            \\\"name\\\": \\\"O&#39;Brien\\\",\\n            \\\"pseudonym\\\": \\\"Lime Camel from Dublin\\\",\\n            \\\"avatar\\\": {\\n                \\\"type\\\": \\\"avatar\\\",\\n                \\\"image_url\\\": null\\n            },\\n            \\\"app_id\\\": \\\"ja43hiec\\\",\\n            \\\"companies\\\": {\\n                \\\"type\\\": \\\"company.list\\\",\\n                \\\"companies\\\": []\\n            },\\n            \\\"location_data\\\": {\\n                \\\"type\\\": \\\"location_data\\\",\\n                \\\"city_name\\\": \\\"Mukilteo\\\",\\n                \\\"continent_code\\\": \\\"NA\\\",\\n                \\\"country_name\\\": \\\"United States\\\",\\n                \\\"latitude\\\": 47.913,\\n                \\\"longitude\\\": -122.3042,\\n                \\\"postal_code\\\": \\\"98275\\\",\\n                \\\"region_name\\\": \\\"Washington\\\",\\n                \\\"timezone\\\": \\\"America/Los_Angeles\\\",\\n                \\\"country_code\\\": \\\"USA\\\"\\n            },\\n            \\\"last_request_at\\\": 1477660267,\\n            \\\"last_seen_ip\\\": \\\"1.2.3.4\\\",\\n            \\\"created_at\\\": 1477572283,\\n            \\\"remote_created_at\\\": null,\\n            \\\"signed_up_at\\\": null,\\n            \\\"updated_at\\\": 1480068674,\\n            \\\"session_count\\\": 0,\\n            \\\"social_profiles\\\": {\\n                \\\"type\\\": \\\"social_profile.list\\\",\\n                \\\"social_profiles\\\": []\\n            },\\n            \\\"unsubscribed_from_emails\\\": false,\\n            \\\"user_agent_data\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9\\\",\\n            \\\"tags\\\": {\\n                \\\"type\\\": \\\"tag.list\\\",\\n                \\\"tags\\\": []\\n            },\\n            \\\"segments\\\": {\\n                \\\"type\\\": \\\"segment.list\\\",\\n                \\\"segments\\\": []\\n            },\\n            \\\"custom_attributes\\\": {\\n                \\\"paid_subscriber\\\": true,\\n                \\\"monthly_spend\\\": 155.5,\\n                \\\"team_mates\\\": 9\\n            }\\n        }\\n    ],\\n    \\\"total_count\\\": 1,\\n    \\\"limited\\\": false\\n}\n\n\nYou can fetch all Leads with a given email by querying the leads resource with an email parameter."
  },
  {
    "title": "List Events",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/data-events/list-user-events/",
    "html": "List Events\n\nPlease note that you can only 'list' events that are less than 90 days old. Event counts and summaries will still include your events older than 90 days but you cannot 'list' these events individually if they are older than 90 days\n\nList all customer events\ncurlcurlrubyphpjava\n$ curl 'https://api.intercom.io/events?type=user&user_id=314159' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"event.list\\\",\\n  \\\"events\\\": [\\n      {\\n        \\\"event_name\\\" : \\\"ordered-item\\\",\\n        \\\"created_at\\\": 1391691571,\\n        \\\"user_id\\\" : \\\"314159\\\"\\n      },\\n      {\\n        \\\"event_name\\\" : \\\"invited-friend\\\",\\n        \\\"created_at\\\": 1389913941,\\n        \\\"user_id\\\" : \\\"314159\\\",\\n        \\\"metadata\\\": {\\n         \\\"invitee_email\\\": \\\"pi@example.org\\\",\\n         \\\"invite_code\\\": \\\"ADDAFRIEND\\\"\\n         }\\n      },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/events?type=user&intercom_user_id=55a3b&before=144474756550\\\"\\n  }\\n}\\n\\n# NB: Full event objects are returned\n\n\nThe events belonging to a customer can be listed by sending a GET request to https://api.intercom.io/events with a user or lead identifier along with a type parameter. The identifier parameter can be one of user_id, email or intercom_user_id. The type parameter value must be user.\n\nhttps://api.intercom.io/events?type=user&user_id={user_id}\nhttps://api.intercom.io/events?type=user&email={email}\nhttps://api.intercom.io/events?type=user&intercom_user_id={id} (this call can be used to list leads)\n\nThe email parameter value should be url encoded when sending.\n\nYou can optionally define the result page size as well with the per_page parameter.\n\nRequest Parameters\nParameter\tRequired\tDescription\ntype\tyes\tThe value must be user\nuser_id\tno\tThe user id you have defined for the user\nemail\tno\tThe email you have defined for the user\nintercom_user_id\tno\tThe Intercom defined id for the user\nper_page\tno\tHow many results to return per page defaults to 50.\nsummary\tno\tBoolean value. When set to true, event counts are returned grouped by event name.\nReturns\n\nA pageable list of events. The event list contains a pages object that indicates if more events exist for the customer via the next field, whose value is a URL that can be used to fetch the next page. If the next field is not present, that indicates there are no further events for the user. Clients should note that the parameters in the returned link are not assured to be the same as those sent in the request.\n\nThe event list is sorted by the created_at field and ordered descending, most recently created first.\n\nAs well as the fields that were supplied when the event was posted to Intercom (see Event model for details) the event payload will also contain an id field that uniquely identifies the event and may optionally contain an intercom_user_id containing the Intercom defined id representing the user.\n\nYou can use the API to get counts of users, leads and companies filtered by certain criteria.\n\nCounts are a good way to periodically obtain data for the purposes of tracking rates of change in user and company data."
  },
  {
    "title": "Create Lead",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/leads/create-lead/",
    "html": "Create Lead\nExample Request\ncurlcurlrubyjavaphp\n$ curl https://api.intercom.io/contacts \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"phone\\\": \\\"123987456\\\",\\n  \\\"email\\\": \\\"winstonsmith@truth.org\\\",\\n  \\\"name\\\": \\\"Winston Smith\\\"\\n}'\\n\\n\n\nHTTP/1.1 200 OK\\n\\n# lead response\\n\\n{\\n    \\\"type\\\": \\\"contact\\\",\\n    \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n    \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n    \\\"anonymous\\\": true,\\n    \\\"email\\\": \\\"winstonsmith@truth.org\\\",\\n    \\\"phone\\\": \\\"00353875551234\\\",\\n    \\\"name\\\": \\\"Winston Smith\\\",\\n    \\\"pseudonym\\\": \\\"Lime Camel from Dublin\\\",\\n    \\\"avatar\\\": {\\n        \\\"type\\\": \\\"avatar\\\",\\n        \\\"image_url\\\": null\\n    },\\n    \\\"app_id\\\": \\\"ja43hiec\\\",\\n    \\\"companies\\\": {\\n        \\\"type\\\": \\\"company.list\\\",\\n        \\\"companies\\\": []\\n    },\\n    \\\"location_data\\\": {\\n        \\\"type\\\": \\\"location_data\\\",\\n        \\\"city_name\\\": \\\"Mukilteo\\\",\\n        \\\"continent_code\\\": \\\"NA\\\",\\n        \\\"country_name\\\": \\\"United States\\\",\\n        \\\"latitude\\\": 47.913,\\n        \\\"longitude\\\": -122.3042,\\n        \\\"postal_code\\\": \\\"98275\\\",\\n        \\\"region_name\\\": \\\"Washington\\\",\\n        \\\"timezone\\\": \\\"America/Los_Angeles\\\",\\n        \\\"country_code\\\": \\\"USA\\\"\\n    },\\n    \\\"last_request_at\\\": 1477660267,\\n    \\\"last_seen_ip\\\": \\\"1.2.3.4\\\",\\n    \\\"created_at\\\": 1477572283,\\n    \\\"remote_created_at\\\": null,\\n    \\\"signed_up_at\\\": null,\\n    \\\"updated_at\\\": 1480067287,\\n    \\\"session_count\\\": 0,\\n    \\\"social_profiles\\\": {\\n        \\\"type\\\": \\\"social_profile.list\\\",\\n        \\\"social_profiles\\\": []\\n    },\\n    \\\"unsubscribed_from_emails\\\": false,\\n    \\\"user_agent_data\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9\\\",\\n    \\\"tags\\\": {\\n        \\\"type\\\": \\\"tag.list\\\",\\n        \\\"tags\\\": []\\n    },\\n    \\\"utm_campaign\\\": null,\\n    \\\"utm_content\\\": null,\\n    \\\"utm_medium\\\": null,\\n    \\\"utm_source\\\": null,\\n    \\\"utm_term\\\": null,\\n    \\\"segments\\\": {\\n        \\\"type\\\": \\\"segment.list\\\",\\n        \\\"segments\\\": []\\n    },\\n    \\\"custom_attributes\\\": {\\n        \\\"paid_subscriber\\\": true,\\n        \\\"monthly_spend\\\": 155.5,\\n        \\\"team_mates\\\": 9\\n    }\\n}\n\n\nLeads can be created via a POST method to https://api.intercom.io/contacts, which accepts a JSON object describing the lead.\n\nNo identifying information is required to create a Lead, Intercom assigns a user_id to each new Lead. Indeed, it is not possible to assign these through the API - to work with self-assigned user_ids, use the Users resource.\n\nContrary to Users, signed_up_at and sessions are not available for Leads. Otherwise, attributes to update on a Lead are the same as for a User.\n\nNote that as with Users, user agent data is submitted as last_seen_user_agent."
  },
  {
    "title": "Leads Object",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/leads/leads-object/",
    "html": "Leads Object\nExample Lead Object (i.e. example JSON response)\nLead example object\n{\\n    \\\"anonymous\\\": true,\\n    \\\"app_id\\\": \\\"abc3wodw\\\",\\n    \\\"avatar\\\": {\\n        \\\"image_url\\\": \\\"https://secure.gravatar.com/avatar/af060c6?\\\",\\n        \\\"type\\\": \\\"avatar\\\"\\n    },\\n    \\\"companies\\\": {\\n        \\\"companies\\\": [],\\n        \\\"type\\\": \\\"company.list\\\"\\n    },\\n    \\\"created_at\\\": 1503488750,\\n    \\\"custom_attributes\\\": {},\\n    \\\"do_not_track\\\": null,\\n    \\\"email\\\": \\\"test@example.com\\\",\\n    \\\"has_hard_bounced\\\": false,\\n    \\\"id\\\": \\\"599d6aeeda883ed8ba7c2\\\",\\n    \\\"last_request_at\\\": 1503488749,\\n    \\\"last_seen_ip\\\": null,\\n    \\\"location_data\\\": {\\n        \\\"city_name\\\": \\\"Pretoria\\\",\\n        \\\"continent_code\\\": \\\"AF\\\",\\n        \\\"country_code\\\": \\\"ZAF\\\",\\n        \\\"country_name\\\": \\\"South Africa\\\",\\n        \\\"latitude\\\": null,\\n        \\\"longitude\\\": null,\\n        \\\"postal_code\\\": \\\"0118\\\",\\n        \\\"region_name\\\": \\\"Gauteng\\\",\\n        \\\"timezone\\\": \\\"Africa/Johannesburg\\\",\\n        \\\"type\\\": \\\"location_data\\\"\\n    },\\n    \\\"marked_email_as_spam\\\": false,\\n    \\\"name\\\": null,\\n    \\\"owner_id\\\": \\\"321452\\\",\\n    \\\"phone\\\": null,\\n    \\\"pseudonym\\\": \\\"Test from Pretoria\\\",\\n    \\\"referrer\\\": null,\\n    \\\"remote_created_at\\\": null,\\n    \\\"segments\\\": {\\n        \\\"segments\\\": [],\\n        \\\"type\\\": \\\"segment.list\\\"\\n    },\\n    \\\"session_count\\\": 0,\\n    \\\"signed_up_at\\\": null,\\n    \\\"social_profiles\\\": {\\n        \\\"social_profiles\\\": [\\n            {\\n                \\\"id\\\": \\\"123456\\\",\\n                \\\"name\\\": \\\"GooglePlus\\\",\\n                \\\"type\\\": \\\"social_profile\\\",\\n                \\\"url\\\": \\\"https://plus.google.com/123456\\\",\\n                \\\"username\\\": null\\n            }\\n        ],\\n        \\\"type\\\": \\\"social_profile.list\\\"\\n    },\\n    \\\"tags\\\": {\\n        \\\"tags\\\": [],\\n        \\\"type\\\": \\\"tag.list\\\"\\n    },\\n    \\\"type\\\": \\\"contact\\\",\\n    \\\"unsubscribed_from_emails\\\": false,\\n    \\\"updated_at\\\": 1520946390,\\n    \\\"user_agent_data\\\": null,\\n    \\\"user_id\\\": \\\"e477-55c-47d5-96d3-e45bf\\\",\\n    \\\"utm_campaign\\\": null,\\n    \\\"utm_content\\\": null,\\n    \\\"utm_medium\\\": null,\\n    \\\"utm_source\\\": null,\\n    \\\"utm_term\\\": null\\n}\n\n\nA lead object contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'contact'\nid\tstring\tThe Intercom defined id representing the Lead\ncreated_at\ttimestamp\tThe time the Lead was added to Intercom\nupdated_at\ttimestamp\tThe last time the Lead was updated\nuser_id\tstring\tAutomatically generated identifier for the Lead\nemail\tstring\tThe email you have defined for the Lead\nphone\tstring\tThe phone number you have defined for the lead\nname\tstring\tThe name of the Lead\ncustom_attributes\tobject\tThe custom attributes you have set on the Lead\nlast_request_at\ttimestamp\tThe time the Lead last recorded making a request\navatar\tobject\tAn avatar object for the Lead\nunsubscribed_from_emails\tboolean\tWhether the Lead is unsubscribed from emails\nlocation_data\tobject\tA Location Object relating to the Lead\nuser_agent_data\tnull\tThis will return null as of V1.1 in an effort to remove PII from our API.\nlast_seen_ip\tnull\tThis will return null as of V1.1 in an effort to remove PII from our API.\ncompanies\tlist\tA list of companies for the Lead\nsocial_profiles\tlist\tA list of social profiles associated with the Lead\nsegments\tlist\tThis will return an empty list of segments as part of our effort to deprecate this attribute on the lead model for performance and accuracy reasons.\ntags\tlist\tA list of tags associated with the Lead.\nreferrer\tstring\tThe URL of the page the lead was last on\nutm_source\tstring\tIdentifies which site sent the traffic\nutm_medium\tstring\tIdentifies what type of link was used\nutm_campaign\tstring\tIdentifies a specific product promotion or strategic campaign\nutm_term\tstring\tIdentifies search terms\nutm_content\tstring\tIdentifies what specifically was clicked to bring the user to the site\n\nInformation on social profile, avatar and location objects can be found under the Users documentation."
  },
  {
    "title": "View a Lead",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/leads/view-a-lead/",
    "html": "View a Lead\nExample ID Request\ncurlcurlrubyjavaphp\n$ curl \\\\\\nhttps://api.intercom.io/contacts/5811f6bbe6b4704ddfa84ac0 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\nor \\n\\n$ curl \\\\\\n-s https://api.intercom.io/contacts?user_id=77177570-cf5d-4f1a-bc75-75202af47d4f \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"contact\\\",\\n    \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n    \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n    \\\"anonymous\\\": true,\\n    \\\"email\\\": \\\"obrien@truth.org\\\",\\n    \\\"phone\\\": \\\"00353875551234\\\",\\n    \\\"name\\\": \\\"O&#39;Brien\\\",\\n    \\\"pseudonym\\\": \\\"Lime Camel from Dublin\\\",\\n  ...\\n}\\n# NB: Full Contact objects are returned\n\n\nLeads can be looked up individually via their id, or with a user_id parameter.\n\nUSER_ID FOR LEADS\n\nRemember that for leads the user_id will be automatically generated so it will look something like '8a88a590-e1c3-41e2-a502-e0649dbf721c'. (Note that this user_id is not retained when converting a lead to a user) For users the user_id is manually set so it will generally appear more like a regular number series e.g. '234'."
  },
  {
    "title": "Retrieve a team",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/teams/view-a-team/",
    "html": "Retrieve a team\nExample Request & Response\n$ curl https://api.intercom.io/teams/2744328 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"admin_ids\": [\n        646303,\n        814860\n    ],\n    \"id\": \"2744328\",\n    \"name\": \"the_a_team\",\n    \"type\": \"team\"\n}\n\n\nYou can fetch the details of a single team, containing an array of admins that belong to this team.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier of a given team.\nResponse\n\nThis will return a Team Object."
  },
  {
    "title": "Delete a Lead",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/leads/delete-a-lead/",
    "html": "Delete a Lead\nExample ID Delete Request\ncurlcurlrubyjavaphp\n$ curl \\\\\\nhttps://api.intercom.io/contacts/5811f6bbe6b4704ddfa84ac0 \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\\n\\n{\\n    \\\"type\\\": \\\"contact\\\",\\n    \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n    \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n    \\\"anonymous\\\": true,\\n    \\\"email\\\": \\\"obrien@truth.org\\\",\\n    \\\"phone\\\": \\\"00353875551234\\\",\\n    \\\"name\\\": \\\"O&#39;Brien\\\",\\n    \\\"pseudonym\\\": \\\"Lime Camel from Dublin\\\",\\n  ...\\n}\\n# NB: Full Contact objects are returned\n\n\nLeads can be deleted via their id, or with a user_id parameter."
  },
  {
    "title": "Scroll over all leads",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/leads/iterating-over-all-leads/",
    "html": "Scroll over all leads\n\nThe List Leads functionality does not work well for huge datasets, and can result in errors and performance problems when paging deeply. The Scroll API provides an efficient mechanism for iterating over all leads in a dataset.\n\nEach workspace can only have 1 scroll open at a time. You'll get an error message if you try to have more than one open per workspace.\nIf the scroll isn't used for 1 minute, it expires and calls with that scroll param will fail\nIf the end of the scroll is reached, \"contacts\" will be empty and the scroll parameter will expire\n# Send a GET request to get the first page of leads\n$ curl \\\n'https://api.intercom.io/contacts/scroll' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n# To get the next page use the scroll param returned in the response\n$ curl \\\n'https://api.intercom.io/contacts/scroll?scroll_param=562bc29f-ea55-4823-aaaf-f3faadceaa59' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"contact.list\",\n  \"contacts\": [\n    {\n      \"type\": \"contact\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ],\n  \"scroll_param\": \"25b649f7-4d33-4ef6-88f5-60e5b8244309\"\n}\n\n# You can use the scroll method to list all your users\nintercom.users.scroll.each { |lead| puts lead.name}\n# Alternatively you can use the scroll.next method to get 100 leads with each request\nresult = intercom.contacts.scroll.next\nresult.scroll_param\n=> \"0730e341-63ef-44da-ab9c-9113f886326d\"\nresult = intercom.contacts.scroll.next(\"0730e341-63ef-44da-ab9c-9113f886326d\");\n\nSCROLL PARAMETER\n\nYou can get the first page of leads by simply sending a GET request to the scroll endpoint. For subsequent requests you will need to use the scroll parameter from the response.\n\n❗️ Scroll network timeouts\n\nSince scroll is often used on large datasets network errors such as timeouts can be encountered. When this occurs you will need to restart your scroll query as it is not possible to continue from a specific point when using scroll.\n\nWhen this occurs you will see a HTTP 500 error with the following message:\n\"Request failed due to an internal network error. Please restart the scroll operation.\""
  },
  {
    "title": "List Leads",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/leads/list-leads/",
    "html": "List Leads\nExample Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/contacts \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\\n\\n\\n\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"contact.list\\\",\\n  \\\"total_count\\\": 105,\\n  \\\"contacts\\\": [\\n    {\\n      \\\"type\\\": \\\"contact\\\",\\n      \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n       ...\\n     },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/contacts?per_page=50&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 3\\n  }\\n}\\n\\n# NB: Full Contact objects are returned\n\n\nYou can fetch a list of all leads. The lead list is sorted by the created_at field and by default is ordered descending, most recently created first. Apart from sorting, the same parameters for the User list apply here."
  },
  {
    "title": "Create Lead",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/leads/create-lead/",
    "html": "Create Lead\nExample Request\ncurlcurlrubyjavaphp\n$ curl https://api.intercom.io/contacts \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"phone\\\": \\\"123987456\\\",\\n  \\\"email\\\": \\\"winstonsmith@truth.org\\\",\\n  \\\"name\\\": \\\"Winston Smith\\\"\\n}'\\n\\n\n\nHTTP/1.1 200 OK\\n\\n# lead response\\n\\n{\\n    \\\"type\\\": \\\"contact\\\",\\n    \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n    \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n    \\\"anonymous\\\": true,\\n    \\\"email\\\": \\\"winstonsmith@truth.org\\\",\\n    \\\"phone\\\": \\\"00353875551234\\\",\\n    \\\"name\\\": \\\"Winston Smith\\\",\\n    \\\"pseudonym\\\": \\\"Lime Camel from Dublin\\\",\\n    \\\"avatar\\\": {\\n        \\\"type\\\": \\\"avatar\\\",\\n        \\\"image_url\\\": null\\n    },\\n    \\\"app_id\\\": \\\"ja43hiec\\\",\\n    \\\"companies\\\": {\\n        \\\"type\\\": \\\"company.list\\\",\\n        \\\"companies\\\": []\\n    },\\n    \\\"location_data\\\": {\\n        \\\"type\\\": \\\"location_data\\\",\\n        \\\"city_name\\\": \\\"Mukilteo\\\",\\n        \\\"continent_code\\\": \\\"NA\\\",\\n        \\\"country_name\\\": \\\"United States\\\",\\n        \\\"latitude\\\": null,\\n        \\\"longitude\\\": null,\\n        \\\"postal_code\\\": \\\"98275\\\",\\n        \\\"region_name\\\": \\\"Washington\\\",\\n        \\\"timezone\\\": \\\"America/Los_Angeles\\\",\\n        \\\"country_code\\\": \\\"USA\\\"\\n    },\\n    \\\"last_request_at\\\": 1477660267,\\n    \\\"last_seen_ip\\\": null,\\n    \\\"created_at\\\": 1477572283,\\n    \\\"remote_created_at\\\": null,\\n    \\\"signed_up_at\\\": null,\\n    \\\"updated_at\\\": 1480067287,\\n    \\\"session_count\\\": 0,\\n    \\\"social_profiles\\\": {\\n        \\\"type\\\": \\\"social_profile.list\\\",\\n        \\\"social_profiles\\\": []\\n    },\\n    \\\"unsubscribed_from_emails\\\": false,\\n    \\\"user_agent_data\\\": null,\\n    \\\"tags\\\": {\\n        \\\"type\\\": \\\"tag.list\\\",\\n        \\\"tags\\\": []\\n    },\\n    \\\"utm_campaign\\\": null,\\n    \\\"utm_content\\\": null,\\n    \\\"utm_medium\\\": null,\\n    \\\"utm_source\\\": null,\\n    \\\"utm_term\\\": null,\\n    \\\"segments\\\": {\\n        \\\"type\\\": \\\"segment.list\\\",\\n        \\\"segments\\\": []\\n    },\\n    \\\"custom_attributes\\\": {\\n        \\\"paid_subscriber\\\": true,\\n        \\\"monthly_spend\\\": 155.5,\\n        \\\"team_mates\\\": 9\\n    }\\n}\n\n\nLeads can be created via a POST method to https://api.intercom.io/contacts, which accepts a JSON object describing the lead.\n\nNo identifying information is required to create a Lead, Intercom assigns a user_id to each new Lead. Indeed, it is not possible to assign these through the API - to work with self-assigned user_ids, use the Users resource.\n\nContrary to Users, signed_up_at and sessions are not available for Leads. Otherwise, attributes to update on a Lead are the same as for a User.\n\nNote that as with Users, user agent data is submitted as last_seen_user_agent."
  },
  {
    "title": "The visitor model",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/visitors/visitor-object/",
    "html": "The visitor model\n\nVisitors are useful for representing anonymous people that have not yet been identified. They usually represent website visitors. Visitors are not visible in Intercom platform.\nThe Visitors resource provides methods to fetch, update, convert and delete.\n\nVisitor Object\nAttribute\tType\tDescription\ntype\tString\tValue is 'visitor'.\nid\tString\tThe Intercom defined id representing the Visitor.\ncreated_at\tDate (UNIX timestamp)\tThe time the Visitor was added to Intercom.\nupdated_at\tDate (UNIX timestamp)\tThe last time the Visitor was updated.\nuser_id\tString\tAutomatically generated identifier for the Visitor.\nname\tString\tThe name of the Visitor.\ncustom_attributes\tObject\tThe custom attributes you have set on the Visitor.\nlast_request_at\tDate (UNIX timestamp)\tThe time the Lead last recorded making a request.\navatar\tObject\tAn avatar object for the Visitor.\nunsubscribed_from_emails\tBoolean\tWhether the Visitor is unsubscribed from emails.\nlocation_data\tObject\tA Location Object relating to the Visitor.\nsocial_profiles\tList\tA list of social profiles associated with the Visitor.\nsegments\tList\tA list of segments the Visitor.\ntags\tList\tA list of tags associated with the Visitor."
  },
  {
    "title": "Delete a Lead",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/leads/delete-a-lead/",
    "html": "Delete a Lead\nExample ID Delete Request\ncurlcurlrubyjavaphp\n$ curl \\\\\\nhttps://api.intercom.io/contacts/5811f6bbe6b4704ddfa84ac0 \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\\n\\n{\\n    \\\"type\\\": \\\"contact\\\",\\n    \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n    \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n    \\\"anonymous\\\": true,\\n    \\\"email\\\": \\\"obrien@truth.org\\\",\\n    \\\"phone\\\": \\\"00353875551234\\\",\\n    \\\"name\\\": \\\"O&#39;Brien\\\",\\n    \\\"pseudonym\\\": \\\"Lime Camel from Dublin\\\",\\n  ...\\n}\\n# NB: Full Contact objects are returned\n\n\nLeads can be deleted via their id, or with a user_id parameter."
  },
  {
    "title": "Scroll over all leads",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/leads/iterating-over-all-leads/",
    "html": "Scroll over all leads\n\nThe List Leads functionality does not work well for huge datasets, and can result in errors and performance problems when paging deeply. The Scroll API provides an efficient mechanism for iterating over all leads in a dataset.\n\nEach workspace can only have 1 scroll open at a time. You'll get an error message if you try to have more than one open per workspace.\nIf the scroll isn't used for 1 minute, it expires and calls with that scroll param will fail\nIf the end of the scroll is reached, \"contacts\" will be empty and the scroll parameter will expire\n# Send a GET request to get the first page of leads\n$ curl \\\n'https://api.intercom.io/contacts/scroll' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n# To get the next page use the scroll param returned in the response\n$ curl \\\n'https://api.intercom.io/contacts/scroll?scroll_param=562bc29f-ea55-4823-aaaf-f3faadceaa59' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"contact.list\",\n  \"users\": [\n    {\n      \"type\": \"contact\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ],\n  \"scroll_param\": \"25b649f7-4d33-4ef6-88f5-60e5b8244309\"\n}\n\n# You can use the scroll method to list all your users\nintercom.users.scroll.each { |lead| puts lead.name}\n# Alternatively you can use the scroll.next method to get 100 leads with each request\nresult = intercom.contacts.scroll.next\nresult.scroll_param\n=> \"0730e341-63ef-44da-ab9c-9113f886326d\"\nresult = intercom.contacts.scroll.next(\"0730e341-63ef-44da-ab9c-9113f886326d\");\n\nSCROLL PARAMETER\n\nYou can get the first page of leads by simply sending a GET request to the scroll endpoint. For subsequent requests you will need to use the scroll parameter from the response.\n\n❗️ Scroll network timeouts\n\nSince scroll is often used on large datasets network errors such as timeouts can be encountered. When this occurs you will need to restart your scroll query as it is not possible to continue from a specific point when using scroll.\n\nWhen this occurs you will see a HTTP 500 error with the following message:\n\"Request failed due to an internal network error. Please restart the scroll operation.\""
  },
  {
    "title": "The team model",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/teams/teams-model/",
    "html": "The team model\nExample Team Object\n{\\n    \\\"type\\\": \\\"team\\\",\\n    \\\"id\\\": \\\"814865\\\",\\n    \\\"name\\\": \\\"Example Team\\\",\\n    \\\"admin_ids\\\": [\\n        493881\\n    ]\\n}\n\n\nTeams are groups of admins in Intercom.\n\nTeam Object\nKey\tType\tDescription\ntype\tstring\tValue is team.\nid\tstring\tThe id of the team\nname\tstring\tThe name of the team\nadmin_ids\tlist\tThe list of admin id's that are a part of the team"
  },
  {
    "title": "Submitting Events",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/data-events/submitting-events/",
    "html": "Submitting Events\nSubmit an Event\n$ curl https://api.intercom.io/events \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Content-Type: application/json\" -d'\n{\n  \"event_name\" : \"invited-friend\",\n  \"created_at\": 1391691571,\n  \"user_id\" : \"314159\"\n}'\n\nHTTP/1.1 202 Accepted\n\nIntercom('trackEvent', 'invited-friend');\n\nintercom.events.create(event_name: \"invited-friend\", email: user.email, created_at: 1391691571)\n\n<?php\n$intercom->events->create([\n    \"event_name\" => \"php-test\",\n    \"created_at\" => 1500907513,\n    \"user_id\" => \"1276\"\n]);\n?>\n\nEvent event = new Event()\n  .setEventName(\"invited-friend\")\n  .setCreatedAt(1234L)\n  .setUserID(\"314159\");\n\nEvent.create(event);\n\n\nYou will need an Access Token that has write permissions to send Events. Once you have a key you can submit events via POST to the Events resource, which is located at https://api.intercom.io/events, or you can send events using one of the client libraries. When working with the HTTP API directly a client should send the event with a Content-Type of application/json.\n\nWhen using the JavaScript API, adding the code to your app makes the Events API available. Once added, you can submit an event using the trackEvent method. This will associate the event with the Lead or currently logged-in user or logged-out visitor/lead and send it to Intercom. The final parameter is a map that can be used to send optional metadata about the event.\n\nWith the Ruby client you pass a hash describing the event to Intercom::Event.create, or call the track_user method directly on the current user object (e.g. user.track_event).\n\nLEAD EVENTS\n\nWhen submitting events for Leads, you will need to specify the Lead's id.\n\nHTTP API Responses\nSuccessful responses to submitted events return 202 Accepted with an empty body.\nUnauthorised access will be rejected with a 401 Unauthorized or 403 Forbidden response code.\nEvents sent about users that cannot be found will return a 404 Not Found.\nServer errors will return a 500 response code and may contain an error message in the body."
  },
  {
    "title": "Update Lead",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/leads/update-lead/",
    "html": "Update Lead\nExample Request\ncurlcurlrubyjavaphp\n$ curl https://api.intercom.io/contacts \\\\\\n-XPOST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n  \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n  \\\"phone\\\": \\\"123987456\\\",\\n  \\\"email\\\": \\\"obrien@truth.org\\\",\\n  \\\"name\\\": \\\"OBrien\\\",\\n  \\\"last_seen_user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9\\\",\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"monthly_spend\\\": 155.5,\\n    \\\"team_mates\\\": 9\\n  }\\n}'\n\nHTTP/1.1 200 OK\\n{\\n    \\\"type\\\": \\\"contact\\\",\\n    \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n    \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n    \\\"anonymous\\\": true,\\n    \\\"email\\\": \\\"obrien@truth.org\\\",\\n    \\\"phone\\\": \\\"00353875551234\\\",\\n    \\\"name\\\": \\\"OBrien\\\",\\n    \\\"pseudonym\\\": \\\"Lime Camel from Dublin\\\",\\n    \\\"avatar\\\": {\\n        \\\"type\\\": \\\"avatar\\\",\\n        \\\"image_url\\\": null\\n    },\\n    \\\"app_id\\\": \\\"ja43hiec\\\",\\n    \\\"companies\\\": {\\n        \\\"type\\\": \\\"company.list\\\",\\n        \\\"companies\\\": []\\n    },\\n    \\\"location_data\\\": {\\n        \\\"type\\\": \\\"location_data\\\",\\n        \\\"city_name\\\": \\\"Mukilteo\\\",\\n        \\\"continent_code\\\": \\\"NA\\\",\\n        \\\"country_name\\\": \\\"United States\\\",\\n        \\\"latitude\\\": 47.913,\\n        \\\"longitude\\\": -122.3042,\\n        \\\"postal_code\\\": \\\"98275\\\",\\n        \\\"region_name\\\": \\\"Washington\\\",\\n        \\\"timezone\\\": \\\"America/Los_Angeles\\\",\\n        \\\"country_code\\\": \\\"USA\\\"\\n    },\\n    \\\"last_request_at\\\": 1477660267,\\n    \\\"last_seen_ip\\\": null,\\n    \\\"created_at\\\": 1477572283,\\n    \\\"remote_created_at\\\": null,\\n    \\\"signed_up_at\\\": null,\\n    \\\"updated_at\\\": 1480068674,\\n    \\\"session_count\\\": 0,\\n    \\\"social_profiles\\\": {\\n        \\\"type\\\": \\\"social_profile.list\\\",\\n        \\\"social_profiles\\\": []\\n    },\\n    \\\"unsubscribed_from_emails\\\": false,\\n    \\\"user_agent_data\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9\\\",\\n    \\\"tags\\\": {\\n        \\\"type\\\": \\\"tag.list\\\",\\n        \\\"tags\\\": []\\n    },\\n    \\\"segments\\\": {\\n        \\\"type\\\": \\\"segment.list\\\",\\n        \\\"segments\\\": []\\n    },\\n    \\\"custom_attributes\\\": {\\n        \\\"paid_subscriber\\\": true,\\n        \\\"monthly_spend\\\": 155.5,\\n        \\\"team_mates\\\": 9\\n    }\\n}\\n# contact response\n\n\nSending a POST request to /contacts and passing identifiers (user_id or id) in the body will result in an update of an existing Lead.\n\nIt is not possible to uniquely identify a Lead for an update with an email address."
  },
  {
    "title": "Retrieve a visitor",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/visitors/view-a-visitor/",
    "html": "Retrieve a visitor\nExample ID Request\n$ curl \\\n-s https://api.intercom.io/visitors/<id> \\   \n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nor \n\n$ curl \\\n-s https://api.intercom.io/visitors?user_id=16e690c0-485a-4e87-ae98-a326e788a4f7 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"visitor\",\n  \"id\": \"573479f784c5acde6a000575\",\n  \"user_id\": \"16e690c0-485a-4e87-ae98-a326e788a4f7\",\n  \"email\": \"winstonsmith@truth.org\",\n  \"name\": \"Winston Smith\",\n  ...\n}\n# NB: Full Visitor objects are returned\n\nvisitor = intercom.visitors.find(:id => \"530370b477ad7120001d\")\nvisitor = intercom.visitors.find(:user_id => \"8a88a590-e1c3-41e2-a502-e0649dbf721c\")\n\n\nYou can fetch the details of a single visitor.\n\nRequest Path Parameters\nParameter\tRequired?\tDescription\nid\tOne of\tId provided by Intercom.\n?user_id=\tOne of\tTo get the visitor user_id from the browser you can use the Intercom JS SDK following method : Intercom('getVisitorId').\nResponse\n\nThis will return a Visitor Model."
  },
  {
    "title": "Event Metadata Types",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/data-events/event-metadata-types/",
    "html": "Event Metadata Types\nEvent Metadata Types\n$ curl https://api.intercom.io/events \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Content-Type: application/json\" -d'\n{\n  \"event_name\" : \"placed-order\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"314159\",\n  \"metadata\": {\n    \"order_date\": 1392036272,\n    \"stripe_invoice\": \"inv_3434343434\",\n    \"order_number\": {\n      \"value\":\"3434-3434\",\n      \"url\": \"https://example.org/orders/3434-3434\"\n    },\n    \"price\": {\n      \"currency\":\"usd\",\n      \"amount\": 2999\n    }\n  }\n}'\n\nvar more_metadata = {\n  order_date: 1392036272,\n  stripe_invoice: 'inv_3434343434',\n  order_number: {\n    value: \"3434-3434\",\n    url: 'https://example.org/orders/3434-3434'\n  },\n  price: {\n    currency: 'usd',\n    amount: 2999\n  }\n};\nIntercom('trackEvent', 'placed-order', more_metadata);\n\nmore_metadata = {\n  :order_date => Time.now.to_i,\n  :stripe_invoice => 'inv_3434343434',\n  :order_number => {\n    :value => '3434-3434',\n    :url => 'https://example.org/orders/3434-3434'\n  },\n  price: {\n    :currency => 'usd',\n    :amount => 2999\n  }\n}\nintercom.events.create({\n  :event_name => \"placed-order\",\n  :email => current_user.email,\n  :created_at => 1391691571,\n  :metadata => more_metadata\n})\n\n<?php\n$metadata = ([\n    \"order_date\" => time(),\n    \"stripe_invoice\" => \"inv_3434343434\",\n    \"order_number\" => ([\n        \"value\" => \"3434-3434\",\n        \"url\" => \"https://example.org/orders/3434-3434\"]),\n        \"price\" => ([\n            \"currency\" => \"usd\",\n            \"amount\" => 2999])\n]);\n\n$intercom->events->create([\n    \"event_name\" => \"placed-order\",\n    \"created_at\" => 1500907515,\n    \"user_id\" => \"20413\",\n    \"metadata\" => $metadata\n]);\n?>\n\nMap<String,Object> order = Maps.newHashMap();\norder.put(\"value\", \"3434-3434\");\norder.put(\"url\", \"https://example.org/orders/3434-3434\");\n\nMap<String,Object> price = Maps.newHashMap();\nprice.put(\"currency\", \"usd\");\nprice.put(\"amount\", 2999);\n\nMap<String,Object> meta = Maps.newHashMap();\nmeta.put(\"order_date\", currentTimeMillis()/1000L);\nmeta.put(\"stripe_invoice\", \"inv_3434343434\");\nmeta.put(\"price\", price);\nmeta.put(\"order_number\", order);\n\nEvent event = new Event()\n  .setEventName(\"placed-order\")\n  .setUserID(\"314159\")\n  .setMetadata(meta);\n\nEvent.create(event);\n\n# The metadata key values in the example\n# are treated as follows-\n#\n# - order_date: a Date\n#    (key ends with '_date').\n#\n# - stripe_invoice: The identifier of the Stripe invoice\n#     (has a 'stripe_invoice' key)\n#\n# - order_number: Rich Link\n#     (contains 'url' and 'value')\n#\n# - price: Amount in US Dollars\n#     (contains 'amount' and 'currency')\n\n\nMetadata Objects support a few simple types that Intercom can present on your behalf -\n\nType\tDescription\tExample\nString\tThe value is a JSON String\t\"source\":\"desktop\"\nNumber\tThe value is a JSON Number\t\"load\": 3.67\nDate\tThe key ends with the String _date and the value is a Unix timestamp, assumed to be in the UTC timezone.\t\"contact_date\": 1392036272\nLink\tThe value is a HTTP or HTTPS URI.\t\"article\": \"https://example.org/ab1de.html\"\nRich Link\tThe value is a JSON object that contains url and value keys.\t\"article\": {\"url\": \"https://example.org/ab1de.html\", \"value\":\"the dude abides\"}\nStripe Data\tThe key is one of - 'stripe_customer', 'stripe_invoice', 'stripe_charge'. The value is a Stripe identifier.\t\"stripe_customer\": \"cus_42424242424\"\nMonetary Amount\tThe value is a JSON object that contains amount and currency keys. The amount key is a positive integer representing the amount in cents. The price in the example to the right denotes €349.99.\t\"price\": {\"amount\": 34999, \"currency\": \"eur\"}\nAPI Responses\nSuccessful responses to submitted events return 202 Accepted with an empty body.\nUnauthorised access will be rejected with a 401 Unauthorized or 403 Forbidden response code.\nEvents sent about users that cannot be found will return a 404 Not Found.\nEvent lists containing duplicate events will have those duplicates ignored.\nServer errors will return a 500 response code and may contain an error message in the body."
  },
  {
    "title": "Stored Data",
    "url": "https://developers.intercom.com/docs/references/1.1/canvas-kit/responseobjects/stored-data/",
    "html": "Stored Data\n\nA canvas object may optionally contain the stored_data object, which is a JSON hash where you can add data you want to persist through multiple cycles.\n\nFor example, a teammate may interact with multiple configure cycles when adding an app. You can use stored_data to pass data through each of these cycles until you need it at the end."
  },
  {
    "title": "Webhook Topics",
    "url": "https://developers.intercom.com/docs/references/1.3/webhooks/webhook-models/",
    "html": "Webhook Topics\n\nThe following topics are available and you can be notified when an action relating to that topic occurs. You just need to tell us where to send the notification. The 'Item Type' column shows the API type that will be sent as the data of the notification.\n\nTopic\tItem Type\tDescription\nconversation.user.created\tConversation\tSubscribe to user/lead initiated conversations\nconversation.user.replied\tConversation\tSubscribe to contact user/lead conversation replies\nconversation.admin.replied\tConversation\tSubscribe to admin conversation replies\nconversation.admin.single.created\tConversation\tSubscribe to admin initiated 1:1 conversations\nconversation.admin.assigned\tConversation\tSubscribe to admin conversation assignments\nconversation.admin.noted\tConversation\tSubscribe to admin conversation notes\nconversation.admin.closed\tConversation\tSubscribe to admin conversation closes\nconversation.admin.opened\tConversation\tSubscribe to admin conversation opens\nconversation.admin.snoozed\tConversation\tSubscribe to admin conversation snoozes\nconversation.admin.unsnoozed\tConversation\tSubscribe to admin conversation unsnoozes\nconversation_part.tag.created\tConversation\tSubscribe to conversation parts being tagged\nconversation.deleted\tConversation\tSubscribe to conversation deleted\nuser.created\tUser\tSubscribe to user creations\nuser.deleted\tUser\tSubscribe to user deletions\nuser.unsubscribed\tUser\tSubscribe to user unsubscriptions from email\nuser.email.updated\tUser\tSubscribe to user email address being updated\nuser.tag.created\tUserTag\tSubscribe to users being tagged\nuser.tag.deleted\tUserTag\tSubscribe to users being untagged\ncontact.created\tLead\tSubscribe to lead creations\ncontact.signed_up\tLead\tSubscribe to leads converting to users\ncontact.added_email\tLead\tSubscribe to emails being added to leads\ncontact.tag.created\tContactTag\tSubscribe to leads being tagged\ncontact.tag.deleted\tContactTag\tSubscribe to leads being untagged\nvisitor.signed_up\tVisitor\tSubscribe to visitors converting to users\ncompany.created\tCompany\tSubscribe to company creations\nevent.created\tEvent\tSubscribe to events\nping\tPing\tSent when a post to the subscription's ping resource is received, or periodically by Intercom. Ping is always subscribed to.\nWebhooks and Permissions\n\nEach webhook topic is associated with one or more permission scopes. If you would like to setup a webhook for a particular topic then you will need to select the appropriate permission scope to be able to request a notification for that topic.\n\n🚧 Multiple permissions\n\nSome topic are associated with multiple permissions. In these cases you don't need to select all of these permissions to subscribe to that topic.\n\nWebhook topic\tWorks with permissions\tGroups\nconversation_part.tag.created\tRead conversations\tConversation data\nconversation.admin.assigned\tRead conversations\tConversation data\nconversation.admin.closed\tRead conversations\tConversation data\nconversation.admin.noted\tRead conversations\tConversation data\nconversation.admin.opened\tRead conversations\tConversation data\nconversation.admin.replied\tRead conversations\tConversation data\nconversation.admin.single. created\tRead conversations\tConversation data\nconversation.admin.snoozed\tRead conversations\tConversation data\nconversation.admin.unsnoozed\tRead conversations\tConversation data\nconversation.user.created\tRead conversations\tConversation data\nconversation.user.replied\tRead conversations\tConversation data\nconversation.deleted\tRead conversations\tConversation data\ncontact.added_email\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.email.updated\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.unsubscribed\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nvisitor.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nevent.created\tRead events\tCustomer event data\ncompany.created\tRead users and companies, Read one user and one company\tCompany data\nWebhook Notification Object\n\nA notification object contains the following fields:\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'notification_event'\nid\tstring\tThe Intercom defined id representing the notification.\nself\tstring\tThe Intercom defined URL for the subscription. Optional.\ncreated_at\ttimestamp\tThe timestamp the notification was created.\ntopic\tstring\tCorresponds to a topic.\ndelivery_attempts\tnumber\tThe number of times this notification has been attempted.\nfirst_sent_at\ttimestamp\tThe first time the delivery was attempted.\ndata\tobject\tA container for the data associated with the notification.\ndata.item\tobject\tThe data associated with the notification, which will have a 'type' field.\n\nThe contents of data.item object will be defined according to its type field. In the example to the right, the type value of company indicates a company object.\n\n{\n  \"type\": \"notification_event\",\n  \"topic\": \"company.created\",\n  \"id\": \"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b3\",\n  \"app_id\" : \"a86dr8yl\",\n  \"created_at\": 1392731331,\n  \"delivery_attempts\": 1,\n  \"first_sent_at\": 1392731392,\n  \"data\": {\n    \"item\": {\n      \"type\": \"company\",\n      \"id\": \"531ee472cce572a6ec000006\",\n      \"name\": \"Blue Sun\",\n      \"company_id\": \"6\",\n      \"remote_created_at\": 1394531169,\n      \"created_at\": 1394533506,\n      \"updated_at\": 1396874658,\n      \"custom_attributes\": {\n      }\n    }\n  }\n}\n\nHandling Webhook Notifications\n\nWhen you setup a subscription you will receive notifications on your chosen topics. How you handle those notifications, i.e. the HTTP status code returned, will determine the subsequent state of that subscription.\n\nResponse Code\tDescription\tAction\n2xx\tSuccess\tThe webhook was successfully delivered.\n410\tGone\tWhen a 410 is received, we assume the resource is no longer available. We will disable the subscription and no more notifications will be sent.\n429\tToo many requests\tWhen a 429 is received, all notifications from that subscription will be throttled. Depending on the rate of delivery, this delay can be between 1 minute to 2 hours. If 429s continue and any notification is delayed for > 2 hours then we will drop that notification.\n4xx (excl. 429) 5xx\tClient or service errors\tWe will retry after 1 minute for all other errors. If the 2nd retry fails then we mark the notification delivery as failed.\n\n❗️ Timeout\n\nYou have 5 seconds to respond to a notification. If you don't send a response inside that time, the notification is treated as failed and will be retried only once after 1 minute.\n\nSigned Notifications\n\nEach webhook notification is signed by Intercom via an X-Hub-Signature header. We do this so that you can verify the notification came from Intercom by decoding the signature.\n\nThe value of this X-Hub-Signature header is computed by creating a signature using the body of the JSON request and your app's client_secret value, which you can find on the Basic Info page of your app.\n\nThe signature is the hexadecimal (40-byte) representation of a SHA-1 signature computed using the HMAC algorithm as defined in RFC2104.\n\nThe X-Hub-Signature header value starts with the string sha1= followed by the signature.\n\nPOST https://example.org/hooks\nUser-Agent: intercom-parrot-service-client/1.0\nX-Hub-Signature: sha1=21ff2e149e0fdcac6f947740f6177f6434bda921\nAccept: application/json\nContent-Type: application/json\n\n{\n  \"type\" : \"notification_event\",\n  \"id\" : \"notif_78c122d0-23ba-11e4-9464-79b01267cc2e\",\n  \"topic\" : \"user.created\",\n  \"app_id\" : \"a86dr8yl\",\n  \"data\" : {\n    \"type\" : \"notification_event_data\",\n    \"item\" : {\n      \"type\" : \"user\",\n      \"id\" : \"530370b477ad7120001d\",\n      \"user_id\" : \"25\",\n      \"name\" : \"Hoban Washburne\",\n      \"unsubscribed_from_emails\" : false,\n      \"custom_attributes\" : {}\n    }\n  }\n}\n\nContact Tag Model for Webhooks\n\nThe Contact Tag model is only returned for webhooks. It is not used with the Lead (i.e. contact) or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"contact_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"1287\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"contact\" : {\n      \"type\": \"contact\",\n      \"id\": \"1287ab1287fefe\",\n      \"user_id\": \"12\"\n  }\n}\n\n\nA contact tag is composed from the existing contact and tag JSON and is sent when contacts are tagged and untagged via the contact.tag.created and contact.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'contact_tag'.\ncreated_at\ttimestamp\tThe time the contact tag object was created.\ntag\tTag\tThe tag that was added or removed.\ncontact\tcontact\tThe contact that was tagged or untagged.\nUser Tag Model for Webhooks\n\nThe User Tag model is only returned for webhooks. It is not used with the User or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"user_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"17513\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"user\" : {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n      \"user_id\": \"25\"\n  }\n}\n\n\nA user tag is composed from the existing user and tag JSON and is sent when users are tagged and untagged via the user.tag.created and user.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user_tag'.\ncreated_at\ttimestamp\tThe time the user tag object was created.\ntag\tTag\tThe tag that was added or removed.\nuser\tUser\tThe user that was tagged or untagged."
  },
  {
    "title": "Update a visitor",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/visitors/update-a-visitor/",
    "html": "Update a visitor\nExample Request\n$ curl https://api.intercom.io/visitors \\\n-X PUT \\\n-H 'Authorization:Bearer <Your access token>'  \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"user_id\": \"124\",\n  \"name\": \"Winston Smith\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 9\n  }\n}'\n\nHTTP/1.1 200 OK\n\n{\n  \"user_id\": \"124\",\n  \"name\": \"Winston Smith\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 9\n  }\n  \n  # and the rest of the Visitor model\n}'\n\nvisitor.name = \"Winston Smith\"\nvisitor.custom_attribute[:foo] = 'bar'\nintercom.visitors.save(visitor)\n\n\nSending a PUT request to /visitors and passing identifiers (user_id or id) in the body will result in an update of an existing Visitor.\n\nRequest Body Parameters\nArgument\tType\tRequired?\tDescription\nid\tString\tOne of\tA unique identified for the visitor which is given by Intercom.\nuser_id\tString\tOne of\tA unique identified for the visitor which is given by you.\nname\tString\tNo\tThe visitor's name.\ncustom_attributes\tObject\tNo\tThe custom attributes which are set for the visitor.\nResponse\n\nThis will return a Visitor Model of the visitor you just updated."
  },
  {
    "title": "Event de-duplication",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/data-events/event-de-duplication/",
    "html": "Event de-duplication\n\nThe API may detect and ignore duplicate events. Each event is uniquely identified as a combination of the following data - the App identifier, the User identifier, the Event name and the Event created time. As a result, it is strongly recommended to send a second granularity Unix timestamp in the created_at field.\n\nDuplicated events are responded to using the normal 202 Accepted code - an error is not thrown, however repeat requests will be counted against any rate limit that is in place."
  },
  {
    "title": "Convert a Lead",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/leads/convert-a-lead/",
    "html": "Convert a Lead\nExample Lead Convert Request\ncurlcurlrubyphpjava\n$ curl \\\\\\nhttps://api.intercom.io/contacts/convert \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"contact\\\": {\\n    \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  },\\n  \\\"user\\\": {\\n    \\\"email\\\": \\\"winstonsmith@truth.org\\\"\\n  }\\n}'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"email\\\": \\\"winstonsmith@truth.org\\\"\\n}\\n# NB: Full User objects are returned\n\n\nLeads can be converted to Users. This is done by passing both Lead and User identifiers. If the User exists, then the Lead will be merged into it, the Lead deleted and the User returned. If the User does not exist, the Lead will be converted to a User, with the User identifiers replacing it's Lead identifiers.\n\nIdentifiers (id, user_id, email) from Leads are never added onto Users with a merge.\n\nA Lead's email, but not user_id is retained when converting a Lead to a new User."
  },
  {
    "title": "Delete a visitor",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/visitors/delete-a-visitor/",
    "html": "Delete a visitor\nExample Request & Response\ncurlcurl\n$ curl \\\\\\nhttps://api.intercom.io/visitors/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"visitor\\\",\\n  \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n  \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  ...\\n}\\n\n\n\nYou can delete a single visitor.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the visitor which is given by Intercom.\nResponse\n\nThis will return a Visitor Model of the visitor you just deleted."
  },
  {
    "title": "Convert a Lead",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/leads/convert-a-lead/",
    "html": "Convert a Lead\nExample Lead Convert Request\ncurlcurlrubyphpjava\n$ curl \\\\\\nhttps://api.intercom.io/contacts/convert \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"contact\\\": {\\n    \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  },\\n  \\\"user\\\": {\\n    \\\"email\\\": \\\"winstonsmith@truth.org\\\"\\n  }\\n}'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"email\\\": \\\"winstonsmith@truth.org\\\"\\n}\\n# NB: Full User objects are returned\n\n\nLeads can be converted to Users. This is done by passing both Lead and User identifiers. If the User exists, then the Lead will be merged into it, the Lead deleted and the User returned. If the User does not exist, the Lead will be converted to a User, with the User identifiers replacing it's Lead identifiers.\n\nIdentifiers (id, user_id, email) from Leads are never added onto Users with a merge.\n\nA Lead's email, but not user_id is retained when converting a Lead to a new User."
  },
  {
    "title": "Divider",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/presentationcomponents/divider/",
    "html": "Divider\n\nA divider component is used to separate components with a line.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdivider\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "Current Canvas",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/requestobjects/current-canvas/",
    "html": "Current Canvas\nDescription\n\nThe current_canvas object mirrors the same format as the Canvas Object. This will be the canvas that was most recently showing before the request was sent.\n\nExample Object\n{\n  current_canvas: {\n    content: { \n      components : [\n        {\n          \"type\": \"button\",\n          \"id\": \"button-1\",\n          \"label\": \"This canvas showed before I was clicked\",\n          \"action\": {\n            \"type\": \"submit\"\n          }\n        }\n      ]\n    }\n  }\n}\n"
  },
  {
    "title": "Data-Table",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/presentationcomponents/data-table/",
    "html": "Data-Table\n\nA data-table component is used for rendering a table of key-value pairs. For Messenger, text will wrap around on multiple lines. For Inbox and Frame (ie. Configure) views, we will truncate and use tooltips on hover if the text overflows.\n\nData-Table Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdata-table\tYes\tThe type of component you are rendering.\nitems\tArray (See Below)\tYes\tThe items that will be rendered in the data-table.\nField-Value Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tfield-value\tYes\tThe type of component you are rendering.\nfield\tAny string\tYes\tThe text of the key in your key-value pair.\nvalue\tAny string\tYes\tThe text of the value in your key-value pair.\nPreview"
  },
  {
    "title": "Context",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/requestobjects/context/",
    "html": "Context\nDescription\n\nThe context object provides additional details on where the app has been added (or is currently being used), what page the app is being used on, and information on the Messenger settings. This is in order for you give a fully customised experience based on the customers use case.\n\nIf the location is conversation then you will also be given a conversation_id. If you need to use details about the conversation, then you have to use the conversation_id to make a call to our Conversations API and retrieve the conversation object.\n\nAttributes\nKey\tType\tLocation\tDescription\nconversation_id\tinteger\tConversation\tThe id of the conversation where the app is added or being used.\nlocation\tstring\tConversation, Messenger Home, Message, Operator\tWhere the app is added or the action took place. Can be either 'conversation', 'home', 'message', or 'operator'.\nlocale\tstring\tConversation, Messenger Home, Message, Operator\tThe default end-user language of the Messenger. Use to localise Messenger App content.\nmessenger_action_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers action colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nmessenger_background_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers background colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nreferrer\tstring\tConversation, Messenger Home, Message, Operator\tThe current page URL where the app is being used.\nExample Objects\n{\n  conversation_id: 4294967297,\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n\n{\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n"
  },
  {
    "title": "Card Creation Options",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/requestobjects/card-creation-options/",
    "html": "Card Creation Options\nDescription\n\nThe card_creation_options object is a JSON hash containing key-value pairs. These key-value pairs either represent:\n\nData that was sent within the results object in response to the Configure request.\nData that was sent within the card_creation_options object in response to the Submit request.\nExample Object\ncard_creation_options: { \"key\": \"value\" } //Can be more than one pair\n"
  },
  {
    "title": "Contact",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/requestobjects/contact/",
    "html": "Contact\nDescription\n\nThe contact object provides information on the Intercom contact. You can see more about this on the Contacts Model page of our API Reference.\n\nExample Object\n{\n  \"type\": \"contact\",\n  \"id\": \"5ba682d23d7cf92bef87bfd4\",\n  \"workspace_id\": \"ecahpwf5\",\n  \"external_id\": \"25\",\n  \"role\": \"user\",\n  \"email\": \"wash@serenity.io\",\n  \"phone\": \"+1123456789\",\n  \"name\": \"Hoban Washburn\",\n  \"avatar\": \"https://example.org/128Wash.jpg\",\n  \"owner_id\": 127,\n  \"social_profiles\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"social_profile\",\n        \"name\": \"Twitter\",\n        \"url\": \"http://twitter.com/th1sland\"\n      }\n    ]\n  },\n  \"has_hard_bounced\": false,\n  \"marked_email_as_spam\": false,\n  \"unsubscribed_from_emails\": false,\n  \"created_at\": 1571672154,\n  \"updated_at\": 1571672158,\n  \"signed_up_at\": 1571069751,\n  \"last_seen_at\": 1571069751,\n  \"last_replied_at\": 1571672158,\n  \"last_contacted_at\": 1571672158,\n  \"last_email_opened_at\": 1571673478,\n  \"last_email_clicked_at\": 1571676789,\n  \"language_override\": null,\n  \"browser\": \"chrome\",\n  \"browser_version\": \"77.0.3865.90\",\n  \"browser_language\": \"en\",\n  \"os\": \"OS X 10.14.6\",\n  \"location\": {\n    \"type\": \"location\",\n    \"country\": \"Ireland\",\n    \"region\": \"Dublin\",\n    \"city\": \"Dublin\"\n  },\n  \"android_app_name\": null,\n  \"android_app_version\": null,\n  \"android_device\": null,\n  \"android_os_version\": null,\n  \"android_sdk_version\": null,\n  \"android_last_seen_at\": null,\n  \"ios_app_name\": null,\n  \"ios_app_version\": null,\n  \"ios_device\": null,\n  \"ios_os_version\": null,\n  \"ios_sdk_version\": null,\n  \"ios_last_seen_at\": null,\n  \"custom_attributes\": {\n    \"paid_subscriber\": true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 1\n  },\n  \"tags\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"tag\",\n        \"id\": \"2\",\n        \"url\": \"/tags/2\"\n      },\n      {\n        \"type\": \"tag\",\n        \"id\": \"4\",\n        \"url\": \"/tags/4\"\n      },\n      {\n        \"type\": \"tag\",\n        \"id\": \"5\",\n        \"url\": \"/tags/5\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/tags\",\n    \"total_count\": 3,\n    \"has_more\": false\n  },\n  \"notes\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"note\",\n        \"id\": \"20114858\",\n        \"url\": \"/notes/20114858\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/notes\",\n    \"total_count\": 1,\n    \"has_more\": false\n  },\n  \"companies\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"company\",\n        \"id\": \"5ba686093d7cf93552a3dc99\",\n        \"url\": \"/companies/5ba686093d7cf93552a3dc99\"\n        \n      },\n      {\n        \"type\": \"company\",\n        \"id\": \"5cee64a03d7cf90c51b36f19\",\n        \"url\": \"/companies/5cee64a03d7cf90c51b36f19\"\n      },\n      {\n        \"type\": \"company\",\n        \"id\": \"5d7668883d7cf944dbc5c791\",\n        \"url\": \"/companies/5d7668883d7cf944dbc5c791\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/companies\",\n    \"total_count\": 3,\n    \"has_more\": false\n  }\n}\n"
  },
  {
    "title": "Convert a Lead",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/leads/convert-a-lead/",
    "html": "Convert a Lead\nExample Lead Convert Request\ncurlcurlrubyphpjava\n$ curl \\\\\\nhttps://api.intercom.io/contacts/convert \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"contact\\\": {\\n    \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  },\\n  \\\"user\\\": {\\n    \\\"email\\\": \\\"winstonsmith@truth.org\\\"\\n  }\\n}'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"email\\\": \\\"winstonsmith@truth.org\\\"\\n}\\n# NB: Full User objects are returned\n\n\nLeads can be converted to Users. This is done by passing both Lead and User identifiers. If the User exists, then the Lead will be merged into it, the Lead deleted and the User returned. If the User does not exist, the Lead will be converted to a User, with the User identifiers replacing it's Lead identifiers.\n\nIdentifiers (id, user_id, email) from Leads are never added onto Users with a merge.\n\nA Lead's email, but not user_id is retained when converting a Lead to a new User."
  },
  {
    "title": "View User Event Summaries",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/data-events/view-user-events-summaries/",
    "html": "View User Event Summaries\nGet summary count of user events\ncurlcurl\n$ curl 'https://api.intercom.io/events?type=user&user_id=314159&summary=true' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\n{\\n    \\\"type\\\": \\\"event.summary\\\",\\n    \\\"email\\\": \\\"test-user@example.com\\\",\\n    \\\"intercom_user_id\\\": \\\"56e1e5d4a40df1cc57000101\\\",\\n    \\\"user_id\\\": \\\"314159\\\",\\n    \\\"events\\\": [\\n        {\\n            \\\"name\\\": \\\"updated-profile\\\",\\n            \\\"first\\\": \\\"2016-03-18T10:05:15.000Z\\\",\\n            \\\"last\\\": \\\"2016-03-18T13:28:38.000Z\\\",\\n            \\\"count\\\": 5,\\n            \\\"description\\\": null\\n        },    \\n        {\\n            \\\"name\\\": \\\"purchased-item\\\",\\n            \\\"first\\\": \\\"2016-09-30T11:39:06.000Z\\\",\\n            \\\"last\\\": \\\"2016-09-30T11:39:06.000Z\\\",\\n            \\\"count\\\": 4,\\n            \\\"description\\\": null\\n        },\\n        {\\n            \\\"name\\\": \\\"subscribed-for-demo\\\",\\n            \\\"first\\\": \\\"2016-11-24T12:26:34.000Z\\\",\\n            \\\"last\\\": \\\"2016-11-24T12:26:34.000Z\\\",\\n            \\\"count\\\": 2,\\n            \\\"description\\\": null\\n        }\\n    ]\\n}\n\n\nIf you simply want to get a count of the number of different events associated with a user then you can use the 'summary=true' parameter of the events endpoint. This means you do not receive the full list of all users events and just the counts of the different events per user."
  },
  {
    "title": "Text",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/presentationcomponents/text/",
    "html": "Text\n\nThe text component is used for rendering blocks of text. Links and bold font can be rendered through Markdown. There are different styles provided which edit the color, weight, and font size. These cannot be edited through Markdown.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttext\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\ntext\tAny stringMarkdown Links []()Markdown Bold **\tYes\tThe text that will be rendered.\nalign\tleft``center``right\tNo\tAligns the text. Default is left.\nstyle\theader``paragraph``muted``error\tNo\tStyles the text. Default is paragraph.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "Text",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/presentationcomponents/text/",
    "html": "Text\n\nThe text component is used for rendering blocks of text. Links and bold font can be rendered through Markdown. There are different styles provided which edit the color, weight, and font size. These cannot be edited through Markdown.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttext\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\ntext\tAny stringMarkdown Links []()Markdown Bold **\tYes\tThe text that will be rendered.\nalign\tleft``center``right\tNo\tAligns the text. Default is left.\nstyle\theader``paragraph``muted``error\tNo\tStyles the text. Default is paragraph.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "Convert a visitor",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/visitors/convert-a-visitor-to-a-user/",
    "html": "Convert a visitor\n\nYou can merge a Visitor to a Contact of role type lead or user.\n\nWHAT HAPPENS UPON A VISITOR BEING CONVERTED?\n\nIf the User exists, then the Visitor will be merged into it, the Visitor deleted and the User returned. If the User does not exist, the Visitor will be converted to a User, with the User identifiers replacing it's Visitor identifiers.\n\nRequest Body Parameters\nArgument\tType\tRequired?\tDescription\nvisitor\tObject\tYes\tThe unique identifiers to convert a single Visitor.\nuser\tObject\tYes\tThe unique identifiers retained after converting or merging.\ntype\tString\tYes\tRepresents the role of the Contact model. Accepts lead or user.\nVisitor object\nArgument\tType\tRequired?\tDescription\nid\tString\tOne of\tThe unique identifier for the contact which is given by Intercom.\nuser_id\tString\tOne of\tA unique identifier for the contact which is given to Intercom.\nemail\tString\tOne of\tThe visitor's email.\nUser object (a contact)\nArgument\tType\tRequired?\tDescription\nid\tString\tOne of\tThe unique identifier for the contact which is given by Intercom.\nuser_id\tString\tOne of\tA unique identifier for the contact which is given to Intercom, which will be represented as external_id.\nemail\tString\tNo\tThe contact's email, retained by default if one is present.\nExample Request & Response\ncurlcurl\n$ curl \\\\https://api.intercom.io/visitors/convert \\\\-X POST \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json' \\\\-H 'Content-Type: application/json' -d '{  \\\"visitor\\\": {    \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"  },  \\\"user\\\": {    \\\"email\\\": \\\"winstonsmith@truth.org\\\"  },  \\\"type\\\": \\\"user\\\"}'\n\n# NB: Full User objects are returned{  \\\"type\\\": \\\"lead\\\",  \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"}\n\nResponse\n\nThis will return a Contact model of the visitor you just converted or merged into."
  },
  {
    "title": "Results",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/responseobjects/results/",
    "html": "Results\nDescription\n\nThe results object should be sent when you want to end configuration of the app and trigger the Initialize request to be sent. You provide the key-value pairs of data you want access to and we will send these in the Initialize request within a card_creation_options object.\n\nExample Object\nresults: { \"key\": \"value\" } // Can be more than one pair\n"
  },
  {
    "title": "URL Action",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/actioncomponents/url-action/",
    "html": "URL Action\n\nA URL action opens a given link in a new browser tab.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\turl\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which will open in a new tab.\nExample Object\naction: {\n  \"type\": \"url\",\n  \"url\":  \"https://www.example.com\"\n}\n"
  },
  {
    "title": "Content",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/responseobjects/content/",
    "html": "Content\nDescription\n\nThe content object is where you specify the UI of your app. You provide us with a set of components in a components array that we then render.\n\nThe content object should usually be returned within the canvas object. If you're responding to a Live Canvas request however, then you should only respond with the content object.\n\nAttributes\nKey\tType\tDescription\ncomponents\tarray\tThe list of components to be rendered. See the components further in this reference.\nExample Object\n{\n  content: {\n    components: [\n      {\n        \"type\": \"text\",\n        \"id\": \"component-1\",\n        \"text\": \"This is the first component\",\n        \"align\": \"center\",\n        \"style\": \"header\"\n      },\n      {\n        \"type\": \"button\",\n        \"id\": \"component-2\",\n        \"label\": \"This is the second component\",\n        \"action\": {\n          \"type\": \"submit\"\n        }\n      }\n    ]\n  }\n}\n"
  },
  {
    "title": "Event",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/responseobjects/event/",
    "html": "Event\nDescription\n\nThe event object enables Intercom to know more about the actions that took place in your app. Currently, you can only tell us when an app's flow has been completed.\n\nAttributes\nKey\tType\tDescription\ntype\tstring\tWhat action took place. The only value currently accepted is completed.\nExample Object\nevent: { \"type\": \"completed\" } // Optional. Recorded by Intercom.\n"
  },
  {
    "title": "Event",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/responseobjects/event/",
    "html": "Event\nDescription\n\nThe event object enables Intercom to know more about the actions that took place in your app. Currently, you can only tell us when an app's flow has been completed.\n\nAttributes\nKey\tType\tDescription\ntype\tstring\tWhat action took place. The only value currently accepted is completed.\nExample Object\nevent: { \"type\": \"completed\" } // Optional. Recorded by Intercom.\n"
  },
  {
    "title": "Canvas",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/responseobjects/canvas/",
    "html": "Canvas\nDescription\n\nYou have to respond to the majority of requests with a canvas object. This will tell us what UI to show for your app.\n\nA canvas can either be static (meaning we send you the next request only when an action takes place) or live (meaning we send you the next request when someone views the app).\n\nA static canvas needs a Content Object which will contain the components to show.\nA live canvas needs a content_url which we we will make the Live Canvas requests to when the app is viewed. This is only possible for apps viewed or used in the Messenger.\nAttributes\nKey\tType\tCanvas Type\tDescription\ncontent\tobject\tStatic\tThe Content that will be shown as the UI of the app. Max Size is 64KB.\ncontent_url\tstring\tLive\tThe URL which we make Live Canvas requests to. You must respond to these with a Content Object. Max size is 64KB.\nstored_data\tobject\tStatic, Live\tOptional Stored Data that you want to be returned in the next sent request. Max Size is 64KB.\nExample Objects\n{\n  canvas: {\n    content: {\n      components: [\n        {\n          \"type\": \"text\",\n          \"text\": \"This is a text component.\"\n        }\n      ]\n    },\n    stored_data: { \"key\": \"value\" } //Can be more than one pair \n  }\n}\n\n{\n  canvas: {\n    content_url: \"https://messengerapp.com/get-content-here\",\n    stored_data: { \"key\": \"value\" } //Can be more than one pair \n  }\n}\n"
  },
  {
    "title": "Content",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/responseobjects/content/",
    "html": "Content\nDescription\n\nThe content object is where you specify the UI of your app. You provide us with a set of components in a components array that we then render.\n\nThe content object should usually be returned within the canvas object. If you're responding to a Live Canvas request however, then you should only respond with the content object.\n\nAttributes\nKey\tType\tDescription\ncomponents\tarray\tThe list of components to be rendered. See the components further in this reference.\nExample Object\n{\n  content: {\n    components: [\n      {\n        \"type\": \"text\",\n        \"id\": \"component-1\",\n        \"text\": \"This is the first component\",\n        \"align\": \"center\",\n        \"style\": \"header\"\n      },\n      {\n        \"type\": \"button\",\n        \"id\": \"component-2\",\n        \"label\": \"This is the second component\",\n        \"action\": {\n          \"type\": \"submit\"\n        }\n      }\n    ]\n  }\n}\n"
  },
  {
    "title": "User Segment/Tag Count Model",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/counts/user-tag-counts/",
    "html": "User Segment/Tag Count Model\n\nThe count of tags and segments includes archived tags and segments.\n\nUser Segment/Tag Count Object\n\nCount Object includes count for users and leads.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nuser\tobject\tContains a field called segment containing segment counts\nuser.segment\tarray\tContains a list of segment counts\nuser.tag\tarray\tContains a list of tag counts\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"tag\": [\n        {\n          \"Independent\": 3\n        }\n    ]\n  }\n}\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"segment\": [\n      {\n        \"Active\": 1\n      },\n      {\n        \"New\": 0\n      },\n      {\n        \"VIP\": 0\n      },\n      {\n        \"Slipping Away\": 0\n      },\n      {\n        \"segment 1\": 1\n      }\n    ]\n  }\n}\n\n# User Tag Count\n$ curl 'https://api.intercom.io/counts?type=user&count=tag' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# User Segment Count\n$ curl 'https://api.intercom.io/counts?type=user&count=segment' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# User Tag Count\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"tag\": [\n        {\n          \"Independent\": 3\n        }\n    ]\n  }\n}\n\n# User Segment Count\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"segment\": [\n      {\n        \"Active\": 1\n      },\n      {\n        \"New\": 0\n      },\n      {\n        \"VIP\": 0\n      },\n      {\n        \"Slipping Away\": 0\n      },\n      {\n        \"segment 1\": 1\n      }\n    ]\n  }\n}\n\nintercom.counts.for_type(type: 'user', count: 'tag')\nintercom.counts.for_type(type: 'user', count: 'segment')\n\n<?php\n// User Tag Count\n$counts = $intercom->counts->getCounts([\"type\" => \"user\", \"count\" => \"tag\"]);\nprint_r($counts);\n\n// Company Segment Count\n$counts = $intercom->counts->getCounts([\"type\" => \"user\", \"count\" => \"segment\"]);\n?>\n\n// User Tag Count\nfinal List<Counts.CountItem> tags = Counts.userTags();\nfor (Counts.CountItem tag : tags) {\n  out.println(tag.getName() + \": \" + tag.getValue());\n}\n\n// User Segment Count\nfinal List<Counts.CountItem> segments = Counts.userSegments();\nfor (Counts.CountItem seg : segments) {\n  out.println(seg.getName() + \": \" + seg.getValue());\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nUser Segment Count\tuser\tsegment\nUser Tag Count\tuser\ttag"
  },
  {
    "title": "Canvas",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/responseobjects/canvas/",
    "html": "Canvas\nDescription\n\nYou have to respond to the majority of requests with a canvas object. This will tell us what UI to show for your app.\n\nA canvas can either be static (meaning we send you the next request only when an action takes place) or live (meaning we send you the next request when someone views the app).\n\nA static canvas needs a Content Object which will contain the components to show.\nA live canvas needs a content_url which we we will make the Live Canvas requests to when the app is viewed. This is only possible for apps viewed or used in the Messenger.\nAttributes\nKey\tType\tCanvas Type\tDescription\ncontent\tobject\tStatic\tThe Content that will be shown as the UI of the app. Max Size is 64KB.\ncontent_url\tstring\tLive\tThe URL which we make Live Canvas requests to. You must respond to these with a Content Object. Max size is 64KB.\nstored_data\tobject\tStatic, Live\tOptional Stored Data that you want to be returned in the next sent request. Max Size is 64KB.\nExample Objects\n{\n  canvas: {\n    content: {\n      components: [\n        {\n          \"type\": \"text\",\n          \"text\": \"This is a text component.\"\n        }\n      ]\n    },\n    stored_data: { \"key\": \"value\" } //Can be more than one pair \n  }\n}\n\n{\n  canvas: {\n    content_url: \"https://messengerapp.com/get-content-here\",\n    stored_data: { \"key\": \"value\" } //Can be more than one pair \n  }\n}\n"
  },
  {
    "title": "Error Codes",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/errors/error-codes/",
    "html": "Error Codes\n\nThe API may send the following error codes. Other codes may be added in the future.\n\nField\tDescription\nserver_error\tGeneric server error\nclient_error\tGeneric client error\ntype_mismatch\tThe JSON value type is incorrect for the field\nparameter_not_found\tA required parameter was not supplied\nparameter_invalid\tA parameter's value is invalid\naction_forbidden\tThe action is not authorized\nconflict\tThere is existing data that clashes with the request data\napi_plan_restricted\tThe API is not available on this App's Plan\nrate_limit_exceeded\tThe rate limit for the App has been exceeded\nunsupported\tThe operation is not supported\ntoken_revoked\tThe token or API Key has been revoked\ntoken_blocked\tThe API Key or App has been blocked\ntoken_not_found\tThe token or API Key does not exist\ntoken_unauthorized\tThe token or API Key is not allowed to access the resource\ntoken_expired\tThe token is expired\nmissing_authorization\tNo authorization data was found on the request\nretry_after\tThe client should wait for a time before retrying the request\njob_closed\tThe client should start a new bulk job\nnot_restorable\tThis user was blocked and cannot be recreated\nteam_not_found\tThe team does not exist\nteam_unavailable\tThis team is deprecated so conversations cannot be assigned to it\nadmin_not_found\tThe admin does not exist"
  },
  {
    "title": "Stored Data",
    "url": "https://developers.intercom.com/docs/references/2.8/canvas-kit/responseobjects/stored-data/",
    "html": "Stored Data\nDescription\n\nA canvas object may optionally contain a stored_data object. This is where you can add key-value pairs of data that you want to be sent in whatever the next request is.\n\nFor example, the flow of your app might have multiple canvases with data being inputted on each one. You may want to have all this data available to use at the end of the flow for the final canvas. You can therefore put all this data in the stored_data object so it's sent in subsequent requests and is available at the end.\n\nExample Object\nstored_data: {\"key\": \"value\"} //Can be more than one pair\n"
  },
  {
    "title": "Event de-duplication",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/data-events/event-de-duplication/",
    "html": "Event de-duplication\n\nThe API may detect and ignore duplicate events. Each event is uniquely identified as a combination of the following data - the App identifier, the User identifier, the Event name, the Event created time and the Event metadata. As a result, it is strongly recommended to send a second granularity Unix timestamp in the created_at field.\n\nDuplicated events are responded to using the normal 202 Accepted code - an error is not thrown, however repeat requests will be counted against any rate limit that is in place."
  },
  {
    "title": "List Company Data Attributes",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/data-attributes/list-company-data-attributes/",
    "html": "List Company Data Attributes\nList Company attributes\n\nYou can fetch a list of all the company data attributes for your app by using https://api.intercom.io/data_attributes/company.\n\nList of your company data attributes\n\nReturns\n\nList of data attributes\n\n$ curl https://api.intercom.io/data_attributes/company \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n{\n    \"type\": \"data_attribute.list\",\n    \"data_attributes\": [\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"name\",\n            \"full_name\": \"name\",\n            \"label\": \"Company name\",\n            \"description\": \"The name of a company\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": true,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"company_id\",\n            \"full_name\": \"company_id\",\n            \"label\": \"Company ID\",\n            \"description\": \"A number identifying a company\",\n            \"data_type\": \"string\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"last_request_at\",\n            \"full_name\": \"last_request_at\",\n            \"label\": \"Company last seen\",\n            \"description\": \"The last day anyone from a company visited your site or app\",\n            \"data_type\": \"date\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"remote_created_at\",\n            \"full_name\": \"remote_created_at\",\n            \"label\": \"Company created at\",\n            \"description\": \"The day a company was added to Intercom\",\n            \"data_type\": \"date\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"user_count\",\n            \"full_name\": \"user_count\",\n            \"label\": \"People\",\n            \"description\": \"The number of people in a company\",\n            \"data_type\": \"integer\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"session_count\",\n            \"full_name\": \"session_count\",\n            \"label\": \"Company web sessions\",\n            \"description\": \"All visits from anyone in a company to your product's site or app\",\n            \"data_type\": \"integer\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"website\",\n            \"full_name\": \"website\",\n            \"label\": \"Company website\",\n            \"description\": \"The web address for the company's primary marketing site\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": true,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"subdomain\",\n            \"full_name\": \"custom_attributes.subdomain\",\n            \"label\": \"subdomain\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1500395363,\n            \"updated_at\": 1500395363\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"creation_source\",\n            \"full_name\": \"custom_attributes.creation_source\",\n            \"label\": \"creation_source\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1500477452,\n            \"updated_at\": 1500477452\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"paid_subscriber\",\n            \"full_name\": \"custom_attributes.paid_subscriber\",\n            \"label\": \"paid_subscriber\",\n            \"data_type\": \"boolean\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1511192754,\n            \"updated_at\": 1511192754\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"team_mates\",\n            \"full_name\": \"custom_attributes.team_mates\",\n            \"label\": \"team_mates\",\n            \"data_type\": \"integer\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1511192755,\n            \"updated_at\": 1511192755\n        }\n    ]\n}\n\n\nBy default a list of all unarchived data attributes is returned. You can include the following parameter to retrieve all the company data attributes for your app (i.e. including archived attributes)\n\nParameter\tType\tDescription\ninclude_archived\tboolean\tInclude archived attributes in the list. By default we return only non archived data attributes\nList of your company data attributes including archived\n$ curl https://api.intercom.io/data_attributes/company?include_archived=true \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n{\n    \"type\": \"data_attribute.list\",\n    \"data_attributes\": [\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"name\",\n            \"full_name\": \"name\",\n            \"label\": \"Company name\",\n            \"description\": \"The name of a company\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": true,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"company_id\",\n            \"full_name\": \"company_id\",\n            \"label\": \"Company ID\",\n            \"description\": \"A number identifying a company\",\n            \"data_type\": \"string\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"last_request_at\",\n            \"full_name\": \"last_request_at\",\n            \"label\": \"Company last seen\",\n            \"description\": \"The last day anyone from a company visited your site or app\",\n            \"data_type\": \"date\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"remote_created_at\",\n            \"full_name\": \"remote_created_at\",\n            \"label\": \"Company created at\",\n            \"description\": \"The day a company was added to Intercom\",\n            \"data_type\": \"date\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"user_count\",\n            \"full_name\": \"user_count\",\n            \"label\": \"People\",\n            \"description\": \"The number of people in a company\",\n            \"data_type\": \"integer\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"session_count\",\n            \"full_name\": \"session_count\",\n            \"label\": \"Company web sessions\",\n            \"description\": \"All visits from anyone in a company to your product's site or app\",\n            \"data_type\": \"integer\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"name\",\n            \"full_name\": \"plan.name\",\n            \"label\": \"Plan\",\n            \"description\": \"A specific plan or level within your product that companies have signed up to\",\n            \"data_type\": \"string\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"monthly_spend\",\n            \"full_name\": \"monthly_spend\",\n            \"label\": \"Monthly Spend\",\n            \"description\": \"The monthly revenue you receive from a company\",\n            \"data_type\": \"float\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"size\",\n            \"full_name\": \"size\",\n            \"label\": \"Company size\",\n            \"description\": \"The number of people employed in this company, expressed as a single number\",\n            \"data_type\": \"integer\",\n            \"api_writable\": true,\n            \"ui_writable\": true,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"industry\",\n            \"full_name\": \"industry\",\n            \"label\": \"Company industry\",\n            \"description\": \"The category or domain this company belongs to e.g. 'ecommerce' or 'SaaS'\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": true,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"website\",\n            \"full_name\": \"website\",\n            \"label\": \"Company website\",\n            \"description\": \"The web address for the company's primary marketing site\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": true,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"subdomain\",\n            \"full_name\": \"custom_attributes.subdomain\",\n            \"label\": \"subdomain\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1500395363,\n            \"updated_at\": 1500395363\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"creation_source\",\n            \"full_name\": \"custom_attributes.creation_source\",\n            \"label\": \"creation_source\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1500477452,\n            \"updated_at\": 1500477452\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"paid_subscriber\",\n            \"full_name\": \"custom_attributes.paid_subscriber\",\n            \"label\": \"paid_subscriber\",\n            \"data_type\": \"boolean\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1511192754,\n            \"updated_at\": 1511192754\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"team_mates\",\n            \"full_name\": \"custom_attributes.team_mates\",\n            \"label\": \"team_mates\",\n            \"data_type\": \"integer\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1511192755,\n            \"updated_at\": 1511192755\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"monthly_spend\",\n            \"full_name\": \"custom_attributes.monthly_spend\",\n            \"label\": \"monthly_spend\",\n            \"data_type\": \"integer\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": true,\n            \"created_at\": 1511192755,\n            \"updated_at\": 1511192755\n        }\n    ]\n}\n"
  },
  {
    "title": "List Customer Data Attributes",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/data-attributes/list-customer-data-attributes/",
    "html": "List Customer Data Attributes\nList customer attributes\n\nYou can fetch a list of data attributes belonging to customers by using https://api.intercom.io/data_attributes/customer. Customer attributes describe attributes belonging to users, leads and visitors. All 3 models have the same data attributes.\n\nReturns\n\nList of data attributes\n\nList of your customer data attributes\n\n$ curl https://api.intercom.io/data_attributes/customer \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n{\n  \"type\": \"data_attribute.list\",\n  \"data_attributes\": [\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"paid_subscriber\",\n      \"full_name\": \"custom_attributes.paid_subscriber\",\n      \"label\": \"paid_subscriber\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"options\": [\n        \"pick_value_1\",\n        \"pick_value_2\"\n      ],\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": true,\n      \"archived\": false,\n      \"admin_id\": \"1\",\n      \"created_at\": 1392734388,\n      \"updated_at\": 1392734388\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"cda2\",\n      \"full_name\": \"custom_attributes.cda2\",\n      \"label\": \"cda2\",\n      \"description\": \"\",\n      \"data_type\": \"integer\",\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": true,\n      \"archived\": false,\n      \"admin_id\": \"1\",\n      \"created_at\": 1392734388,\n      \"updated_at\": 1392734388\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"email\",\n      \"full_name\": \"email\",\n      \"label\": \"Email\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": false,\n      \"archived\": false\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"region_name\",\n      \"full_name\": \"location_data.region_name\",\n      \"label\": \"Region\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"api_writable\": false,\n      \"ui_writable\": true,\n      \"custom\": false,\n      \"archived\": false\n    }\n  ]\n}\n\n\nYou can also include the archived attributes by adding this parameter:\n\nParameter\tType\tDescription\ninclude_archived\tboolean\tInclude archived attributes in the list. By default we return only non archived data attributes\nList of your customer data attributes including archived\n$ curl https://api.intercom.io/data_attributes/customer?include_archived=true \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n{\n  \"type\": \"data_attribute.list\",\n  \"data_attributes\": [\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"paid_subscriber\",\n      \"full_name\": \"custom_attributes.paid_subscriber\",\n      \"label\": \"paid_subscriber\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"options\": [\n        \"pick_value_1\",\n        \"pick_value_2\"\n      ],\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": true,\n      \"archived\": false,\n      \"admin_id\": \"1\",\n      \"created_at\": 1392734388,\n      \"updated_at\": 1392734388\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"cda2\",\n      \"full_name\": \"custom_attributes.cda2\",\n      \"label\": \"cda2\",\n      \"description\": \"\",\n      \"data_type\": \"integer\",\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": true,\n      \"archived\": false,\n      \"admin_id\": \"1\",\n      \"created_at\": 1392734388,\n      \"updated_at\": 1392734388\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"email\",\n      \"full_name\": \"email\",\n      \"label\": \"Email\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": false,\n      \"archived\": false\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"region_name\",\n      \"full_name\": \"location_data.region_name\",\n      \"label\": \"Region\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"api_writable\": false,\n      \"ui_writable\": true,\n      \"custom\": false,\n      \"archived\": false\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"Department\",\n      \"full_name\": \"custom_attributes.foo\",\n      \"label\": \"Department\",\n      \"data_type\": \"string\",\n      \"api_writable\": true,\n      \"ui_writable\": false,\n      \"custom\": true,\n      \"archived\": true,\n      \"created_at\": 1500460535,\n      \"updated_at\": 1511274873\n    }\n  ]\n}\n"
  },
  {
    "title": "Convert a Lead",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/leads/convert-a-lead/",
    "html": "Convert a Lead\nExample Lead Convert Request\ncurlcurlrubyphpjava\n$ curl \\\\\\nhttps://api.intercom.io/contacts/convert \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"contact\\\": {\\n    \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  },\\n  \\\"user\\\": {\\n    \\\"email\\\": \\\"winstonsmith@truth.org\\\"\\n  }\\n}'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"email\\\": \\\"winstonsmith@truth.org\\\"\\n}\\n# NB: Full User objects are returned\n\n\nLeads can be converted to Users. This is done by passing both Lead and User identifiers. If the User exists, then the Lead will be merged into it, the Lead deleted and the User returned. If the User does not exist, the Lead will be converted to a User, with the User identifiers replacing it's Lead identifiers.\n\nIdentifiers (id, user_id, email) from Leads are never added onto Users with a merge.\n\nA Lead's email, but not user_id is retained when converting a Lead to a new User."
  },
  {
    "title": "Data Attributes",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/data-attributes/data-attributes/",
    "html": "Data Attributes\n\nData Attributes are a type of metadata used to describe your customer and company models. These include standard and custom attributes. In other words data attributes are properties that help to describe your customers and companies in more detail. Using the data attributes endpoint you can get the global list of attributes for your app as well as the metadata (i.e. datatype and format) associated with each attribute."
  },
  {
    "title": "View User Event Summaries",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/data-events/view-user-events-summaries/",
    "html": "View User Event Summaries\nGet summary count of user events\ncurlcurl\n$ curl 'https://api.intercom.io/events?type=user&user_id=314159&summary=true' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\n{\\n    \\\"type\\\": \\\"event.summary\\\",\\n    \\\"email\\\": \\\"test-user@example.com\\\",\\n    \\\"intercom_user_id\\\": \\\"56e1e5d4a40df1cc57000101\\\",\\n    \\\"user_id\\\": \\\"314159\\\",\\n    \\\"events\\\": [\\n        {\\n            \\\"name\\\": \\\"updated-profile\\\",\\n            \\\"first\\\": \\\"2016-03-18T10:05:15.000Z\\\",\\n            \\\"last\\\": \\\"2016-03-18T13:28:38.000Z\\\",\\n            \\\"count\\\": 5,\\n            \\\"description\\\": null\\n        },    \\n        {\\n            \\\"name\\\": \\\"purchased-item\\\",\\n            \\\"first\\\": \\\"2016-09-30T11:39:06.000Z\\\",\\n            \\\"last\\\": \\\"2016-09-30T11:39:06.000Z\\\",\\n            \\\"count\\\": 4,\\n            \\\"description\\\": null\\n        },\\n        {\\n            \\\"name\\\": \\\"subscribed-for-demo\\\",\\n            \\\"first\\\": \\\"2016-11-24T12:26:34.000Z\\\",\\n            \\\"last\\\": \\\"2016-11-24T12:26:34.000Z\\\",\\n            \\\"count\\\": 2,\\n            \\\"description\\\": null\\n        }\\n    ]\\n}\n\n\nIf you simply want to get a count of the number of different events associated with a user then you can use the 'summary=true' parameter of the events endpoint. This means you do not receive the full list of all users events and just the counts of the different events per user."
  },
  {
    "title": "Event de-duplication",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/data-events/event-de-duplication/",
    "html": "Event de-duplication\n\nThe API may detect and ignore duplicate events. Each event is uniquely identified as a combination of the following data - the App identifier, the User identifier, the Event name and the Event created time. As a result, it is strongly recommended to send a second granularity Unix timestamp in the created_at field.\n\nDuplicated events are responded to using the normal 202 Accepted code - an error is not thrown, however repeat requests will be counted against any rate limit that is in place."
  },
  {
    "title": "List all data events",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/data-events/list-user-events/",
    "html": "List all data events\n\nPlease note that you can only 'list' events that are less than 90 days old. Event counts and summaries will still include your events older than 90 days but you cannot 'list' these events individually if they are older than 90 days\n\nList all customer events\ncurlcurlrubyphpjava\n$ curl 'https://api.intercom.io/events?type=user&user_id=314159' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"event.list\\\",\\n  \\\"events\\\": [\\n      {\\n        \\\"event_name\\\" : \\\"ordered-item\\\",\\n        \\\"created_at\\\": 1391691571,\\n        \\\"user_id\\\" : \\\"314159\\\"\\n      },\\n      {\\n        \\\"event_name\\\" : \\\"invited-friend\\\",\\n        \\\"created_at\\\": 1389913941,\\n        \\\"user_id\\\" : \\\"314159\\\",\\n        \\\"metadata\\\": {\\n         \\\"invitee_email\\\": \\\"pi@example.org\\\",\\n         \\\"invite_code\\\": \\\"ADDAFRIEND\\\"\\n         }\\n      },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/events?type=user&intercom_user_id=55a3b&before=144474756550\\\"\\n  }\\n}\\n\\n# NB: Full event objects are returned\n\n\nThe events belonging to a customer can be listed by sending a GET request to https://api.intercom.io/events with a user or lead identifier along with a type parameter. The identifier parameter can be one of user_id, email or intercom_user_id. The type parameter value must be user.\n\nhttps://api.intercom.io/events?type=user&user_id={user_id}\nhttps://api.intercom.io/events?type=user&email={email}\nhttps://api.intercom.io/events?type=user&intercom_user_id={id} (this call can be used to list leads)\n\nThe email parameter value should be url encoded when sending.\n\nYou can optionally define the result page size as well with the per_page parameter.\n\nRequest Parameters\nParameter\tRequired\tDescription\ntype\tyes\tThe value must be user\nuser_id\tno\tThe user id you have defined for the user\nemail\tno\tThe email you have defined for the user\nintercom_user_id\tno\tThe Intercom defined id for the user\nper_page\tno\tHow many results to return per page defaults to 50.\nsummary\tno\tBoolean value. When set to true, event counts are returned grouped by event name.\nReturns\n\nA pageable list of events. The event list contains a pages object that indicates if more events exist for the customer via the next field, whose value is a URL that can be used to fetch the next page. If the next field is not present, that indicates there are no further events for the user. Clients should note that the parameters in the returned link are not assured to be the same as those sent in the request.\n\nThe event list is sorted by the created_at field and ordered descending, most recently created first.\n\nAs well as the fields that were supplied when the event was posted to Intercom (see Event model) for details) the event payload will also contain an id field that uniquely identifies the event and may optionally contain an intercom_user_id containing the Intercom defined id representing the user.\n\nYou can use the API to get counts of users, leads and companies filtered by certain criteria.\n\nCounts are a good way to periodically obtain data for the purposes of tracking rates of change in user and company data."
  },
  {
    "title": "Submit a data event",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/data-events/submitting-events/",
    "html": "Submit a data event\nSubmit an Event\n$ curl https://api.intercom.io/events \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Content-Type: application/json\" -d'\n{\n  \"event_name\" : \"placed-order\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"314159\",\n  \"metadata\": {\n    \"order_date\": 1392036272,\n    \"stripe_invoice\": \"inv_3434343434\",\n    \"order_number\": {\n      \"value\":\"3434-3434\",\n      \"url\": \"https://example.org/orders/3434-3434\"\n    },\n    \"price\": {\n      \"currency\":\"usd\",\n      \"amount\": 2999\n    }\n  }\n}'\n\nvar more_metadata = {\n  order_date: 1392036272,\n  stripe_invoice: 'inv_3434343434',\n  order_number: {\n    value: \"3434-3434\",\n    url: 'https://example.org/orders/3434-3434'\n  },\n  price: {\n    currency: 'usd',\n    amount: 2999\n  }\n};\nIntercom('trackEvent', 'placed-order', more_metadata);\n\nmore_metadata = {\n  :order_date => Time.now.to_i,\n  :stripe_invoice => 'inv_3434343434',\n  :order_number => {\n    :value => '3434-3434',\n    :url => 'https://example.org/orders/3434-3434'\n  },\n  price: {\n    :currency => 'usd',\n    :amount => 2999\n  }\n}\nintercom.events.create({\n  :event_name => \"placed-order\",\n  :email => current_user.email,\n  :created_at => 1391691571,\n  :metadata => more_metadata\n})\n\n<?php\n$metadata = ([\n    \"order_date\" => time(),\n    \"stripe_invoice\" => \"inv_3434343434\",\n    \"order_number\" => ([\n        \"value\" => \"3434-3434\",\n        \"url\" => \"https://example.org/orders/3434-3434\"]),\n        \"price\" => ([\n            \"currency\" => \"usd\",\n            \"amount\" => 2999])\n]);\n\n$intercom->events->create([\n    \"event_name\" => \"placed-order\",\n    \"created_at\" => 1500907515,\n    \"user_id\" => \"20413\",\n    \"metadata\" => $metadata\n]);\n?>\n\nMap<String,Object> order = Maps.newHashMap();\norder.put(\"value\", \"3434-3434\");\norder.put(\"url\", \"https://example.org/orders/3434-3434\");\n\nMap<String,Object> price = Maps.newHashMap();\nprice.put(\"currency\", \"usd\");\nprice.put(\"amount\", 2999);\n\nMap<String,Object> meta = Maps.newHashMap();\nmeta.put(\"order_date\", currentTimeMillis()/1000L);\nmeta.put(\"stripe_invoice\", \"inv_3434343434\");\nmeta.put(\"price\", price);\nmeta.put(\"order_number\", order);\n\nEvent event = new Event()\n  .setEventName(\"placed-order\")\n  .setUserID(\"314159\")\n  .setMetadata(meta);\n\nEvent.create(event);\n\n\nYou will need an Access Token that has write permissions to send Events. Once you have a key you can submit events via POST to the Events resource, which is located at https://api.intercom.io/events, or you can send events using one of the client libraries. When working with the HTTP API directly a client should send the event with a Content-Type of application/json.\n\nWhen using the JavaScript API, adding the code to your app makes the Events API available. Once added, you can submit an event using the trackEvent method. This will associate the event with the Lead or currently logged-in user or logged-out visitor/lead and send it to Intercom. The final parameter is a map that can be used to send optional metadata about the event.\n\nWith the Ruby client you pass a hash describing the event to Intercom::Event.create, or call the track_user method directly on the current user object (e.g. user.track_event).\n\nMetadata Object\nType\tDescription\tExample\nString\tThe value is a JSON String\t\"source\":\"desktop\"\nNumber\tThe value is a JSON Number\t\"load\": 3.67\nDate\tThe key ends with the String _date or _at and the value is a Unix timestamp, assumed to be in the UTC timezone.\t\"contact_date\": 1392036272 or \"contacted_at\": 1392036272\nLink\tThe value is a HTTP or HTTPS URI.\t`\"article\": \"https://example.org/ab1de.html\"\nRich Link\tThe value is a JSON object that contains url and value keys.\t\"article\": {\"url\": \"https://example.org/ab1de.html\", \"value\":\"the dude abides\"}\nMonetary Amount\tThe value is a JSON object that contains amount and currency keys. The amount key is a positive integer representing the amount in cents. The price in the example to the right denotes €349.99.\t\"price\": {\"amount\": 34999, \"currency\": \"eur\"}\n\nNB: For the JSON object types, please note that we do not currently support nested JSON structure.\n\nLEAD EVENTS\n\nWhen submitting events for Leads, you will need to specify the Lead's id.\n\nMETADATA BEHAVIOUR\n\nWe currently limit the number of tracked metadata keys to 10 per event. Once the quota is reached, we ignore any further keys we receive. The first 10 metadata keys are determined by the order in which they are sent in with the event.\\n_ It is not possible to change the metadata keys once the event has been sent. A new event will need to be created with the new keys and you can archive the old one.\\n_ There might be up to 24 hrs delay when you send a new metadata for an existing event.\n\nEVENT DE-DUPLICATION\n\nThe API may detect and ignore duplicate events. Each event is uniquely identified as a combination of the following data - the Workspace identifier, the Contact external identifier, the Data Event name and the Data Event created time. As a result, it is strongly recommended to send a second granularity Unix timestamp in the created_at field.\\n\\nDuplicated events are responded to using the normal 202 Accepted code - an error is not thrown, however repeat requests will be counted against any rate limit that is in place.\n\nHTTP API Responses\nSuccessful responses to submitted events return 202 Accepted with an empty body.\nUnauthorised access will be rejected with a 401 Unauthorized or 403 Forbidden response code.\nEvents sent about users that cannot be found will return a 404 Not Found.\nEvent lists containing duplicate events will have those duplicates ignored.\nServer errors will return a 500 response code and may contain an error message in the body."
  },
  {
    "title": "List all teams",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/teams/list-teams/",
    "html": "List all teams\nExample Request & Response\n$ curl https://api.intercom.io/teams \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n{\n    \"teams\": [\n        {\n            \"admin_ids\": [\n                492881,\n                1195856\n            ],\n            \"id\": \"814865\",\n            \"name\": \"BA_App\",\n            \"type\": \"team\"\n        },\n        {\n            \"admin_ids\": [\n                646303,\n                814860\n            ],\n            \"id\": \"2744328\",\n            \"name\": \"the_a_team\",\n            \"type\": \"team\"\n        }\n    ],\n    \"type\": \"team.list\"\n}\n\n\nYou can fetch a list of all teams for a given workspace.\n\nResponse\n\nThis will return a list of team objects for the App. The result may also have a pages object if the response is paginated.\n\nTeam List\nAttribute\tType\tDescription\ntype\tstring\tValue is 'team.list'\nteams\tarray\tA list of team objects\npages\tobject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch."
  },
  {
    "title": "View a Lead",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/leads/view-a-lead/",
    "html": "View a Lead\nExample ID Request\ncurlcurlrubyjavaphp\n$ curl \\\\\\nhttps://api.intercom.io/contacts/5811f6bbe6b4704ddfa84ac0 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\nor \\n\\n$ curl \\\\\\n-s https://api.intercom.io/contacts?user_id=77177570-cf5d-4f1a-bc75-75202af47d4f \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"contact\\\",\\n    \\\"id\\\": \\\"5811f6bbe6b4704ddfa84ac0\\\",\\n    \\\"user_id\\\": \\\"77177570-cf5d-4f1a-bc75-75202af47d4f\\\",\\n    \\\"anonymous\\\": true,\\n    \\\"email\\\": \\\"obrien@truth.org\\\",\\n    \\\"phone\\\": \\\"00353875551234\\\",\\n    \\\"name\\\": \\\"O&#39;Brien\\\",\\n    \\\"pseudonym\\\": \\\"Lime Camel from Dublin\\\",\\n  ...\\n}\\n# NB: Full Contact objects are returned\n\n\nLeads can be looked up individually via their id, or with a user_id parameter.\n\nUSER_ID FOR LEADS\n\nRemember that for leads the user_id will be automatically generated so it will look something like '8a88a590-e1c3-41e2-a502-e0649dbf721c'. (Note that this user_id is not retained when converting a lead to a user) For users the user_id is manually set so it will generally appear more like a regular number series e.g. '234'."
  },
  {
    "title": "Webhook Models",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/webhooks/webhooks/webhook-models-1/",
    "html": "Webhook Models\nWebhook Topics\n\nThe following topics are available and you can be notified when an action relating to that topic occurs. You just need to tell us where to send the notification. The 'Item Type' column shows the API type that will be sent as the data of the notification.\n\nTopic\tItem Type\tDescription\nconversation.user.created\tConversation\tSubscribe to user/lead initiated conversations\nconversation.user.replied\tConversation\tSubscribe to contact user/lead conversation replies\nconversation.admin.replied\tConversation\tSubscribe to admin conversation replies\nconversation.admin.single.created\tConversation\tSubscribe to admin initiated 1:1 conversations\nconversation.admin.assigned\tConversation\tSubscribe to admin conversation assignments\nconversation.admin.noted\tConversation\tSubscribe to admin conversation notes\nconversation.admin.closed\tConversation\tSubscribe to admin conversation closes\nconversation.admin.opened\tConversation\tSubscribe to admin conversation opens\nconversation.admin.snoozed\tConversation\tSubscribe to admin conversation snoozes\nconversation.admin.unsnoozed\tConversation\tSubscribe to admin conversation unsnoozes\nconversation_part.tag.created\tConversation\tSubscribe to conversation parts being tagged\nconversation.deleted\tConversation\tSubscribe to conversation deleted\nuser.created\tUser\tSubscribe to user creations\nuser.deleted\tUser\tSubscribe to user deletions\nuser.unsubscribed\tUser\tSubscribe to user unsubscriptions from email\nuser.email.updated\tUser\tSubscribe to user email address being updated\nuser.tag.created\tUserTag\tSubscribe to users being tagged\nuser.tag.deleted\tUserTag\tSubscribe to users being untagged\ncontact.created\tLead\tSubscribe to lead creations\ncontact.signed_up\tLead\tSubscribe to leads converting to users\ncontact.added_email\tLead\tSubscribe to emails being added to leads\ncontact.tag.created\tContactTag\tSubscribe to leads being tagged\ncontact.tag.deleted\tContactTag\tSubscribe to leads being untagged\nvisitor.signed_up\tVisitor\tSubscribe to visitors converting to users\ncompany.created\tCompany\tSubscribe to company creations\nevent.created\tEvent\tSubscribe to events\nping\tPing\tSent when a post to the subscription's ping resource is received, or periodically by Intercom. Ping is always subscribed to.\nWebhooks and Permissions\n\nEach webhook topic is associated with one or more permission scopes. If you would like to setup a webhook for a particular topic then you will need to select the appropriate permission scope to be able to request a notification for that topic.\n\nMULTIPLE PERMISSIONS\n\nSome topic are associated with multiple permissions. In these cases you don't need to select all of these permissions to subscribe to that topic.\n\nWebhook topic\tWorks with permissions\tGroups\nconversation_part.tag.created\tRead conversations\tConversation data\nconversation.admin.assigned\tRead conversations\tConversation data\nconversation.admin.closed\tRead conversations\tConversation data\nconversation.admin.noted\tRead conversations\tConversation data\nconversation.admin.opened\tRead conversations\tConversation data\nconversation.admin.replied\tRead conversations\tConversation data\nconversation.admin.single. created\tRead conversations\tConversation data\nconversation.admin.snoozed\tRead conversations\tConversation data\nconversation.admin.unsnoozed\tRead conversations\tConversation data\nconversation.user.created\tRead conversations\tConversation data\nconversation.user.replied\tRead conversations\tConversation data\nconversation.deleted\tRead conversations\tConversation data\ncontact.added_email\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.email.updated\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.unsubscribed\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nvisitor.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nevent.created\tRead events\tCustomer event data\ncompany.created\tRead users and companies, Read one user and one company\tCompany data\nWebhook Notification Object\n\nA notification object contains the following fields:\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'notification_event'\nid\tstring\tThe Intercom defined id representing the notification.\nself\tstring\tThe Intercom defined URL for the subscription. Optional.\ncreated_at\ttimestamp\tThe timestamp the notification was created.\ntopic\tstring\tCorresponds to a topic.\ndelivery_attempts\tnumber\tThe number of times this notification has been attempted.\nfirst_sent_at\ttimestamp\tThe first time the delivery was attempted.\ndata\tobject\tA container for the data associated with the notification.\ndata.item\tobject\tThe data associated with the notification, which will have a 'type' field.\n\nThe contents of data.item object will be defined according to its type field. In the example to the right, the type value of company indicates a company object.\n\n{\n  \"type\": \"notification_event\",\n  \"topic\": \"company.created\",\n  \"id\": \"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b3\",\n  \"app_id\" : \"a86dr8yl\",\n  \"created_at\": 1392731331,\n  \"delivery_attempts\": 1,\n  \"first_sent_at\": 1392731392,\n  \"data\": {\n    \"item\": {\n      \"type\": \"company\",\n      \"id\": \"531ee472cce572a6ec000006\",\n      \"name\": \"Blue Sun\",\n      \"company_id\": \"6\",\n      \"remote_created_at\": 1394531169,\n      \"created_at\": 1394533506,\n      \"updated_at\": 1396874658,\n      \"custom_attributes\": {\n      }\n    }\n  }\n}\n\nHandling Webhook Notifications\n\nWhen you setup a subscription you will receive notifications on your chosen topics. How you handle those notifications, i.e. the HTTP status code returned, will determine the subsequent state of that subscription.\n\nResponse Code\tDescription\tAction\n2xx\tSuccess\tThe webhook was successfully delivered.\n410\tGone\tWhen a 410 is received, we assume the resource is no longer available. We will disable the subscription and no more notifications will be sent.\n429\tToo many requests\tWhen a 429 is received, all notifications from that subscription will be throttled. Depending on the rate of delivery, this delay can be between 1 minute to 2 hours. If 429s continue and any notification is delayed for > 2 hours then we will drop that notification.\n4xx (excl. 429) 5xx\tClient or service errors\tWe will retry after 1 minute for all other errors. If the 2nd retry fails then we mark the notification delivery as failed.\nTIMEOUT\n\nYou have 5 seconds to respond to a notification. If you don't send a response inside that time, the notification is treated as failed and will be retried only once after 1 minute.\n\nSigned Notifications\n\nEach webhook notification is signed by Intercom via an X-Hub-Signature header. We do this so that you can verify the notification came from Intercom by decoding the signature.\n\nThe value of this X-Hub-Signature header is computed by creating a signature using the body of the JSON request and your app's client_secret value, which you can find on the Basic Info page of your app.\n\nThe signature is the hexadecimal (40-byte) representation of a SHA-1 signature computed using the HMAC algorithm as defined in RFC2104.\n\nThe X-Hub-Signature header value starts with the string sha1= followed by the signature.\n\nPOST https://example.org/hooks\nUser-Agent: intercom-parrot-service-client/1.0\nX-Hub-Signature: sha1=21ff2e149e0fdcac6f947740f6177f6434bda921\nAccept: application/json\nContent-Type: application/json\n\n{\n  \"type\" : \"notification_event\",\n  \"id\" : \"notif_78c122d0-23ba-11e4-9464-79b01267cc2e\",\n  \"topic\" : \"user.created\",\n  \"app_id\" : \"a86dr8yl\",\n  \"data\" : {\n    \"type\" : \"notification_event_data\",\n    \"item\" : {\n      \"type\" : \"user\",\n      \"id\" : \"530370b477ad7120001d\",\n      \"user_id\" : \"25\",\n      \"name\" : \"Hoban Washburne\",\n      \"unsubscribed_from_emails\" : false,\n      \"custom_attributes\" : {}\n    }\n  }\n}\n\nContact Tag Model for Webhooks\n\nThe Contact Tag model is only returned for webhooks. It is not used with the Lead (i.e. contact) or Tag endpoints themselves. You can see an example object below:\n\nExample Contact Tag Model in Webhooks\n{  \\\"type\\\": \\\"contact_tag\\\",  \\\"created_at\\\": 1392731331,  \\\"tag\\\" : {      \\\"id\\\": \\\"1287\\\",      \\\"name\\\": \\\"independent\\\",      \\\"type\\\": \\\"tag\\\"    },  \\\"contact\\\" : {      \\\"type\\\": \\\"contact\\\",      \\\"id\\\": \\\"1287ab1287fefe\\\",      \\\"user_id\\\": \\\"12\\\"  }}\n\n\nA contact tag is composed from the existing contact and tag JSON and is sent when contacts are tagged and untagged via the contact.tag.created and contact.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'contact_tag'.\ncreated_at\ttimestamp\tThe time the contact tag object was created.\ntag\tTag\tThe tag that was added or removed.\ncontact\tcontact\tThe contact that was tagged or untagged.\nUser Tag Model for Webhooks\n\nThe User Tag model is only returned for webhooks. It is not used with the User or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"user_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"17513\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"user\" : {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n      \"user_id\": \"25\"\n  }\n}\n\n\nA user tag is composed from the existing user and tag JSON and is sent when users are tagged and untagged via the user.tag.created and user.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user_tag'.\ncreated_at\ttimestamp\tThe time the user tag object was created.\ntag\tTag\tThe tag that was added or removed.\nuser\tUser\tThe user that was tagged or untagged."
  },
  {
    "title": "Convert a Lead",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/leads/convert-a-lead/",
    "html": "Convert a Lead\nExample Lead Convert Request\ncurlcurlrubyphpjava\n$ curl \\\\\\nhttps://api.intercom.io/contacts/convert \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"contact\\\": {\\n    \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  },\\n  \\\"user\\\": {\\n    \\\"email\\\": \\\"winstonsmith@truth.org\\\"\\n  }\\n}'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"email\\\": \\\"winstonsmith@truth.org\\\"\\n}\\n# NB: Full User objects are returned\n\n\nLeads can be converted to Users. This is done by passing both Lead and User identifiers. If the User exists, then the Lead will be merged into it, the Lead deleted and the User returned. If the User does not exist, the Lead will be converted to a User, with the User identifiers replacing it's Lead identifiers.\n\nIdentifiers (id, user_id, email) from Leads are never added onto Users with a merge.\n\nA Lead's email, but not user_id is retained when converting a Lead to a new User."
  },
  {
    "title": "View User Event Summaries",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/data-events/view-user-events-summaries/",
    "html": "View User Event Summaries\nGet summary count of user events\ncurlcurl\n$ curl 'https://api.intercom.io/events?type=user&user_id=314159&summary=true' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\n{\\n    \\\"type\\\": \\\"event.summary\\\",\\n    \\\"email\\\": \\\"test-user@example.com\\\",\\n    \\\"intercom_user_id\\\": \\\"56e1e5d4a40df1cc57000101\\\",\\n    \\\"user_id\\\": \\\"314159\\\",\\n    \\\"events\\\": [\\n        {\\n            \\\"name\\\": \\\"updated-profile\\\",\\n            \\\"first\\\": \\\"2016-03-18T10:05:15.000Z\\\",\\n            \\\"last\\\": \\\"2016-03-18T13:28:38.000Z\\\",\\n            \\\"count\\\": 5,\\n            \\\"description\\\": null\\n        },    \\n        {\\n            \\\"name\\\": \\\"purchased-item\\\",\\n            \\\"first\\\": \\\"2016-09-30T11:39:06.000Z\\\",\\n            \\\"last\\\": \\\"2016-09-30T11:39:06.000Z\\\",\\n            \\\"count\\\": 4,\\n            \\\"description\\\": null\\n        },\\n        {\\n            \\\"name\\\": \\\"subscribed-for-demo\\\",\\n            \\\"first\\\": \\\"2016-11-24T12:26:34.000Z\\\",\\n            \\\"last\\\": \\\"2016-11-24T12:26:34.000Z\\\",\\n            \\\"count\\\": 2,\\n            \\\"description\\\": null\\n        }\\n    ]\\n}\n\n\nIf you simply want to get a count of the number of different events associated with a user then you can use the 'summary=true' parameter of the events endpoint. This means you do not receive the full list of all users events and just the counts of the different events per user."
  },
  {
    "title": "Convert a visitor",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/visitors/convert-a-visitor-to-a-user/",
    "html": "Convert a visitor\n\nYou can merge a Visitor to a Contact of role type lead or user.\n\nWHAT HAPPENS UPON A VISITOR BEING CONVERTED?\n\nIf the User exists, then the Visitor will be merged into it, the Visitor deleted and the User returned. If the User does not exist, the Visitor will be converted to a User, with the User identifiers replacing it's Visitor identifiers.\n\nRequest Body Parameters\nArgument\tType\tRequired?\tDescription\nvisitor\tObject\tYes\tThe unique identifiers to convert a single Visitor.\nuser\tObject\tYes\tThe unique identifiers retained after converting or merging.\ntype\tString\tYes\tRepresents the role of the Contact model. Accepts lead or user.\nVisitor object\nArgument\tType\tRequired?\tDescription\nid\tString\tOne of\tThe unique identifier for the contact which is given by Intercom.\nuser_id\tString\tOne of\tA unique identifier for the contact which is given to Intercom.\nemail\tString\tOne of\tThe visitor's email.\nUser object (a contact)\nArgument\tType\tRequired?\tDescription\nid\tString\tOne of\tThe unique identifier for the contact which is given by Intercom.\nuser_id\tString\tOne of\tA unique identifier for the contact which is given to Intercom, which will be represented as external_id.\nemail\tString\tNo\tThe contact's email, retained by default if one is present.\nExample Request & Response\ncurlcurl\n$ curl \\\\https://api.intercom.io/visitors/convert \\\\-X POST \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json' \\\\-H 'Content-Type: application/json' -d '{  \\\"visitor\\\": {    \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"  },  \\\"user\\\": {    \\\"email\\\": \\\"winstonsmith@truth.org\\\"  },  \\\"type\\\": \\\"user\\\"}'\n\n# NB: Full User objects are returned{  \\\"type\\\": \\\"lead\\\",  \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"}\n\nResponse\n\nThis will return a Contact model of the visitor you just converted or merged into."
  },
  {
    "title": "Rate Limiting",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/errors/rate-limiting/",
    "html": "Rate Limiting\n# Example with the default rate limit of 1000\n\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 100\nX-RateLimit-Reset: 1487332510\n\n# After another request:\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 99\nX-RateLimit-Reset: 1487332510\n\n# After window resets\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 100\nX-RateLimit-Reset: 1487332520\n\n# If you make more than the allowed requests\nHTTP/1.1 429 Too Many Requests\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 0\nX-RateLimit-Reset: 1487332520\n\nintercom.rate_limit_details\n#=> {:limit=>1000, :remaining=>999, :reset_at=>2019-08-05 14:59:00 +0100}\n\n\nAPI Rate Limits are in place to protect Intercom from API traffic spikes that could put our databases at risk. We therefore measure the amount of requests sent to the API in order to throttle these when they surpass the amount allowed. We will respond with '429 Too Many Requests' and the following headers:\n\nHeader Name\tHeader Description\nX-RateLimit-Limit\tMaximum number of requests allowed for the app.\nX-RateLimit-Remaining\tNumber of requests left in the current time.\nX-RateLimit-Reset\t_Time when the number of requests will be reset to the maximum limit. _Shown as UNIX timestamp.\nWHAT ABOUT CANVAS KIT REQUESTS?\n\nRate Limits only apply to calls to the REST API, not to any webhook requests that are sent as part of the Canvas Kit capabilities.\n\nWhat is the default amount of requests?\n\nEvery app will have default rate limits. The amount we rate limit them by is different for apps which are privately built for your own usage, or for apps that are publicly installed by third-parties.\n\nPrivate\n\nPrivate apps have a default rate limit of 10,000 API calls per minute per app and 25,000 API calls per minute per workspace. This means that if a workspace has multiple private apps installed, every one contributes towards total number of requests.\n\nPublic\n\nPublic apps have a default rate limit of 10,000 API calls per minute for each app and 25,000 API calls per minute per workspace. This means that if a workspace has multiple public apps installed, each one has its own separate request limit without contributing to the others.\n\nHIGHER RATE LIMITS\n\nIf you require higher rate limits than the defaults, you can contact us using the messenger in the bottom right.\n\nWhen does the amount of requests reset?\n\nAlthough the permitted limit of requests lasts for 1 minute, we evenly distribute this into 10 second windows. This means that every 10 seconds, the amount of permitted requests resets. For example, a default rate limit of 1000 per minute means that you can send a maximum of 166 operations per 10 second period (1000/6)."
  },
  {
    "title": "Webhook Topics",
    "url": "https://developers.intercom.com/docs/references/1.1/webhooks/webhook-models/",
    "html": "Webhook Topics\n\nThe following topics are available and you can be notified when an action relating to that topic occurs. You just need to tell us where to send the notification. The 'Item Type' column shows the API type that will be sent as the data of the notification.\n\nTopic\tItem Type\tDescription\nconversation.user.created\tConversation\tSubscribe to user/lead initiated conversations\nconversation.user.replied\tConversation\tSubscribe to contact user/lead conversation replies\nconversation.admin.replied\tConversation\tSubscribe to admin conversation replies\nconversation.admin.single.created\tConversation\tSubscribe to admin initiated 1:1 conversations\nconversation.admin.assigned\tConversation\tSubscribe to admin conversation assignments\nconversation.admin.noted\tConversation\tSubscribe to admin conversation notes\nconversation.admin.closed\tConversation\tSubscribe to admin conversation closes\nconversation.admin.opened\tConversation\tSubscribe to admin conversation opens\nconversation.admin.snoozed\tConversation\tSubscribe to admin conversation snoozes\nconversation.admin.unsnoozed\tConversation\tSubscribe to admin conversation unsnoozes\nconversation_part.tag.created\tConversation\tSubscribe to conversation parts being tagged\nconversation.deleted\tConversation\tSubscribe to conversation deleted\nuser.created\tUser\tSubscribe to user creations\nuser.deleted\tUser\tSubscribe to user deletions\nuser.unsubscribed\tUser\tSubscribe to user unsubscriptions from email\nuser.email.updated\tUser\tSubscribe to user email address being updated\nuser.tag.created\tUserTag\tSubscribe to users being tagged\nuser.tag.deleted\tUserTag\tSubscribe to users being untagged\ncontact.created\tLead\tSubscribe to lead creations\ncontact.signed_up\tLead\tSubscribe to leads converting to users\ncontact.added_email\tLead\tSubscribe to emails being added to leads\ncontact.tag.created\tContactTag\tSubscribe to leads being tagged\ncontact.tag.deleted\tContactTag\tSubscribe to leads being untagged\nvisitor.signed_up\tVisitor\tSubscribe to visitors converting to users\ncompany.created\tCompany\tSubscribe to company creations\nevent.created\tEvent\tSubscribe to events\nping\tPing\tSent when a post to the subscription's ping resource is received, or periodically by Intercom. Ping is always subscribed to.\nWebhooks and Permissions\n\nEach webhook topic is associated with one or more permission scopes. If you would like to setup a webhook for a particular topic then you will need to select the appropriate permission scope to be able to request a notification for that topic.\n\n🚧 Multiple permissions\n\nSome topic are associated with multiple permissions. In these cases you don't need to select all of these permissions to subscribe to that topic.\n\nWebhook topic\tWorks with permissions\tGroups\nconversation_part.tag.created\tRead conversations\tConversation data\nconversation.admin.assigned\tRead conversations\tConversation data\nconversation.admin.closed\tRead conversations\tConversation data\nconversation.admin.noted\tRead conversations\tConversation data\nconversation.admin.opened\tRead conversations\tConversation data\nconversation.admin.replied\tRead conversations\tConversation data\nconversation.admin.single. created\tRead conversations\tConversation data\nconversation.admin.snoozed\tRead conversations\tConversation data\nconversation.admin.unsnoozed\tRead conversations\tConversation data\nconversation.user.created\tRead conversations\tConversation data\nconversation.user.replied\tRead conversations\tConversation data\nconversation.deleted\tRead conversations\tConversation data\ncontact.added_email\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.email.updated\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.unsubscribed\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nvisitor.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nevent.created\tRead events\tCustomer event data\ncompany.created\tRead users and companies, Read one user and one company\tCompany data\nWebhook Notification Object\n\nA notification object contains the following fields:\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'notification_event'\nid\tstring\tThe Intercom defined id representing the notification.\nself\tstring\tThe Intercom defined URL for the subscription. Optional.\ncreated_at\ttimestamp\tThe timestamp the notification was created.\ntopic\tstring\tCorresponds to a topic.\ndelivery_attempts\tnumber\tThe number of times this notification has been attempted.\nfirst_sent_at\ttimestamp\tThe first time the delivery was attempted.\ndata\tobject\tA container for the data associated with the notification.\ndata.item\tobject\tThe data associated with the notification, which will have a 'type' field.\n\nThe contents of data.item object will be defined according to its type field. In the example to the right, the type value of company indicates a company object.\n\n{\n  \"type\": \"notification_event\",\n  \"topic\": \"company.created\",\n  \"id\": \"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b3\",\n  \"app_id\" : \"a86dr8yl\",\n  \"created_at\": 1392731331,\n  \"delivery_attempts\": 1,\n  \"first_sent_at\": 1392731392,\n  \"data\": {\n    \"item\": {\n      \"type\": \"company\",\n      \"id\": \"531ee472cce572a6ec000006\",\n      \"name\": \"Blue Sun\",\n      \"company_id\": \"6\",\n      \"remote_created_at\": 1394531169,\n      \"created_at\": 1394533506,\n      \"updated_at\": 1396874658,\n      \"custom_attributes\": {\n      }\n    }\n  }\n}\n\nHandling Webhook Notifications\n\nWhen you setup a subscription you will receive notifications on your chosen topics. How you handle those notifications, i.e. the HTTP status code returned, will determine the subsequent state of that subscription.\n\nResponse Code\tDescription\tAction\n2xx\tSuccess\tThe webhook was successfully delivered.\n410\tGone\tWhen a 410 is received, we assume the resource is no longer available. We will disable the subscription and no more notifications will be sent.\n429\tToo many requests\tWhen a 429 is received, all notifications from that subscription will be throttled. Depending on the rate of delivery, this delay can be between 1 minute to 2 hours. If 429s continue and any notification is delayed for > 2 hours then we will drop that notification.\n4xx (excl. 429) 5xx\tClient or service errors\tWe will retry after 1 minute for all other errors. If the 2nd retry fails then we mark the notification delivery as failed.\n\n❗️ Timeout\n\nYou have 5 seconds to respond to a notification. If you don't send a response inside that time, the notification is treated as failed and will be retried only once after 1 minute.\n\nSigned Notifications\n\nEach webhook notification is signed by Intercom via an X-Hub-Signature header. We do this so that you can verify the notification came from Intercom by decoding the signature.\n\nThe value of this X-Hub-Signature header is computed by creating a signature using the body of the JSON request and your app's client_secret value, which you can find on the Basic Info page of your app.\n\nThe signature is the hexadecimal (40-byte) representation of a SHA-1 signature computed using the HMAC algorithm as defined in RFC2104.\n\nThe X-Hub-Signature header value starts with the string sha1= followed by the signature.\n\nPOST https://example.org/hooks\nUser-Agent: intercom-parrot-service-client/1.0\nX-Hub-Signature: sha1=21ff2e149e0fdcac6f947740f6177f6434bda921\nAccept: application/json\nContent-Type: application/json\n\n{\n  \"type\" : \"notification_event\",\n  \"id\" : \"notif_78c122d0-23ba-11e4-9464-79b01267cc2e\",\n  \"topic\" : \"user.created\",\n  \"app_id\" : \"a86dr8yl\",\n  \"data\" : {\n    \"type\" : \"notification_event_data\",\n    \"item\" : {\n      \"type\" : \"user\",\n      \"id\" : \"530370b477ad7120001d\",\n      \"user_id\" : \"25\",\n      \"name\" : \"Hoban Washburne\",\n      \"unsubscribed_from_emails\" : false,\n      \"custom_attributes\" : {}\n    }\n  }\n}\n\nContact Tag Model for Webhooks\n\nThe Contact Tag model is only returned for webhooks. It is not used with the Lead (i.e. contact) or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"contact_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"1287\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"contact\" : {\n      \"type\": \"contact\",\n      \"id\": \"1287ab1287fefe\",\n      \"user_id\": \"12\"\n  }\n}\n\n\nA contact tag is composed from the existing contact and tag JSON and is sent when contacts are tagged and untagged via the contact.tag.created and contact.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'contact_tag'.\ncreated_at\ttimestamp\tThe time the contact tag object was created.\ntag\tTag\tThe tag that was added or removed.\ncontact\tcontact\tThe contact that was tagged or untagged.\nUser Tag Model for Webhooks\n\nThe User Tag model is only returned for webhooks. It is not used with the User or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"user_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"17513\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"user\" : {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n      \"user_id\": \"25\"\n  }\n}\n\n\nA user tag is composed from the existing user and tag JSON and is sent when users are tagged and untagged via the user.tag.created and user.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user_tag'.\ncreated_at\ttimestamp\tThe time the user tag object was created.\ntag\tTag\tThe tag that was added or removed.\nuser\tUser\tThe user that was tagged or untagged."
  },
  {
    "title": "HTTP Responses",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/errors/http-responses/",
    "html": "HTTP Responses\n\nThe API returns HTTP responses on each request to indicate the success or otherwise of API requests. The codes listed below are often used, and the API may use others. Note that 4xx and 5xx responses may be returned for any request and clients should cater for them.\n\nResponse Code\tDescription\n400\tBad Request -- General client error, possibly malformed data.\n401\tUnauthorized -- The API Key was not authorised (or no API Key was found).\n402\tPayment Required -- The API is not available on your current plan.\n403\tForbidden -- The request is not allowed.\n404\tNot Found -- The resource was not found.\n405\tMethod Not Allowed -- The resource does not accept the HTTP method.\n406\tNot Acceptable -- The resource cannot return the client's required content type.\n408\tRequest Timeout -- The server would not wait any longer for the client.\n409\tConflict - Multiple existing users match this email address - must be more specific using user_id\n415\tUnsupported Media Type - The server doesn't accept the submitted content-type.\n422\tUnprocessable Entity -- The data was well-formed but invalid.\n429\tToo Many Requests -- The client has reached or exceeded a rate limit, or the server is overloaded.\n500, 502, 503, 504\tServer errors - something went wrong with Intercom's servers. These responses are most likely momentary operational errors (e.g. temporary unavailability), and, as a result, requests should be retried once."
  },
  {
    "title": "Error Codes",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/errors/error-codes/",
    "html": "Error Codes\n\nThe API may send the following error codes. Other codes may be added in the future.\n\nField\tDescription\nserver_error\tGeneric server error\nclient_error\tGeneric client error\ntype_mismatch\tThe JSON value type is incorrect for the field\nparameter_not_found\tA required parameter was not supplied\nparameter_invalid\tA parameter's value is invalid\naction_forbidden\tThe action is not authorized\nconflict\tThere is existing data that clashes with the request data\napi_plan_restricted\tThe API is not available on this App's Plan\nrate_limit_exceeded\tThe rate limit for the App has been exceeded\nunsupported\tThe operation is not supported\ntoken_revoked\tThe token or API Key has been revoked\ntoken_blocked\tThe API Key or App has been blocked\ntoken_not_found\tThe token or API Key does not exist\ntoken_unauthorized\tThe token or API Key is not allowed to access the resource\ntoken_expired\tThe token is expired\nmissing_authorization\tNo authorization data was found on the request\nretry_after\tThe client should wait for a time before retrying the request\njob_closed\tThe client should start a new bulk job\nnot_restorable\tThis user was blocked and cannot be recreated\nteam_not_found\tThe team does not exist\nteam_unavailable\tThis team is deprecated so conversations cannot be assigned to it\nadmin_not_found\tThe admin does not exist"
  },
  {
    "title": "Input Values",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/requestobjects/input-values/",
    "html": "Input Values\nDescription\n\nThe input_values object is a JSON hash containing key-value pairs. These key-value pairs represent the data that's been inputted by customers and teammates with a given component.\n\nThe key will be the component_id and the value will be the data that was inputted by this component.\n\nExample Object\ninput_values: { \"<component_id>\": \"<Value entered in component>\" }, //Can be more than one pair\n"
  },
  {
    "title": "Retrieve a collection",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/help-center/retrieve-a-collection/",
    "html": "Retrieve a collection\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/collections/<id> \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can fetch the details of a single collection by making a GET request to https://api.intercom.io/help_center/collections/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the collection which is given by Intercom.\nResponse\n\nThis will return a Collection Model."
  },
  {
    "title": "Update a collection",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/help-center/update-a-collection/",
    "html": "Update a collection\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/collection/<id> \\\\-X PUT \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json'-H 'Content-Type: application/json' -d{  \\\"name\\\": \\\"New title\\\",  \\\"translated_content\\\": {    \\\"es\\\": {      \\\"name\\\": \\\"Nuevo título\\\"    }  }}\n\n\nYou can update the details of a single collection by making a PUT request to https://api.intercom.io/help_center/collection/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the collection which is given by Intercom.\nRequest Body Parameters\nAttribute\tType\tRequired?\tDescription\nname\tString\tNo\tThe name of the collection. For multilingual collections, this will be the name of the default language's content.\ndescription\tString\tNo\tThe description of the collection. For multilingual articles, this will be the description of the default language's content.\ntranslated_content\tObject\tNo\tA Group Translated Content Object whereby you can specify multiple multilingual collections to be created.\nResponse\n\nThis will return a Collection Model of the collection you just updated."
  },
  {
    "title": "List all collections",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/help-center/list-all-collections/",
    "html": "List all collections\nExample Request & Response (Single Language Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/collections \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can fetch a list of all collections by making a GET request to https://api.intercom.io/help_center/collections.\n\nResponse\nKey\tType\tDescription\ntype\tString\tThe type of object - list.\npages\tObject\tA Pages object with the information needed to paginate through collections.\ntotal_count\tInteger\tA count of the total number of collections.\ndata\tArray\tAn array of Collection objects.\nHOW ARE THE COLLECTIONS SORTED AND ORDERED?\n\nCollections will be returned in descending order on the updated_at attribute. This means if you need to iterate through results then we'll show the most recently updated collections first."
  },
  {
    "title": "Delete a section",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/help-center/delete-a-section/",
    "html": "Delete a section\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/sections/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can delete a single section by making a DELETE request to https://api.intercom.io/help_center/sections/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the section which is given by Intercom.\nResponse\nKey\tType\tDescription\nid\tString\tThe unique identifier for the section which you provided in the URL.\nobject\tString\tThe type of object which was deleted - section.\ndeleted\tBoolean\tWhether the section was deleted successfully or not."
  },
  {
    "title": "Retrieve a section",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/help-center/retrieve-a-section/",
    "html": "Retrieve a section\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/sections/<id> \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can fetch the details of a single section by making a GET request to https://api.intercom.io/help_center/sections/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the section which is given by Intercom.\nResponse\n\nThis will return a Section object."
  },
  {
    "title": "List all sections",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/help-center/list-all-sections/",
    "html": "List all sections\nExample Request & Response (Single Language Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/sections \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can fetch a list of all sections by making a GET request to https://api.intercom.io/help_center/sections.\n\nResponse\nKey\tType\tDescription\ntype\tString\tThe type of object - list.\npages\tObject\tA Pages object with the information needed to paginate through sections.\ntotal_count\tInteger\tA count of the total number of sections.\ndata\tArray\tAn array of Section objects\nHOW ARE THE SECTIONS SORTED AND ORDERED?\n\nSections will be returned in descending order on the updated_at attribute. This means if you need to iterate through results then we'll show the most recently updated sections first."
  },
  {
    "title": "List",
    "url": "https://developers.intercom.com/docs/references/canvas-kit/interactivecomponents/list/",
    "html": "List\n\nA list component renders a list of items which you provide in an array. You can make each list item take an action by adding the relevant action object to the item:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nList Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tlist\tYes\tThe type of component you are rendering.\nitems\tArray (see below)\tYes\tThe items that will be rendered in the list.\ndisabled\ttrue``false\tNo\tStyles all list items and prevents the action.Default is false.\nItem Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\titem\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the item.\ntitle\tAny string\tYes\tThe text shown as the title for the item.\nsubtitle\tAny string\tNo\tThe text shown underneath the item's title.\ntertiary_text\tAny string\tNo\tThe text shown next to the subtitle, separates by a bullet.\nimage\tA valid HTTPS URL\tNo\tAn image that will be displayed to the left of the item.\nimage_width\tAny integer\tYes (if image provided)\tThe exact width of the image in pixels.\nimage_height\tAny integer\tYes (if image provided)\tThe exact height of the image in pixels.\nrounded_image\ttrue``false\tNo\tRounds the corners of the image.Default is false.\ndisabled\ttrue``false\tNo\tThe defined state of the inputted value to render a specific style.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nPreview"
  },
  {
    "title": "Single-Select",
    "url": "https://developers.intercom.com/docs/references/canvas-kit/interactivecomponents/single-select/",
    "html": "Single-Select\n\nA single-select component is used to capture a choice from up to 10 options that you provide. You can submit the value of the select option by:\n\nAdding an action to the single-select component\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the single-select component used as the key and the id from the chosen option as the value.\n\nSingle-Select Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tsingle-select\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of options.Can provide 2 to 10.\nlabel\tAny string\tNo\tThe text shown above the options.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOptions Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Input",
    "url": "https://developers.intercom.com/docs/references/canvas-kit/interactivecomponents/input/",
    "html": "Input\n\nAn input component is used to capture text input from the end user. You can submit the value of the input by:\n\nAdding an action to the input component (which will render an inline button)\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tinput\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the input.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.Will be overriden if save_state is saved.\nPreview"
  },
  {
    "title": "Users",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/users/users/",
    "html": "Users\n\nUsers is no longer available as a resource. In order to see information and take action on users, you should use the Contacts API."
  },
  {
    "title": "Create a collection",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/help-center/create-a-collection/",
    "html": "Create a collection\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/collections \\\\-X POST \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json'-H 'Content-Type: application/json' -d{  \\\"name\\\": \\\"Collection 1\\\",  \\\"description\\\": \\\"English description\\\",  \\\"translated_content\\\": {    \\\"es\\\": {      \\\"name\\\": \\\"Colección 1\\\",      \\\"description\\\": \\\"Spanish description\\\"    }  }}\n\n\nYou can create a new collection by making a POST request to https://api.intercom.io/help_center/collections.\n\nRequest Body Parameters\nKey\tType\tRequired?\tDescription\nname\tString\tYes\tThe name of the collection. For multilingual collections, this will be the name of the default language's content.\ndescription\tString\tNo\tThe description of the collection. For multilingual collections, this will be the description of the default language's content.\ntranslated_content\tString\tNo\tA Group Translated Content Object whereby you can specify multiple multilingual collections to be created.\nResponse\n\nThis will return a Collection Model of the collection you just created."
  },
  {
    "title": "Spacer",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/presentationcomponents/spacer/",
    "html": "Spacer\n\nA spacer component is used to create empty space between components.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tspacer\t\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nsize\txs``s``m``l``xl\tNo\tThe amount of space between components.Default is s.\nPreview"
  },
  {
    "title": "Delete a collection",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/help-center/delete-a-collection/",
    "html": "Delete a collection\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/collections/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can delete a single collection by making a DELETE request to https://api.intercom.io/help_center/collections/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the collection which is given by Intercom.\nResponse\nKey\tType\tDescription\nid\tString\tThe unique identifier for the collection which you provided in the URL.\nobject\tString\tThe type of object which was deleted - collection.\ndeleted\tBoolean\tWhether the collections was deleted successfully or not."
  },
  {
    "title": "Image",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/presentationcomponents/image/",
    "html": "Image\n\nAn image component is used to display an image.\n\n🚧 HTTPS Images\n\nIf your request URLs (or website URLs) are over HTTPS, you will need to ensure that images are loaded over HTTPS likewise. Otherwise, they will not work.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\timage\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nurl\tA valid HTTPS URL\tYes\tThe URL where the image is located.\nalign\tleft``center``right``full_width\tNo\tAligns the image inside the component.Default is left.\nwidth\tAny integer\tYes\tThe exact width of the image in pixels.\nheight\tAny integer\tYes\tThe exact height of the image in pixels.\nrounded\ttrue``false\tNo\tRounds the corners of the image. Default is false.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\naction\tAction Object\tNo\tThis can be a URL Action only.\nPreview"
  },
  {
    "title": "Stored Data",
    "url": "https://developers.intercom.com/docs/references/2.5/canvas-kit/responseobjects/stored-data/",
    "html": "Stored Data\nDescription\n\nA canvas object may optionally contain a stored_data object. This is where you can add key-value pairs of data that you want to be sent in whatever the next request is.\n\nFor example, the flow of your app might have multiple canvases with data being inputted on each one. You may want to have all this data available to use at the end of the flow for the final canvas. You can therefore put all this data in the stored_data object so it's sent in subsequent requests and is available at the end.\n\nExample Object\nstored_data: {\"key\": \"value\"} //Can be more than one pair\n"
  },
  {
    "title": "Create a section",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/help-center/create-a-section/",
    "html": "Create a section\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/sections \\\\-X POST \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json'-H 'Content-Type: application/json' -d{  \\\"name\\\": \\\"Section 1\\\",  \\\"parent_id\\\": \\\"1\\\",  \\\"translated_content\\\": {    \\\"es\\\": {      \\\"name\\\": \\\"Sección 1\\\",      \\\"description\\\": \\\"Spanish description\\\"    }  }}\n\n\nYou can create a new section by making a POST request to https://api.intercom.io/help_center/sections.\n\nRequest Body Parameters\nKey\tType\tRequired?\tDescription\nname\tString\tYes\tThe name of the collection. For multilingual collections, this will be the name of the default language's content.\nparent_id\tString\tYes\tThe id for the collection this section will be within.\ntranslated_content\tString\tNo\tA Group Translated Content Object whereby you can specify multiple multilingual collections to be created.\nResponse\n\nThis will return a Section Model of the section you just created."
  },
  {
    "title": "Dropdown",
    "url": "https://developers.intercom.com/docs/references/canvas-kit/interactivecomponents/dropdown/",
    "html": "Dropdown\n\nA dropdown component is used to capture a choice from the options that you provide. You can submit the value of the select option by:\n\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the dropdown component used as the key and the id from the chosen option as the value.\n\nDropdown Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tdropdown\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of 2 or more options.\nlabel\tAny string\tNo\tThe text shown above the dropdown.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOption Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Checkbox",
    "url": "https://developers.intercom.com/docs/references/canvas-kit/interactivecomponents/checkbox/",
    "html": "Checkbox\n\nA checkbox component is used to capture multiple choices from as many options as you want to provide. You can submit the options by:\n\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the checkbox component used as the key and an array containing the id of each chosen option as the value.\n\nCheckbox Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tcheckbox\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noption\tArray (See Below)\tYes\tThe list of options.Minimum of 1.\nlabel\tAny string\tNo\tThe text shown above the options.\nvalue\tArray containing the id of option's\tNo\tThe option's that are selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\nOptions Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown next to the checkbox.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Text Area",
    "url": "https://developers.intercom.com/docs/references/canvas-kit/interactivecomponents/text-area/",
    "html": "Text Area\n\nA text area component is used to capture a large amount of text as input with a multi-line text box. You can submit the value of the text area by:\n\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttextarea\tYes\tThe type of component you are rendering\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the text area.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\nerror\tfalse``true\tNo\tStyles the input as failed.Default is false.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Encoding",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/common-structures/encoding/",
    "html": "Encoding\n\nData is encoded as defined by JSON in RFC4627. The default encoding for APIs is UTF-8. Certain characters, such as Emojji may be handled as surrogate unicode pairs (see section '2.5. Strings' of RFC4627).\n\nSome query parameters may need to be url encoded when sending - for example, the email parameter value used to query users should be encoded.\n\nHTML ENCODING\n\nIt should be noted that the following identifiers are encoded to protect from potential cross-site scripting attacks: 'name', 'user_id', 'company_id' and 'email'. As a result you may see these identifiers in their encoded format when you retrieve them via the API. \\nNote that the characters we encode are double quote, single quote, ampersand, less than and greater than symbols i.e \" ' & < >\n\nHTML Encoding example\n\\\"X&Ys\\\" == \\\"X&amp;Y&#39;s\\\"\n"
  },
  {
    "title": "Rate Limiting",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/errors/rate-limiting/",
    "html": "Rate Limiting\n# Example with the default rate limit of 1000\n\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 100\nX-RateLimit-Reset: 1487332510\n\n# After another request:\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 99\nX-RateLimit-Reset: 1487332510\n\n# After window resets\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 100\nX-RateLimit-Reset: 1487332520\n\n# If you make more than the allowed requests\nHTTP/1.1 429 Too Many Requests\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 0\nX-RateLimit-Reset: 1487332520\n\nintercom.rate_limit_details\n#=> {:limit=>1000, :remaining=>999, :reset_at=>2019-08-05 14:59:00 +0100}\n\n\nAPI Rate Limits are in place to protect Intercom from API traffic spikes that could put our databases at risk. We therefore measure the amount of requests sent to the API in order to throttle these when they surpass the amount allowed. We will respond with '429 Too Many Requests' and the following headers:\n\nHeader Name\tHeader Description\nX-RateLimit-Limit\tMaximum number of requests allowed for the app.\nX-RateLimit-Remaining\tNumber of requests left in the current time.\nX-RateLimit-Reset\tTime when the number of requests will be reset to the maximum limit. Shown as UNIX timestamp.\nWHAT ABOUT CANVAS KIT REQUESTS?\n\nRate Limits only apply to calls to the REST API, not to any webhook requests that are sent as part of the Canvas Kit capabilities.\n\nWhat is the default amount of requests?\n\nEvery app will have default rate limits. The amount we rate limit them by is different for apps which are privately built for your own usage, or for apps that are publicly installed by third-parties.\n\nPrivate\n\nPrivate apps have a default rate limit of 10,000 API calls per minute per app and 25,000 API calls per minute per workspace. This means that if a workspace has multiple private apps installed, every one contributes towards total number of requests.\n\nPublic\n\nPublic apps have a default rate limit of 10,000 API calls per minute for each app and 25,000 API calls per minute per workspace. This means that if a workspace has multiple public apps installed, each one has its own separate request limit without contributing to the others.\n\nHIGHER RATE LIMITS\n\nIf you require higher rate limits than the defaults, you can contact us using the messenger in the bottom right.\n\nWhen does the amount of requests reset?\n\nAlthough the permitted limit of requests lasts for 1 minute, we evenly distribute this into 10 second windows. This means that every 10 seconds, the amount of permitted requests resets. For example, a default rate limit of 1000 per minute means that you can send a maximum of 166 operations per 10 second period (1000/6)."
  },
  {
    "title": "Webhook Topics",
    "url": "https://developers.intercom.com/docs/references/2.8/webhooks/webhook-models/",
    "html": "Webhook Topics\n\nYou can subscribe to the following Webhook topics, and you will receive notifications on your endpoint URL when an event occurs. The 'Object' column shows the Intercom object related to the event sent as part of the notification.\n\nEach Webhook topic is associated with one or more permissions. When you set up a subscription to a particular topic, you will need to select the appropriate permissions to be able to receive a notification for that topic.\n\n🚧 Multiple permissions\n\nSome topics are associated with multiple permissions. In these cases, you don't need to select all these permissions to subscribe to that topic.\n\nAdmin topics\nTopic\tObject\tEvent description\tPermissions\nadmin.added_to_workspace\tAdmin\tAn Admin being added to workspace\tRead admins\nadmin.away_mode_updated\tAdmin\tAdmin away mode updates\tRead admins\nadmin.removed_from_workspace\tAdmin\tAn Admin being removed from a workspace\tRead admins\nadmin.logged_in\tAdmin\tAn Admin logging into a workspace\tRead admins\nadmin.logged_out\tAdmin\tAn Admin manually logging out of Intercom in the current workspace or when the Admin's session expires after signing in through SAML SSO\tRead admins\nCompany topics\nTopic\tObject\tEvent description\tPermissions\ncompany.created\tCompany\tCompany creations\tRead users and companies\nRead one user and one company\ncompany.deleted\tCompany\tCompany deletions\tRead users and companies\nRead one user and one company\ncompany.updated\tCompany\tCompany being updated\tRead users and companies\nRead one user and one company\ncompany.contact.attached\tCompany, Contact\tCompany attached to a Contact\tRead users and companies, Read one user and one company\ncompany.contact.detached\tCompany, Contact\tCompany detached from a Contact\tRead users and companies, Read one user and one company\nContact topics\nTopic\tObject\tEvent description\tPermissions\ncontact.archived\tContact\tContacts archived\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.deleted\tContact\tContacts deleted\tRead users and companies\nRead one user and one company\ncontact.email.updated\tContact\tA Contact email address is updated\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.lead.added_email\tContact\tAn email address is added to a Contact\n(Lead)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.lead.created\tContact\tContact creations\n(Lead)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.lead.signed_up\tContact\tContacts converting from Leads to Users\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.lead.tag.created\tContact Tag\tContacts being tagged (Lead)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.lead.tag.deleted\tContact Tag\tContacts being untagged (Lead)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.lead.updated\tContact\tContacts being updated\n(Lead)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.merged\tContact\tContacts being merged\n(User and Lead)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.subscribed\tSubscription\tContacts subscribing to email\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.unarchive\tContact\tContacts unarchived\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.unsubscribed\tSubscription\tContacts unsubscribing from email\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.user.created\tContact\tContact creations\n(User)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.user.tag.created\tContact Tag\tContacts being tagged\n(User)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.user.tag.deleted\tContact Tag\tContacts being untagged\n(User)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.user.updated\tContact\tContact updated (User)\tRead users and companies, Read and write users,\nRead one user and one company\nConversation topics\nTopic\tObject\tEvent description\tPermissions\nconversation.admin.assigned\tConversation\tAdmin conversation assignments\tRead conversations\nconversation.admin.closed\tConversation\tAdmin conversation closed\tRead conversations\nconversation.admin.noted\tConversation\tAdmin conversation notes\tRead conversations\nconversation.admin.open.assigned\tConversation\tAdmin open conversation assignments\tRead conversations\nconversation.admin.opened\tConversation\tAdmin conversation opens\tRead conversations\nconversation.admin.replied\tConversation\tAdmin conversation replies\tRead conversations\nconversation.admin.single.created\tConversation\tAdmin initiated 1:1 conversations\tRead conversations\nconversation.admin.snoozed\tConversation\tAdmin conversation snoozes\tRead conversations\nconversation.admin.unsnoozed\tConversation\tAdmin conversation unsnoozes\tRead conversations\nconversation.deleted\tConversation\tConversation deleted\tRead conversations\nconversation_part.redacted\tConversation Part\tConversation parts being deleted\tRead conversations\nconversation_part.tag.created\tConversation Part\tConversation parts being tagged\tRead conversations\nconversation.priority.updated\tConversation\tConversation priority updated\tRead conversations\nconversation.rating.added\tConversation\tConversations getting a rating\tRead conversations\nconversation.read\tConversation\tContacts reading conversations\n(User and Lead)\t\nconversation.user.created\tConversation\tContact initiated conversations\n(User and Lead)\tRead conversations\nconversation.user.replied\tConversation\tContact conversation replies\n(Visitor, Lead and User)\tRead conversations\nconversation.contact.attached\tConversation, Contact\tContact attached to a conversation\tRead conversations\nconversation.contact.detached\tConversation, Contact\tContact detached from a conversation\tRead conversations\nEvent topics\nTopic\tObject\tEvent description\tPermissions\nevent.created\tEvent\tEvents created\tRead events\nSubscription topics\nTopics\tObject\tEvent description\tPermissions\ngranular.unsubscribe\tSubscription\tA User unsubscribes from a message subscription type\tRead and list users and companies\nRead and write users\nRead one user and one company\ngranular.subscribe\tSubscription\tA User subscribes from a message subscription type\tRead and list users and companies\nRead and write users\nRead one user and one company\nVisitor topics\nTopics\tObject\tEvent description\tPermissions\nvisitor.signed_up\tVisitor\tContacts converting from Visitors to Users\tRead users and companies\nRead and write users\nRead one user and one company\nPing\nTopics\tObject\tEvent description\nping\tPing\tSent when a post to the subscription's ping resource is received or periodically by Intercom. Ping is always subscribed to.\nContent stat topics\nTopics\tObject\tEvent description\tPermissions\ncontent_stat.banner\tContent Stat\tBanner message events:\n- receipt (Banner displayed)\n- goal_success\n- click\n- collected_email\n- reaction\tRead content data\ncontent_stat.carousel\tContent Stat\tMobile carousel events:\n- receipt (Carousel displayed)\n- goal_success\n- button_tap\n- completion\n- dismissal\n- permission_grant\tRead content data\ncontent_stat.chat\tContent Stat\tChat message events:\n- receipt (Chat delivered)\n- goal_success\n- open\n- click\n- collected_email\n- reply\tRead content data\ncontent_stat.checklist\tContent Stat\tChecklist events:\n- receipt (Checklist shown)\n- goal_success\tRead content data\ncontent_stat.custom_bot\tContent Stat\tCustom Bot events:\n- receipt\n- goal_success\n- reply\n- completion\tRead content data\ncontent_stat.email\tContent Stat\tEmail events:\n- receipt (Email sent)\n- goal_success\n- open\n- click\n- reply\n\nEmail failure events:\n- hard_bounce\n- soft_bounce\n- spam_complaint\n- unsubscribe\tRead content data\ncontent_stat.news_item\tContent Stat\tNews Item events:\n- receipt (News Item displayed)\n- open\n- click\n- reaction\tRead content data\ncontent_stat.post\tContent Stat\tPost message events:\n- receipt (Post sent)\n- goal_success\n- open\n- click\n- Reply\n- reaction\tRead content data\ncontent_stat.push\tContent Stat\tPush message events:\n- receipt (Push sent)\n- goal_success\n- Open\n\nPush message failure events:\n- push_failure\tRead content data\ncontent_stat.series\tContent Stat\tSeries campaign events:\n- receipt\n- goal_success\n- series_completion\n- series_disengagement\n- series_exit\tRead content data\ncontent_stat.series.webhook\tContent Stat\tSeries Webhook events:\n- receipt\n\nSeries Webhook failure event:\n- failure\tRead content data\ncontent_stat.sms\tContent Stat\tSMS message events:\n- receipt (SMS sent)\n- goal_success\n- keyword_reply\n\nFailure stat types include:\n- sms_failure\n- unsubscribe\tRead content data\ncontent_stat.survey\tContent Stat\tSurvey events:\n- receipt (Survey shown)\n- goal_success\n- answer\n- click\n- completion\n- dismissal\tRead content data\ncontent_stat.tooltip_group\tContent Stat\tTooltip events:\n- receipt\n- goal_success\tRead content data\ncontent_stat.tour\tContent Stat\tProduct tour events:\n- receipt (Tour shown)\n- goal_success\n- tour_step_failure\n- completion\tRead content data\nWebhook notification object\n\nA standard Webhook notification object contains the following fields:\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'notification_event'\nid\tstring\tThe Intercom defined id representing the notification.\nself\tstring\tThe Intercom defined URL for the subscription. Optional.\ncreated_at\ttimestamp\tThe timestamp the notification was created.\ntopic\tstring\tCorresponds to a topic.\ndelivery_attempts\tnumber\tThe number of times this notification has been attempted.\nfirst_sent_at\ttimestamp\tThe first time the delivery was attempted.\ndata\tobject\tA container for the data associated with the notification.\ndata.item\tobject\tThe data associated with the notification, which will have a 'type' field.\n\nThe contents of data.item object will be defined according to its type field. In the example below, the type value of Company indicates a company object.\n\n{\n  \"type\": \"notification_event\",\n  \"topic\": \"company.created\",\n  \"id\": \"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b3\",\n  \"app_id\" : \"a86dr8yl\",\n  \"created_at\": 1392731331,\n  \"delivery_attempts\": 1,\n  \"first_sent_at\": 1392731392,\n  \"data\": {\n    \"item\": {\n      \"type\": \"company\",\n      \"id\": \"531ee472cce572a6ec000006\",\n      \"name\": \"Blue Sun\",\n      \"company_id\": \"6\",\n      \"remote_created_at\": 1394531169,\n      \"created_at\": 1394533506,\n      \"updated_at\": 1396874658,\n      \"custom_attributes\": {\n      }\n    }\n  }\n}\n\nHandling Webhook notifications\n\nYou will receive notifications on your chosen topics when you set up a subscription. How you handle those notifications, i.e. the HTTP status code returned, will determine the subsequent state of that subscription.\n\n❗️ Timeout\n\nYou have 5 seconds to respond to a notification. If you don't send a response within that time, the notification is treated as failed and will be retried only once after 1 minute.\n\nIf you respond with too many error responses, we drop future notifications for a period of 15 minutes.\n\nResponse Code\tDescription\tAction\n2xx\tSuccess\tThe webhook was successfully delivered.\n410\tGone\tWhen a 410 is received, we assume the resource is no longer available. We will disable the subscription and no more notifications will be sent.\n429\tToo many requests\tWhen a 429 is received, all notifications from that subscription will be throttled. Depending on the rate of delivery, this delay can be between 1 minute to 2 hours. If 429s continue and any notification is delayed for > 2 hours then we will drop that notification.\n4xx (excl. 429)\n5xx\tClient or service errors\tWe will retry after 1 minute for all other errors. If the 2nd retry fails then we mark the notification delivery as failed.\nSigned notifications\n\nIntercom signs webhook notifications via an X-Hub-Signature header. We do this so that you can verify that the notification came from Intercom by decoding the signature.\n\nWe compute the value of this X-Hub-Signature header by creating a signature using the body of the JSON request and your App's client_secret value, which you can find on the Basic Info page of your App.\n\nThe signature is the hexadecimal (40-byte) representation of an SHA-1 signature computed using the HMAC algorithm defined in RFC2104.\n\nThe X-Hub-Signature header value starts with the string sha1= followed by the signature.\n\nPOST https://example.org/hooks\nUser-Agent: intercom-parrot-service-client/1.0\nX-Hub-Signature: sha1=21ff2e149e0fdcac6f947740f6177f6434bda921\nAccept: application/json\nContent-Type: application/json\n\n{\n  \"type\" : \"notification_event\",\n  \"id\" : \"notif_78c122d0-23ba-11e4-9464-79b01267cc2e\",\n  \"topic\" : \"user.created\",\n  \"app_id\" : \"a86dr8yl\",\n  \"data\" : {\n    \"type\" : \"notification_event_data\",\n    \"item\" : {\n      \"type\" : \"user\",\n      \"id\" : \"530370b477ad7120001d\",\n      \"user_id\" : \"25\",\n      \"name\" : \"Hoban Washburne\",\n      \"unsubscribed_from_emails\" : false,\n      \"custom_attributes\" : {}\n    }\n  }\n}\n\nAdmin notification object\n\nThe Admin notification object is similar to the model returned via the API. You can see an example object below:\n\n{\n  \"type\": \"admin\",\n  \"id\": \"1\",\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@intercom.io\",\n  \"job_title\": \"CEO\",\n  \"away_mode_enabled\": true,\n  \"away_mode_reassign\": false,\n  \"away_status_reason\": \"🍔 On lunch\",\n  \"has_inbox_seat\": true,\n  \"team_ids\": []\n}\n\nContact Tag notification object\n\nWe only return the Contact Tag notification object for Webhooks. You can see an example object below:\n\n{\n  \"type\": \"contact_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"1287\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"contact\" : {\n      \"type\": \"contact\",\n      \"id\": \"1287ab1287fefe\",\n        ........\n  }\n}\n\n\nA Contact Tag notification object is composed from the existing Contact and Tag objects and is sent when Contacts are tagged and untagged via the contact.user.tag.created, contact.lead.tag.created, contact.lead.tag.deleted and contact.user.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'contact_tag'.\ncreated_at\ttimestamp\tThe time the contact tag object was created.\ntag\tTag\tThe tag that was added or removed.\ncontact\tcontact\tThe contact that was tagged or untagged.\nContent Stat notification object\n\nWe only return the Content Stat notification object for Webhooks. You can see an example object below:\n\n{\n  \"type\": \"content_stat.series\",\n  \"created_at\": \"2022-10-11T15:01:07.000Z\",\n  \"content_stat\": {\n    \"id\": 1,\n    \"content_type\": \"series\",\n     \"content_id\": 1,\n     \"stat_type\": \"receipt\",\n     \"ruleset_id\": 29,\n     \"content_title\": \"Untitled\",\n     \"ruleset_version_id\": -1,\n     \"receipt_id\": 1,\n     \"tags\": {\n       \"type\": \"list\",\n       \"has_more\": false,\n       \"data\": [],\n       \"total_count\": 0\n     },\n     \"series_id\": 1,\n     \"series_title\": null,\n     \"node_id\": 3\n  },\n  \"contact\": {\n    \"type\": \"contact\",\n    \"id\": \"6318db7dfb80c614fe1792b5\",\n    ...\n  }\n}\n\n\nThe Content Stat notification object will match our existing Webhook notification object detailed here and contains the following fields:\n\nAttribute\tType\tDescription\nid\tstring\tThe unique identifier for the Content Stat set by Intercom\ncontent_type\tstring\tThe type of Content the Stat relates to, e.g. Email, Chat, Post, Push etc\ncontent_id\tstring\tThe unique identifier for the Content given by Intercom, In an A/B test each version has its own identifier.\nstat_type\tstring\tType of the stat event. While there are some common stat types like \"receipt\", others are content specific. Content Type email, for example, has stats for unsubscribe, bounce etc. The list of supported stat types is included in the table above. Others may be added over time.\ncontent_title\tstring\tThe title of Content you see in your Intercom Workspace\nruleset_id\tstring\tThe unique identifier of the Outbound Message the Content relates to in your Intercom Workspace\nruleset_version_id\tstring\tThe unique identifier of the Outbound Message version the Content relates to in your Intercom Workspace\nseries_id\tstring\tOptional - If the stat relates to a Content object (email, push, etc) which is part of a Series campaign, this will include the ID of that Series campaign\nseries_title\tstring\tOptional - If the stat relates to a Content object (email, push, etc) which is part of a Series campaign, this is title of the Series\nnode_id\tstring\tOptional - If the stat relates to a Content object (email, push, etc) which is part of a Series campaign, this is the ID of the Node in the Series\ncontact\tobject\tNested Contact object. This is the user or lead to whom the content was sent.\ncompany\tobject\tOptional nested Company object. If the content stat relates to a company (company predicates were used in the audience targeting), the company information is also included.\nContent Stat Survey response notification object\n\nThe content_stat.survey notification object contains additional payload fields relating to Survey answers. The individual answer key is included in the answer stat type event. The answers key is included in the completion stat type event showing all answers in the Survey.\n\nAttribute\tType\tDescription\nanswered_at\tstring\tThe time the question was answered.\nquestion_id\tstring\tThe ID of the specific survey question.\nquestion_text\tstring\tThe text of the question\nresponse\tstring\tThe raw response from the user"
  },
  {
    "title": "Data Attributes",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/data-attributes/data-attributes/",
    "html": "Data Attributes\n\nData Attributes are a type of metadata used to describe your customer and company models. These include standard and custom attributes. In other words data attributes are properties that help to describe your customers and companies in more detail. Using the data attributes endpoint you can get the global list of attributes for your app as well as the metadata (i.e. datatype and format) associated with each attribute."
  },
  {
    "title": "List Company Data Attributes",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/data-attributes/list-company-data-attributes/",
    "html": "List Company Data Attributes\nList Company attributes\n\nYou can fetch a list of all the company data attributes for your app by using https://api.intercom.io/data_attributes/company.\n\nList of your company data attributes\n\nReturns\n\nList of data attributes\n\n$ curl https://api.intercom.io/data_attributes/company \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n{\n    \"type\": \"data_attribute.list\",\n    \"data_attributes\": [\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"name\",\n            \"full_name\": \"name\",\n            \"label\": \"Company name\",\n            \"description\": \"The name of a company\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": true,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"company_id\",\n            \"full_name\": \"company_id\",\n            \"label\": \"Company ID\",\n            \"description\": \"A number identifying a company\",\n            \"data_type\": \"string\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"last_request_at\",\n            \"full_name\": \"last_request_at\",\n            \"label\": \"Company last seen\",\n            \"description\": \"The last day anyone from a company visited your site or app\",\n            \"data_type\": \"date\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"remote_created_at\",\n            \"full_name\": \"remote_created_at\",\n            \"label\": \"Company created at\",\n            \"description\": \"The day a company was added to Intercom\",\n            \"data_type\": \"date\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"user_count\",\n            \"full_name\": \"user_count\",\n            \"label\": \"People\",\n            \"description\": \"The number of people in a company\",\n            \"data_type\": \"integer\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"session_count\",\n            \"full_name\": \"session_count\",\n            \"label\": \"Company web sessions\",\n            \"description\": \"All visits from anyone in a company to your product's site or app\",\n            \"data_type\": \"integer\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"website\",\n            \"full_name\": \"website\",\n            \"label\": \"Company website\",\n            \"description\": \"The web address for the company's primary marketing site\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": true,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"subdomain\",\n            \"full_name\": \"custom_attributes.subdomain\",\n            \"label\": \"subdomain\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1500395363,\n            \"updated_at\": 1500395363\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"creation_source\",\n            \"full_name\": \"custom_attributes.creation_source\",\n            \"label\": \"creation_source\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1500477452,\n            \"updated_at\": 1500477452\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"paid_subscriber\",\n            \"full_name\": \"custom_attributes.paid_subscriber\",\n            \"label\": \"paid_subscriber\",\n            \"data_type\": \"boolean\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1511192754,\n            \"updated_at\": 1511192754\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"team_mates\",\n            \"full_name\": \"custom_attributes.team_mates\",\n            \"label\": \"team_mates\",\n            \"data_type\": \"integer\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1511192755,\n            \"updated_at\": 1511192755\n        }\n    ]\n}\n\n\nBy default a list of all unarchived data attributes is returned. You can include the following parameter to retrieve all the company data attributes for your app (i.e. including archived attributes)\n\nParameter\tType\tDescription\ninclude_archived\tboolean\tInclude archived attributes in the list. By default we return only non archived data attributes\nList of your company data attributes including archived\n$ curl https://api.intercom.io/data_attributes/company?include_archived=true \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n{\n    \"type\": \"data_attribute.list\",\n    \"data_attributes\": [\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"name\",\n            \"full_name\": \"name\",\n            \"label\": \"Company name\",\n            \"description\": \"The name of a company\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": true,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"company_id\",\n            \"full_name\": \"company_id\",\n            \"label\": \"Company ID\",\n            \"description\": \"A number identifying a company\",\n            \"data_type\": \"string\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"last_request_at\",\n            \"full_name\": \"last_request_at\",\n            \"label\": \"Company last seen\",\n            \"description\": \"The last day anyone from a company visited your site or app\",\n            \"data_type\": \"date\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"remote_created_at\",\n            \"full_name\": \"remote_created_at\",\n            \"label\": \"Company created at\",\n            \"description\": \"The day a company was added to Intercom\",\n            \"data_type\": \"date\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"user_count\",\n            \"full_name\": \"user_count\",\n            \"label\": \"People\",\n            \"description\": \"The number of people in a company\",\n            \"data_type\": \"integer\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"session_count\",\n            \"full_name\": \"session_count\",\n            \"label\": \"Company web sessions\",\n            \"description\": \"All visits from anyone in a company to your product's site or app\",\n            \"data_type\": \"integer\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"name\",\n            \"full_name\": \"plan.name\",\n            \"label\": \"Plan\",\n            \"description\": \"A specific plan or level within your product that companies have signed up to\",\n            \"data_type\": \"string\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"monthly_spend\",\n            \"full_name\": \"monthly_spend\",\n            \"label\": \"Monthly Spend\",\n            \"description\": \"The monthly revenue you receive from a company\",\n            \"data_type\": \"float\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"size\",\n            \"full_name\": \"size\",\n            \"label\": \"Company size\",\n            \"description\": \"The number of people employed in this company, expressed as a single number\",\n            \"data_type\": \"integer\",\n            \"api_writable\": true,\n            \"ui_writable\": true,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"industry\",\n            \"full_name\": \"industry\",\n            \"label\": \"Company industry\",\n            \"description\": \"The category or domain this company belongs to e.g. 'ecommerce' or 'SaaS'\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": true,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"website\",\n            \"full_name\": \"website\",\n            \"label\": \"Company website\",\n            \"description\": \"The web address for the company's primary marketing site\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": true,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"subdomain\",\n            \"full_name\": \"custom_attributes.subdomain\",\n            \"label\": \"subdomain\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1500395363,\n            \"updated_at\": 1500395363\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"creation_source\",\n            \"full_name\": \"custom_attributes.creation_source\",\n            \"label\": \"creation_source\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1500477452,\n            \"updated_at\": 1500477452\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"paid_subscriber\",\n            \"full_name\": \"custom_attributes.paid_subscriber\",\n            \"label\": \"paid_subscriber\",\n            \"data_type\": \"boolean\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1511192754,\n            \"updated_at\": 1511192754\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"team_mates\",\n            \"full_name\": \"custom_attributes.team_mates\",\n            \"label\": \"team_mates\",\n            \"data_type\": \"integer\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1511192755,\n            \"updated_at\": 1511192755\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"monthly_spend\",\n            \"full_name\": \"custom_attributes.monthly_spend\",\n            \"label\": \"monthly_spend\",\n            \"data_type\": \"integer\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": true,\n            \"created_at\": 1511192755,\n            \"updated_at\": 1511192755\n        }\n    ]\n}\n"
  },
  {
    "title": "List Customer Data Attributes",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/data-attributes/list-customer-data-attributes/",
    "html": "List Customer Data Attributes\nList customer attributes\n\nYou can fetch a list of data attributes belonging to customers by using https://api.intercom.io/data_attributes/customer. Customer attributes describe attributes belonging to users, leads and visitors. All 3 models have the same data attributes.\n\nReturns\n\nList of data attributes\n\nList of your customer data attributes\n\n$ curl https://api.intercom.io/data_attributes/customer \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n{\n  \"type\": \"data_attribute.list\",\n  \"data_attributes\": [\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"paid_subscriber\",\n      \"full_name\": \"custom_attributes.paid_subscriber\",\n      \"label\": \"paid_subscriber\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"options\": [\n        \"pick_value_1\",\n        \"pick_value_2\"\n      ],\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": true,\n      \"archived\": false,\n      \"admin_id\": \"1\",\n      \"created_at\": 1392734388,\n      \"updated_at\": 1392734388\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"cda2\",\n      \"full_name\": \"custom_attributes.cda2\",\n      \"label\": \"cda2\",\n      \"description\": \"\",\n      \"data_type\": \"integer\",\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": true,\n      \"archived\": false,\n      \"admin_id\": \"1\",\n      \"created_at\": 1392734388,\n      \"updated_at\": 1392734388\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"email\",\n      \"full_name\": \"email\",\n      \"label\": \"Email\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": false,\n      \"archived\": false\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"region_name\",\n      \"full_name\": \"location_data.region_name\",\n      \"label\": \"Region\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"api_writable\": false,\n      \"ui_writable\": true,\n      \"custom\": false,\n      \"archived\": false\n    }\n  ]\n}\n\n\nYou can also include the archived attributes by adding this parameter:\n\nParameter\tType\tDescription\ninclude_archived\tboolean\tInclude archived attributes in the list. By default we return only non archived data attributes\nList of your customer data attributes including archived\n$ curl https://api.intercom.io/data_attributes/customer?include_archived=true \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n{\n  \"type\": \"data_attribute.list\",\n  \"data_attributes\": [\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"paid_subscriber\",\n      \"full_name\": \"custom_attributes.paid_subscriber\",\n      \"label\": \"paid_subscriber\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"options\": [\n        \"pick_value_1\",\n        \"pick_value_2\"\n      ],\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": true,\n      \"archived\": false,\n      \"admin_id\": \"1\",\n      \"created_at\": 1392734388,\n      \"updated_at\": 1392734388\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"cda2\",\n      \"full_name\": \"custom_attributes.cda2\",\n      \"label\": \"cda2\",\n      \"description\": \"\",\n      \"data_type\": \"integer\",\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": true,\n      \"archived\": false,\n      \"admin_id\": \"1\",\n      \"created_at\": 1392734388,\n      \"updated_at\": 1392734388\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"email\",\n      \"full_name\": \"email\",\n      \"label\": \"Email\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": false,\n      \"archived\": false\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"region_name\",\n      \"full_name\": \"location_data.region_name\",\n      \"label\": \"Region\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"api_writable\": false,\n      \"ui_writable\": true,\n      \"custom\": false,\n      \"archived\": false\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"Department\",\n      \"full_name\": \"custom_attributes.foo\",\n      \"label\": \"Department\",\n      \"data_type\": \"string\",\n      \"api_writable\": true,\n      \"ui_writable\": false,\n      \"custom\": true,\n      \"archived\": true,\n      \"created_at\": 1500460535,\n      \"updated_at\": 1511274873\n    }\n  ]\n}\n"
  },
  {
    "title": "Retrieve a note",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/notes/view-a-note/",
    "html": "Retrieve a note\nExample Request\n$ curl https://api.intercom.io/notes/<id> \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"note\",\n  \"id\": \"2\",\n  \"created_at\": 1389913951,\n  \"body\": \"<p>Text for my note</p>\",\n  \"user\": {\n      \"id\": \"5310d8e8598c9a0b24000005\",\n      \"type\": \"user\"\n    },\n  \"author\": {\n    \"type\": \"admin\",\n    \"id\": \"21\",\n    \"name\": \"Jayne Cobb\",\n    \"email\": \"jayne@serenity.io\",\n    \"avatar\" : {\n       \"type\":\"avatar\",\n      \"image_url\": \"http://example.org/128Jayne.jpg\"\n    },\n    \"companies\": []\n  }\n}\n\nintercom.notes.find(:id => note)\n\n<?php\n$note = $intercom->notes->getNote(\"9259097\");\n?>\n\nNote note = Note.find(\"2\");\n\n\nYou can fetch the details of a single note.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier of a given note.\nResponse\n\nThis will return a Note model."
  },
  {
    "title": "Notes",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/notes/notes/",
    "html": "Notes\n\nNotes allow you to annotate and comment on your users. (If you want to add notes to conversations please see Conversation Admin Reply).\n\nA note can be authored by an admin about a user, and the notes associated with a user can be listed."
  },
  {
    "title": "The note model",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/notes/note-model/",
    "html": "The note model\nExample Note Object\n{\\n  \\\"type\\\": \\\"note\\\",\\n  \\\"id\\\": \\\"16\\\",\\n  \\\"created_at\\\": 1389913941,\\n  \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n  \\\"author\\\": {\\n    \\\"type\\\": \\\"admin\\\",\\n    \\\"id\\\": \\\"21\\\",\\n    \\\"name\\\": \\\"Jayne Cobb\\\",\\n    \\\"email\\\": \\\"jayne@serenity.io\\\",\\n    \\\"companies\\\": []\\n  },\\n  \\\"user\\\": {\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\"\\n  }\\n}\n\n\nNotes allow you to annotate and comment on your contacts.\n\nCOMPANIES AND CONVERSATIONS\n\nCurrently not possible to create notes for companies. Reach out if you want to submit a feature request, we take these into account.\\n\\nConversations notes are created via the Reply a conversations API.\n\nNote Object\nKey\tType\tDescription\ntype\tString\tvalue is 'note'\nid\tString\tThe id representing the note\ncreated_at\tTimestamp\tThe time the note was created\nuser\tObject\tThe user the note was created about\nbody\tString\tThe body text of the note.\nauthor\tObject\tOptional. Represents the Admin that created the note"
  },
  {
    "title": "Rate Limiting",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/errors/rate-limiting/",
    "html": "Rate Limiting\n# Example with the default rate limit of 1000\n\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 100\nX-RateLimit-Reset: 1487332510\n\n# After another request:\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 99\nX-RateLimit-Reset: 1487332510\n\n# After window resets\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 100\nX-RateLimit-Reset: 1487332520\n\n# If you make more than the allowed requests\nHTTP/1.1 429 Too Many Requests\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 0\nX-RateLimit-Reset: 1487332520\n\nintercom.rate_limit_details\n#=> {:limit=>1000, :remaining=>999, :reset_at=>2019-08-05 14:59:00 +0100}\n\n\nAPI Rate Limits are in place to protect Intercom from API traffic spikes that could put our databases at risk. We therefore measure the amount of requests sent to the API in order to throttle these when they surpass the amount allowed. We will respond with '429 Too Many Requests' and the following headers:\n\nHeader Name\tHeader Description\nX-RateLimit-Limit\tMaximum number of requests allowed for the app.\nX-RateLimit-Remaining\tNumber of requests left in the current time.\nX-RateLimit-Reset\tTime when the number of requests will be reset to the maximum limit. Shown as UNIX timestamp.\nWHAT ABOUT CANVAS KIT REQUESTS?\n\nRate Limits only apply to calls to the REST API, not to any webhook requests that are sent as part of the Canvas Kit capabilities.\n\nWhat is the default amount of requests?\n\nEvery app will have default rate limits. The amount we rate limit them by is different for apps which are privately built for your own usage, or for apps that are publicly installed by third-parties.\n\nPrivate\n\nPrivate apps have a default rate limit of 10,000 API calls per minute per app and 25,000 API calls per minute per workspace. This means that if a workspace has multiple private apps installed, every one contributes towards total number of requests.\n\nPublic\n\nPublic apps have a default rate limit of 10,000 API calls per minute for each app and 25,000 API calls per minute per workspace. This means that if a workspace has multiple public apps installed, each one has its own separate request limit without contributing to the others.\n\nHIGHER RATE LIMITS\n\nIf you require higher rate limits than the defaults, you can contact us using the messenger in the bottom right.\n\nWhen does the amount of requests reset?\n\nAlthough the permitted limit of requests lasts for 1 minute, we evenly distribute this into 10 second windows. This means that every 10 seconds, the amount of permitted requests resets. For example, a default rate limit of 1000 per minute means that you can send a maximum of 166 operations per 10 second period (1000/6)."
  },
  {
    "title": "Rate Limiting",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/errors/rate-limiting/",
    "html": "Rate Limiting\n# Example with the default rate limit of 1000\n\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 100\nX-RateLimit-Reset: 1487332510\n\n# After another request:\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 99\nX-RateLimit-Reset: 1487332510\n\n# After window resets\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 100\nX-RateLimit-Reset: 1487332520\n\n# If you make more than the allowed requests\nHTTP/1.1 429 Too Many Requests\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 0\nX-RateLimit-Reset: 1487332520\n\nintercom.rate_limit_details\n#=> {:limit=>1000, :remaining=>999, :reset_at=>2019-08-05 14:59:00 +0100}\n\n\nAPI Rate Limits are in place to protect Intercom from API traffic spikes that could put our databases at risk. We therefore measure the amount of requests sent to the API in order to throttle these when they surpass the amount allowed. We will respond with '429 Too Many Requests' and the following headers:\n\nHeader Name\tHeader Description\nX-RateLimit-Limit\tMaximum number of requests allowed for the app.\nX-RateLimit-Remaining\tNumber of requests left in the current time.\nX-RateLimit-Reset\t_Time when the number of requests will be reset to the maximum limit. _Shown as UNIX timestamp.\nWHAT ABOUT CANVAS KIT REQUESTS?\n\nRate Limits only apply to calls to the REST API, not to any webhook requests that are sent as part of the Canvas Kit capabilities.\n\nWhat is the default amount of requests?\n\nEvery app will have default rate limits. The amount we rate limit them by is different for apps which are privately built for your own usage, or for apps that are publicly installed by third-parties.\n\nPrivate\n\nPrivate apps have a default rate limit of 10,000 API calls per minute per app and 25,000 API calls per minute per workspace. This means that if a workspace has multiple private apps installed, every one contributes towards total number of requests.\n\nPublic\n\nPublic apps have a default rate limit of 10,000 API calls per minute for each app and 25,000 API calls per minute per workspace. This means that if a workspace has multiple public apps installed, each one has its own separate request limit without contributing to the others.\n\nHIGHER RATE LIMITS\n\nIf you require higher rate limits than the defaults, you can contact us using the messenger in the bottom right.\n\nWhen does the amount of requests reset?\n\nAlthough the permitted limit of requests lasts for 1 minute, we evenly distribute this into 10 second windows. This means that every 10 seconds, the amount of permitted requests resets. For example, a default rate limit of 1000 per minute means that you can send a maximum of 166 operations per 10 second period (1000/6)."
  },
  {
    "title": "Data Attribute Model",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/data-attributes/data-attribute-model/",
    "html": "Data Attribute Model\nExample Data Attribute Object\n{\\n  \\\"type\\\": \\\"data_attribute\\\",\\n  \\\"name\\\": \\\"paid_subscriber\\\",\\n  \\\"full_name\\\": \\\"custom_attributes.paid_subscriber\\\", \\n  \\\"label\\\": \\\"paid_subscriber\\\", \\n  \\\"description\\\": \\\"\\\",\\n  \\\"data_type\\\": \\\"string\\\", \\n  \\\"options\\\": [\\n    \\\"pick_value_1\\\",\\n    \\\"pick_value_2\\\"\\n  ],\\n  \\\"api_writable\\\": true, \\n  \\\"ui_writable\\\": true, \\n  \\\"custom\\\": true, \\n  \\\"archived\\\": false, \\n  \\\"admin_id\\\": \\\"1\\\",\\n  \\\"created_at\\\": 1392734388,\\n  \\\"updated_at\\\": 1392734388\\n}\\n\n\nData Attribute Object\n\nA data attribute object contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'data_attribute'\nid\tinteger\tThe unique identifier for the data attribute which is given by Intercom. Only available for custom attributes.\nname\tstring\tname of the attribute\n\nExamples:\nemail\nregion_name for region_name for stored in location_data object\nimage_url for image_url for stored in avatar object\npaid_subscriber for CDA named paid_subscriber\nfull_name\tstring\tFull name of the attribute. Should match the name unless it's a nested attribute.\n\nExamples:\nemail\nlocation_data.region_name\navatar.image_url\ncustom_attributes.paid_subscriber\n\nWe can split full_name on . to access nested user object values.\nExamples:\nuser['location_data']['region_name']\nuser['custom_attributes']['paid_subscriber']\nlabel\tstring\tReadable name of the attribute (i.e. name you see in the UI)\ndescription\tstring\tReadable description of the attribute\ndata_type\tstring\tType of data stored in the attribute.\nPossible values:\nstring\ninteger\nfloat\nboolean\ndate\noptions\tlist\tList of predefined options for attribute value.\nExample:\n[\"option_1\", \"option_2\"]\napi_writable\tboolean\tCan this attribute be updated through API\nui_writable\tboolean\tCan this attribute be updated in the UI\ncustom\tboolean\tSet to true if this is a CDA\narchived\tboolean\tOnly applicable to CDAs\ncreated_at\ttimestamp\tThe time the CDA was created.\nOnly applicable to CDAs.\nupdated_at\ttimestamp\tThe last time the CDA was updated.\nOnly applicable to CDAs.\nadmin_id\tstring\tTeammate who created the attribute.\nOnly applicable for CDAs"
  },
  {
    "title": "HTTP Responses",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/errors/http-responses/",
    "html": "HTTP Responses\n\nThe API returns HTTP responses on each request to indicate the success or otherwise of API requests. The codes listed below are often used, and the API may use others. Note that 4xx and 5xx responses may be returned for any request and clients should cater for them.\n\nResponse Code\tDescription\n400\tBad Request -- General client error, possibly malformed data.\n401\tUnauthorized -- The API Key was not authorised (or no API Key was found).\n402\tPayment Required -- The API is not available on your current plan.\n403\tForbidden -- The request is not allowed.\n404\tNot Found -- The resource was not found.\n405\tMethod Not Allowed -- The resource does not accept the HTTP method.\n406\tNot Acceptable -- The resource cannot return the client's required content type.\n408\tRequest Timeout -- The server would not wait any longer for the client.\n409\tConflict - Multiple existing users match this email address - must be more specific using user_id\n415\tUnsupported Media Type - The server doesn't accept the submitted content-type.\n422\tUnprocessable Entity -- The data was well-formed but invalid.\n429\tToo Many Requests -- The client has reached or exceeded a rate limit, or the server is overloaded.\n500, 502, 503, 504\tServer errors - something went wrong with Intercom's servers. These responses are most likely momentary operational errors (e.g. temporary unavailability), and, as a result, requests should be retried once."
  },
  {
    "title": "Error Codes",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/errors/error-codes/",
    "html": "Error Codes\n\nThe API may send the following error codes. Other codes may be added in the future.\n\nField\tDescription\nserver_error\tGeneric server error\nclient_error\tGeneric client error\ntype_mismatch\tThe JSON value type is incorrect for the field\nparameter_not_found\tA required parameter was not supplied\nparameter_invalid\tA parameter's value is invalid\naction_forbidden\tThe action is not authorized\nconflict\tThere is existing data that clashes with the request data\napi_plan_restricted\tThe API is not available on this App's Plan\nrate_limit_exceeded\tThe rate limit for the App has been exceeded\nunsupported\tThe operation is not supported\ntoken_revoked\tThe token or API Key has been revoked\ntoken_blocked\tThe API Key or App has been blocked\ntoken_not_found\tThe token or API Key does not exist\ntoken_unauthorized\tThe token or API Key is not allowed to access the resource\ntoken_expired\tThe token is expired\nmissing_authorization\tNo authorization data was found on the request\nretry_after\tThe client should wait for a time before retrying the request\njob_closed\tThe client should start a new bulk job\nnot_restorable\tThis user was blocked and cannot be recreated\nteam_not_found\tThe team does not exist\nteam_unavailable\tThis team is deprecated so conversations cannot be assigned to it\nadmin_not_found\tThe admin does not exist"
  },
  {
    "title": "HTTP Responses",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/errors/http-responses/",
    "html": "HTTP Responses\n\nThe API returns HTTP responses on each request to indicate the success or otherwise of API requests. The codes listed below are often used, and the API may use others. Note that 4xx and 5xx responses may be returned for any request and clients should cater for them.\n\nResponse Code\tDescription\n400\tBad Request -- General client error, possibly malformed data.\n401\tUnauthorized -- The API Key was not authorised (or no API Key was found).\n402\tPayment Required -- The API is not available on your current plan.\n403\tForbidden -- The request is not allowed.\n404\tNot Found -- The resource was not found.\n405\tMethod Not Allowed -- The resource does not accept the HTTP method.\n406\tNot Acceptable -- The resource cannot return the client's required content type.\n408\tRequest Timeout -- The server would not wait any longer for the client.\n409\tConflict - Multiple existing users match this email address - must be more specific using user_id\n415\tUnsupported Media Type - The server doesn't accept the submitted content-type.\n422\tUnprocessable Entity -- The data was well-formed but invalid.\n429\tToo Many Requests -- The client has reached or exceeded a rate limit, or the server is overloaded.\n500, 502, 503, 504\tServer errors - something went wrong with Intercom's servers. These responses are most likely momentary operational errors (e.g. temporary unavailability), and, as a result, requests should be retried once."
  },
  {
    "title": "Error Codes",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/errors/error-codes/",
    "html": "Error Codes\n\nThe API may send the following error codes. Other codes may be added in the future.\n\nField\tDescription\nserver_error\tGeneric server error\nclient_error\tGeneric client error\ntype_mismatch\tThe JSON value type is incorrect for the field\nparameter_not_found\tA required parameter was not supplied\nparameter_invalid\tA parameter's value is invalid\naction_forbidden\tThe action is not authorized\nconflict\tThere is existing data that clashes with the request data\napi_plan_restricted\tThe API is not available on this App's Plan\nrate_limit_exceeded\tThe rate limit for the App has been exceeded\nunsupported\tThe operation is not supported\ntoken_revoked\tThe token or API Key has been revoked\ntoken_blocked\tThe API Key or App has been blocked\ntoken_not_found\tThe token or API Key does not exist\ntoken_unauthorized\tThe token or API Key is not allowed to access the resource\ntoken_expired\tThe token is expired\nmissing_authorization\tNo authorization data was found on the request\nretry_after\tThe client should wait for a time before retrying the request\njob_closed\tThe client should start a new bulk job\nnot_restorable\tThis user was blocked and cannot be recreated\nteam_not_found\tThe team does not exist\nteam_unavailable\tThis team is deprecated so conversations cannot be assigned to it\nadmin_not_found\tThe admin does not exist"
  },
  {
    "title": "Note Model",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/notes/note-model/",
    "html": "Note Model\nExample Object\n{\\n  \\\"type\\\": \\\"note\\\",\\n  \\\"id\\\": \\\"16\\\",\\n  \\\"created_at\\\": 1389913941,\\n  \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n  \\\"author\\\": {\\n    \\\"type\\\": \\\"admin\\\",\\n    \\\"id\\\": \\\"21\\\",\\n    \\\"name\\\": \\\"Jayne Cobb\\\",\\n    \\\"email\\\": \\\"jayne@serenity.io\\\",\\n    \\\"companies\\\": []\\n  },\\n  \\\"user\\\": {\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\"\\n  }\\n}\n\nNote Object\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'note'\nid\tstring\tThe id representing the note\ncreated_at\ttimestamp\tThe time the note was created\nuser\tUser\tThe user the note was created about\nbody\tstring\tThe body text of the note.\nauthor\tAdmin\tOptional. Represents the Admin that created the note"
  },
  {
    "title": "List all notes",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/notes/list-notes-of-contact/",
    "html": "List all notes\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/notes \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can fetch a list of notes that are associated to a contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return a paginated list of Note objects.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - note.list\ndata\tArray\tAn array containing Note Objects\ntotal_count\tInteger\tThe total number of companies associated to this contact\npages\tPagination Object\tThe information needed to paginate through companies"
  },
  {
    "title": "List Notes for a User",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/notes/list-notes-for-a-user/",
    "html": "List Notes for a User\nExample User ID Request\n$ curl https://api.intercom.io/notes?user_id=25 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nintercom.notes.find_all(:user_id => '123').each {|note| puts note.body}\n\n<?php\n$notes = $intercom->notes->getNotes([\"user_id\" => \"20413\"]);\nforeach ($notes->notes as $note) {\n    print \"id:\".$note->id.\" body:\".$note->body.\"\\n\";\n}\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"user_id\", \"123\");\nNoteCollection notes = Note.list(params);\nwhile (notes.hasNext()) {\n    out.println(notes.next().getBody());\n}\n\nExample Email Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/notes?email=jayne%40serenity.io \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"note.list\\\",\\n  \\\"notes\\\": [\\n    {\\n      \\\"type\\\": \\\"note\\\",\\n      \\\"id\\\": \\\"1\\\",\\n      \\\"created_at\\\": 1389913941,\\n      \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n      \\\"author\\\": {\\n        \\\"type\\\": \\\"admin\\\",\\n        \\\"id\\\": \\\"21\\\",\\n        \\\"name\\\": \\\"Jayne Cobb\\\",\\n        \\\"email\\\": \\\"jayne@serenity.io\\\",\\n        \\\"companies\\\": []\\n      },\\n      \\\"user\\\": {\\n        \\\"type\\\": \\\"user\\\",\\n        \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\"\\n      }\\n    },\\n    {\\n      \\\"type\\\": \\\"note\\\",\\n      \\\"id\\\": \\\"2\\\",\\n      \\\"created_at\\\": 1389913951,\\n      \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n      \\\"user\\\": {\\n          \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\",\\n          \\\"type\\\": \\\"user\\\"\\n        }\\n    }\\n  ],\\n  \\\"pages\\\": {}\\n}\n\nExample ID Request\n$ curl \\\nhttps://api.intercom.io/notes?id=5310d8e8598c9a0b24000005 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n# Not exposed in Ruby client\n\n<?php\n$notes = $intercom->notes->getNotes([\"id\" => \"5965efd9aad5c02fc4750ee6\"]);\nforeach ($notes->notes as $note) {\n    print \"id:\".$note->id.\" body:\".$note->body.\"\\n\";\n}\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"id\", \"5310d8e8598c9a0b24000005\");\nnotes = Note.list(params);\nwhile (notes.hasNext()) {\n    out.println(notes.next().getBody());\n}\n\n\nA user's notes can be fetched by using a GET request to https://api.intercom.io/notes with an Intercom user id or user_id or email query parameter.\n\nThe value of the email parameter should be url encoded before sending.\n\nParameters\nParameter\tRequired\tDescription\nuser_id\tone of\tThe user id you have defined for the user\nemail\tone of\tThe email you have defined for the user\nid\tone of\tThe Intercom defined id representing the user\nReturns\n\nA list of note objects for that User.\n\nNote List Object\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'note.list'\nnotes\tarray\tA list of note objects"
  },
  {
    "title": "List Company Data Attributes",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/data-attributes/list-company-data-attributes/",
    "html": "List Company Data Attributes\nList Company attributes\n\nYou can fetch a list of all the company data attributes for your app by using https://api.intercom.io/data_attributes/company.\n\nList of your company data attributes\n\nReturns\n\nList of data attributes\n\n$ curl https://api.intercom.io/data_attributes/company \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n{\n    \"type\": \"data_attribute.list\",\n    \"data_attributes\": [\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"name\",\n            \"full_name\": \"name\",\n            \"label\": \"Company name\",\n            \"description\": \"The name of a company\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": true,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"company_id\",\n            \"full_name\": \"company_id\",\n            \"label\": \"Company ID\",\n            \"description\": \"A number identifying a company\",\n            \"data_type\": \"string\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"last_request_at\",\n            \"full_name\": \"last_request_at\",\n            \"label\": \"Company last seen\",\n            \"description\": \"The last day anyone from a company visited your site or app\",\n            \"data_type\": \"date\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"remote_created_at\",\n            \"full_name\": \"remote_created_at\",\n            \"label\": \"Company created at\",\n            \"description\": \"The day a company was added to Intercom\",\n            \"data_type\": \"date\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"user_count\",\n            \"full_name\": \"user_count\",\n            \"label\": \"People\",\n            \"description\": \"The number of people in a company\",\n            \"data_type\": \"integer\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"session_count\",\n            \"full_name\": \"session_count\",\n            \"label\": \"Company web sessions\",\n            \"description\": \"All visits from anyone in a company to your product's site or app\",\n            \"data_type\": \"integer\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"website\",\n            \"full_name\": \"website\",\n            \"label\": \"Company website\",\n            \"description\": \"The web address for the company's primary marketing site\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": true,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"subdomain\",\n            \"full_name\": \"custom_attributes.subdomain\",\n            \"label\": \"subdomain\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1500395363,\n            \"updated_at\": 1500395363\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"creation_source\",\n            \"full_name\": \"custom_attributes.creation_source\",\n            \"label\": \"creation_source\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1500477452,\n            \"updated_at\": 1500477452\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"paid_subscriber\",\n            \"full_name\": \"custom_attributes.paid_subscriber\",\n            \"label\": \"paid_subscriber\",\n            \"data_type\": \"boolean\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1511192754,\n            \"updated_at\": 1511192754\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"team_mates\",\n            \"full_name\": \"custom_attributes.team_mates\",\n            \"label\": \"team_mates\",\n            \"data_type\": \"integer\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1511192755,\n            \"updated_at\": 1511192755\n        }\n    ]\n}\n\n\nBy default a list of all unarchived data attributes is returned. You can include the following parameter to retrieve all the company data attributes for your app (i.e. including archived attributes)\n\nParameter\tType\tDescription\ninclude_archived\tboolean\tInclude archived attributes in the list. By default we return only non archived data attributes\nList of your company data attributes including archived\n$ curl https://api.intercom.io/data_attributes/company?include_archived=true \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n{\n    \"type\": \"data_attribute.list\",\n    \"data_attributes\": [\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"name\",\n            \"full_name\": \"name\",\n            \"label\": \"Company name\",\n            \"description\": \"The name of a company\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": true,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"company_id\",\n            \"full_name\": \"company_id\",\n            \"label\": \"Company ID\",\n            \"description\": \"A number identifying a company\",\n            \"data_type\": \"string\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"last_request_at\",\n            \"full_name\": \"last_request_at\",\n            \"label\": \"Company last seen\",\n            \"description\": \"The last day anyone from a company visited your site or app\",\n            \"data_type\": \"date\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"remote_created_at\",\n            \"full_name\": \"remote_created_at\",\n            \"label\": \"Company created at\",\n            \"description\": \"The day a company was added to Intercom\",\n            \"data_type\": \"date\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"user_count\",\n            \"full_name\": \"user_count\",\n            \"label\": \"People\",\n            \"description\": \"The number of people in a company\",\n            \"data_type\": \"integer\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"session_count\",\n            \"full_name\": \"session_count\",\n            \"label\": \"Company web sessions\",\n            \"description\": \"All visits from anyone in a company to your product's site or app\",\n            \"data_type\": \"integer\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"name\",\n            \"full_name\": \"plan.name\",\n            \"label\": \"Plan\",\n            \"description\": \"A specific plan or level within your product that companies have signed up to\",\n            \"data_type\": \"string\",\n            \"api_writable\": false,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"monthly_spend\",\n            \"full_name\": \"monthly_spend\",\n            \"label\": \"Monthly Spend\",\n            \"description\": \"The monthly revenue you receive from a company\",\n            \"data_type\": \"float\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"size\",\n            \"full_name\": \"size\",\n            \"label\": \"Company size\",\n            \"description\": \"The number of people employed in this company, expressed as a single number\",\n            \"data_type\": \"integer\",\n            \"api_writable\": true,\n            \"ui_writable\": true,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"industry\",\n            \"full_name\": \"industry\",\n            \"label\": \"Company industry\",\n            \"description\": \"The category or domain this company belongs to e.g. 'ecommerce' or 'SaaS'\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": true,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"website\",\n            \"full_name\": \"website\",\n            \"label\": \"Company website\",\n            \"description\": \"The web address for the company's primary marketing site\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": true,\n            \"custom\": false,\n            \"archived\": false\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"subdomain\",\n            \"full_name\": \"custom_attributes.subdomain\",\n            \"label\": \"subdomain\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1500395363,\n            \"updated_at\": 1500395363\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"creation_source\",\n            \"full_name\": \"custom_attributes.creation_source\",\n            \"label\": \"creation_source\",\n            \"data_type\": \"string\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1500477452,\n            \"updated_at\": 1500477452\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"paid_subscriber\",\n            \"full_name\": \"custom_attributes.paid_subscriber\",\n            \"label\": \"paid_subscriber\",\n            \"data_type\": \"boolean\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1511192754,\n            \"updated_at\": 1511192754\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"team_mates\",\n            \"full_name\": \"custom_attributes.team_mates\",\n            \"label\": \"team_mates\",\n            \"data_type\": \"integer\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": false,\n            \"created_at\": 1511192755,\n            \"updated_at\": 1511192755\n        },\n        {\n            \"type\": \"data_attribute\",\n            \"name\": \"monthly_spend\",\n            \"full_name\": \"custom_attributes.monthly_spend\",\n            \"label\": \"monthly_spend\",\n            \"data_type\": \"integer\",\n            \"api_writable\": true,\n            \"ui_writable\": false,\n            \"custom\": true,\n            \"archived\": true,\n            \"created_at\": 1511192755,\n            \"updated_at\": 1511192755\n        }\n    ]\n}\n"
  },
  {
    "title": "List Customer Data Attributes",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/data-attributes/list-customer-data-attributes/",
    "html": "List Customer Data Attributes\nList customer attributes\n\nYou can fetch a list of data attributes belonging to customers by using https://api.intercom.io/data_attributes/customer. Customer attributes describe attributes belonging to users, leads and visitors. All 3 models have the same data attributes.\n\nReturns\n\nList of data attributes\n\nList of your customer data attributes\n\n$ curl https://api.intercom.io/data_attributes/customer \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n{\n  \"type\": \"data_attribute.list\",\n  \"data_attributes\": [\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"paid_subscriber\",\n      \"full_name\": \"custom_attributes.paid_subscriber\",\n      \"label\": \"paid_subscriber\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"options\": [\n        \"pick_value_1\",\n        \"pick_value_2\"\n      ],\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": true,\n      \"archived\": false,\n      \"admin_id\": \"1\",\n      \"created_at\": 1392734388,\n      \"updated_at\": 1392734388\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"cda2\",\n      \"full_name\": \"custom_attributes.cda2\",\n      \"label\": \"cda2\",\n      \"description\": \"\",\n      \"data_type\": \"integer\",\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": true,\n      \"archived\": false,\n      \"admin_id\": \"1\",\n      \"created_at\": 1392734388,\n      \"updated_at\": 1392734388\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"email\",\n      \"full_name\": \"email\",\n      \"label\": \"Email\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": false,\n      \"archived\": false\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"region_name\",\n      \"full_name\": \"location_data.region_name\",\n      \"label\": \"Region\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"api_writable\": false,\n      \"ui_writable\": true,\n      \"custom\": false,\n      \"archived\": false\n    }\n  ]\n}\n\n\nYou can also include the archived attributes by adding this parameter:\n\nParameter\tType\tDescription\ninclude_archived\tboolean\tInclude archived attributes in the list. By default we return only non archived data attributes\nList of your customer data attributes including archived\n$ curl https://api.intercom.io/data_attributes/customer?include_archived=true \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n{\n  \"type\": \"data_attribute.list\",\n  \"data_attributes\": [\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"paid_subscriber\",\n      \"full_name\": \"custom_attributes.paid_subscriber\",\n      \"label\": \"paid_subscriber\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"options\": [\n        \"pick_value_1\",\n        \"pick_value_2\"\n      ],\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": true,\n      \"archived\": false,\n      \"admin_id\": \"1\",\n      \"created_at\": 1392734388,\n      \"updated_at\": 1392734388\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"cda2\",\n      \"full_name\": \"custom_attributes.cda2\",\n      \"label\": \"cda2\",\n      \"description\": \"\",\n      \"data_type\": \"integer\",\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": true,\n      \"archived\": false,\n      \"admin_id\": \"1\",\n      \"created_at\": 1392734388,\n      \"updated_at\": 1392734388\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"email\",\n      \"full_name\": \"email\",\n      \"label\": \"Email\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": false,\n      \"archived\": false\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"region_name\",\n      \"full_name\": \"location_data.region_name\",\n      \"label\": \"Region\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"api_writable\": false,\n      \"ui_writable\": true,\n      \"custom\": false,\n      \"archived\": false\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"name\": \"Department\",\n      \"full_name\": \"custom_attributes.foo\",\n      \"label\": \"Department\",\n      \"data_type\": \"string\",\n      \"api_writable\": true,\n      \"ui_writable\": false,\n      \"custom\": true,\n      \"archived\": true,\n      \"created_at\": 1500460535,\n      \"updated_at\": 1511274873\n    }\n  ]\n}\n"
  },
  {
    "title": "Create a Note",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/notes/create-a-note/",
    "html": "Create a Note\nExample Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/notes \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'  \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"admin_id\\\" : \\\"21\\\",\\n  \\\"body\\\": \\\"Text for my note\\\",\\n  \\\"user\\\": {\\n    \\\"id\\\" : \\\"5310d8e8598c9a0b24000005\\\"\\n  }\\n}'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"note\\\",\\n  \\\"id\\\": \\\"16\\\",\\n  \\\"created_at\\\": 1389913941,\\n  \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n  \\\"author\\\": {\\n    \\\"type\\\": \\\"admin\\\",\\n    \\\"id\\\": \\\"21\\\",\\n    \\\"name\\\": \\\"Jayne Cobb\\\",\\n    \\\"email\\\": \\\"jayne@serenity.io\\\",\\n    \\\"companies\\\": []\\n  },\\n  \\\"user\\\": {\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\"\\n  }\\n}\n\n\nNotes can be created via a POST method to https://api.intercom.io/notes, which accepts a JSON object describing the note.\n\nAttributes\n\nThe table below shows the fields you can use to create a note -\n\nArgument\tRequired\tDescription\nuser\tYes\tRepresentation of the user the note is to be created about.\nuser.user_id\tone of\tYour user_id for the user\nuser.email\tone of\tYour email address for the user\nuser.id\tone of\tThe user id for the user\nadmin_id\tNo\tThe id of the admin creating the note.\nbody\tYes\tThe text of the note.\nReturns\n\nA note object. The submitted body may be enclosed with html p elements in the response."
  },
  {
    "title": "Create and Update Tags",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/tags/create-and-update-tags/",
    "html": "Create and Update Tags\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/tags \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d'\\n{\\n  \\\"name\\\": \\\"Independent\\\"\\n}'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"tag\\\",\\n  \\\"name\\\": \\\"Independent\\\",\\n  \\\"id\\\": \\\"17513\\\"\\n}\n\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/tags \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d'\\n{\\n  \\\"id\\\": \\\"17513\\\",\\n  \\\"name\\\": \\\"Independent\\\"\\n}'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"tag\\\",\\n  \\\"name\\\": \\\"Independent\\\",\\n  \\\"id\\\": \\\"17513\\\"\\n}\n\n\nYou can create a new tag by submitting a POST to https://api.intercom.io/tags along with a name for the tag. The tag name may contain whitespace and punctuation.\n\nIf the same tag name is sent multiple times, only one tag will be created for that name - this lets you avoid checking if a tag exists first.\n\nTag names are case insensitive - 'MyTag' and 'mytag' will result in a single tag being created.\n\nA tag's name can also be updated by posting a tag to https://api.intercom.io/tags. The submitted tag object will contain the id of the tag to update and a new name for the tag. A successful request will update the name value for that tag and return the updated tag in the response.\n\nAttributes\nAttribute\tRequired\tDescription\nname\tYes\tThe name of the tag, which will be created if not found, or the new name for the tag if this is an update request.\nid\tYes for update\tThe id of tag to updates.\nReturns\n\nThe newly created or updated tag object containing its name and id fields."
  },
  {
    "title": "Data Attributes",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/data-attributes/data-attributes/",
    "html": "Data Attributes\n\nData Attributes are a type of metadata used to describe your customer and company models. These include standard and custom attributes. In other words data attributes are properties that help to describe your customers and companies in more detail. Using the data attributes endpoint you can get the global list of attributes for your app as well as the metadata (i.e. datatype and format) associated with each attribute."
  },
  {
    "title": "Create or Update Company",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/companies/create-or-update-company/",
    "html": "Create or Update Company\nExample Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/companies \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type:application/json' -d '\\n{\\n  \\\"name\\\": \\\"Blue Sun\\\",\\n  \\\"plan\\\": \\\"Paid\\\",\\n  \\\"company_id\\\": \\\"6\\\",\\n  \\\"remote_created_at\\\": 1394531169,\\n  \\\"size\\\": 750,\\n  \\\"website\\\": \\\"http://www.example.com\\\",\\n  \\\"industry\\\": \\\"Manufacturing\\\",\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"team_mates\\\": 0,\\n    \\\"monthly_spend\\\": 155.98\\n  }\\n}'\n\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"company\\\",\\n    \\\"company_id\\\": \\\"6\\\",\\n    \\\"id\\\": \\\"57e0120926806ceca3c13ba8\\\",\\n    \\\"app_id\\\": \\\"pi3243fa\\\",\\n    \\\"name\\\": \\\"Blue Sun\\\",\\n    \\\"remote_created_at\\\": 1394531169,\\n    \\\"created_at\\\": 1474302473,\\n    \\\"updated_at\\\": 1475659931,\\n    \\\"last_request_at\\\": 1473419085,\\n    \\\"monthly_spend\\\": 49,\\n    \\\"session_count\\\": 0,\\n    \\\"user_count\\\": 0,\\n    \\\"tags\\\": {\\n        \\\"type\\\": \\\"tag.list\\\",\\n        \\\"tags\\\": []\\n    },\\n    \\\"segments\\\": {\\n        \\\"type\\\": \\\"segment.list\\\",\\n        \\\"segments\\\": [\\n            {\\n                \\\"type\\\": \\\"segment\\\",\\n                \\\"id\\\": \\\"56cc69cc8618d37b45000009\\\"\\n            }\\n        ]\\n    },\\n    \\\"plan\\\": {\\n        \\\"type\\\": \\\"plan\\\",\\n        \\\"id\\\": \\\"108609\\\",\\n        \\\"name\\\": \\\"Paid\\\"\\n    },\\n    \\\"custom_attributes\\\": {\\n        \\\"paid_subscriber\\\": true,\\n        \\\"team_mates\\\": 0,\\n        \\\"referral_source\\\": \\\"Google\\\",\\n        \\\"founded\\\": \\\"20th Century\\\",\\n        \\\"monthly_spend\\\": 155.98,\\n        \\\"remove\\\": true\\n    }\\n}\n\n\nCompanies can be created or updated via a POST to https://api.intercom.io/companies, which accepts a JSON object describing the company.\n\nCOMPANIES WITH NO USERS\n\nIt is important to note that companies will be only visible in Intercom when there is at least one associated user. Check the Companies and Users section for more information\n\nCompanies are looked up via company_id, if not found via company_id, the new company will be created, if found, that company will be updated.\n\nNote that the company_id field itself cannot be updated through the API.\n\nCompanies may also be created or updated via a User request - see the section \"Create or Update User\".\n\nAttributes\n\nThe table below shows the fields you can create or update for a company -\n\nAttribute\tType\tDescription\nremote_created_at\ttimestamp\tThe time the company was created by you\ncompany_id\tstring\tThe company id you have defined for the company\nname\tstring\tThe name of the company\nmonthly_spend\tnumber\tHow much revenue the company generates for your business. Note that this will truncate floats. i.e. it only allow for whole integers, 155.98 will be truncated to 155. Note that this has an upper limit of 2**31-1 or 2147483647.\nplan\tstring\tThe name of the plan you have associated with the company\nsize\tnumber\tThe number of employees in this company\nwebsite\tstring\tThe URL for this company's website. Please note that the value specified here is not validated. Accepts any string.\nindustry\tstring\tThe industry that this company operates in\ncustom_attributes\tobject\tA hash of key/value pairs containing any other data about the company you want Intercom to store.\nCustom Attributes\n\nThe custom_attributes object allows you to send any information you wish about a company with the following restrictions -\n\nField names must not contain Periods (.) or Dollar ($) characters\nField names must be no longer than 190 characters.\nField values must be JSON Strings, Numbers or Booleans - Objects and Arrays will be rejected.\nString field values must be no longer than 255 characters.\nMaximum of 100 fields.\nSession Count\n\nA company's session count is tied to users' session count whilst in the context of that company. So, to update a company session count,\nupdate the user with that company and increment the user's session.\n\nReturns\n\nThe created or updated company object.\n\nNew company objects will be provided with an id field - this value cannot be created or edited by clients."
  },
  {
    "title": "Conversation Count Model",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/counts/conversation-counts/",
    "html": "Conversation Count Model\nConversation Count Object\n\nThe conversation count supplies global counts about your App's conversations\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nconversation\tobject\tContains counts related to conversations\nconversation.assigned\tnumber\tContains the number of assigned conversations\nconversation.closed\tnumber\tContains the number of closed conversations\nconversation.open\tnumber\tContains the number of open conversations\nconversation.unassigned\tnumber\tContains the number of unassigned conversations\n{\n    \"type\": \"count\",\n    \"conversation\": {\n        \"open\": 30,\n        \"closed\": 17,\n        \"unassigned\": 0,\n        \"assigned\": 30\n    }\n}\n\n# Conversation Counts\n$ curl 'https://api.intercom.io/counts?type=conversation' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# Conversation App Counts\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"count\",\n    \"conversation\": {\n        \"open\": 30,\n        \"closed\": 17,\n        \"unassigned\": 0,\n        \"assigned\": 30\n    }\n}\n\nintercom.counts.for_type(type: 'conversation')\n\n<?php\n$counts = $intercom->counts->getCounts([\"type\" => \"conversation\"]);\nprint_r($counts);\n?>\n\n// Conversation Counts\nfinal Counts.Conversation totals = Counts.conversationTotals();\ntotals.getAssigned();\ntotals.getClosed();\ntotals.getOpen();\ntotals.getUnassigned();\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nConversation Count\tconversation\tNone"
  },
  {
    "title": "Detach a contact from a tag",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/tags/untag-contact/",
    "html": "Detach a contact from a tag\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<contact_id>/tags/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\n\nExample Errors\nhttphtml\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can untag a single contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\ncontact_id\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nid\tString\tYes\tThe unique identifier for the tag which is given by Intercom\nResponse\n\nThis will return a Tag model for the tag that was removed from the contact."
  },
  {
    "title": "Untag companies",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/tags/untag-companies/",
    "html": "Untag companies\nExample Request & Response\n$ curl https://api.intercom.io/tags \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d'\n{\n  \"name\": \"Independent\",\n  \"companies\": [\n    {\n      \"id\" : \"53427b7ecce5722303000003\",\n      \"untag\": true\n    }\n  ]\n}\n\nHTTP/1.1 200 Ok\n\n{\n  \"type\": \"tag\",\n  \"name\": \"Follow Up\",\n  \"id\": \"17513\"\n}\n\n\nYou can untag a single or a list of companies.\n\nRequest Body Parameters\nParameters\tType\tRequired\tDescription\nname\tString\tYes\tThe name of the tag which will be untagged from the.\ncompanies\tObject\tYes\tAn array of objects with the unique id or company_id of the company to be untagged, and the untag boolean set to true.\nResponse\n\nThis will return a Tag model for the tag that was unapplied to the given company."
  },
  {
    "title": "Leads",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/leads/leads/",
    "html": "Leads\n\nContacts (for Leads only) is no longer available as a resource. In order to see information and take action on leads, you should be using the Contacts API."
  },
  {
    "title": "Attach a contact",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/tags/tag-contact/",
    "html": "Attach a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/tags \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' -d\\n\\n{\\n\\t\\\"id\\\": \\\"2084335\\\"\\n}\n\nExample Errors\nhttphtml\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can tag a single contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nRequest Body Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the tag which is given by Intercom\nResponse\n\nThis will return a Tag model for the tag that was added to the contact."
  },
  {
    "title": "Tag companies",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/tags/tag-companies/",
    "html": "Tag companies\nExample Request & Response\n$ curl https://api.intercom.io/tags \\\n-XPOST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d'\n{\n  \"name\": \"Independent\",\n  \"companies\": [\n    {\n      \"id\" : \"53427b7ecce5722303000003\"\n    }\n  ]\n}\n\nHTTP/1.1 200 Ok\n\n{\n  \"type\": \"tag\",\n  \"name\": \"Independent\",\n  \"id\": \"17513\"\n}\n\nintercom.tags.tag(name: 'Independent', users: [{ id: \"42ea2f1b93891f6a99000427\" }, { email: \"foo@bar.com\" }])\n\n<?php\n# Note that you can use either id, user_id or email to tag a user.\n# You only need to use one per user, e.g. the below will tag\n# three users if each identifier is for a different, unique user\n$intercom->tags->tag([\n    \"name\" => \"VIPs\",\n    \"users\" => [\n        [\"id\" => \"5977e20941abfc5aae4552d1\"],\n        [\"user_id\" => \"12345\"],\n        [\"email\" => \"camus@phil.com\"]\n    ]\n]);\n?>\n\nUser one = new User().setEmail(\"river@serenity.io\");\nUser two = new User().setEmail(\"simon@serenity.io\")\nList<User> users = Lists.newArrayList(one, two);\nTag.tag(tag, new UserCollection(users));\n\n\nYou can tag a single or a list of companies.\n\nRequest Body Parameters\nParameters\tType\tRequired\tDescription\nname\tString\tYes\tThe name of the tag, which will be created if not found.\ncompanies\tObject\tYes\tAn array of objects with the unique id or company_id of the company to be tagged.\nResponse\n\nThis will return a Tag Model for the tag that was applied to the given company."
  },
  {
    "title": "List all tags",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/tags/list-tags-for-an-app/",
    "html": "List all tags\nExample List Tag Request\n$ curl https://api.intercom.io/tags \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n{\n  \"type\": \"list\",\n  \"data\": [\n    {\n      \"type\": \"tag\",\n      \"name\": \"Beta User\",\n      \"id\": 1\n    },\n    {\n      \"type\": \"tag\",\n      \"name\": \"Amazing User\",\n      \"id\": 2\n    },\n    {\n      \"type\": \"tag\",\n      \"name\": \"Epic User\",\n      \"id\": 3\n    }\n  ]\n}\n\nintercom.tags.all.each { ... }\n\n<?php\n$tags= $intercom->tags->getTags([]);\nforeach ($tags->tags as $tag) {\n    print \"id:\".$tag->id.\" name:\".$tag->name.\"\\n\";\n}?>\n\nTagCollection tags = Tag.list();\nwhile (tags.hasNext()) {\n    out.println(tags.next().getId());\n}\n\n\nYou can list all tags.\n\nResponse\n\nA list of tag objects.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'list'\ndata\tarray\tA list of tag objects"
  },
  {
    "title": "Retrieve a segment",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/segments/view-a-segment/",
    "html": "Retrieve a segment\nExample Request & Response\n$ curl https://api.intercom.io/segments/53203e244cba153d39000062 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"segment\",\n  \"id\": \"53203e244cba153d39000062\",\n  \"name\": \"New\",\n  \"created_at\": 1394621988,\n  \"updated_at\": 1394622004\n}\n\nintercom.segments.find(:id => '1234')\n\nSegment segment = Segment.find(\"1234\");\n\n\nYou can fetch the details of a single segment.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identified of a given segment.\nRequest Query Parameters\nParameter\tType\tRequired?\tDescription\ninclude_count\tBoolean\tNo\tIncludes the count of contacts that belong to a given segment.\nResponse\n\nThis will return a Segment Model."
  },
  {
    "title": "Detach a conversation",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/tags/detach-a-tag-from-a-conversation/",
    "html": "Detach a conversation\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/conversations/<id>/tags/<tag_id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' -d\\n{\\n   \\\"admin_id\\\": \\\"814860\\\"\\n}\\n\n\nExample Errors\nHTTP/1.1 404 NOT FOUND\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"9a3d0816-9707-4598-977e-c009ba630148\",\n  \"errors\": [\n    {\n      \"code\": \"not_found\",\n      \"message\": \"Contact Not Found\"\n    }\n  ]\n}\n\nHTTP/1.1 404 NOT FOUND\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"5f6b2623-f844-4914-8b8d-ac01acc62a76\",\n  \"errors\": [\n    {\n      \"code\": \"not_found\",\n      \"message\": \"Resource Not Found\"\n    }\n  ]\n}\n\nHTTP/1.1 404 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"5f6b2623-f844-4914-8b8d-ac01acc62a76\",\n  \"errors\": [\n    {\n      \"code\": \"parameter_not_found\",\n      \"message\": \"admin_id is a required parameter\"\n    }\n  ]\n}\n\n\nYou can untag a single conversation.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the conversation which is given by Intercom\nRequest Body Parameter\nParameter\tType\tRequired\tDescription\nadmin_id\tString\tYes\tThe unique identifier for the admin (which is given by intercom) performing the untag action.\nResponse\n\nThis will return a Tag model for the tag that was removed from the conversation."
  },
  {
    "title": "Delete a tag",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/tags/delete-a-tag/",
    "html": "Delete a tag\nExample Delete Tag Request\n$ curl https://api.intercom.io/tags/17513 \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n# Not exposed in Ruby client\n\n<?php\n// Not exposed in PHP client\n?>\n\nTag.delete(tag);\n\n\nYou can delete a single tag.\n\nRequest Path Parameters\nParemeter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier of the tag.\nResponse\n\nThis will return a Tag Model of the tag you just deleted."
  },
  {
    "title": "List all segments",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/segments/list-segments/",
    "html": "List all segments\nExample Request & Response\n$ curl https://api.intercom.io/segments\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"segment.list\",\n  \"segments\": [\n    {\n      \"created_at\": 1393613031,\n      \"id\": \"5310d8e7598c9a0b24000002\",\n      \"name\": \"Active\",\n      \"type\": \"segment\",\n      \"updated_at\": 1393613031\n    },\n    {\n      \"created_at\": 1393613030,\n      \"id\": \"5310d8e6598c9a0b24000001\",\n      \"name\": \"New\",\n      \"type\": \"segment\",\n      \"updated_at\": 1393613030\n    },\n    {\n      \"created_at\": 1393613031,\n      \"id\": \"5310d8e7598c9a0b24000003\",\n      \"name\": \"Slipping Away\",\n      \"type\": \"segment\",\n      \"updated_at\": 1393613031\n    }\n  ]\n}\n\nintercom.segments.all.each { ... }\n\n<?php\n$intercom->segments->getSegments([]);\n?>\n\nSegmentCollection segments = Segment.list();\nwhile (segments.hasNext()) {\n    out.println(segments.next().getId());\n}\n\n\nYou can fetch a list of all segments.\n\nRequest Query Parameters\nParameter\tType\tRequired?\tDescription\ninclude_count\tBoolean\tNo\tIt includes the count of contacts that belong to each segment.\nResponse\n\nThis will return a list of Segment Objects. The result may also have a pages object if the response is paginated.\n\nAttribute\tType\tDescription\ntype\tString\tvalue is 'segment.list'\nsegments\tArray\tA list of segment objects\npages\tObject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch."
  },
  {
    "title": "Create or update a tag",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/tags/create-and-update-tags/",
    "html": "Create or update a tag\nExample Request & Response\n$ curl https://api.intercom.io/tags \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d'\n{\n  \"name\": \"Independent\"\n}'\n\nHTTP/1.1 200 Ok\n\n{\n  \"type\": \"tag\",\n  \"name\": \"Independent\",\n  \"id\": \"17513\"\n}\n\nintercom.tags.tag(name: 'Independent', users: [{ id: \"42ea2f1b93891f6a99000427\" }])\n\n<?php\n$intercom->tags->tag([\"name\" => \"php-tag\"]);\n?>\n\nTag t = new Tag().setName(\"Independent\");\nt = Tag.create(t);\n\n\nYou can create or update a tag.\n\nRequest Body Parameters\nAttribute\tRequired\tDescription\nname\tYes\tThe name of the tag, which will be created if not found, or the new name for the tag if this is an update request. Names are case insensitive.\nid\tOnly for update\tThe id of tag to updates.\nResponse\n\nThis will return a Tag Model of the tag you just created or updated."
  },
  {
    "title": "Attach a conversation",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/tags/attach-a-tag-to-a-conversation/",
    "html": "Attach a conversation\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/conversations/<id>/tags \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' -d\\n\\n{\\n  \\\"id\\\": \\\"2084335\\\",\\n  \\\"admin_id\\\": \\\"123\\\"\\n}\\n\n\nExample Errors\nhttphtml\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Conversation Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can tag a single conversation.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the conversation which is given by Intercom\nRequest Body Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the tag which is given by Intercom\nadmin_id\tString\tYes\tThe unique identifier for the admin who is applying the tag.\nResponse\n\nThis will return a Tag model for the tag that was added to the conversation."
  },
  {
    "title": "List attached contacts",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/companies/list-company-contacts/",
    "html": "List attached contacts\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/companies/<id>/contacts \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nInvalid starting_after param\nHTTP/1.1 400 BAD REQUEST\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"000nbboasf1qqab6b910\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"client_error\\\",\\n      \\\"message\\\": \\\"Invalid starting_after param. Please try again using a starting_after value from a paginated response\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can fetch a list of all contacts that belong to a company.\n\nResponse\n\nThis will return a paginated list of Contact objects.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - list\ndata\tArray\tAn array containing Contact Objects\ntotal_count\tInteger\tThe total number of contacts\npages\tPagination Object\tThe information needed to paginate through contacts"
  },
  {
    "title": "List all companies",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/companies/list-companies/",
    "html": "List all companies\nList companies\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/companies \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"company.list\\\",\\n  \\\"total_count\\\": 105,\\n  \\\"companies\\\": [\\n    {\\n      \\\"type\\\": \\\"company\\\",\\n      \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n       ...\\n     },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/companies?per_page=50&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 3\\n  }\\n}\\n\\n# NB: Full company objects are returned\n\n\nYou can list companies. The company list is sorted by the last_request_at field and by default is ordered descending, most recently requested first.\n\nNote that the API does not include companies who have no associated users in list responses.\n\nRequest Parameters\n\nYou can optionally request the result page size and which page to fetch as follows -\n\nParameter\tRequired\tDescription\npage\tno\twhat page of results to fetch defaults to first page.\nper_page\tno\thow many results per page defaults to 50.\norder\tno\tasc or desc. Return the companies in ascending or descending order. defaults to desc.\nRequest Query Parameters\nParameter\tRequired\tDescription\ntag_id\tone of\tThe id of the tag to filter by.\nsegment_id\tone of\tThe id of the segment to filter by.\nResponse\n\nThis will return a paginated list of Company Objects\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - list\ndata\tArray\tAn array containing Company Objects.\ntotal_count\tInteger\tThe total number of companies.\npages\tPagination Object\tThe information needed to paginate through companies\n\nWhen using the Companies endpoint and the pages object to iterate through the returned companies, there is a limit of 10,000 Companies that can be returned. If you need to list or iterate on more than 10,000 Companies, please use the Scroll API."
  },
  {
    "title": "Scroll over all companies",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/companies/iterating-over-all-companies/",
    "html": "Scroll over all companies\n\nThe list all companies functionality does not work well for huge datasets, and can result in errors and performance problems when paging deeply. The Scroll API provides an efficient mechanism for iterating over all companies in a dataset.\n\nEach app can only have 1 scroll open at a time. You'll get an error message if you try to have more than one open per app.\nIf the scroll isn't used for 1 minute, it expires and calls with that scroll param will fail\nIf the end of the scroll is reached, \"companies\" will be empty and the scroll parameter will expire\n# Send a GET request to get the first page of companies\n$ curl \\\n'https://api.intercom.io/companies/scroll' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n# To get the next page use the scroll param returned in the response\n$ curl \\\n'https://api.intercom.io/companies/scroll?scroll_param=562bc29f-ea55-4823-aaaf-f3faadceaa59' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"company.list\",\n  \"companies\": [\n    {\n      \"type\": \"company\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ],\n  \"scroll_param\": \"25b649f7-4d33-4ef6-88f5-60e5b8244309\"\n}\n\n# You can use the scroll method to list all your companies\nintercom.companies.scroll.each { |company| puts company.name}\n# Alternatively you can use the scroll.next method to get 100 companies with each request\nresult = intercom.companies.scroll.next\nresult.scroll_param\n=> \"0730e341-63ef-44da-ab9c-9113f886326d\"\nresult = intercom.companies.scroll.next(\"0730e341-63ef-44da-ab9c-9113f886326d\");\n\nSCROLL PARAMETER\n\nYou can get the first page of companies by simply sending a GET request to the scroll endpoint. For subsequent requests you will need to use the scroll parameter from the response.\n\n❗️ Scroll network timeouts\n\nSince scroll is often used on large datasets network errors such as timeouts can be encountered. When this occurs you will need to restart your scroll query as it is not possible to continue from a specific point when using scroll.\n\nWhen this occurs you will see a HTTP 500 error with the following message:\n\"Request failed due to an internal network error. Please restart the scroll operation.\""
  },
  {
    "title": "Detach a contact from a company",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/companies/detach-contact-from-company/",
    "html": "Detach a contact from a company\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<contact_id>/companies/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nhttphtml\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can detach a company from a single contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\ncontact_id\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nid\tString\tYes\tThe unique identifier for the company which is given by Intercom\nResponse\n\nThis will return a Company model for the company that was just detached from the contact."
  },
  {
    "title": "Delete a company",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/companies/delete-a-company/",
    "html": "Delete a company\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/companies/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nCompany not found\nHTTP/1.1 404 FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Company Not Found\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can delete a single company.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the company which is given by Intercom\nResponse\n\nThis will return an object with details on the deleted company.\n\nAttribute\tType\tDescription\nid\tString\tThe unique identifier for the company which is given by Intercom\nobject\tString\tThe type of object - company\ndeleted\tBoolean\tWhether the company has been deleted - true"
  },
  {
    "title": "The data event model",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/data-events/event-model/",
    "html": "The data event model\nEvent Object\n{\n  \"event_name\" : \"invited-friend\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"342311\"\n}\n\n// Sufficient to send just the event name\nIntercom('trackEvent', 'invited-friend');\n\n# create an event as a hash\nevent = {\n  :event_name => \"invited-friend\",\n  :email => current_user.email,\n  :created_at => 1391691571\n}\nintercom.events.create event\n\n<?php\n$event = array(\n  \"event_name\" => \"invited-friend\",\n  \"created_at\" => 1391691571,\n  \"user_id\" => \"314159\"\n);\n$intercom->events->create($event);\n?>\n\nEvent event = new Event()\n  .setEventName(\"invited-friend\")\n  .setUserID(\"1314159\");\n  .setCreatedAt(currentTimeMillis()/1000L);\n\nEvent.create(event);\n\n\nEvents are how you can submit user activity to Intercom. Once you're sending Intercom event data, you can filter your user base with those events and create Auto Messages to send whenever an event occurs. Every event is associated with an event name, the time it happened, the user that caused the event, and optionally some extra metadata. Events record the count, first and last occurrence of an event.\n\nEvents are different to Custom Attributes in that events are information on what Users did and when they did it, whereas Custom Attributes represent the User's current state as seen in their profile. For example, the first time they subscribed to a paid plan, or the most recent time they changed their plan would be represented by events, whereas a User Attribute would be used to record their current plan.\n\nBecause Events are used for filtering and messaging, and event names are used directly in Intercom by your App's Admins we recommend sending high-level activity about your users that you would like to message on, rather than raw clickstream or user interface actions. For example an order action is a good candidate for an Event, versus all the clicks and actions that were taken to get to that point. We also recommend sending event names that combine a past tense verb and nouns, such as 'created-project'.\n\nThe Events API varies slightly from the rest of the APIs as follows -\n\nYou can submit events using JavaScript using the trackEvent method.\nWhen there's an error or errors, a list structure is returned instead of a single error.\nEvent Object\nAttribute\tRequired\tDescription\nevent_name\tyes\tThe name of the event that occurred. This is presented to your App's admins when filtering and creating segments - a good event name is typically a past tense 'verb-noun' combination, to improve readability, for example updated-plan.\ncreated_at\tyes\tThe time the event occurred as a UTC Unix timestamp\nuser_id\tyes if no email\tYour identifier for the user.\nid\tyes if no email or user_id.\tYour identifier for a lead or a user.\nemail\tyes if no user_id\tAn email address for your user. An email should only be used where your application uses email to uniquely identify users\nmetadata\tno\toptional metadata about the event.\n\nThe event_name field is processed as follows -\n\nNames are treated as case insensitive - 'Completed-Order' and 'completed-order' will be considered the same event for your application.\nPeriods (.) and dollars ($) in event names are replaced with hyphens. e.g., 'completed.order' will be stored as 'completed-order'.\n\nTo avoid confusion we recommend submitting lower case event names that do not contain periods or dollars!\n\nMetadata Object\n\nSending an event with metadata\n\n$ curl https://api.intercom.io/events \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Content-Type: application/json\" -d'\n{\n  \"event_name\" : \"invited-friend\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"314159\",\n  \"metadata\": {\n     \"invitee_email\": \"pi@example.org\",\n     \"invite_code\": \"ADDAFRIEND\"\n  }\n}'\n\nvar metadata = {\n  invitee_email: 'pi@example.org',\n  invite_code: 'ADDAFRIEND'\n};\nIntercom('trackEvent', 'invited-friend', metadata);\n\nmetadata = {\n  :invitee_email => 'pi@example.org',\n  :invite_code => 'ADDAFRIEND'\n}\nintercom.events.create {\n  :event_name => \"invited-friend\",\n  :email => current_user.email,\n  :created_at => 1391691571,\n  :metadata => metadata\n}\n\n<?php\n$metadata = array(\n  \"invitee_email\" => \"pi@example.org\",\n  \"invite_code\" => \"ADDAFRIEND\"\n);\n$intercom->events->create(array(\n  \"event_name\" => \"invited-friend\",\n  \"created_at\" => 1391691571,\n  \"user_id\" => \"314159\",\n  \"metadata\" => $metadata\n));\n?>\n\nEvent event = new Event()\n  .setEventName(\"invited-friend\")\n  .setUserID(\"314159\")\n  .putMetadata(\"invite_mail\", \"pi@example.org\")\n  .putMetadata(\"invite_code\", \"ADDAFRIEND\")\n  .putMetadata(\"found_date\", currentTimeMillis()/1000L);\n\nEvent.create(event);\n\n\nMetadata can be used to submit an event with extra key value data. Each event can contain up to ten metadata key values.\n\nSome use cases for event metadata are -\n\nLinking an event back to a page in your website.\nDescribing before and after values for a subscription plan change.\nSending contextual information about an online order, a booking.\n\nYou can now trigger messages to your users based on event and event metadata and also include the metadata in the messages. For more information on how this works, learn more about event based messaging\n\nSee the section 'Metadata Types' for more information on the kinds of metadata you can send."
  },
  {
    "title": "Create or update a company",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/companies/create-or-update-company/",
    "html": "Create or update a company\nExample Request & Response\n$ curl https://api.intercom.io/companies \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type:application/json' -d '\n{\n  \"name\": \"Blue Sun\",\n  \"plan\": \"Paid\",\n  \"company_id\": \"6\",\n  \"remote_created_at\": 1394531169,\n  \"size\": 750,\n  \"website\": \"http://www.example.com\",\n  \"industry\": \"Manufacturing\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"team_mates\": 0,\n    \"monthly_spend\": 155.98\n  }\n}'\n\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"company\",\n    \"company_id\": \"6\",\n    \"id\": \"57e0120926806ceca3c13ba8\",\n    \"app_id\": \"pi3243fa\",\n    \"name\": \"Blue Sun\",\n    \"remote_created_at\": 1394531169,\n    \"created_at\": 1474302473,\n    \"updated_at\": 1475659931,\n    \"last_request_at\": 1473419085,\n    \"monthly_spend\": 49,\n    \"session_count\": 0,\n    \"user_count\": 0,\n    \"tags\": {\n        \"type\": \"tag.list\",\n        \"tags\": []\n    },\n    \"segments\": {\n        \"type\": \"segment.list\",\n        \"segments\": [\n            {\n                \"type\": \"segment\",\n                \"id\": \"56cc69cc8618d37b45000009\"\n            }\n        ]\n    },\n    \"plan\": {\n        \"type\": \"plan\",\n        \"id\": \"108609\",\n        \"name\": \"Paid\"\n    },\n    \"custom_attributes\": {\n        \"paid_subscriber\": true,\n        \"team_mates\": 0,\n        \"referral_source\": \"Google\",\n        \"founded\": \"20th Century\",\n        \"monthly_spend\": 155.98,\n        \"remove\": true\n    }\n}\n\nintercom.companies.create(:company_id => 6, :name => \"Blue Sun\", :plan => \"Paid\")\n\n<?php\n$intercom->companies->create([\n    \"name\" => \"Academy\",\n    \"id\" => \"10\"\n])\n?>\n\nimport static io.intercom.api.CustomAttribute.*;\n\nCompany company = new Company()\n  .setName(\"Blue Sun\")\n  .setCompanyID(\"1\")\n  .setPlan(new Company.Plan(\"premium\"))\n  .addCustomAttribute(newIntegerAttribute(\"items\", 246))\n  .addCustomAttribute(CustomAttribute.newStringAttribute(\"bar\", \"fruity\"));\n\ncompany = Company.create(company);\n\ncompany.setName(\"Blue Sun Corporation\");\nCompany.update(company);\n\n\nYou can create or update a company.\n\nCOMPANIES WITH NO USERS\n\nCompanies will be only visible in Intercom when there is at least one associated user.\n\nCompanies are looked up via company_id in a POST request, if not found via company_id, the new company will be created, if found, that company will be updated.\n\nRequest Body Parameters\nArgument\tType\tDescription\nremote_created_at\ttimestamp\tThe time the company was created by you.\ncompany_id\tstring\tThe company id you have defined for the company.\nCan't be updated.\nname\tstring\tThe name of the company.\nmonthly_spend\tnumber\tHow much revenue the company generates for your business. Note that this will truncate floats. i.e. it only allow for whole integers, 155.98 will be truncated to 155. Note that this has an upper limit of 2**31-1 or 2147483647..\nplan\tstring\tThe name of the plan you have associated with the company.\nsize\tnumber\tThe number of employees in this company.\nwebsite\tstring\tThe URL for this company's website. Please note that the value specified here is not validated. Accepts any string.\nindustry\tstring\tThe industry that this company operates in.\ncustom_attributes\tobject\tA hash of key/value pairs containing any other data about the company you want Intercom to store..\nResponse\n\nThis will return the Company model that has been created or updated."
  },
  {
    "title": "Company User/Segment/Tag Count Model",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/counts/company-tag-counts/",
    "html": "Company User/Segment/Tag Count Model\nCompany User/Segment/Tag Count Object\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\ncompany\tobject\tContains a field called segment containing segment counts\ncompany.segment\tarray\tContains a list of segment objects their name and their number of companies tagged\ncompany.tag\tarray\tContains a list of tag objects with their name and their number of companies tagged\ncompany.user\tarray\tContains an array of companies with their name and their number of users\ncurlcurlrubyphpjava\n# Company Tag Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=tag&per_page=5' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\n# Company Segment Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=segment' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\n# Company User Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=user' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\n# Company Tag Count\\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"count\\\",\\n    \\\"company\\\": {\\n        \\\"tag\\\": [\\n            {\\n                \\\"VIP\\\": 0\\n            },\\n            {\\n                \\\"UpMarket\\\": 0\\n            },\\n            {\\n                \\\"test\\\": 0\\n            },\\n            {\\n                \\\"new\\\": 0\\n            },\\n            {\\n                \\\"smb\\\": 0\\n            }\\n        ]\\n    },\\n    \\\"pages\\\": {\\n        \\\"pages\\\": {\\n            \\\"type\\\": \\\"pages\\\",\\n            \\\"next\\\": \\\"https://api.intercom.io/counts?type=company&count=tag&page=2&per_page=5\\\",\\n            \\\"page\\\": 1,\\n            \\\"per_page\\\": 5,\\n            \\\"total_pages\\\": 203\\n        }\\n    }\\n}\\n\\n# Company Segment Count\\nHTTP/1.1 200 OK\\n{\\n    \\\"type\\\": \\\"count\\\",\\n    \\\"company\\\": {\\n        \\\"segment\\\": [\\n            {\\n                \\\"Active\\\": 2\\n            },\\n            {\\n                \\\"New\\\": 0\\n            },\\n            {\\n                \\\"Slipping Away\\\": 0\\n            },\\n            {\\n                \\\"id=10\\\": 10\\n            }\\n        ]\\n    },\\n    \\\"pages\\\": {}\\n}\\n\\n# Company User Count\\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"count\\\",\\n  \\\"company\\\": {\\n    \\\"user\\\": [\\n      {\\n        \\\"Independents\\\": 7,\\n        \\\"remote_company_id\\\": \\\"6\\\"\\n      },\\n      {\\n        \\\"Alliance\\\": 1,\\n        \\\"remote_company_id\\\": \\\"7\\\"\\n      }\\n    ]\\n  },\\n  \\\"pages\\\": {}\\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nCompany Segment Count\tcompany\tsegment\nCompany Tag Count\tcompany\ttag\nCompany User Count\tcompany\tuser\nPAGINATION WITH COMPANY COUNTS\n\nCompany tag counts are returned via pagination, which means it defaults to 50 results per page unless you specify otherwise. e.g. \\n'https://api.intercom.io/counts?type=company&count=tag&per_page=10\\\"\\n\\nTo get the next page of results you need to make a GET request with the \"next\" RUL supplied in the initial response."
  },
  {
    "title": "App Total Count Model",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/counts/company-user-counts/",
    "html": "App Total Count Model\n\nYou can use the API to get counts of users and companies filtered by certain criteria.\n\nCounts are a legacy way to periodically obtain data for the purposes of tracking rates of change in contact and company data.\n\nWorkspace Total Count Object\n\nThe total count object contains the summary of the following fields in a workspace, -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count.hash'\ncompany\tobject\tContains the number of companies in your App\nsegment\tobject\tContains the number of segments in your App\ntag\tobject\tContains the number of tags in your App\nuser\tobject\tContains the number of users in your App\nlead\tobject\tContains the number of leads in your App\n\nThe count of tags and segments includes archived tags and segments.\n\n{\n    \"type\": \"count.hash\",\n    \"company\": {\n        \"count\": 55\n    },\n    \"user\": {\n        \"count\": 54944\n    },\n    \"lead\": {\n        \"count\": 17\n    },\n    \"tag\": {\n        \"count\": 1012\n    },\n    \"segment\": {\n        \"count\": 7\n    }\n}\n\n# App Counts\n$ curl 'https://api.intercom.io/counts' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# App Total Counts\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"count.hash\",\n    \"company\": {\n        \"count\": 55\n    },\n    \"user\": {\n        \"count\": 54944\n    },\n    \"lead\": {\n        \"count\": 17\n    },\n    \"tag\": {\n        \"count\": 1012\n    },\n    \"segment\": {\n        \"count\": 7\n    }\n}\n\nintercom.counts.for_app\n\n<?php\n// Global App Counts\n$intercom->counts->getCounts([]);\n?>\n\n// Global App Counts\nfinal Counts.Totals appTotals = Counts.appTotals();\nappTotals.getCompany().getValue();\nappTotals.getSegment().getValue();\nappTotals.getTag().getValue();\nappTotals.getUser().getValue();\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nGlobal App Counts\tNone\tNone"
  },
  {
    "title": "List all segments",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/segments/list-segments/",
    "html": "List all segments\nExample Request & Response\n$ curl https://api.intercom.io/segments\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"segment.list\",\n  \"segments\": [\n    {\n      \"created_at\": 1393613031,\n      \"id\": \"5310d8e7598c9a0b24000002\",\n      \"name\": \"Active\",\n      \"type\": \"segment\",\n      \"updated_at\": 1393613031\n    },\n    {\n      \"created_at\": 1393613030,\n      \"id\": \"5310d8e6598c9a0b24000001\",\n      \"name\": \"New\",\n      \"type\": \"segment\",\n      \"updated_at\": 1393613030\n    },\n    {\n      \"created_at\": 1393613031,\n      \"id\": \"5310d8e7598c9a0b24000003\",\n      \"name\": \"Slipping Away\",\n      \"type\": \"segment\",\n      \"updated_at\": 1393613031\n    }\n  ]\n}\n\nintercom.segments.all.each { ... }\n\n<?php\n$intercom->segments->getSegments([]);\n?>\n\nSegmentCollection segments = Segment.list();\nwhile (segments.hasNext()) {\n    out.println(segments.next().getId());\n}\n\n\nYou can fetch a list of all segments.\n\nRequest Query Parameters\nParameter\tType\tRequired?\tDescription\ninclude_count\tBoolean\tNo\tIt includes the count of contacts that belong to each segment.\nResponse\n\nThis will return a list of Segment Objects. The result may also have a pages object if the response is paginated.\n\nAttribute\tType\tDescription\ntype\tString\tvalue is 'segment.list'\nsegments\tArray\tA list of segment objects\npages\tObject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch."
  },
  {
    "title": "Webhooks",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/webhooks/webhooks/",
    "html": "Webhooks\nOverview\n\nWebhooks are a powerful resource that you can use to automate your use cases and improve your productivity. You can find more about them through this link if you're unfamiliar.\n\nUnlike the API resources, which represent static data that you can create, update and retrieve as needed, webhooks represent dynamic resources. You can configure them to automatically notify you when a customer has taken a particular action, such as making a purchase or replying to a conversation.\n\nThe main concepts for webhooks are subscriptions, topics, and notifications.\n\nSubscriptions\n\nA subscription is where you select a topic you wanted to be notified about. Intercom will setup subscriptions for selected topics when that app is installed on a workspace.\n\nTopics\n\nA subscription will contain one or more topics. Topics are types of notifications that you want to be informed about.\n\nNotifications\n\nThe object delivered to a webhook is a notification. Notifications have payloads, which contain the API's existing JSON objects, such as user or conversations. You will need to provide a URL where Intercom will send these request.\n\nWebhooks FAQs\nDo webhooks belong to my workspace or my app?\n\nWebhooks are associated with an app. You configure your webhooks per app just like you configure your access tokens. When you configure a webhook you tell Intercom where you want notifications to be sent to for one or more webhook topics.\n\nWhere do I enable webhook notifications?\n\nYou don't enable webhooks, Intercom will enable them for you when you install an app on a workspace.\n\nIf I am developing apps for other people what do I need to do?\n\nYou will need to select the permissions on the Authorization page of your app and then subscribe to the relevant topics on the Webhooks page.\n\nCan I subscribe for webhook topics via the API?\n\nNo, you can only subscribe to webhooks now via your Developer Hub. This is to make it easier for people to setup webhooks. Previously people had to keep track of all their webhooks and know when to subscribe and unsubscribe from them as needed. Intercom does this for you now so it should be easier to configure.\n\nI previously configured webhooks via the API. Can I still do that?\n\nYes, anyone that has previously used webhooks can continue to work in the same way. Intercom will not delete your webhooks or reconfigure them in anyway. We hope that you will start using the new approach from now on since it is much easier to manage.\n\nIf I need to trust specific IP addresses to accept inbound webhook requests from Intercom, which are they?\n\nThese are as follows: 34.231.68.152, 34.197.76.213, 35.171.78.91, 35.169.138.21, 52.70.27.159, 52.44.63.161."
  },
  {
    "title": "Rate Limiting",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/errors/rate-limiting/",
    "html": "Rate Limiting\n# Example with the default rate limit of 1000\n\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 100\nX-RateLimit-Reset: 1487332510\n\n# After another request:\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 99\nX-RateLimit-Reset: 1487332510\n\n# After window resets\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 100\nX-RateLimit-Reset: 1487332520\n\n# If you make more than the allowed requests\nHTTP/1.1 429 Too Many Requests\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 0\nX-RateLimit-Reset: 1487332520\n\nintercom.rate_limit_details\n#=> {:limit=>1000, :remaining=>999, :reset_at=>2019-08-05 14:59:00 +0100}\n\n\nAPI Rate Limits are in place to protect Intercom from API traffic spikes that could put our databases at risk. We therefore measure the amount of requests sent to the API in order to throttle these when they surpass the amount allowed. We will respond with '429 Too Many Requests' and the following headers:\n\nHeader Name\tHeader Description\nX-RateLimit-Limit\tMaximum number of requests allowed for the app.\nX-RateLimit-Remaining\tNumber of requests left in the current time.\nX-RateLimit-Reset\t_Time when the number of requests will be reset to the maximum limit. _Shown as UNIX timestamp.\nWHAT ABOUT CANVAS KIT REQUESTS?\n\nRate Limits only apply to calls to the REST API, not to any webhook requests that are sent as part of the Canvas Kit capabilities.\n\nWhat is the default amount of requests?\n\nEvery app will have default rate limits. The amount we rate limit them by is different for apps which are privately built for your own usage, or for apps that are publicly installed by third-parties.\n\nPrivate\n\nPrivate apps have a default rate limit of 10,000 API calls per minute per app and 25,000 API calls per minute per workspace. This means that if a workspace has multiple private apps installed, every one contributes towards total number of requests.\n\nPublic\n\nPublic apps have a default rate limit of 10,000 API calls per minute for each app and 25,000 API calls per minute per workspace. This means that if a workspace has multiple public apps installed, each one has its own separate request limit without contributing to the others.\n\nHIGHER RATE LIMITS\n\nIf you require higher rate limits than the defaults, you can contact us using the messenger in the bottom right.\n\nWhen does the amount of requests reset?\n\nAlthough the permitted limit of requests lasts for 1 minute, we evenly distribute this into 10 second windows. This means that every 10 seconds, the amount of permitted requests resets. For example, a default rate limit of 1000 per minute means that you can send a maximum of 166 operations per 10 second period (1000/6)."
  },
  {
    "title": "HTTP Responses",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/errors/http-responses/",
    "html": "HTTP Responses\n\nThe API returns HTTP responses on each request to indicate the success or otherwise of API requests. The codes listed below are often used, and the API may use others. Note that 4xx and 5xx responses may be returned for any request and clients should cater for them.\n\nResponse Code\tDescription\n400\tBad Request -- General client error, possibly malformed data.\n401\tUnauthorized -- The API Key was not authorised (or no API Key was found).\n402\tPayment Required -- The API is not available on your current plan.\n403\tForbidden -- The request is not allowed.\n404\tNot Found -- The resource was not found.\n405\tMethod Not Allowed -- The resource does not accept the HTTP method.\n406\tNot Acceptable -- The resource cannot return the client's required content type.\n408\tRequest Timeout -- The server would not wait any longer for the client.\n409\tConflict - Multiple existing users match this email address - must be more specific using user_id\n415\tUnsupported Media Type - The server doesn't accept the submitted content-type.\n422\tUnprocessable Entity -- The data was well-formed but invalid.\n429\tToo Many Requests -- The client has reached or exceeded a rate limit, or the server is overloaded.\n500, 502, 503, 504\tServer errors - something went wrong with Intercom's servers. These responses are most likely momentary operational errors (e.g. temporary unavailability), and, as a result, requests should be retried once."
  },
  {
    "title": "Error Codes",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/errors/error-codes/",
    "html": "Error Codes\n\nThe API may send the following error codes. Other codes may be added in the future.\n\nField\tDescription\nserver_error\tGeneric server error\nclient_error\tGeneric client error\ntype_mismatch\tThe JSON value type is incorrect for the field\nparameter_not_found\tA required parameter was not supplied\nparameter_invalid\tA parameter's value is invalid\naction_forbidden\tThe action is not authorized\nconflict\tThere is existing data that clashes with the request data\napi_plan_restricted\tThe API is not available on this App's Plan\nrate_limit_exceeded\tThe rate limit for the App has been exceeded\nunsupported\tThe operation is not supported\ntoken_revoked\tThe token or API Key has been revoked\ntoken_blocked\tThe API Key or App has been blocked\ntoken_not_found\tThe token or API Key does not exist\ntoken_unauthorized\tThe token or API Key is not allowed to access the resource\ntoken_expired\tThe token is expired\nmissing_authorization\tNo authorization data was found on the request\nretry_after\tThe client should wait for a time before retrying the request\njob_closed\tThe client should start a new bulk job\nnot_restorable\tThis user was blocked and cannot be recreated\nteam_not_found\tThe team does not exist\nteam_unavailable\tThis team is deprecated so conversations cannot be assigned to it\nadmin_not_found\tThe admin does not exist"
  },
  {
    "title": "Retrieve a note",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/notes/view-a-note/",
    "html": "Retrieve a note\nExample Request\n$ curl https://api.intercom.io/notes/<id> \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"note\",\n  \"id\": \"2\",\n  \"created_at\": 1389913951,\n  \"body\": \"<p>Text for my note</p>\",\n  \"user\": {\n      \"id\": \"5310d8e8598c9a0b24000005\",\n      \"type\": \"user\"\n    },\n  \"author\": {\n    \"type\": \"admin\",\n    \"id\": \"21\",\n    \"name\": \"Jayne Cobb\",\n    \"email\": \"jayne@serenity.io\",\n    \"avatar\" : {\n       \"type\":\"avatar\",\n      \"image_url\": \"http://example.org/128Jayne.jpg\"\n    },\n    \"companies\": []\n  }\n}\n\nintercom.notes.find(:id => note)\n\n<?php\n$note = $intercom->notes->getNote(\"9259097\");\n?>\n\nNote note = Note.find(\"2\");\n\n\nYou can fetch the details of a single note.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier of a given note.\nResponse\n\nThis will return a Note model."
  },
  {
    "title": "The note model",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/notes/note-model/",
    "html": "The note model\nExample Note Object\n{\\n  \\\"type\\\": \\\"note\\\",\\n  \\\"id\\\": \\\"16\\\",\\n  \\\"created_at\\\": 1389913941,\\n  \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n  \\\"author\\\": {\\n    \\\"type\\\": \\\"admin\\\",\\n    \\\"id\\\": \\\"21\\\",\\n    \\\"name\\\": \\\"Jayne Cobb\\\",\\n    \\\"email\\\": \\\"jayne@serenity.io\\\",\\n    \\\"companies\\\": []\\n  },\\n  \\\"user\\\": {\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\"\\n  }\\n}\n\n\nNotes allow you to annotate and comment on your contacts.\n\nCOMPANIES AND CONVERSATIONS\n\nCurrently not possible to create notes for companies. Reach out if you want to submit a feature request, we take these into account.\\n\\nConversations notes are created via the Reply a conversations API.\n\nNote Object\nKey\tType\tDescription\ntype\tString\tvalue is 'note'\nid\tString\tThe id representing the note\ncreated_at\tTimestamp\tThe time the note was created\nuser\tObject\tThe user the note was created about\nbody\tString\tThe body text of the note.\nauthor\tObject\tOptional. Represents the Admin that created the note"
  },
  {
    "title": "Convert a Visitor to a Lead",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/visitors/convert-a-visitor/",
    "html": "Convert a Visitor to a Lead\nExample Lead Convert Request\ncurlcurl\n$ curl \\\\\\nhttps://api.intercom.io/visitors/convert \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"visitor\\\": {\\n    \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  },\\n  \\\"type\\\": \\\"lead\\\"\\n}'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"email\\\": \\\"winstonsmith@truth.org\\\"\\n}\\n# NB: Full User objects are returned\n\n\nVisitors can be converted to Leads. This is done by passing Visitor identifiers and a type attribute set to 'lead'."
  },
  {
    "title": "List all messages",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/messages/list-all-messages/",
    "html": "List all messages\n\nTo list all messages, you will need to use our Export API and download the data in CSV format. This API is available in v2.5 and above."
  },
  {
    "title": "List all notes",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/notes/list-notes-of-contact/",
    "html": "List all notes\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/notes \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can fetch a list of notes that are associated to a contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return a paginated list of Note objects.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - note.list\ndata\tArray\tAn array containing Note Objects\ntotal_count\tInteger\tThe total number of companies associated to this contact\npages\tPagination Object\tThe information needed to paginate through companies"
  },
  {
    "title": "Image",
    "url": "https://developers.intercom.com/docs/references/canvas-kit/presentationcomponents/image/",
    "html": "Image\n\nAn image component is used to display an image.\n\n🚧 HTTPS Images\n\nIf your request URLs (or website URLs) are over HTTPS, you will need to ensure that images are loaded over HTTPS likewise. Otherwise, they will not work.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\timage\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nurl\tA valid HTTPS URL\tYes\tThe URL where the image is located.\nalign\tleft``center``right``full_width\tNo\tAligns the image inside the component.Default is left.\nwidth\tAny integer\tYes\tThe exact width of the image in pixels.\nheight\tAny integer\tYes\tThe exact height of the image in pixels.\nrounded\ttrue``false\tNo\tRounds the corners of the image. Default is false.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\naction\tAction Object\tNo\tThis can be a URL Action only.\nPreview"
  },
  {
    "title": "Data-Table",
    "url": "https://developers.intercom.com/docs/references/canvas-kit/presentationcomponents/data-table/",
    "html": "Data-Table\n\nA data-table component is used for rendering a table of key-value pairs. For Messenger, text will wrap around on multiple lines. For Inbox and Frame (ie. Configure) views, we will truncate and use tooltips on hover if the text overflows.\n\nData-Table Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdata-table\tYes\tThe type of component you are rendering.\nitems\tArray (See Below)\tYes\tThe items that will be rendered in the data-table.\nField-Value Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tfield-value\tYes\tThe type of component you are rendering.\nfield\tAny string\tYes\tThe text of the key in your key-value pair.\nvalue\tAny string\tYes\tThe text of the value in your key-value pair.\nPreview"
  },
  {
    "title": "Users",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/users/users/",
    "html": "Users\n\nUsers is no longer available as a resource. In order to see information and take action on users, you should use the Contacts API."
  },
  {
    "title": "List all companies",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/companies/list-companies/",
    "html": "List all companies\nList companies\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/companies \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"company.list\\\",\\n  \\\"total_count\\\": 105,\\n  \\\"companies\\\": [\\n    {\\n      \\\"type\\\": \\\"company\\\",\\n      \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n       ...\\n     },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/companies?per_page=50&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 3\\n  }\\n}\\n\\n# NB: Full company objects are returned\n\n\nYou can list companies. The company list is sorted by the last_request_at field and by default is ordered descending, most recently requested first.\n\nNote that the API does not include companies who have no associated users in list responses.\n\nRequest Parameters\n\nYou can optionally request the result page size and which page to fetch as follows -\n\nParameter\tRequired\tDescription\npage\tno\twhat page of results to fetch defaults to first page.\nper_page\tno\thow many results per page defaults to 50.\norder\tno\tasc or desc. Return the companies in ascending or descending order. defaults to desc.\nRequest Query Parameters\nParameter\tRequired\tDescription\ntag_id\tone of\tThe id of the tag to filter by.\nsegment_id\tone of\tThe id of the segment to filter by.\nResponse\n\nThis will return a paginated list of Company Objects\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - list\ndata\tArray\tAn array containing Company Objects.\ntotal_count\tInteger\tThe total number of companies.\npages\tPagination Object\tThe information needed to paginate through companies\n\nWhen using the Companies endpoint and the pages object to iterate through the returned companies, there is a limit of 10,000 Companies that can be returned. If you need to list or iterate on more than 10,000 Companies, please use the Scroll API."
  },
  {
    "title": "Error Objects",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/errors/error-objects/",
    "html": "Error Objects\nError List Object\n{\n  \"type\": \"error.list\",\n  \"errors\": [\n    {\n      \"code\": \"not_found\",\n      \"message\": \"No such user_id[314159]\",\n      \"field\": \"user_id\"\n    },\n    {\n      \"code\": \"not_found\",\n      \"message\": \"No such email[pi@example.org]\",\n      \"field\": \"email\"\n    }\n  ]\n}\n\n// the JavaScript client doesn't directly expose error data\n\n# the Ruby client doesn't directly expose error data\n\n<?php\n// the PHP client doesn't directly expose error data\n?>\n\ntry {\n  UserCollection uc = User.list();\n} catch(IntercomException  ie) {\n  Error e = ie.getFirstError();\n  log.error(\"{}:{}\", e.getCode(), e.getMessage());\n}\n\n\nThe API will return an Error List for a failed request, which will contain one or more Error objects.\n\nError List Attributes\n\nEach error has the following attributes\n\nField\tDescription\ntype\tThe type is error.list\nerrors\tAn array of one or more error objects\nError Object Attributes\n\nEach Error Object has the following attributes\n\nField\tDescription\ncode\tA string indicating the kind of error, used to further qualify the HTTP response code\nmessage\tOptional. Human readable description of the error\nfield\tOptional. Used to identify a particular field or query parameter that was in error."
  },
  {
    "title": "Canvas",
    "url": "https://developers.intercom.com/docs/references/1.3/canvas-kit/responseobjects/canvas/",
    "html": "Canvas\nDescription\n\nYou have to respond to the majority of request with a canvas object. This will tell us what UI to show for your app.\n\nA canvas can either be static (meaning we send you the next request only when an action takes place) or live (meaning we send you the next request when someone views the app).\n\nA static canvas needs a Content Object which will contain the components to show.\nA live canvas needs a content_url which we we will make the Live Canvas requests to when the app is viewed. This is only possible for apps viewed or used in the Messenger.\nAttributes\nKey\tType\tCanvas Type\tDescription\ncontent\tobject\tStatic\tThe Content that will be shown as the UI of the app. Max Size is 64KB.\ncontent_url\tstring\tLive\tThe URL which we make Live Canvas requests to. You must respond to these with a Content Object. Max size is 64KB.\nstored_data\tobject\tStatic, Live\tOptional Stored Data that you want to be returned in the next sent request. Max Size is 64KB.\nExample Objects\n{\n  canvas: {\n    content: {\n      components: [\n        {\n          \"type\": \"text\",\n          \"text\": \"This is a text component.\"\n        }\n      ]\n    },\n    stored_data: { \"key\": \"value\" } //Can be more than one pair \n  }\n}\n\n{\n  canvas: {\n    content_url: \"https://messengerapp.com/get-content-here\",\n    stored_data: { \"key\": \"value\" } //Can be more than one pair \n  }\n}\n"
  },
  {
    "title": "Results",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/responseobjects/results/",
    "html": "Results\nDescription\n\nThe results object should be sent when you want to end configuration of the app and trigger the Initialize request to be sent. You provide the key-value pairs of data you want access to and we will send these in the Initialize request within a card_creation_options object.\n\nExample Object\nresults: { \"key\": \"value\" } // Can be more than one pair\n"
  },
  {
    "title": "Stored Data",
    "url": "https://developers.intercom.com/docs/references/1.3/canvas-kit/responseobjects/stored-data/",
    "html": "Stored Data\nDescription\n\nA canvas object may optionally contain a stored_data object. This is where you can add key-value pairs of data that you want to be sent in whatever the next request is.\n\nFor example, the flow of your app might have multiple canvases with data being inputted on each one. You may want to have all this data available to use at the end of the flow for the final canvas. You can therefore put all this data in the stored_data object so it's sent in subsequent requests and is available at the end.\n\nExample Object\nstored_data: {\"key\": \"value\"} //Can be more than one pair\n"
  },
  {
    "title": "Event",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/responseobjects/event/",
    "html": "Event\nDescription\n\nThe event object enables Intercom to know more about the actions that took place in your app. Currently, you can only tell us when an app's flow has been completed.\n\nAttributes\nKey\tType\tDescription\ntype\tstring\tWhat action took place. The only value currently accepted is completed.\nExample Object\nevent: { \"type\": \"completed\" } // Optional. Recorded by Intercom.\n"
  },
  {
    "title": "Event",
    "url": "https://developers.intercom.com/docs/references/1.3/canvas-kit/responseobjects/event/",
    "html": "Event\nDescription\n\nThe event object enables Intercom to know more about the actions that took place in your app. Currently, you can only tell us when an app's flow has been completed.\n\nAttributes\nKey\tType\tDescription\ntype\tstring\tWhat action took place. The only value currently accepted is completed.\nExample Object\nevent: { \"type\": \"completed\" } // Optional. Recorded by Intercom.\n"
  },
  {
    "title": "Content",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/responseobjects/content/",
    "html": "Content\nDescription\n\nThe content object is where you specify the UI of your app. You provide us with a set of components in a components array that we then render.\n\nThe content object should usually be returned within the canvas object. If you're responding to a Live Canvas request however, then you should only respond with the content object.\n\nAttributes\nKey\tType\tDescription\ncomponents\tarray\tThe list of components to be rendered. See the components further in this reference.\nExample Object\n{\n  content: {\n    components: [\n      {\n        \"type\": \"text\",\n        \"id\": \"component-1\",\n        \"text\": \"This is the first component\",\n        \"align\": \"center\",\n        \"style\": \"header\"\n      },\n      {\n        \"type\": \"button\",\n        \"id\": \"component-2\",\n        \"label\": \"This is the second component\",\n        \"action\": {\n          \"type\": \"submit\"\n        }\n      }\n    ]\n  }\n}\n"
  },
  {
    "title": "HTTP Responses",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/errors/http-responses/",
    "html": "HTTP Responses\n\nThe API returns HTTP responses on each request to indicate the success or otherwise of API requests. The codes listed below are often used, and the API may use others. Note that 4xx and 5xx responses may be returned for any request and clients should cater for them.\n\nResponse Code\tDescription\n400\tBad Request -- General client error, possibly malformed data.\n401\tUnauthorized -- The API Key was not authorised (or no API Key was found).\n402\tPayment Required -- The API is not available on your current plan.\n403\tForbidden -- The request is not allowed.\n404\tNot Found -- The resource was not found.\n405\tMethod Not Allowed -- The resource does not accept the HTTP method.\n406\tNot Acceptable -- The resource cannot return the client's required content type.\n408\tRequest Timeout -- The server would not wait any longer for the client.\n409\tConflict - Multiple existing users match this email address - must be more specific using user_id\n415\tUnsupported Media Type - The server doesn't accept the submitted content-type.\n422\tUnprocessable Entity -- The data was well-formed but invalid.\n429\tToo Many Requests -- The client has reached or exceeded a rate limit, or the server is overloaded.\n500, 502, 503, 504\tServer errors - something went wrong with Intercom's servers. These responses are most likely momentary operational errors (e.g. temporary unavailability), and, as a result, requests should be retried once."
  },
  {
    "title": "Content",
    "url": "https://developers.intercom.com/docs/references/1.3/canvas-kit/responseobjects/content/",
    "html": "Content\nDescription\n\nThe content object is where you specify the UI of your app. You provide us with a set of components in a components array that we then render.\n\nThe content object should usually be returned within the canvas object. If you're responding to a Live Canvas request however, then you should only respond with the content object.\n\nAttributes\nKey\tType\tDescription\ncomponents\tarray\tThe list of components to be rendered. See the components further in this reference.\nExample Object\n{\n  content: {\n    components: [\n      {\n        \"type\": \"text\",\n        \"id\": \"component-1\",\n        \"text\": \"This is the first component\",\n        \"align\": \"center\",\n        \"style\": \"header\"\n      },\n      {\n        \"type\": \"button\",\n        \"id\": \"component-2\",\n        \"label\": \"This is the second component\",\n        \"action\": {\n          \"type\": \"submit\"\n        }\n      }\n    ]\n  }\n}\n"
  },
  {
    "title": "Canvas",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/responseobjects/canvas/",
    "html": "Canvas\nDescription\n\nYou have to respond to the majority of requests with a canvas object. This will tell us what UI to show for your app.\n\nA canvas can either be static (meaning we send you the next request only when an action takes place) or live (meaning we send you the next request when someone views the app).\n\nA static canvas needs a Content Object which will contain the components to show.\nA live canvas needs a content_url which we we will make the Live Canvas requests to when the app is viewed. This is only possible for apps viewed or used in the Messenger.\nAttributes\nKey\tType\tCanvas Type\tDescription\ncontent\tobject\tStatic\tThe Content that will be shown as the UI of the app. Max Size is 64KB.\ncontent_url\tstring\tLive\tThe URL which we make Live Canvas requests to. You must respond to these with a Content Object. Max size is 64KB.\nstored_data\tobject\tStatic, Live\tOptional Stored Data that you want to be returned in the next sent request. Max Size is 64KB.\nExample Objects\n{\n  canvas: {\n    content: {\n      components: [\n        {\n          \"type\": \"text\",\n          \"text\": \"This is a text component.\"\n        }\n      ]\n    },\n    stored_data: { \"key\": \"value\" } //Can be more than one pair \n  }\n}\n\n{\n  canvas: {\n    content_url: \"https://messengerapp.com/get-content-here\",\n    stored_data: { \"key\": \"value\" } //Can be more than one pair \n  }\n}\n"
  },
  {
    "title": "The collection & section models",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/help-center/the-collection-section-models/",
    "html": "The collection & section models\nExample Collection Object\nJSON\n{  \\\"id\\\": 1,  \\\"type\\\": \\\"collection\\\",  \\\"workspace_id\\\": \\\"abcdef\\\",  \\\"name\\\": \\\"Default language name\\\",  \\\"description\\\": \\\"Default language description\\\",   \\\"created_at\\\": 123456,  \\\"updated_at\\\": 123456,  \\\"url\\\": \\\"http://intercom.test/help/collection/name\\\",  \\\"icon\\\": \\\"http://intercom/help_center/icon-1\\\",  \\\"order\\\": 0,  \\\"default_locale\\\": \\\"en\\\",  \\\"translated_content\\\": {    \\\"type\\\": \\\"group_translated_content\\\",    \\\"fr\\\": {      \\\"type\\\": \\\"group_content\\\",      \\\"name\\\": \\\"French name\\\",      \\\"description\\\": \\\"French description\\\"    }  }}\n\nExample Section Object\n{\n  \"id\": 1,\n  \"type\": \"section\",\n  \"workspace_id\": \"abcdef\",\n  \"name\": \"Default language name\",\n  \"created_at\": 123456,\n  \"updated_at\": 123456,\n  \"url\": \"http://intercom.test/help/section/name\",\n  \"icon\": \"http://intercom/help_center/icon-1\",\n  \"order\": 0,\n  \"collection_id\": \"1\",\n  \"default_locale\": \"en\",\n  \"translated_content\": {\n    \"type\": \"group_translated_content\",\n    \"fr\": {\n      \"type\": \"group_content\",\n      \"name\": \"French name\"\n    }\n  }\n}\n\n\nThe Help Center API is a central place to gather all information and take actions on those elements within a Help Center - namely the collections and sections. Collections are top level containers for Articles within the Help Center. Sections are subdivisions of a collection, with a collection potentially having multiple sections.\n\nFor articles you should refer to the Articles endpoint.\n\nCollection Object\nKey\tType\tDescription\ntype\tString\tThe type of object - collection.\nid\tString\tThe unique identifier for the collection which is given by Intercom.\nworkspace_id\tString\tThe id of the workspace which the collection belongs to.\nname\tString\tThe name of the collection. For multilingual help centers, this will be the title of the default language's content.\ndescription\tString\tThe description of the collection. For multilingual help centers, this will be the description of the collection for the default language.\ncreated_at\tTimestamp\tThe time when the article was created. For multilingual articles, this will be the timestamp of creation of the default language's content.\nupdated_at\tTimestamp\tThe time when the article was last updated. For multilingual articles, this will be the timestamp of last update of the default language's content.\nurl\tString\tThe URL of the collection. For multilingual help centers, this will be the URL of the collection for the default language.\nicon\tString\tThe icon for the collection.\norder\tInteger\tThe order of the section in relation to others sections within a collection. Values go from 0 upwards. 0 is the default if there's no order.\ndefault_locale\tString\tThe default locale of the help center. This field is only returned for multilingual help centers.\ntranslated_content\tObject\tAn Group Translated Content Object for multilingual articles. This field is only returned for multilingual help centers.\nSection Object\nKey\tType\tDescription\ntype\tString\tThe type of object - section.\nid\tString\tThe unique identifier for the section which is given by Intercom.\nworkspace_id\tString\tThe id of the workspace which the section belongs to.\nname\tString\tThe name of the section. For multilingual help centers, this will be the name of the section for the default language.\ncreated_at\tTimestamp\tThe time when the section was created. For multilingual help centers, this will be the timestamp of the section's creation for the default language.\nupdated_at\tTimestamp\tThe time when the section was last updated. For multilingual help centers, this will be the timestamp of the section's last update for the default language.\nurl\tString\tThe URL of the section. For multilingual help centers, this will be the URL of the section for the default language.\nicon\tString\tThe icon for the section.\norder\tInteger\tThe order of the section in relation to others sections within a collection. Values go from 0 upwards. 0 is the default if there's no order.\ncollection_id\tString\tThe id of the collection to which this section belongs to.\ndefault_locale\tString\tThe default locale of the help center. This field is only returned for multilingual help centers.\ntranslated_content\tObject\tAn Group Translated Content Object for multilingual articles. This field is only returned for multilingual help centers.\nGroup Translated Content Object\nKey\tType\tWriteable?\tDescription\ntype\tString\tNo\tThe type of object - group_translated_content.\n<locale> ar, bg, bs, ca, cs, da, de, 'de-form', el, en, es, et, fi, fr, he, hr, hu, id, it, ja, ko, lt, lv, mn, nb, nl, pl, 'pt-BR', pt, ro, ru, sl, sr, sv, tr, vi, 'zh-CN', 'zh-TW'\tObject\tYes\tAn Group Content Object for each supported locale of the multilingual help center. The default locale's content and information will be contained in the initial Collection Object or Section Object respectively. If there's no content for a locale, the value will be nil.\nGroup Content Object\nKey\tType\tWriteable?\tDescription\ntype\tString\tNo\tThe type of object - group_content.\nname\tString\tYes\tThe name of the collection or section.\ndescription\tString\tYes\tThe description of the collection. Only available for collections."
  },
  {
    "title": "Rate Limiting",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/errors/rate-limiting/",
    "html": "Rate Limiting\n# Example with the default rate limit of 1000\n\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 100\nX-RateLimit-Reset: 1487332510\n\n# After another request:\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 99\nX-RateLimit-Reset: 1487332510\n\n# After window resets\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 100\nX-RateLimit-Reset: 1487332520\n\n# If you make more than the allowed requests\nHTTP/1.1 429 Too Many Requests\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 0\nX-RateLimit-Reset: 1487332520\n\nintercom.rate_limit_details\n#=> {:limit=>1000, :remaining=>999, :reset_at=>2019-08-05 14:59:00 +0100}\n\n\nAPI Rate Limits are in place to protect Intercom from API traffic spikes that could put our databases at risk. We therefore measure the amount of requests sent to the API in order to throttle these when they surpass the amount allowed. We will respond with '429 Too Many Requests' and the following headers:\n\nHeader Name\tHeader Description\nX-RateLimit-Limit\tMaximum number of requests allowed for the app.\nX-RateLimit-Remaining\tNumber of requests left in the current time.\nX-RateLimit-Reset\tTime when the number of requests will be reset to the maximum limit. Shown as UNIX timestamp.\nWHAT ABOUT CANVAS KIT REQUESTS?\n\nRate Limits only apply to calls to the REST API, not to any webhook requests that are sent as part of the Canvas Kit capabilities.\n\nWhat is the default amount of requests?\n\nEvery app will have default rate limits. The amount we rate limit them by is different for apps which are privately built for your own usage, or for apps that are publicly installed by third-parties.\n\nPrivate\n\nPrivate apps have a default rate limit of 10,000 API calls per minute per app and 25,000 API calls per minute per workspace. This means that if a workspace has multiple private apps installed, every one contributes towards total number of requests.\n\nPublic\n\nPublic apps have a default rate limit of 10,000 API calls per minute for each app and 25,000 API calls per minute per workspace. This means that if a workspace has multiple public apps installed, each one has its own separate request limit without contributing to the others.\n\nHIGHER RATE LIMITS\n\nIf you require higher rate limits than the defaults, you can contact us using the messenger in the bottom right.\n\nWhen does the amount of requests reset?\n\nAlthough the permitted limit of requests lasts for 1 minute, we evenly distribute this into 10 second windows. This means that every 10 seconds, the amount of permitted requests resets. For example, a default rate limit of 1000 per minute means that you can send a maximum of 166 operations per 10 second period (1000/6). Public apps have a default rate limit of 1000 API calls per minute for each app. This means that if a workspace has multiple public apps installed, each one has it's own separate 1000 request limit without contributing to the others.\n\nWhen does the amount of requests reset?\n\nAlthough the permitted limit of requests lasts for 1 minute, we evenly distribute this into 10 second windows. This means that every 10 seconds, the amount of permitted requests resets. For example, a default rate limit of 1000 per minute means that you can send a maximum of 166 operations per 10 second period (1000/6)."
  },
  {
    "title": "Rate Limiting",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/errors/rate-limiting/",
    "html": "Rate Limiting\n# Example with the default rate limit of 1000\n\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 100\nX-RateLimit-Reset: 1487332510\n\n# After another request:\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 99\nX-RateLimit-Reset: 1487332510\n\n# After window resets\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 100\nX-RateLimit-Reset: 1487332520\n\n# If you make more than the allowed requests\nHTTP/1.1 429 Too Many Requests\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 0\nX-RateLimit-Reset: 1487332520\n\nintercom.rate_limit_details\n#=> {:limit=>1000, :remaining=>999, :reset_at=>2019-08-05 14:59:00 +0100}\n\n\nAPI Rate Limits are in place to protect Intercom from API traffic spikes that could put our databases at risk. We therefore measure the amount of requests sent to the API in order to throttle these when they surpass the amount allowed. We will respond with '429 Too Many Requests' and the following headers:\n\nHeader Name\tHeader Description\nX-RateLimit-Limit\tMaximum number of requests allowed for the app.\nX-RateLimit-Remaining\tNumber of requests left in the current time.\nX-RateLimit-Reset\tTime when the number of requests will be reset to the maximum limit. Shown as UNIX timestamp.\nWHAT ABOUT CANVAS KIT REQUESTS?\n\nRate Limits only apply to calls to the REST API, not to any webhook requests that are sent as part of the Canvas Kit capabilities.\n\nWhat is the default amount of requests?\n\nEvery app will have default rate limits. The amount we rate limit them by is different for apps which are privately built for your own usage, or for apps that are publicly installed by third-parties.\n\nPrivate\n\nPrivate apps have a default rate limit of 10,000 API calls per minute per app and 25,000 API calls per minute per workspace. This means that if a workspace has multiple private apps installed, every one contributes towards total number of requests.\n\nPublic\n\nPublic apps have a default rate limit of 10,000 API calls per minute for each app and 25,000 API calls per minute per workspace. This means that if a workspace has multiple public apps installed, each one has its own separate request limit without contributing to the others.\n\nHIGHER RATE LIMITS\n\nIf you require higher rate limits than the defaults, you can contact us using the messenger in the bottom right.\n\nWhen does the amount of requests reset?\n\nAlthough the permitted limit of requests lasts for 1 minute, we evenly distribute this into 10 second windows. This means that every 10 seconds, the amount of permitted requests resets. For example, a default rate limit of 1000 per minute means that you can send a maximum of 166 operations per 10 second period (1000/6).\n\nHow can I handle rate limits?\n\nTo prevent hitting the rate limits, here are a few options for handling within your code.\n\nUse the header information\n\nYou can find the number of requests allowed in your current window in the Intercom headers, or if you are using the Intercom Ruby SDK you can call your client's rate_limit_details which returns a Hash with information about your app's rate limit.\n\nYou can use the remaining number of requests allowed in your current window and when this is below a certain value you can rest until your rate limit is reset.\n\nIn the example below the app is restricted to a rate limit of 5 just to show the output returned — note that we’ve also shown what information is available in the Intercom client and the response for your current rate limits using the Ruby SDK.\n\nrequire 'intercom'\nrequire 'stringio'\n\nintercom = Intercom::Client.new(token: ENV['YOUR_TOKEN'])\n\nretries = 0\nmax_retries = 3\nbackoff_factor = 2\n\nfor num in 0..20\n  begin\n    puts(\"Request Number #{num+1}\")\n    email = 'contact' + num.to_s + '@example.com'\n    name = 'Mrs ' + num.to_s + \"Example\"\n    # Make a HTTP POST request to Intercom to create/update a user\n    response = intercom.contacts.create(:email => email, :name => name, :signed_up_at => Time.now.to_i)\n    # These are the headers we have access to when making requests\n    puts(\"Rate Limit: #{intercom.rate_limit_details[:limit]} \\n\")\n    puts(\"Remaining: #{intercom.rate_limit_details[:remaining]} \\n\")\n    puts(\"Reset Time: #{intercom.rate_limit_details[:reset_at]} \\n\")\n\n    # Check when request limit is under a certain number\n    if not intercom.rate_limit_details[:remaining].nil? and intercom.rate_limit_details[:remaining] < 2\n      sleep_time = intercom.rate_limit_details[:reset_at].to_i - Time.now.to_i\n      puts(\"Waiting for #{sleep_time} seconds to allow for rate limit to be reset\")\n      sleep sleep_time\n    end\n  rescue => error\n    raise(\"Received a general error so exiting: #{error}\")\n  end\nend\n\n\nThe output from the above code is below. You would not need to output all of this data, but this should offer an example of what to expect and how you might approach implementing a rest until the limit is reset.\n\nRequest Number 1\nRate Limit:\nRemaining:\nReset Time:\nRequest Number 2\nRate Limit: 5\nRemaining: 5\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 3\nRate Limit: 5\nRemaining: 4\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 4\nRate Limit: 5\nRemaining: 3\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 5\nRate Limit: 5\nRemaining: 2\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 6\nRate Limit: 5\nRemaining: 1\nReset Time: 2023-12-08 15:19:51 +0000 \nWaiting for 38 seconds to allow for rate limit to be reset\nRequest Number 7\nRate Limit: 5\nRemaining: 5\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 8\nRate Limit: 5\nRemaining: 4\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 9\nRate Limit: 5\nRemaining: 3\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 10\nRate Limit: 5\nRemaining: 2\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 11\nRate Limit: 5\nRemaining: 1\nReset Time: 2016-11-16 16:15:00 +0000\nWaiting for 58 seconds to allow for rate limit to be reset\n\nUse randomization\n\nWhile the reset option is one way to deal with rate limiting, you may want more granular control over your rate limit handling. For example, you might have a specific retry timeframe that you want to follow and not wait for the minute window to pass for your entire rate limit to be reset.\n\nIf you want more control over your rate limiting handling then you can check for the specific rate limit error returned and use some form of randomization in the backoff calculation.\n\nYou could change the retry code above to look like this to achieve some randomization:\n\nrequire 'intercom'\nrequire 'stringio'\n\nintercom = Intercom::Client.new(token: ENV['YOUR_TOKEN'])\n\nretries = 0\nmax_retries = 3\nbackoff_factor = 2\n\nfor num in 0..20\n  begin\n    puts(\"Request Number #{num+1}\")\n    email = 'contact' + num.to_s + '@example.com'\n    name = 'Mrs ' + num.to_s + \"Example\"\n    # Make a HTTP POST request to Intercom to create/update a user\n    response = intercom.contacts.create(:email => email, :name => name, :signed_up_at => Time.now.to_i)\n  rescue Intercom::RateLimitExceeded => error\n    #At this point we know we have encountered a limit\n    #So lets try for a few times and backoff a little in each case\n    puts(\"Error Msg: #{error.inspect} \\n\")\n    puts(\"http_code: #{error.http_code[:http_code]}\\n\" )\n    puts(\"http_code: #{error.http_code[:application_error_code]}\\n\" )\n    if retries <= max_retries\n      # Lets try it a few more times\n      retries += 1\n      # Set a range from num of retries to backoff and randomly sample from that\n      # You can pick any range you like here, this is just an example\n      backoff = rand(retries..(backoff_factor * retries))\n      puts(\"Backoff for #{backoff} seconds\")\n      sleep backoff\n    else\n      # Rasing error here so you can perform some action based on this event\n      raise(\"No longer retrying since we have retried #{retries} times.\\n\"\\\n              \"The error returned was: '#{error.message}'\")\n    end\n  rescue => error\n    raise(\"Received a general error so exiting: #{error}\")\n  end\nend\n\n\nAfter running this code, your output would look like this:\n\nRequest Number 1\nRequest Number 2\nRequest Number 3\nRequest Number 4\nRequest Number 5\nRequest Number 6\nRequest Number 7\nError Msg: #<Intercom::RateLimitExceeded: More than 5 requests received in 1 minute>\nhttp_code: 429\nhttp_code: rate_limit_exceeded\nBackoff for 2 seconds\nRequest Number 8\nError Msg: #<Intercom::RateLimitExceeded: More than 5 requests received in 1 minute>\nhttp_code: 429\nhttp_code: rate_limit_exceeded\nBackoff for 3 seconds\nRequest Number 9\nError Msg: #<Intercom::RateLimitExceeded: More than 5 requests received in 1 minute>\nhttp_code: 429\nhttp_code: rate_limit_exceeded\nBackoff for 3 seconds\nRequest Number 10\nError Msg: #<Intercom::RateLimitExceeded: More than 5 requests received in 1 minute>\nhttp_code: 429\nhttp_code: rate_limit_exceeded\nBackoff for 6 seconds\nRequest Number 11\nError Msg: #<Intercom::RateLimitExceeded: More than 5 requests received in 1 minute>\nhttp_code: 429\nhttp_code: rate_limit_exceeded\nadvanced_throttle.rb:32:in `rescue in block in <main>': No longer retrying since we have retried 4 times. (RuntimeError)\nThe error returned was: 'More than 5 requests received in 1 minute'\n\tfrom advanced_throttle.rb:9:in `block in <main>'\n\tfrom advanced_throttle.rb:8:in `each'\n\tfrom advanced_throttle.rb:8:in `<main>'\n\nUse a library for exponential backoff\n\nTo prevent having to implement your own backoff forumlas, you can use a library that will handle this for you. Some examples include:\n\nretry for Node.js\nbackoff for Python\nretries, a RubyGem which will be used for the below example\n\nWith retries, all you specify the number of retries you want and it will handle the rest.\n\nrequire 'intercom'\nrequire 'stringio'\nrequire 'retries'\n\nintercom = Intercom::Client.new(token: ENV['YOUR_TOKEN'])\n\nmax_retries = 3\n\nfor num in 0..20\n  handler = Proc.new do |exception, attempt_number, total_delay|\n    puts \"Handler saw a #{exception.class}; retry attempt #{attempt_number}; #{total_delay} seconds have passed.\"\n  end\n  with_retries(:max_tries => max_retries, :handler => handler, :rescue => [Intercom::RateLimitExceeded]) do |attempt|\n    puts(\"Request Number #{num+1}\")\n    # You can check for the max retry number and raise an error so you can take some action based on this event\n    if attempt >= max_retries\n      raise(\"No longer retrying since we have retried #{attempt} time.\\n\"\\\n    \"The error returned was: '#{Intercom::RateLimitExceeded}'\")\n    end\n    puts(\"Request Number #{num+1}\")\n    email = 'contact' + num.to_s + '@example.com'\n    name = 'Mrs ' + num.to_s + \"Example\"\n    # Make a HTTP POST request to Intercom to create/update a user\n    response = intercom.contacts.create(:email => email, :name => name, :signed_up_at => Time.now.to_i)\n  end\nend\n\n\nThe is what the output of the above example looks like using retries:\n\nRequest Number 1\nRequest Number 2\nRequest Number 3\nRequest Number 4\nRequest Number 5\nRequest Number 6\nHandler saw a Intercom::RateLimitExceeded; retry attempt 1; 0.328696139 seconds have passed.\nRequest Number 6\nHandler saw a Intercom::RateLimitExceeded; retry attempt 2; 1.194656588 seconds have passed.\nRequest Number 6\nthrottle_retries.rb:14:in `block (2 levels) in <main>': No longer retrying since we have retried 3 times. (RuntimeError)\nThe error returned was: 'Intercom::RateLimitExceeded'\n\tfrom /home/ec2-user/.rvm/gems/ruby-2.3.0/gems/retries-0.0.5/lib/retries.rb:46:in `with_retries'\n\tfrom throttle_retries.rb:11:in `block in <main>'\n\tfrom throttle_retries.rb:7:in `each'\n\tfrom throttle_retries.rb:7:in `<main>'\n[ec2-user@ip-10-0-2-162 ~]$\n"
  },
  {
    "title": "Rate Limiting",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/errors/rate-limiting/",
    "html": "Rate Limiting\n# Example with the default rate limit of 1000\n\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 100\nX-RateLimit-Reset: 1487332510\n\n# After another request:\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 99\nX-RateLimit-Reset: 1487332510\n\n# After window resets\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 100\nX-RateLimit-Reset: 1487332520\n\n# If you make more than the allowed requests\nHTTP/1.1 429 Too Many Requests\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 0\nX-RateLimit-Reset: 1487332520\n\nintercom.rate_limit_details\n#=> {:limit=>1000, :remaining=>999, :reset_at=>2019-08-05 14:59:00 +0100}\n\n\nAPI Rate Limits are in place to protect Intercom from API traffic spikes that could put our databases at risk. We therefore measure the amount of requests sent to the API in order to throttle these when they surpass the amount allowed. We will respond with '429 Too Many Requests' and the following headers:\n\nHeader Name\tHeader Description\nX-RateLimit-Limit\tMaximum number of requests allowed for the app.\nX-RateLimit-Remaining\tNumber of requests left in the current time.\nX-RateLimit-Reset\t_Time when the number of requests will be reset to the maximum limit. _Shown as UNIX timestamp.\nWHAT ABOUT CANVAS KIT REQUESTS?\n\nRate Limits only apply to calls to the REST API, not to any webhook requests that are sent as part of the Canvas Kit capabilities.\n\nWhat is the default amount of requests?\n\nEvery app will have default rate limits. The amount we rate limit them by is different for apps which are privately built for your own usage, or for apps that are publicly installed by third-parties.\n\nPrivate\n\nPrivate apps have a default rate limit of 10,000 API calls per minute per app and 25,000 API calls per minute per workspace. This means that if a workspace has multiple private apps installed, every one contributes towards total number of requests.\n\nPublic\n\nPublic apps have a default rate limit of 10,000 API calls per minute for each app and 25,000 API calls per minute per workspace. This means that if a workspace has multiple public apps installed, each one has its own separate request limit without contributing to the others.\n\nHIGHER RATE LIMITS\n\nIf you require higher rate limits than the defaults, you can contact us using the messenger in the bottom right.\n\nWhen does the amount of requests reset?\n\nAlthough the permitted limit of requests lasts for 1 minute, we evenly distribute this into 10 second windows. This means that every 10 seconds, the amount of permitted requests resets. For example, a default rate limit of 1000 per minute means that you can send a maximum of 166 operations per 10 second period (1000/6)."
  },
  {
    "title": "Error Codes",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/errors/error-codes/",
    "html": "Error Codes\n\nThe API may send the following error codes. Other codes may be added in the future.\n\nField\tDescription\nserver_error\tGeneric server error\nclient_error\tGeneric client error\ntype_mismatch\tThe JSON value type is incorrect for the field\nparameter_not_found\tA required parameter was not supplied\nparameter_invalid\tA parameter's value is invalid\naction_forbidden\tThe action is not authorized\nconflict\tThere is existing data that clashes with the request data\napi_plan_restricted\tThe API is not available on this App's Plan\nrate_limit_exceeded\tThe rate limit for the App has been exceeded\nunsupported\tThe operation is not supported\ntoken_revoked\tThe token or API Key has been revoked\ntoken_blocked\tThe API Key or App has been blocked\ntoken_not_found\tThe token or API Key does not exist\ntoken_unauthorized\tThe token or API Key is not allowed to access the resource\ntoken_expired\tThe token is expired\nmissing_authorization\tNo authorization data was found on the request\nretry_after\tThe client should wait for a time before retrying the request\njob_closed\tThe client should start a new bulk job\nnot_restorable\tThis user was blocked and cannot be recreated\nteam_not_found\tThe team does not exist\nteam_unavailable\tThis team is deprecated so conversations cannot be assigned to it\nadmin_not_found\tThe admin does not exist"
  },
  {
    "title": "Encoding",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/common-structures/encoding/",
    "html": "Encoding\n\nData is encoded as defined by JSON in RFC4627. The default encoding for APIs is UTF-8. Certain characters, such as Emojji may be handled as surrogate unicode pairs (see section '2.5. Strings' of RFC4627).\n\nSome query parameters may need to be url encoded when sending - for example, the email parameter value used to query users should be encoded.\n\nHTML ENCODING\n\nIt should be noted that the following identifiers are encoded to protect from potential cross-site scripting attacks: 'name', 'user_id', 'company_id' and 'email'. As a result you may see these identifiers in their encoded format when you retrieve them via the API. \\nNote that the characters we encode are double quote, single quote, ampersand, less than and greater than symbols i.e \" ' & < >\n\nHTML Encoding example\nLet's say you have a company name like \\\"X&Y's\\\". \\nThen when you retrieve it from the API it will look like this:\\n\\\"X&amp;Y&#39;s\\\"\n"
  },
  {
    "title": "Error Codes",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/errors/error-codes/",
    "html": "Error Codes\n\nThe API may send the following error codes. Other codes may be added in the future.\n\nField\tDescription\nserver_error\tGeneric server error\nclient_error\tGeneric client error\ntype_mismatch\tThe JSON value type is incorrect for the field\nparameter_not_found\tA required parameter was not supplied\nparameter_invalid\tA parameter's value is invalid\naction_forbidden\tThe action is not authorized\nconflict\tThere is existing data that clashes with the request data\napi_plan_restricted\tThe API is not available on this App's Plan\nrate_limit_exceeded\tThe rate limit for the App has been exceeded\nunsupported\tThe operation is not supported\ntoken_revoked\tThe token or API Key has been revoked\ntoken_blocked\tThe API Key or App has been blocked\ntoken_not_found\tThe token or API Key does not exist\ntoken_unauthorized\tThe token or API Key is not allowed to access the resource\ntoken_expired\tThe token is expired\nmissing_authorization\tNo authorization data was found on the request\nretry_after\tThe client should wait for a time before retrying the request\njob_closed\tThe client should start a new bulk job\nnot_restorable\tThis user was blocked and cannot be recreated\nteam_not_found\tThe team does not exist\nteam_unavailable\tThis team is deprecated so conversations cannot be assigned to it\nadmin_not_found\tThe admin does not exist"
  },
  {
    "title": "HTTP Responses",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/errors/http-responses/",
    "html": "HTTP Responses\n\nThe API returns HTTP responses on each request to indicate the success or otherwise of API requests. The codes listed below are often used, and the API may use others. Note that 4xx and 5xx responses may be returned for any request and clients should cater for them.\n\nResponse Code\tDescription\n400\tBad Request -- General client error, possibly malformed data.\n401\tUnauthorized -- The API Key was not authorised (or no API Key was found).\n402\tPayment Required -- The API is not available on your current plan.\n403\tForbidden -- The request is not allowed.\n404\tNot Found -- The resource was not found.\n405\tMethod Not Allowed -- The resource does not accept the HTTP method.\n406\tNot Acceptable -- The resource cannot return the client's required content type.\n408\tRequest Timeout -- The server would not wait any longer for the client.\n409\tConflict - Multiple existing users match this email address - must be more specific using user_id\n415\tUnsupported Media Type - The server doesn't accept the submitted content-type.\n422\tUnprocessable Entity -- The data was well-formed but invalid.\n429\tToo Many Requests -- The client has reached or exceeded a rate limit, or the server is overloaded.\n500, 502, 503, 504\tServer errors - something went wrong with Intercom's servers. These responses are most likely momentary operational errors (e.g. temporary unavailability), and, as a result, requests should be retried once."
  },
  {
    "title": "Submit a data event",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/data-events/submitting-events/",
    "html": "Submit a data event\nSubmit an Event\n$ curl https://api.intercom.io/events \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Content-Type: application/json\" -d'\n{\n  \"event_name\" : \"placed-order\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"314159\",\n  \"metadata\": {\n    \"order_date\": 1392036272,\n    \"stripe_invoice\": \"inv_3434343434\",\n    \"order_number\": {\n      \"value\":\"3434-3434\",\n      \"url\": \"https://example.org/orders/3434-3434\"\n    },\n    \"price\": {\n      \"currency\":\"usd\",\n      \"amount\": 2999\n    }\n  }\n}'\n\nvar more_metadata = {\n  order_date: 1392036272,\n  stripe_invoice: 'inv_3434343434',\n  order_number: {\n    value: \"3434-3434\",\n    url: 'https://example.org/orders/3434-3434'\n  },\n  price: {\n    currency: 'usd',\n    amount: 2999\n  }\n};\nIntercom('trackEvent', 'placed-order', more_metadata);\n\nmore_metadata = {\n  :order_date => Time.now.to_i,\n  :stripe_invoice => 'inv_3434343434',\n  :order_number => {\n    :value => '3434-3434',\n    :url => 'https://example.org/orders/3434-3434'\n  },\n  price: {\n    :currency => 'usd',\n    :amount => 2999\n  }\n}\nintercom.events.create({\n  :event_name => \"placed-order\",\n  :email => current_user.email,\n  :created_at => 1391691571,\n  :metadata => more_metadata\n})\n\n<?php\n$metadata = ([\n    \"order_date\" => time(),\n    \"stripe_invoice\" => \"inv_3434343434\",\n    \"order_number\" => ([\n        \"value\" => \"3434-3434\",\n        \"url\" => \"https://example.org/orders/3434-3434\"]),\n        \"price\" => ([\n            \"currency\" => \"usd\",\n            \"amount\" => 2999])\n]);\n\n$intercom->events->create([\n    \"event_name\" => \"placed-order\",\n    \"created_at\" => 1500907515,\n    \"user_id\" => \"20413\",\n    \"metadata\" => $metadata\n]);\n?>\n\nMap<String,Object> order = Maps.newHashMap();\norder.put(\"value\", \"3434-3434\");\norder.put(\"url\", \"https://example.org/orders/3434-3434\");\n\nMap<String,Object> price = Maps.newHashMap();\nprice.put(\"currency\", \"usd\");\nprice.put(\"amount\", 2999);\n\nMap<String,Object> meta = Maps.newHashMap();\nmeta.put(\"order_date\", currentTimeMillis()/1000L);\nmeta.put(\"stripe_invoice\", \"inv_3434343434\");\nmeta.put(\"price\", price);\nmeta.put(\"order_number\", order);\n\nEvent event = new Event()\n  .setEventName(\"placed-order\")\n  .setUserID(\"314159\")\n  .setMetadata(meta);\n\nEvent.create(event);\n\n\nYou will need an Access Token that has write permissions to send Events. Once you have a key you can submit events via POST to the Events resource, which is located at https://api.intercom.io/events, or you can send events using one of the client libraries. When working with the HTTP API directly a client should send the event with a Content-Type of application/json.\n\nWhen using the JavaScript API, adding the code to your app makes the Events API available. Once added, you can submit an event using the trackEvent method. This will associate the event with the Lead or currently logged-in user or logged-out visitor/lead and send it to Intercom. The final parameter is a map that can be used to send optional metadata about the event.\n\nWith the Ruby client you pass a hash describing the event to Intercom::Event.create, or call the track_user method directly on the current user object (e.g. user.track_event).\n\nMetadata Object\nType\tDescription\tExample\nString\tThe value is a JSON String\t\"source\":\"desktop\"\nNumber\tThe value is a JSON Number\t\"load\": 3.67\nDate\tThe key ends with the String _date or _at and the value is a Unix timestamp, assumed to be in the UTC timezone.\t\"contact_date\": 1392036272 or \"contacted_at\": 1392036272\nLink\tThe value is a HTTP or HTTPS URI.\t`\"article\": \"https://example.org/ab1de.html\"\nRich Link\tThe value is a JSON object that contains url and value keys.\t\"article\": {\"url\": \"https://example.org/ab1de.html\", \"value\":\"the dude abides\"}\nMonetary Amount\tThe value is a JSON object that contains amount and currency keys. The amount key is a positive integer representing the amount in cents. The price in the example to the right denotes €349.99.\t\"price\": {\"amount\": 34999, \"currency\": \"eur\"}\n\nNB: For the JSON object types, please note that we do not currently support nested JSON structure.\n\nLEAD EVENTS\n\nWhen submitting events for Leads, you will need to specify the Lead's id.\n\nMETADATA BEHAVIOUR\n\nWe currently limit the number of tracked metadata keys to 10 per event. Once the quota is reached, we ignore any further keys we receive. The first 10 metadata keys are determined by the order in which they are sent in with the event.\\n_ It is not possible to change the metadata keys once the event has been sent. A new event will need to be created with the new keys and you can archive the old one.\\n_ There might be up to 24 hrs delay when you send a new metadata for an existing event.\n\nEVENT DE-DUPLICATION\n\nThe API may detect and ignore duplicate events. Each event is uniquely identified as a combination of the following data - the Workspace identifier, the Contact external identifier, the Data Event name and the Data Event created time. As a result, it is strongly recommended to send a second granularity Unix timestamp in the created_at field.\\n\\nDuplicated events are responded to using the normal 202 Accepted code - an error is not thrown, however repeat requests will be counted against any rate limit that is in place.\n\nHTTP API Responses\nSuccessful responses to submitted events return 202 Accepted with an empty body.\nUnauthorised access will be rejected with a 401 Unauthorized or 403 Forbidden response code.\nEvents sent about users that cannot be found will return a 404 Not Found.\nEvent lists containing duplicate events will have those duplicates ignored.\nServer errors will return a 500 response code and may contain an error message in the body."
  },
  {
    "title": "Update a section",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/help-center/update-a-section/",
    "html": "Update a section\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/sections/<id> \\\\-X PUT \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json'-H 'Content-Type: application/json' -d{  \\\"name\\\": \\\"New title\\\",  \\\"translated_content\\\": {    \\\"type\\\": \\\"group_translated_content\\\",    \\\"es\\\": {      \\\"type\\\": \\\"group_content\\\",      \\\"name\\\": \\\"Nuevo título\\\"    }  }}\n\n\nYou can update the details of a single section by making a PUT request to https://api.intercom.io/help_center/sections/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the section which is given by Intercom.\nRequest Body Parameters\nAttribute\tType\tRequired?\tDescription\nname\tString\tNo\tThe name of the section. For multilingual collections, this will be the name of the default language's content.\nparent_id\tString\tNo\tThe id for the collection this section will be within.\ntranslated_content\tObject\tNo\tA Group Translated Content Object whereby you can specify multiple multilingual collections to be created.\nResponse\n\nThis will return a Section object of the section you just updated."
  },
  {
    "title": "Webhook Topics",
    "url": "https://developers.intercom.com/docs/references/2.5/webhooks/webhook-models/",
    "html": "Webhook Topics\n\nYou can subscribe to the following Webhook topics, and you will receive notifications on your endpoint URL when an event occurs. The 'Object' column shows the Intercom object related to the event sent as part of the notification.\n\nEach Webhook topic is associated with one or more permissions. When you set up a subscription to a particular topic, you will need to select the appropriate permissions to be able to receive a notification for that topic.\n\n🚧 Multiple permissions\n\nSome topics are associated with multiple permissions. In these cases, you don't need to select all these permissions to subscribe to that topic.\n\nAdmin topics\n\nTopic\tObject\tEvent description\tPermissions\nadmin.added_to_workspace\tAdmin\tAn Admin being added to workspace\tRead admins\nadmin.away_mode_updated\tAdmin\tAdmin away mode updates\tRead admins\nadmin.removed_from_workspace\tAdmin\tAn Admin being removed from a workspace\tRead admins\n\nCompany topics\n\nTopic\tObject\tEvent description\tPermissions\ncompany.created\tCompany\tCompany creations\tRead users and companies Read one user and one company\n\nContact topics\n\nTopic\tObject\tEvent description\tPermissions\ncontact.archive\tContact\tContacts archived\tRead users and companies Read and write users Read one user\ncontact.deleted\tContact\tContacts deleted\tRead users and companies Read one user and one company\ncontact.email.updated\tContact\tA Contact email address is updated\tRead users and companies Read and write users Read one user and one company\ncontact.lead.added_email\tContact\tAn email address is added to a Contact (Lead)\tRead users and companies Read and write users Read one user and one company\ncontact.lead.created\tContact\tContact creations (Lead)\tRead users and companies Read and write users Read one user and one company\ncontact.lead.signed_up\tContact\tContacts converting from Leads to Users\tRead users and companies Read and write users Read one user and one company\ncontact.lead.tag.created\tContact Tag\tContacts being tagged (Lead)\tRead users and companies Read and write users Read one user and one company\ncontact.lead.tag.deleted\tContact Tag\tContacts being untagged (Lead)\tRead users and companies Read and write users Read one user and one company\ncontact.lead.updated\tContact\tContacts being updated (Lead)\tRead users and companies Read and write users Read one user and one company\ncontact.unsubscribed\tContact\tContacts unsubscribing from email\tRead users and companies Read and write users Read one user and one company\ncontact.user.created\tContact\tContact creations (User)\tRead users and companies Read and write users Read one user and one company\ncontact.user.tag.created\tContact Tag\tContacts being tagged (User)\tRead users and companies Read and write users Read one user and one company\ncontact.user.tag.deleted\tContact Tag\tContacts being untagged (User)\tRead users and companies Read and write users Read one user and one company\n\nConversation topics\n\nTopic\tObject\tEvent description\tPermissions\nconversation.admin.assigned\tConversation\tAdmin conversation assignments\tRead conversations\nconversation.admin.closed\tConversation\tAdmin conversation closed\tRead conversations\nconversation.admin.noted\tConversation\tAdmin conversation notes\tRead conversations\nconversation.admin.opened\tConversation\tAdmin conversation opens\tRead conversations\nconversation.admin.replied\tConversation\tAdmin conversation replies\tRead conversations\nconversation.admin.single.created\tConversation\tAdmin initiated 1:1 conversations\tRead conversations\nconversation.admin.snoozed\tConversation\tAdmin conversation snoozes\tRead conversations\nconversation.admin.unsnoozed\tConversation\tAdmin conversation unsnoozes\tRead conversations\nconversation.deleted\tConversation\tConversation deleted\tRead conversations\nconversation_part.redacted\tConversation Part\tConversation parts being deleted\tRead conversations\nconversation_part.tag.created\tConversation Part\tConversation parts being tagged\tRead conversations\nconversation.priority.updated\tConversation\tConversation priority updated\tRead conversations\nconversation.rating.added\tConversation\tConversations getting a rating\tRead conversations\nconversation.user.created\tConversation\tContact initiated conversations (User and Lead)\tRead conversations\nconversation.user.replied\tConversation\tContact conversation replies (Visitor, Lead and User)\tRead conversations\n\nEvent topics\n\nTopic\tObject\tEvent description\tPermissions\nevent.created\tEvent\tEvents created\tRead events\n\nSubscription topics\n\nTopics\tObject\tEvent description\tPermissions\ngranular.unsubscribe\tSubscription\tA User unsubscribes from a message subscription type\tRead and list users and companies Read and write users Read one user and one company\n\nVisitor topics\n\nTopics\tObject\tEvent description\tPermissions\nvisitor.signed_up\tVisitor\tContacts converting from Visitors to Users\tRead users and companies Read and write users Read one user and one company\n\nPing\n\n\t\t\nping\tPing\tSent when a post to the subscription's ping resource is received or periodically by Intercom. Ping is always subscribed to.\nWebhook notification object\n\nA notification object contains the following fields:\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'notification_event'\nid\tstring\tThe Intercom defined id representing the notification.\nself\tstring\tThe Intercom defined URL for the subscription. Optional.\ncreated_at\ttimestamp\tThe timestamp the notification was created.\ntopic\tstring\tCorresponds to a topic.\ndelivery_attempts\tnumber\tThe number of times this notification has been attempted.\nfirst_sent_at\ttimestamp\tThe first time the delivery was attempted.\ndata\tobject\tA container for the data associated with the notification.\ndata.item\tobject\tThe data associated with the notification, which will have a 'type' field.\n\nThe contents of data.item object will be defined according to its type field. In the example to the right, the type value of Company indicates a company object.\n\n{\n  \"type\": \"notification_event\",\n  \"topic\": \"company.created\",\n  \"id\": \"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b3\",\n  \"app_id\" : \"a86dr8yl\",\n  \"created_at\": 1392731331,\n  \"delivery_attempts\": 1,\n  \"first_sent_at\": 1392731392,\n  \"data\": {\n    \"item\": {\n      \"type\": \"company\",\n      \"id\": \"531ee472cce572a6ec000006\",\n      \"name\": \"Blue Sun\",\n      \"company_id\": \"6\",\n      \"remote_created_at\": 1394531169,\n      \"created_at\": 1394533506,\n      \"updated_at\": 1396874658,\n      \"custom_attributes\": {\n      }\n    }\n  }\n}\n\nHandling Webhook notifications\n\nYou will receive notifications on your chosen topics when you set up a subscription. How you handle those notifications, i.e. the HTTP status code returned, will determine the subsequent state of that subscription.\n\n❗️ Timeout\n\nYou have 5 seconds to respond to a notification. If you don't send a response within that time, the notification is treated as failed and will be retried only once after 1 minute.\n\nIf you respond with too many error responses, we drop future notifications for a period of 15 minutes.\n\nResponse Code\tDescription\tAction\n2xx\tSuccess\tThe webhook was successfully delivered.\n410\tGone\tWhen a 410 is received, we assume the resource is no longer available. We will disable the subscription and no more notifications will be sent.\n429\tToo many requests\tWhen a 429 is received, all notifications from that subscription will be throttled. Depending on the rate of delivery, this delay can be between 1 minute to 2 hours. If 429s continue and any notification is delayed for > 2 hours then we will drop that notification.\n4xx (excl. 429) 5xx\tClient or service errors\tWe will retry after 1 minute for all other errors. If the 2nd retry fails then we mark the notification delivery as failed.\nSigned notifications\n\nIntercom signs webhook notifications via an X-Hub-Signature header. We do this so that you can verify that the notification came from Intercom by decoding the signature.\n\nWe compute the value of this X-Hub-Signature header by creating a signature using the body of the JSON request and your App's client_secret value, which you can find on the Basic Info page of your App.\n\nThe signature is the hexadecimal (40-byte) representation of an SHA-1 signature computed using the HMAC algorithm defined in RFC2104.\n\nThe X-Hub-Signature header value starts with the string sha1= followed by the signature.\n\nPOST https://example.org/hooks\nUser-Agent: intercom-parrot-service-client/1.0\nX-Hub-Signature: sha1=21ff2e149e0fdcac6f947740f6177f6434bda921\nAccept: application/json\nContent-Type: application/json\n\n{\n  \"type\" : \"notification_event\",\n  \"id\" : \"notif_78c122d0-23ba-11e4-9464-79b01267cc2e\",\n  \"topic\" : \"user.created\",\n  \"app_id\" : \"a86dr8yl\",\n  \"data\" : {\n    \"type\" : \"notification_event_data\",\n    \"item\" : {\n      \"type\" : \"user\",\n      \"id\" : \"530370b477ad7120001d\",\n      \"user_id\" : \"25\",\n      \"name\" : \"Hoban Washburne\",\n      \"unsubscribed_from_emails\" : false,\n      \"custom_attributes\" : {}\n    }\n  }\n}\n\nAdmin object for Webhooks\n\nThe Admin object is similar to the model returned via the API. You can see an example object below:\n\n{\n\t\"type\": \"admin\",\n\t\"id\": \"1\",\n\t\"name\": \"John Doe\",\n\t\"email\": \"john.doe@intercom.io\",\n\t\"job_title\": \"CEO\",\n\t\"away_mode_enabled\": true,\n\t\"away_mode_reassign\": false,\n\t\"away_status_reason\": \"🍔 On lunch\",\n\t\"has_inbox_seat\": true,\n\t\"team_ids\": []\n}\n\nContact Tag object for Webhooks\n\nWe only return the Contact Tag object for Webhooks. You can see an example object below:\n\n{\n  \"type\": \"contact_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"1287\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"contact\" : {\n      \"type\": \"contact\",\n      \"id\": \"1287ab1287fefe\",\n        ........\n  }\n}\n\n\nA contact tag is composed from the existing contact and tag JSON and is sent when contacts are tagged and untagged via the contact.user.tag.created, contact.lead.tag.created, contact.lead.tag.deleted and contact.user.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'contact_tag'.\ncreated_at\ttimestamp\tThe time the contact tag object was created.\ntag\tTag\tThe tag that was added or removed.\ncontact\tcontact\tThe contact that was tagged or untagged."
  },
  {
    "title": "The team model",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/teams/teams-model/",
    "html": "The team model\nExample Team Object\n{\\n    \\\"type\\\": \\\"team\\\",\\n    \\\"id\\\": \\\"814865\\\",\\n    \\\"name\\\": \\\"Example Team\\\",\\n    \\\"admin_ids\\\": [\\n        493881\\n    ]\\n}\n\n\nTeams are groups of admins in Intercom.\n\nTeam Object\nKey\tType\tDescription\ntype\tstring\tValue is team.\nid\tstring\tThe id of the team\nname\tstring\tThe name of the team\nadmin_ids\tlist\tThe list of admin id's that are a part of the team"
  },
  {
    "title": "Retrieve a note",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/notes/view-a-note/",
    "html": "Retrieve a note\nExample Request\n$ curl https://api.intercom.io/notes/<id> \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"note\",\n  \"id\": \"2\",\n  \"created_at\": 1389913951,\n  \"body\": \"<p>Text for my note</p>\",\n  \"user\": {\n      \"id\": \"5310d8e8598c9a0b24000005\",\n      \"type\": \"user\"\n    },\n  \"author\": {\n    \"type\": \"admin\",\n    \"id\": \"21\",\n    \"name\": \"Jayne Cobb\",\n    \"email\": \"jayne@serenity.io\",\n    \"avatar\" : {\n       \"type\":\"avatar\",\n      \"image_url\": \"http://example.org/128Jayne.jpg\"\n    },\n    \"companies\": []\n  }\n}\n\nintercom.notes.find(:id => note)\n\n<?php\n$note = $intercom->notes->getNote(\"9259097\");\n?>\n\nNote note = Note.find(\"2\");\n\n\nYou can fetch the details of a single note.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier of a given note.\nResponse\n\nThis will return a Note model."
  },
  {
    "title": "List all data events",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/data-events/list-user-events/",
    "html": "List all data events\n\nPlease note that you can only 'list' events that are less than 90 days old. Event counts and summaries will still include your events older than 90 days but you cannot 'list' these events individually if they are older than 90 days\n\nList all customer events\ncurlcurlrubyphpjava\n$ curl 'https://api.intercom.io/events?type=user&user_id=314159' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"event.list\\\",\\n  \\\"events\\\": [\\n      {\\n        \\\"event_name\\\" : \\\"ordered-item\\\",\\n        \\\"created_at\\\": 1391691571,\\n        \\\"user_id\\\" : \\\"314159\\\"\\n      },\\n      {\\n        \\\"event_name\\\" : \\\"invited-friend\\\",\\n        \\\"created_at\\\": 1389913941,\\n        \\\"user_id\\\" : \\\"314159\\\",\\n        \\\"metadata\\\": {\\n         \\\"invitee_email\\\": \\\"pi@example.org\\\",\\n         \\\"invite_code\\\": \\\"ADDAFRIEND\\\"\\n         }\\n      },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/events?type=user&intercom_user_id=55a3b&before=144474756550\\\"\\n  }\\n}\\n\\n# NB: Full event objects are returned\n\n\nThe events belonging to a customer can be listed by sending a GET request to https://api.intercom.io/events with a user or lead identifier along with a type parameter. The identifier parameter can be one of user_id, email or intercom_user_id. The type parameter value must be user.\n\nhttps://api.intercom.io/events?type=user&user_id={user_id}\nhttps://api.intercom.io/events?type=user&email={email}\nhttps://api.intercom.io/events?type=user&intercom_user_id={id} (this call can be used to list leads)\n\nThe email parameter value should be url encoded when sending.\n\nYou can optionally define the result page size as well with the per_page parameter.\n\nRequest Parameters\nParameter\tRequired\tDescription\ntype\tyes\tThe value must be user\nuser_id\tno\tThe user id you have defined for the user\nemail\tno\tThe email you have defined for the user\nintercom_user_id\tno\tThe Intercom defined id for the user\nper_page\tno\tHow many results to return per page defaults to 50.\nsummary\tno\tBoolean value. When set to true, event counts are returned grouped by event name.\nReturns\n\nA pageable list of events. The event list contains a pages object that indicates if more events exist for the customer via the next field, whose value is a URL that can be used to fetch the next page. If the next field is not present, that indicates there are no further events for the user. Clients should note that the parameters in the returned link are not assured to be the same as those sent in the request.\n\nThe event list is sorted by the created_at field and ordered descending, most recently created first.\n\nAs well as the fields that were supplied when the event was posted to Intercom (see Event model) for details) the event payload will also contain an id field that uniquely identifies the event and may optionally contain an intercom_user_id containing the Intercom defined id representing the user.\n\nYou can use the API to get counts of users, leads and companies filtered by certain criteria.\n\nCounts are a good way to periodically obtain data for the purposes of tracking rates of change in user and company data."
  },
  {
    "title": "Retrieve a team",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/teams/view-a-team/",
    "html": "Retrieve a team\nExample Request & Response\n$ curl https://api.intercom.io/teams/2744328 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"admin_ids\": [\n        646303,\n        814860\n    ],\n    \"id\": \"2744328\",\n    \"name\": \"the_a_team\",\n    \"type\": \"team\"\n}\n\n\nYou can fetch the details of a single team, containing an array of admins that belong to this team.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier of a given team.\nResponse\n\nThis will return a Team Object."
  },
  {
    "title": "Attach a contact to a company",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/companies/attach-contact-to-company/",
    "html": "Attach a contact to a company\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/companies \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\ \\n-H 'Content-Type: application/json' -d\\n\\n{\\n\\t\\\"id\\\": \\\"56cde0cc3deab1bd8c000100\\\"\\n}\\n\n\nExample Errors\nhttphtml\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can attach a company to a single contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nRequest Body Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the company which is given by Intercom\nResponse\n\nThis will return a Company model for the company that was just attached to the contact."
  },
  {
    "title": "Error Objects",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/errors/error-objects/",
    "html": "Error Objects\nError List Object\n{\n  \"type\": \"error.list\",\n  \"errors\": [\n    {\n      \"code\": \"not_found\",\n      \"message\": \"No such user_id[314159]\",\n      \"field\": \"user_id\"\n    },\n    {\n      \"code\": \"not_found\",\n      \"message\": \"No such email[pi@example.org]\",\n      \"field\": \"email\"\n    }\n  ]\n}\n\n// the JavaScript client doesn't directly expose error data\n\n# the Ruby client doesn't directly expose error data\n\n<?php\n// the PHP client doesn't directly expose error data\n?>\n\ntry {\n  UserCollection uc = User.list();\n} catch(IntercomException  ie) {\n  Error e = ie.getFirstError();\n  log.error(\"{}:{}\", e.getCode(), e.getMessage());\n}\n\n\nThe API will return an Error List for a failed request, which will contain one or more Error objects.\n\nError List Attributes\n\nEach error has the following attributes\n\nField\tDescription\ntype\tThe type is error.list\nerrors\tAn array of one or more error objects\nError Object Attributes\n\nEach Error Object has the following attributes\n\nField\tDescription\ncode\tA string indicating the kind of error, used to further qualify the HTTP response code\nmessage\tOptional. Human readable description of the error\nfield\tOptional. Used to identify a particular field or query parameter that was in error."
  },
  {
    "title": "Create a message",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/messages/admin-initiated-conversation/",
    "html": "Create a message\nExample Request & Response\n$ curl https://api.intercom.io/messages \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d\n\n{\n  \"message_type\": \"email\",\n  \"subject\": \"Hey\",\n  \"body\": \"Ponies, cute small horses or something more sinister?\",\n  \"template\": \"plain\",\n  \"from\": {\n    \"type\": \"admin\",\n    \"id\": \"394051\"\n  },\n  \"to\": {\n    \"type\": \"user\",\n    \"id\": \"536e564f316c83104c000020\"\n  }\n}\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"admin_message\",\n  \"id\": \"2001\",\n  \"created_at\": 1401916877,\n  \"message_type\": \"email\",\n  \"subject\" : \"Hey\",\n  \"body\" : \"Ponies, cute small horses or something more sinister?\",\n  \"template\": \"plain\",\n  \"owner\": {\n    \"email\": \"wash@serenity.io\",\n    \"id\": \"394051\",\n    \"name\": \"Wash\",\n    \"type\": \"admin\"\n  }\n}\n\nintercom.messages.create(\n  :message_type => 'email',\n  :subject  => 'This Land',\n  :body     => \"Har har har! Mine is an evil laugh!\",\n  :template => \"plain\", # or \"personal\",\n  :from => {\n    :type => \"admin\",\n    :id   => \"394051\"\n  },\n  :to => {\n    :type => \"user\",\n    :id => \"536e564f316c83104c000020\"\n  }\n)\n\n<?php\n$intercom->messages->create([\n    \"message_type\" => \"email\",\n    \"subject\" => \"Plato Quote\",\n    \"body\" => \"And what, Socrates, is the food of the soul?\",\n    \"from\" => [\n        \"type\" => \"admin\",\n        \"id\" => \"814860\"\n    ],\n    \"to\" => [\n        \"type\" => \"user\",\n        \"email\" => \"socrates@email.com\"\n    ]\n]);\n?>\n\nUser user = new User()\n  .setId(\"5310d8e8598c9a0b24000005\");\nAdmin admin = new Admin()\n  .setId(\"394051\");\nAdminMessage adminMessage = new AdminMessage()\n  .setAdmin(admin)\n  .setUser(user)\n  .setSubject(\"This Land\")\n  .setBody(\"Har har har! Mine is an evil laugh!\")\n  .setMessageType(\"email\")\n  .setTemplate(\"plain\"); // or personal\nConversation.create(adminMessage);\n\n\nYou can create a message that has been initiated by an admin. The conversation can be either an in-app message or an email.\n\nDELAY AFTER CONTACT CREATION\n\nThere can be a short delay between when a contact is created and when a contact becomes available to be messaged through the API. A 404 Not Found error will be returned in this case.\n\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tThe kind of message being created. Values: inapp or email\nsubject\tString\tYes, if message_type: email.\tThe title of the email.\nbody\tString\tYes\tThe content of the message. HTML and plaintext are supported.\ntemplate\tString\tYes, if message_type: email.\tThe style of the outgoing message. Possible values plain or personal.\nfrom\tObject\tYes\tSee From Object below for more.\nto\tObject\tYes\tSee To Object below for more.\nFrom Object\nAttribute\tType\tRequired?\tDescription\ntype\tString\tYes\tAlways admin.\nid\tString\tYes\tThe identifier for the admin which is given by Intercom.\nTo Object\nAttribute\tType\tRequired?\tDescription\ntype\tString\tYes\tThe role associated to the contact - user or lead.\nid\tString\tYes\tThe identifier for the contact which is given by Intercom.\nResponse\n\nThis will return the Message that has been created.\n\nRETRIEVING ASSOCIATED CONVERSATIONS\n\nAs this is a message, there will be no conversation present until the contact responds. Once they do, you will have to search for a contact's conversations with the id of the message."
  },
  {
    "title": "Stored Data",
    "url": "https://developers.intercom.com/docs/references/2.3/canvas-kit/responseobjects/stored-data/",
    "html": "Stored Data\nDescription\n\nA canvas object may optionally contain a stored_data object. This is where you can add key-value pairs of data that you want to be sent in whatever the next request is.\n\nFor example, the flow of your app might have multiple canvases with data being inputted on each one. You may want to have all this data available to use at the end of the flow for the final canvas. You can therefore put all this data in the stored_data object so it's sent in subsequent requests and is available at the end.\n\nExample Object\nstored_data: {\"key\": \"value\"} //Can be more than one pair\n"
  },
  {
    "title": "Pagination (Cursor)",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/common-structures/pagination-cursor/",
    "html": "Pagination (Cursor)\n\nWe're starting to adopt a cursor-based approach to pagination for certain list resources.\n\nThis currently only applies when listing Contacts.\n\nExample Initial Request\ncURL (Initial Request)\n$ curl https://api.intercom.io/contacts?per_page=5 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nInitial Request\n\nYou can initially specify how many items per_page you want to fetch.\n\nParameter\tType\tDescription\nper_page\tInteger\tThe number of items returned in a single response.\nDefault is 50.\nMax is 150.\nExample Initial Pages Object\nJSON\n{\\n  \\\"pages\\\": {\\n    \\\"type\\\": \\\"pages\\\",\\n    \\\"next\\\": {\\n      \\\"page\\\": 4,\\n      \\\"starting_after\\\": \\\"1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\\\\nIncfQLD3ouPkZlCwJ86F\\\\n\\\"\\n    },\\n    \\\"page\\\": 3,\\n    \\\"per_page\\\": 5,\\n    \\\"total_pages\\\": 10\\n   }\\n}\n\nResponse\n\nIn order to iterate through pages, you must parse the query response. A query with multiple response pages will include a next key in the pages object. When a next value is provided, the starting_after value must be sent back in a new request in order to iterate to the next page.\n\nParameter\tType\tDescription\nstarting_after\tString\tThe cursor used for pagination in order to fetch the next page of results.\n\n🚧 Paginating through all results\n\nThis method of pagination is used to iterate through a result set until all results have been fetched, not to directly go to page X of the results. This is not possible.\n\nExample Subsequent Requests\ncURL (Subsequent Requests)\n$ curl https://api.intercom.io/contacts?starting_after=\\\"1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\\\\nIncfQLD3ouPkZlCwJ86F\\\\n\\\" \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\n"
  },
  {
    "title": "Text",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/presentationcomponents/text/",
    "html": "Text\n\nThe text component is used for rendering blocks of text. Links and bold font can be rendered through Markdown. There are different styles provided which edit the color, weight, and font size. These cannot be edited through Markdown.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttext\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\ntext\tAny stringMarkdown Links []()Markdown Bold **\tYes\tThe text that will be rendered.\nalign\tleft``center``right\tNo\tAligns the text. Default is left.\nstyle\theader``paragraph``muted``error\tNo\tStyles the text. Default is paragraph.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "Identifiers and URLs",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/common-structures/identifiers-and-urls/",
    "html": "Identifiers and URLs\n\nAll objects in the API have an id field indicating their logical identifier.\n\nParameter\tDescription\nid\tA string that identifies the object within the API. The id field will not be larger than 128 characters (in SQL it corresponds to a varchar(128)).\n\nThese fields must always be treated as opaque strings - no guarantees are made about the internal structure of the id fields for an object.\n\nThe id field is always defined by the API server and is guaranteed to be unique relative to the type field - this means no two user objects will have the same id field, but a user and a company may have the same value for their id fields. . Some object types (such as Contact), also support client defined identifiers.\n\nThe company and user objects deserve special mention when it comes to identity for two reasons -\n\nThey allow you send your own external identifiers\nThe contact id field is in some cases, aliased to intercom_user_id. This is done to distinguish it from other identifiers in the API and to avoid confusion as to which object type an id denotes."
  },
  {
    "title": "Contact",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/requestobjects/contact/",
    "html": "Contact\nDescription\n\nThe contact object provides information on the Intercom contact. You can see more about this on the Contacts Model page of our API Reference.\n\nExample Object\n{\n  \"type\": \"contact\",\n  \"id\": \"5ba682d23d7cf92bef87bfd4\",\n  \"workspace_id\": \"ecahpwf5\",\n  \"external_id\": \"25\",\n  \"role\": \"user\",\n  \"email\": \"wash@serenity.io\",\n  \"phone\": \"+1123456789\",\n  \"name\": \"Hoban Washburn\",\n  \"avatar\": \"https://example.org/128Wash.jpg\",\n  \"owner_id\": 127,\n  \"social_profiles\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"social_profile\",\n        \"name\": \"Twitter\",\n        \"url\": \"http://twitter.com/th1sland\"\n      }\n    ]\n  },\n  \"has_hard_bounced\": false,\n  \"marked_email_as_spam\": false,\n  \"unsubscribed_from_emails\": false,\n  \"created_at\": 1571672154,\n  \"updated_at\": 1571672158,\n  \"signed_up_at\": 1571069751,\n  \"last_seen_at\": 1571069751,\n  \"last_replied_at\": 1571672158,\n  \"last_contacted_at\": 1571672158,\n  \"last_email_opened_at\": 1571673478,\n  \"last_email_clicked_at\": 1571676789,\n  \"language_override\": null,\n  \"browser\": \"chrome\",\n  \"browser_version\": \"77.0.3865.90\",\n  \"browser_language\": \"en\",\n  \"os\": \"OS X 10.14.6\",\n  \"location\": {\n    \"type\": \"location\",\n    \"country\": \"Ireland\",\n    \"region\": \"Dublin\",\n    \"city\": \"Dublin\"\n  },\n  \"android_app_name\": null,\n  \"android_app_version\": null,\n  \"android_device\": null,\n  \"android_os_version\": null,\n  \"android_sdk_version\": null,\n  \"android_last_seen_at\": null,\n  \"ios_app_name\": null,\n  \"ios_app_version\": null,\n  \"ios_device\": null,\n  \"ios_os_version\": null,\n  \"ios_sdk_version\": null,\n  \"ios_last_seen_at\": null,\n  \"custom_attributes\": {\n    \"paid_subscriber\": true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 1\n  },\n  \"tags\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"tag\",\n        \"id\": \"2\",\n        \"url\": \"/tags/2\"\n      },\n      {\n        \"type\": \"tag\",\n        \"id\": \"4\",\n        \"url\": \"/tags/4\"\n      },\n      {\n        \"type\": \"tag\",\n        \"id\": \"5\",\n        \"url\": \"/tags/5\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/tags\",\n    \"total_count\": 3,\n    \"has_more\": false\n  },\n  \"notes\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"note\",\n        \"id\": \"20114858\",\n        \"url\": \"/notes/20114858\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/notes\",\n    \"total_count\": 1,\n    \"has_more\": false\n  },\n  \"companies\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"company\",\n        \"id\": \"5ba686093d7cf93552a3dc99\",\n        \"url\": \"/companies/5ba686093d7cf93552a3dc99\"\n        \n      },\n      {\n        \"type\": \"company\",\n        \"id\": \"5cee64a03d7cf90c51b36f19\",\n        \"url\": \"/companies/5cee64a03d7cf90c51b36f19\"\n      },\n      {\n        \"type\": \"company\",\n        \"id\": \"5d7668883d7cf944dbc5c791\",\n        \"url\": \"/companies/5d7668883d7cf944dbc5c791\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/companies\",\n    \"total_count\": 3,\n    \"has_more\": false\n  }\n}\n"
  },
  {
    "title": "Card Creation Options",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/requestobjects/card-creation-options/",
    "html": "Card Creation Options\nDescription\n\nThe card_creation_options object is a JSON hash containing key-value pairs. These key-value pairs either represent:\n\nData that was sent within the results object in response to the Configure request.\nData that was sent within the card_creation_options object in response to the Submit request.\nExample Object\ncard_creation_options: { \"key\": \"value\" } //Can be more than one pair\n"
  },
  {
    "title": "Current Canvas",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/requestobjects/current-canvas/",
    "html": "Current Canvas\nDescription\n\nThe current_canvas object mirrors the same format as the Canvas Object. This will be the canvas that was most recently showing before the request was sent.\n\nExample Object\n{\n  current_canvas: {\n    content: { \n      components : [\n        {\n          \"type\": \"button\",\n          \"id\": \"button-1\",\n          \"label\": \"This canvas showed before I was clicked\",\n          \"action\": {\n            \"type\": \"submit\"\n          }\n        }\n      ]\n    }\n  }\n}\n"
  },
  {
    "title": "Admin",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/requestobjects/admin/",
    "html": "Admin\nDescription\n\nThe admin object provides information on the Intercom teammate. You can see more about this on the Admin Model page of our API Reference.\n\nExample Object\n{\n  admin: {\n    type: \"admin\",\n    id: \"814860\",\n    name: \"IntercomTest\",\n    email: \"theadmin@example.com\",\n    job_title: \"Existentialist\",\n    away_mode_enabled: false,\n    away_mode_reassign: false,\n    avatar: {\n      image_url: \"https://static.site.test.icon\"\n    },\n    team_ids: [\n      814865\n    ]\n  }\n}\n"
  },
  {
    "title": "Object Model",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/common-structures/object-model/",
    "html": "Object Model\nCommon Fields and Metadata\n{\\n  \\\"type\\\": \\\"contacts\\\",\\n  \\\"id\\\": \\\"456456456456\\\",\\n  \\\"created_at\\\": 1392241887,\\n  \\\"custom_attributes\\\": {\\n    \\\"note\\\": \\\"some extra information\\\"\\n  }\\n}\n\nCommon Fields\n\nAPI objects have a type field indicating their object type. Each object in the API may be given an identifier, indicated via its id field, and will typically be addressable via a URI. Many objects will also have a created_at field indicating the object's creation date as a UTC Unix timestamp.\n\nDates and Timestamps\n\nAll temporal fields in the API are encoded as Unix timestamps and are by definition always treated as UTC. The most common time fields in the API are created_at and updated_at.\n\nParameter\tDescription\ncreated_at\tThe time the object was created. In most, but not all cases, this is the time the object was created according to the API server.\nupdated_at\tThe time the object was last updated according to the API server.\nOptional Fields\n\nUnpopulated optional data is returned as follows -\n\nNumber, String and Boolean types may be returned as having null values.\nArrays and Objects may be returned as empty ([] {})\n\nIn general clients should be able to handle null and empty fields.\n\nMetadata and Custom Attributes\n\nSome object types, such as Events, Users and Companies, have a metadata or custom_attributes field that allows clients to set custom-defined data about an object."
  },
  {
    "title": "Results",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/responseobjects/results/",
    "html": "Results\nDescription\n\nThe results object should be sent when you want to end configuration of the app and trigger the Initialize request to be sent. You provide the key-value pairs of data you want access to and we will send these in the Initialize request within a card_creation_options object.\n\nExample Object\nresults: { \"key\": \"value\" } // Can be more than one pair\n"
  },
  {
    "title": "Conversation Count Model",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/counts/conversation-counts/",
    "html": "Conversation Count Model\nConversation Count Object\n\nThe conversation count supplies global counts about your App's conversations. Note, the \"open\" count includes conversation that have been snoozed.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nconversation\tobject\tContains counts related to conversations\nconversation.assigned\tnumber\tContains the number of assigned conversations\nconversation.closed\tnumber\tContains the number of closed conversations\nconversation.open\tnumber\tContains the number of open conversations (both snoozed and unsnoozed).\nconversation.unassigned\tnumber\tContains the number of unassigned conversations\n{\n    \"type\": \"count\",\n    \"conversation\": {\n        \"open\": 30,\n        \"closed\": 17,\n        \"unassigned\": 0,\n        \"assigned\": 30\n    }\n}\n\n# Conversation Counts\n$ curl 'https://api.intercom.io/counts?type=conversation' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# Conversation App Counts\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"count\",\n    \"conversation\": {\n        \"open\": 30,\n        \"closed\": 17,\n        \"unassigned\": 0,\n        \"assigned\": 30\n    }\n}\n\nintercom.counts.for_type(type: 'conversation')\n\n<?php\n$counts = $intercom->counts->getCounts([\"type\" => \"conversation\"]);\nprint_r($counts);\n?>\n\n// Conversation Counts\nfinal Counts.Conversation totals = Counts.conversationTotals();\ntotals.getAssigned();\ntotals.getClosed();\ntotals.getOpen();\ntotals.getUnassigned();\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nConversation Count\tconversation\tNone"
  },
  {
    "title": "Button",
    "url": "https://developers.intercom.com/docs/references/canvas-kit/interactivecomponents/button/",
    "html": "Button\n\nA button component is used to take an action by clicking a button. This can either:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tbutton\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tYes\tThe text that will be rendered inside the button.\naction\tAction Object\tYes\tThis can be a Submit Action, URL Action, or Sheets Action.\nstyle\tprimary``secondary``link\tNo\tStyles the button.Default is primary.\ndisabled\tfalse``true\tNo\tStyles the button and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Counts",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/counts/counts/",
    "html": "Counts\n\nYou can use the API to get counts of users and companies filtered by certain criteria.\n\nCounts are a good way to periodically obtain data for the purposes of tracking rates of change in user and company data."
  },
  {
    "title": "Webhooks",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/webhooks/webhooks/",
    "html": "Webhooks\nOverview\n\nWebhooks allow you to subscribe to real-time notifications of events happening in Intercom, a Contact created, an incoming Conversation received, or an Admin Away Mode updated.\n\nIf you're unfamiliar with Webhooks, head to pipedream's RequestBin blog to learn more.\n\nThe main concepts of Intercom Webhooks are subscriptions, topics and notifications.\n\nSubscriptions\n\nA Webhook Subscription is created within an App and is where you define the Topics you want to receive event Notifications on. A subscription can contain one or more topics. You will need to provide a URL where Intercom will send all notifications for your subscription.\n\nTopics\n\nA topic contains the events you will receive notifications on; for example, Conversation created or Contact deleted.\n\nA subscription will contain one or more topics. Topics are types of notifications that you want to be informed about.\n\nNotifications\n\nA notification is the event object delivered when an event is triggered, and notifications have data payloads that contain references to the Intercom objects associated with the event. Notifications for all topics will be sent to the URL you provided for your subscription.\n\nWebhooks FAQs\nDo Webhooks belong to my Workspace or my App?\n\nWebhooks are associated with an App, and you configure your Webhooks per App just like you configure your Access Tokens. When you configure a Webhook, you tell Intercom where you want Notifications sent for one or more Topics.\n\nIf I am developing Apps for other people, what do I need to do?\n\nYou will need to select the correct permissions on the Authorization page of your App and then subscribe to the relevant topics on the Webhooks page.\n\nCan I set up Subscriptions for Webhook Topics via the API?\n\nNo, you can only subscribe to Webhooks via Apps in your Developer Hub.\n\nI previously configured webhooks via the API. Can I still do that?\n\nIf you previously set up Workspace Webhooks via the API, these will continue to work, and Intercom will not delete or reconfigure them.\n\nWhat IP addresses does Intercom send Webhook Notifications from?\n\nThe IP addresses Intercom sends Webhook Notifications from are:\n\nUSA 34.231.68.152 34.197.76.213 35.171.78.91 35.169.138.21 52.70.27.159 52.44.63.161\n\nEurope 54.217.125.63 54.246.173.113 54.216.9.3\n\nAustralia 52.63.36.185 3.104.68.152 52.64.2.165"
  },
  {
    "title": "App Total Count Model",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/counts/company-user-counts/",
    "html": "App Total Count Model\nApp Total Count Object\n\nThe total count object contains the summary of the following fields in your app -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count.hash'\ncompany\tobject\tContains the number of companies in your App\nsegment\tobject\tContains the number of segments in your App\ntag\tobject\tContains the number of tags in your App\nuser\tobject\tContains the number of users in your App\nlead\tobject\tContains the number of leads in your App\n\nThe count of tags and segments includes archived tags and segments.\n\n{\n    \"type\": \"count.hash\",\n    \"company\": {\n        \"count\": 55\n    },\n    \"user\": {\n        \"count\": 54944\n    },\n    \"lead\": {\n        \"count\": 17\n    },\n    \"tag\": {\n        \"count\": 1012\n    },\n    \"segment\": {\n        \"count\": 7\n    }\n}\n\n# App Counts\n$ curl 'https://api.intercom.io/counts' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# App Total Counts\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"count.hash\",\n    \"company\": {\n        \"count\": 55\n    },\n    \"user\": {\n        \"count\": 54944\n    },\n    \"lead\": {\n        \"count\": 17\n    },\n    \"tag\": {\n        \"count\": 1012\n    },\n    \"segment\": {\n        \"count\": 7\n    }\n}\n\nintercom.counts.for_app\n\n<?php\n// Global App Counts\n$intercom->counts->getCounts([]);\n?>\n\n// Global App Counts\nfinal Counts.Totals appTotals = Counts.appTotals();\nappTotals.getCompany().getValue();\nappTotals.getSegment().getValue();\nappTotals.getTag().getValue();\nappTotals.getUser().getValue();\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nGlobal App Counts\tNone\tNone"
  },
  {
    "title": "Company User/Segment/Tag Count Model",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/counts/company-tag-counts/",
    "html": "Company User/Segment/Tag Count Model\nCompany User/Segment/Tag Count Object\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\ncompany\tobject\tContains a field called segment containing segment counts\ncompany.segment\tarray\tContains a list of segment objects their name and their number of companies tagged\ncompany.tag\tarray\tContains a list of tag objects with their name and their number of companies tagged\ncompany.user\tarray\tContains an array of companies with their name and their number of users\ncurlcurlrubyphpjava\n# Company Tag Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=tag&per_page=5' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\n# Company Segment Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=segment' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\n# Company User Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=user' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\n# Company Tag Count\\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"count\\\",\\n    \\\"company\\\": {\\n        \\\"tag\\\": [\\n            {\\n                \\\"VIP\\\": 0\\n            },\\n            {\\n                \\\"UpMarket\\\": 0\\n            },\\n            {\\n                \\\"test\\\": 0\\n            },\\n            {\\n                \\\"new\\\": 0\\n            },\\n            {\\n                \\\"smb\\\": 0\\n            }\\n        ]\\n    },\\n    \\\"pages\\\": {\\n        \\\"pages\\\": {\\n            \\\"type\\\": \\\"pages\\\",\\n            \\\"next\\\": \\\"https://api.intercom.io/counts?type=company&count=tag&page=2&per_page=5\\\",\\n            \\\"page\\\": 1,\\n            \\\"per_page\\\": 5,\\n            \\\"total_pages\\\": 203\\n        }\\n    }\\n}\\n\\n# Company Segment Count\\nHTTP/1.1 200 OK\\n{\\n    \\\"type\\\": \\\"count\\\",\\n    \\\"company\\\": {\\n        \\\"segment\\\": [\\n            {\\n                \\\"Active\\\": 2\\n            },\\n            {\\n                \\\"New\\\": 0\\n            },\\n            {\\n                \\\"Slipping Away\\\": 0\\n            },\\n            {\\n                \\\"id=10\\\": 10\\n            }\\n        ]\\n    },\\n    \\\"pages\\\": {}\\n}\\n\\n# Company User Count\\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"count\\\",\\n  \\\"company\\\": {\\n    \\\"user\\\": [\\n      {\\n        \\\"Independents\\\": 7,\\n        \\\"remote_company_id\\\": \\\"6\\\"\\n      },\\n      {\\n        \\\"Alliance\\\": 1,\\n        \\\"remote_company_id\\\": \\\"7\\\"\\n      }\\n    ]\\n  },\\n  \\\"pages\\\": {}\\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nCompany Segment Count\tcompany\tsegment\nCompany Tag Count\tcompany\ttag\nCompany User Count\tcompany\tuser\nPAGINATION WITH COMPANY COUNTS\n\nCompany tag counts are returned via pagination, which means it defaults to 50 results per page unless you specify otherwise. e.g. \\n'https://api.intercom.io/counts?type=company&count=tag&per_page=10\\\"\\n\\nTo get the next page of results you need to make a GET request with the \"next\" RUL supplied in the initial response."
  },
  {
    "title": "Webhook notifications",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/webhooks/webhook-notifications/",
    "html": "Webhook notifications\n\nA Webhook notification is the object delivered when an event is triggered, and notifications have data payloads that contain references to the Intercom objects associated with the event. There may be instances when we pause, suspend or delay notifications.\n\nWhy are my Webhook topic notifications missing?\nPaused subscription notifications\n\nIf your endpoint URL responds with more than 1000 consecutive HTTP error codes in a 15-minute window, we pause your Webhook topic notifications for 15 minutes after which we start sending as normal again.\n\nSuspended subscriptions\n\nIf your endpoint URL responds with HTTP error codes for more than seven days, we suspend your Webhook subscription, and you will stop receiving any further notifications.\n\nIf we suspend your subscription, we display an error banner on the Webhooks page under the Configure menu of the relevant App in your Developer Hub.\n\nAfter resolving any issues with your server, you can resume suspended subscriptions by pressing Set live from the top right of the page.\n\nWe only suspend Webhook subscriptions for Private apps. Webhook subscriptions used in Public apps are never suspended.\n\nWhy are my Webhook topic notifications delayed?\nRate limiting\n\nWe will prioritise the first 150,000 events per minute of your Webhook topic notifications and then rate limit all further notifications with a lower priority.\n\nSlow topic notifications\n\nWe prioritise Webhook topic notifications for endpoint URLs that successfully respond within 500ms. If response times exceed 500ms, we deliver topic notifications with a lower priority.\n\nThrottling\n\nIf we receive an HTTP 429 (Too Many Requests) response from your endpoint URL, we throttle further notifications with a delay that starts at 1 minute and extends to 2 hours. We drop any throttled notifications if we do not receive a successful response within 2 hours.\n\nWhy are my Webhook topic notifications out of order?\n\nEach notification object has a timestamp created_at field. We do not offer any guarantee on the order of Webhook topic notifications.\n\nWhat happens to my Webhook topic notifications when Intercom is down?\n\nIf Intercom's System Status interrupts notification delivery, we will store them and resume sending once we restore the service. We will always prioritise the most recent notifications and process older delayed notifications with a lower priority.\n\nWhat volume of notifications should I expect?\n\nEvents in Intercom with the potential for generating a high volume of Webhook topic notifications are related to the Content Stat object and Contact object.\n\nFor example, the volume of Content Stat Webhook topic notifications is typically five times the size of the audience receiving the Outbound Message content; Chats, Emails, Mobile Push etc.\n\nConfigure your endpoint URL server to handle spikes in velocity and volume to minimise paused and suspended Webhook subscriptions or rate-limited and throttled Webhook topic notifications.\n\nWhy am I receiving duplicate notifications?\n\nIf we do not receive an HTTP 200 (OK) response within 5 seconds of sending a notification, we will resend the notification one more time.\n\nTo avoid this, we recommend responding with HTTP 200 (OK) immediately upon receipt and before you trigger any long-running tasks."
  },
  {
    "title": "Admin",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/requestobjects/admin/",
    "html": "Admin\nDescription\n\nThe admin object provides information on the Intercom teammate. You can see more about this on the Admin Model page of our API Reference.\n\nExample Object\n{\n  admin: {\n    type: \"admin\",\n    id: \"814860\",\n    name: \"IntercomTest\",\n    email: \"theadmin@example.com\",\n    job_title: \"Existentialist\",\n    away_mode_enabled: false,\n    away_mode_reassign: false,\n    avatar: {\n      image_url: \"https://static.site.test.icon\"\n    },\n    team_ids: [\n      814865\n    ]\n  }\n}\n"
  },
  {
    "title": "Context",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/requestobjects/context/",
    "html": "Context\nDescription\n\nThe context object provides additional details on where the app has been added (or is currently being used), what page the app is being used on, and information on the Messenger settings. This is in order for you give a fully customised experience based on the customers use case.\n\nIf the location is conversation then you will also be given a conversation_id. If you need to use details about the conversation, then you have to use the conversation_id to make a call to our Conversations API and retrieve the conversation object.\n\nAttributes\nKey\tType\tLocation\tDescription\nconversation_id\tinteger\tConversation\tThe id of the conversation where the app is added or being used.\nlocation\tstring\tConversation, Messenger Home, Message, Operator\tWhere the app is added or the action took place. Can be either 'conversation', 'home', 'message', or 'operator'.\nlocale\tstring\tConversation, Messenger Home, Message, Operator\tThe default end-user language of the Messenger. Use to localise Messenger App content.\nmessenger_action_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers action colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nmessenger_background_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers background colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nreferrer\tstring\tConversation, Messenger Home, Message, Operator\tThe current page URL where the app is being used.\nExample Objects\n{\n  conversation_id: 4294967297,\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n\n{\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n"
  },
  {
    "title": "Data Attribute Model",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/data-attributes/data-attribute-model/",
    "html": "Data Attribute Model\nExample Data Attribute Object\n{\\n  \\\"type\\\": \\\"data_attribute\\\",\\n  \\\"name\\\": \\\"paid_subscriber\\\",\\n  \\\"full_name\\\": \\\"custom_attributes.paid_subscriber\\\", \\n  \\\"label\\\": \\\"paid_subscriber\\\", \\n  \\\"description\\\": \\\"\\\",\\n  \\\"data_type\\\": \\\"string\\\", \\n  \\\"options\\\": [\\n    \\\"pick_value_1\\\",\\n    \\\"pick_value_2\\\"\\n  ],\\n  \\\"api_writable\\\": true, \\n  \\\"ui_writable\\\": true, \\n  \\\"custom\\\": true, \\n  \\\"archived\\\": false, \\n  \\\"admin_id\\\": \\\"1\\\",\\n  \\\"created_at\\\": 1392734388,\\n  \\\"updated_at\\\": 1392734388\\n}\\n\n\nData Attribute Object\n\nA data attribute object contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'data_attribute'\nid\tinteger\tThe unique identifier for the data attribute which is given by Intercom. Only available for custom attributes.\nname\tstring\tname of the attribute\n\nExamples:\nemail\nregion_name for region_name for stored in location_data object\nimage_url for image_url for stored in avatar object\npaid_subscriber for CDA named paid_subscriber\nfull_name\tstring\tFull name of the attribute. Should match the name unless it's a nested attribute.\n\nExamples:\nemail\nlocation_data.region_name\navatar.image_url\ncustom_attributes.paid_subscriber\n\nWe can split full_name on . to access nested user object values.\nExamples:\nuser['location_data']['region_name']\nuser['custom_attributes']['paid_subscriber']\nlabel\tstring\tReadable name of the attribute (i.e. name you see in the UI)\ndescription\tstring\tReadable description of the attribute\ndata_type\tstring\tType of data stored in the attribute.\nPossible values:\nstring\ninteger\nfloat\nboolean\ndate\noptions\tlist\tList of predefined options for attribute value.\nExample:\n[\"option_1\", \"option_2\"]\napi_writable\tboolean\tCan this attribute be updated through API\nui_writable\tboolean\tCan this attribute be updated in the UI\ncustom\tboolean\tSet to true if this is a CDA\narchived\tboolean\tOnly applicable to CDAs\ncreated_at\ttimestamp\tThe time the CDA was created.\nOnly applicable to CDAs.\nupdated_at\ttimestamp\tThe last time the CDA was updated.\nOnly applicable to CDAs.\nadmin_id\tstring\tTeammate who created the attribute.\nOnly applicable for CDAs"
  },
  {
    "title": "Create a conversation",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/conversations/create-a-conversation/",
    "html": "Create a conversation\nExample Request & Response\n$ curl https://api.intercom.io/conversations \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d\n\n{\n  \"from\": {\n    \"type\": \"user\",\n    \"id\": \"536e564f316c83104c000020\"\n  },\n  \"body\": \"Hey\"\n}\n\nHTTP/1.1 200 OK\n{\n  \"type\": \"user_message\",\n  \"id\": \"2001\",\n  \"created_at\": 1401917202,\n  \"body\" : \"Hey, is the new thing in stock?\",\n  \"message_type\": \"inapp\",\n  \"conversation_id\": \"36000324324\"\n}\n\nintercom.messages.create(\n  :from => {\n    :type => \"user\",\n    :id => \"536e564f316c83104c000020\"\n  },\n  :body => \"Hey\"\n)\n\n<?php\n$intercom->messages->create([\n    \"message_type\" => \"inapp\",\n    \"body\" => \"Surely, I said, knowledge is the food of the soul\",\n    \"from\" => [\n        \"type\" => \"user\",\n        \"id\" => \"5989303470da497b1babb9ef\"\n    ]\n]);\n?>\n\nUserMessage userMessage = new UserMessage()\n  .setBody(\"Hey! Is there, is there a reward?\")\n  .setUser(user);\nConversation.create(userMessage);\n\n\nYou can create a conversation that has been initiated by a contact (ie. user or lead). The conversation can be an in-app message only.\n\nSENDING FOR VISITORS\n\nYou can also send a message from a visitor by specifying their user_id or id value in the from field, along with a type field value of contact. This visitor will be automatically converted to a contact with a lead role once the conversation is created.\n\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\nfrom\tObject\tYes\tSee Form Object below for more.\nbody\tString\tYes\tThe content of the message.HTML is not supported.\nFrom Object\nAttribute\tType\tRequired?\tDescription\ntype\tString\tYes\tThe role associated to the contact - user or contact.\nid\tString\tYes\tThe identifier for the contact which is given by Intercom.\nResponse\n\nThis will return the Message model that has been created."
  },
  {
    "title": "App Total Count Model",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/counts/company-user-counts/",
    "html": "App Total Count Model\nApp Total Count Object\n\nThe total count object contains the summary of the following fields in your app -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count.hash'\ncompany\tobject\tContains the number of companies in your App\nsegment\tobject\tContains the number of segments in your App\ntag\tobject\tContains the number of tags in your App\nuser\tobject\tContains the number of users in your App\nlead\tobject\tContains the number of leads in your App\n\nThe count of tags and segments includes archived tags and segments.\n\n{\n    \"type\": \"count.hash\",\n    \"company\": {\n        \"count\": 55\n    },\n    \"user\": {\n        \"count\": 54944\n    },\n    \"lead\": {\n        \"count\": 17\n    },\n    \"tag\": {\n        \"count\": 1012\n    },\n    \"segment\": {\n        \"count\": 7\n    }\n}\n\n# App Counts\n$ curl 'https://api.intercom.io/counts' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# App Total Counts\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"count.hash\",\n    \"company\": {\n        \"count\": 55\n    },\n    \"user\": {\n        \"count\": 54944\n    },\n    \"lead\": {\n        \"count\": 17\n    },\n    \"tag\": {\n        \"count\": 1012\n    },\n    \"segment\": {\n        \"count\": 7\n    }\n}\n\nintercom.counts.for_app\n\n<?php\n// Global App Counts\n$intercom->counts->getCounts([]);\n?>\n\n// Global App Counts\nfinal Counts.Totals appTotals = Counts.appTotals();\nappTotals.getCompany().getValue();\nappTotals.getSegment().getValue();\nappTotals.getTag().getValue();\nappTotals.getUser().getValue();\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nGlobal App Counts\tNone\tNone"
  },
  {
    "title": "Error Objects",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/errors/error-objects/",
    "html": "Error Objects\nError List Object\n{\n  \"type\": \"error.list\",\n  \"errors\": [\n    {\n      \"code\": \"not_found\",\n      \"message\": \"No such user_id[314159]\",\n      \"field\": \"user_id\"\n    },\n    {\n      \"code\": \"not_found\",\n      \"message\": \"No such email[pi@example.org]\",\n      \"field\": \"email\"\n    }\n  ]\n}\n\n// the JavaScript client doesn't directly expose error data\n\n# the Ruby client doesn't directly expose error data\n\n<?php\n// the PHP client doesn't directly expose error data\n?>\n\ntry {\n  UserCollection uc = User.list();\n} catch(IntercomException  ie) {\n  Error e = ie.getFirstError();\n  log.error(\"{}:{}\", e.getCode(), e.getMessage());\n}\n\n\nThe API will return an Error List for a failed request, which will contain one or more Error objects.\n\nError List Attributes\n\nEach error has the following attributes\n\nField\tDescription\ntype\tThe type is error.list\nerrors\tAn array of one or more error objects\nError Object Attributes\n\nEach Error Object has the following attributes\n\nField\tDescription\ncode\tA string indicating the kind of error, used to further qualify the HTTP response code\nmessage\tOptional. Human readable description of the error\nfield\tOptional. Used to identify a particular field or query parameter that was in error."
  },
  {
    "title": "User Segment/Tag Count Model",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/counts/user-tag-counts/",
    "html": "User Segment/Tag Count Model\n\nThe count of tags and segments includes archived tags and segments.\n\nUser Segment/Tag Count Object\n\nCount Object includes count for users and leads.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nuser\tobject\tContains a field called segment containing segment counts\nuser.segment\tarray\tContains a list of segment counts\nuser.tag\tarray\tContains a list of tag counts\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"tag\": [\n        {\n          \"Independent\": 3\n        }\n    ]\n  }\n}\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"segment\": [\n      {\n        \"Active\": 1\n      },\n      {\n        \"New\": 0\n      },\n      {\n        \"VIP\": 0\n      },\n      {\n        \"Slipping Away\": 0\n      },\n      {\n        \"segment 1\": 1\n      }\n    ]\n  }\n}\n\n# User Tag Count\n$ curl 'https://api.intercom.io/counts?type=user&count=tag' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# User Segment Count\n$ curl 'https://api.intercom.io/counts?type=user&count=segment' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# User Tag Count\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"tag\": [\n        {\n          \"Independent\": 3\n        }\n    ]\n  }\n}\n\n# User Segment Count\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"segment\": [\n      {\n        \"Active\": 1\n      },\n      {\n        \"New\": 0\n      },\n      {\n        \"VIP\": 0\n      },\n      {\n        \"Slipping Away\": 0\n      },\n      {\n        \"segment 1\": 1\n      }\n    ]\n  }\n}\n\nintercom.counts.for_type(type: 'user', count: 'tag')\nintercom.counts.for_type(type: 'user', count: 'segment')\n\n<?php\n// User Tag Count\n$counts = $intercom->counts->getCounts([\"type\" => \"user\", \"count\" => \"tag\"]);\nprint_r($counts);\n\n// Company Segment Count\n$counts = $intercom->counts->getCounts([\"type\" => \"user\", \"count\" => \"segment\"]);\n?>\n\n// User Tag Count\nfinal List<Counts.CountItem> tags = Counts.userTags();\nfor (Counts.CountItem tag : tags) {\n  out.println(tag.getName() + \": \" + tag.getValue());\n}\n\n// User Segment Count\nfinal List<Counts.CountItem> segments = Counts.userSegments();\nfor (Counts.CountItem seg : segments) {\n  out.println(seg.getName() + \": \" + seg.getValue());\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nUser Segment Count\tuser\tsegment\nUser Tag Count\tuser\ttag"
  },
  {
    "title": "Error Objects",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/errors/error-objects/",
    "html": "Error Objects\nError List Object\n{\n  \"type\": \"error.list\",\n  \"errors\": [\n    {\n      \"code\": \"not_found\",\n      \"message\": \"No such user_id[314159]\",\n      \"field\": \"user_id\"\n    },\n    {\n      \"code\": \"not_found\",\n      \"message\": \"No such email[pi@example.org]\",\n      \"field\": \"email\"\n    }\n  ]\n}\n\n// the JavaScript client doesn't directly expose error data\n\n# the Ruby client doesn't directly expose error data\n\n<?php\n// the PHP client doesn't directly expose error data\n?>\n\ntry {\n  UserCollection uc = User.list();\n} catch(IntercomException  ie) {\n  Error e = ie.getFirstError();\n  log.error(\"{}:{}\", e.getCode(), e.getMessage());\n}\n\n\nThe API will return an Error List for a failed request, which will contain one or more Error objects.\n\nError List Attributes\n\nEach error has the following attributes\n\nField\tDescription\ntype\tThe type is error.list\nerrors\tAn array of one or more error objects\nError Object Attributes\n\nEach Error Object has the following attributes\n\nField\tDescription\ncode\tA string indicating the kind of error, used to further qualify the HTTP response code\nmessage\tOptional. Human readable description of the error\nfield\tOptional. Used to identify a particular field or query parameter that was in error."
  },
  {
    "title": "Submit a data event",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/data-events/submitting-events/",
    "html": "Submit a data event\nSubmit an Event\n$ curl https://api.intercom.io/events \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Content-Type: application/json\" -d'\n{\n  \"event_name\" : \"placed-order\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"314159\",\n  \"metadata\": {\n    \"order_date\": 1392036272,\n    \"stripe_invoice\": \"inv_3434343434\",\n    \"order_number\": {\n      \"value\":\"3434-3434\",\n      \"url\": \"https://example.org/orders/3434-3434\"\n    },\n    \"price\": {\n      \"currency\":\"usd\",\n      \"amount\": 2999\n    }\n  }\n}'\n\nvar more_metadata = {\n  order_date: 1392036272,\n  stripe_invoice: 'inv_3434343434',\n  order_number: {\n    value: \"3434-3434\",\n    url: 'https://example.org/orders/3434-3434'\n  },\n  price: {\n    currency: 'usd',\n    amount: 2999\n  }\n};\nIntercom('trackEvent', 'placed-order', more_metadata);\n\nmore_metadata = {\n  :order_date => Time.now.to_i,\n  :stripe_invoice => 'inv_3434343434',\n  :order_number => {\n    :value => '3434-3434',\n    :url => 'https://example.org/orders/3434-3434'\n  },\n  price: {\n    :currency => 'usd',\n    :amount => 2999\n  }\n}\nintercom.events.create({\n  :event_name => \"placed-order\",\n  :email => current_user.email,\n  :created_at => 1391691571,\n  :metadata => more_metadata\n})\n\n<?php\n$metadata = ([\n    \"order_date\" => time(),\n    \"stripe_invoice\" => \"inv_3434343434\",\n    \"order_number\" => ([\n        \"value\" => \"3434-3434\",\n        \"url\" => \"https://example.org/orders/3434-3434\"]),\n        \"price\" => ([\n            \"currency\" => \"usd\",\n            \"amount\" => 2999])\n]);\n\n$intercom->events->create([\n    \"event_name\" => \"placed-order\",\n    \"created_at\" => 1500907515,\n    \"user_id\" => \"20413\",\n    \"metadata\" => $metadata\n]);\n?>\n\nMap<String,Object> order = Maps.newHashMap();\norder.put(\"value\", \"3434-3434\");\norder.put(\"url\", \"https://example.org/orders/3434-3434\");\n\nMap<String,Object> price = Maps.newHashMap();\nprice.put(\"currency\", \"usd\");\nprice.put(\"amount\", 2999);\n\nMap<String,Object> meta = Maps.newHashMap();\nmeta.put(\"order_date\", currentTimeMillis()/1000L);\nmeta.put(\"stripe_invoice\", \"inv_3434343434\");\nmeta.put(\"price\", price);\nmeta.put(\"order_number\", order);\n\nEvent event = new Event()\n  .setEventName(\"placed-order\")\n  .setUserID(\"314159\")\n  .setMetadata(meta);\n\nEvent.create(event);\n\n\nYou will need an Access Token that has write permissions to send Events. Once you have a key you can submit events via POST to the Events resource, which is located at https://api.intercom.io/events, or you can send events using one of the client libraries. When working with the HTTP API directly a client should send the event with a Content-Type of application/json.\n\nWhen using the JavaScript API, adding the code to your app makes the Events API available. Once added, you can submit an event using the trackEvent method. This will associate the event with the Lead or currently logged-in user or logged-out visitor/lead and send it to Intercom. The final parameter is a map that can be used to send optional metadata about the event.\n\nWith the Ruby client you pass a hash describing the event to Intercom::Event.create, or call the track_user method directly on the current user object (e.g. user.track_event).\n\nMetadata Object\nType\tDescription\tExample\nString\tThe value is a JSON String\t\"source\":\"desktop\"\nNumber\tThe value is a JSON Number\t\"load\": 3.67\nDate\tThe key ends with the String _date or _at and the value is a Unix timestamp, assumed to be in the UTC timezone.\t\"contact_date\": 1392036272 or \"contacted_at\": 1392036272\nLink\tThe value is a HTTP or HTTPS URI.\t`\"article\": \"https://example.org/ab1de.html\"\nRich Link\tThe value is a JSON object that contains url and value keys.\t\"article\": {\"url\": \"https://example.org/ab1de.html\", \"value\":\"the dude abides\"}\nMonetary Amount\tThe value is a JSON object that contains amount and currency keys. The amount key is a positive integer representing the amount in cents. The price in the example to the right denotes €349.99.\t\"price\": {\"amount\": 34999, \"currency\": \"eur\"}\n\nNB: For the JSON object types, please note that we do not currently support nested JSON structure.\n\nLEAD EVENTS\n\nWhen submitting events for Leads, you will need to specify the Lead's id.\n\nMETADATA BEHAVIOUR\n\nWe currently limit the number of tracked metadata keys to 10 per event. Once the quota is reached, we ignore any further keys we receive. The first 10 metadata keys are determined by the order in which they are sent in with the event.\\n_ It is not possible to change the metadata keys once the event has been sent. A new event will need to be created with the new keys and you can archive the old one.\\n_ There might be up to 24 hrs delay when you send a new metadata for an existing event.\n\nEVENT DE-DUPLICATION\n\nThe API may detect and ignore duplicate events. Each event is uniquely identified as a combination of the following data - the Workspace identifier, the Contact external identifier, the Data Event name and the Data Event created time. As a result, it is strongly recommended to send a second granularity Unix timestamp in the created_at field.\\n\\nDuplicated events are responded to using the normal 202 Accepted code - an error is not thrown, however repeat requests will be counted against any rate limit that is in place.\n\nHTTP API Responses\nSuccessful responses to submitted events return 202 Accepted with an empty body.\nUnauthorised access will be rejected with a 401 Unauthorized or 403 Forbidden response code.\nEvents sent about users that cannot be found will return a 404 Not Found.\nEvent lists containing duplicate events will have those duplicates ignored.\nServer errors will return a 500 response code and may contain an error message in the body."
  },
  {
    "title": "Company User/Segment/Tag Count Model",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/counts/company-tag-counts/",
    "html": "Company User/Segment/Tag Count Model\nCompany User/Segment/Tag Count Object\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\ncompany\tobject\tContains a field called segment containing segment counts\ncompany.segment\tarray\tContains a list of segment objects their name and their number of companies tagged\ncompany.tag\tarray\tContains a list of tag objects with their name and their number of companies tagged\ncompany.user\tarray\tContains an array of companies with their name and their number of users\ncurlcurlrubyphpjava\n# Company Tag Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=tag&per_page=5' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\n# Company Segment Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=segment' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\n# Company User Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=user' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\n# Company Tag Count\\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"count\\\",\\n    \\\"company\\\": {\\n        \\\"tag\\\": [\\n            {\\n                \\\"VIP\\\": 0\\n            },\\n            {\\n                \\\"UpMarket\\\": 0\\n            },\\n            {\\n                \\\"test\\\": 0\\n            },\\n            {\\n                \\\"new\\\": 0\\n            },\\n            {\\n                \\\"smb\\\": 0\\n            }\\n        ]\\n    },\\n    \\\"pages\\\": {\\n        \\\"pages\\\": {\\n            \\\"type\\\": \\\"pages\\\",\\n            \\\"next\\\": \\\"https://api.intercom.io/counts?type=company&count=tag&page=2&per_page=5\\\",\\n            \\\"page\\\": 1,\\n            \\\"per_page\\\": 5,\\n            \\\"total_pages\\\": 203\\n        }\\n    }\\n}\\n\\n# Company Segment Count\\nHTTP/1.1 200 OK\\n{\\n    \\\"type\\\": \\\"count\\\",\\n    \\\"company\\\": {\\n        \\\"segment\\\": [\\n            {\\n                \\\"Active\\\": 2\\n            },\\n            {\\n                \\\"New\\\": 0\\n            },\\n            {\\n                \\\"Slipping Away\\\": 0\\n            },\\n            {\\n                \\\"id=10\\\": 10\\n            }\\n        ]\\n    },\\n    \\\"pages\\\": {}\\n}\\n\\n# Company User Count\\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"count\\\",\\n  \\\"company\\\": {\\n    \\\"user\\\": [\\n      {\\n        \\\"Independents\\\": 7,\\n        \\\"remote_company_id\\\": \\\"6\\\"\\n      },\\n      {\\n        \\\"Alliance\\\": 1,\\n        \\\"remote_company_id\\\": \\\"7\\\"\\n      }\\n    ]\\n  },\\n  \\\"pages\\\": {}\\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nCompany Segment Count\tcompany\tsegment\nCompany Tag Count\tcompany\ttag\nCompany User Count\tcompany\tuser\nPAGINATION WITH COMPANY COUNTS\n\nCompany tag counts are returned via pagination, which means it defaults to 50 results per page unless you specify otherwise. e.g. \\n'https://api.intercom.io/counts?type=company&count=tag&per_page=10\\\"\\n\\nTo get the next page of results you need to make a GET request with the \"next\" RUL supplied in the initial response."
  },
  {
    "title": "Counts",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/counts/counts/",
    "html": "Counts\n\nYou can use the API to get counts of users and companies filtered by certain criteria.\n\nCounts are a good way to periodically obtain data for the purposes of tracking rates of change in user and company data."
  },
  {
    "title": "View a Note",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/notes/view-a-note/",
    "html": "View a Note\nExample Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/notes/2 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"note\\\",\\n  \\\"id\\\": \\\"2\\\",\\n  \\\"created_at\\\": 1389913951,\\n  \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n  \\\"user\\\": {\\n      \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\",\\n      \\\"type\\\": \\\"user\\\"\\n    },\\n  \\\"author\\\": {\\n    \\\"type\\\": \\\"admin\\\",\\n    \\\"id\\\": \\\"21\\\",\\n    \\\"name\\\": \\\"Jayne Cobb\\\",\\n    \\\"email\\\": \\\"jayne@serenity.io\\\",\\n    \\\"avatar\\\" : {\\n       \\\"type\\\":\\\"avatar\\\",\\n      \\\"image_url\\\": \\\"http://example.org/128Jayne.jpg\\\"\\n    },\\n    \\\"companies\\\": []\\n  }\\n}\n\n\nEach note has its own URL -\n\nhttps://api.intercom.io/notes/{id}\n\nWhere {id} is the value of the note's id field. A GET request to a note's URL will return the note object.\n\nReturns\n\nA note object."
  },
  {
    "title": "Create a note for contact",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/notes/create-note-for-contact/",
    "html": "Create a note for contact\nExample Request & Response\ncurlhttp\n$ curl \\\"https://api.intercom.io/contacts/<id>/notes\\\" \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' -d {\\\"body\\\": \\\"Shiny\\\", \\\"admin_id\\\": \\\"12345\\\"}\\n\n\nExample Errors\nhttphttp\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Resource Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can create a note to a single contact.\n\nRequest Path Parameter\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom.\nRequest Body Parameter\nParameter\tType\tRequired?\tDescription\nbody\tString\tYes\tThe text of the note.\nadmin_id\tString\tYes\tThe unique identifier for the admin which is given by Intercom.\nResponse\n\nThis will return a Note model for the note that was added to the contact."
  },
  {
    "title": "Company User/Segment/Tag Count Model",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/counts/company-tag-counts/",
    "html": "Company User/Segment/Tag Count Model\nCompany User/Segment/Tag Count Object\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\ncompany\tobject\tContains a field called segment containing segment counts\ncompany.segment\tarray\tContains a list of segment objects their name and their number of companies tagged\ncompany.tag\tarray\tContains a list of tag objects with their name and their number of companies tagged\ncompany.user\tarray\tContains an array of companies with their name and their number of users\ncurlcurlrubyphpjava\n# Company Tag Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=tag&per_page=5' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\n# Company Segment Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=segment' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\n# Company User Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=user' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\n# Company Tag Count\\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"count\\\",\\n    \\\"company\\\": {\\n        \\\"tag\\\": [\\n            {\\n                \\\"VIP\\\": 0\\n            },\\n            {\\n                \\\"UpMarket\\\": 0\\n            },\\n            {\\n                \\\"test\\\": 0\\n            },\\n            {\\n                \\\"new\\\": 0\\n            },\\n            {\\n                \\\"smb\\\": 0\\n            }\\n        ]\\n    },\\n    \\\"pages\\\": {\\n        \\\"pages\\\": {\\n            \\\"type\\\": \\\"pages\\\",\\n            \\\"next\\\": \\\"https://api.intercom.io/counts?type=company&count=tag&page=2&per_page=5\\\",\\n            \\\"page\\\": 1,\\n            \\\"per_page\\\": 5,\\n            \\\"total_pages\\\": 203\\n        }\\n    }\\n}\\n\\n# Company Segment Count\\nHTTP/1.1 200 OK\\n{\\n    \\\"type\\\": \\\"count\\\",\\n    \\\"company\\\": {\\n        \\\"segment\\\": [\\n            {\\n                \\\"Active\\\": 2\\n            },\\n            {\\n                \\\"New\\\": 0\\n            },\\n            {\\n                \\\"Slipping Away\\\": 0\\n            },\\n            {\\n                \\\"id=10\\\": 10\\n            }\\n        ]\\n    },\\n    \\\"pages\\\": {}\\n}\\n\\n# Company User Count\\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"count\\\",\\n  \\\"company\\\": {\\n    \\\"user\\\": [\\n      {\\n        \\\"Independents\\\": 7,\\n        \\\"remote_company_id\\\": \\\"6\\\"\\n      },\\n      {\\n        \\\"Alliance\\\": 1,\\n        \\\"remote_company_id\\\": \\\"7\\\"\\n      }\\n    ]\\n  },\\n  \\\"pages\\\": {}\\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nCompany Segment Count\tcompany\tsegment\nCompany Tag Count\tcompany\ttag\nCompany User Count\tcompany\tuser\nPAGINATION WITH COMPANY COUNTS\n\nCompany tag counts are returned via pagination, which means it defaults to 50 results per page unless you specify otherwise. e.g. \\n'https://api.intercom.io/counts?type=company&count=tag&per_page=10\\\"\\n\\nTo get the next page of results you need to make a GET request with the \"next\" RUL supplied in the initial response."
  },
  {
    "title": "List by Tag or Segment",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/companies/list-by-tag-or-segment/",
    "html": "List by Tag or Segment\nExample List by tag request\n$ curl https://api.intercom.io/companies?tag_id=17 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"company.list\",\n  \"total_count\": 105,\n  \"companies\": [\n    {\n      \"type\": \"company\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ],\n  \"pages\": {\n    \"next\": \"https://api.intercom.io/companies?tag=14&per_page=50&page=2\",\n    \"page\": 1,\n    \"per_page\": 50,\n    \"total_pages\": 3\n  }\n}\n\n# NB: Full company objects are returned\n\nintercom.companies.find(:tag_id => \"1234\")\nintercom.companies.find(:segment_id => \"4567\")\n\n<?php\n$companies = $intercom->companies->getCompanies([\"tag_id\" => '1153470']);\nprint_r($companies->companies);\n\n$companies = $intercom->companies->getCompanies([\"segment_id\" => '596f8022227edee8a052e910']);\nprint_r($companies->companies);\n\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"tag_id\", \"1234\");\nCompany company = Company.list(map);\n\nparams = Maps.newHashMap();\nparams.put(\"segment_id\", \"4567\");\nCompany company = Company.list(map);\n\n\nYou can fetch segmented and tagged companies by querying the companies resource with the segment_id and tag_id parameters (for information on how to tag companies see the section \"Create and update tags\").\n\nNote that you can query by tag or segment but not both in the same request.\n\nRequest Parameters\nParameter\tRequired\tDescription\ntag_id\tone of\tThe id of the tag to filter by.\nsegment_id\tone of\tThe id of the segment to filter by.\nReturns\n\nA pageable list of companies. Like a plain company list, the result contains a pages object that indicates if more companies exist via the next field."
  },
  {
    "title": "Data Attribute Model",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/data-attributes/data-attribute-model/",
    "html": "Data Attribute Model\nExample Data Attribute Object\n{\\n  \\\"type\\\": \\\"data_attribute\\\",\\n  \\\"name\\\": \\\"paid_subscriber\\\",\\n  \\\"full_name\\\": \\\"custom_attributes.paid_subscriber\\\", \\n  \\\"label\\\": \\\"paid_subscriber\\\", \\n  \\\"description\\\": \\\"\\\",\\n  \\\"data_type\\\": \\\"string\\\", \\n  \\\"options\\\": [\\n    \\\"pick_value_1\\\",\\n    \\\"pick_value_2\\\"\\n  ],\\n  \\\"api_writable\\\": true, \\n  \\\"ui_writable\\\": true, \\n  \\\"custom\\\": true, \\n  \\\"archived\\\": false, \\n  \\\"admin_id\\\": \\\"1\\\",\\n  \\\"created_at\\\": 1392734388,\\n  \\\"updated_at\\\": 1392734388\\n}\\n\n\nData Attribute Object\n\nA data attribute object contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'data_attribute'\nid\tinteger\tThe unique identifier for the data attribute which is given by Intercom. Only available for custom attributes.\nname\tstring\tname of the attribute\n\nExamples:\nemail\nregion_name for region_name for stored in location_data object\nimage_url for image_url for stored in avatar object\npaid_subscriber for CDA named paid_subscriber\nfull_name\tstring\tFull name of the attribute. Should match the name unless it's a nested attribute.\n\nExamples:\nemail\nlocation_data.region_name\navatar.image_url\ncustom_attributes.paid_subscriber\n\nWe can split full_name on . to access nested user object values.\nExamples:\nuser['location_data']['region_name']\nuser['custom_attributes']['paid_subscriber']\nlabel\tstring\tReadable name of the attribute (i.e. name you see in the UI)\ndescription\tstring\tReadable description of the attribute\ndata_type\tstring\tType of data stored in the attribute.\nPossible values:\nstring\ninteger\nfloat\nboolean\ndate\noptions\tlist\tList of predefined options for attribute value.\nExample:\n[\"option_1\", \"option_2\"]\napi_writable\tboolean\tCan this attribute be updated through API\nui_writable\tboolean\tCan this attribute be updated in the UI\ncustom\tboolean\tSet to true if this is a CDA\narchived\tboolean\tOnly applicable to CDAs\ncreated_at\ttimestamp\tThe time the CDA was created.\nOnly applicable to CDAs.\nupdated_at\ttimestamp\tThe last time the CDA was updated.\nOnly applicable to CDAs.\nadmin_id\tstring\tTeammate who created the attribute.\nOnly applicable for CDAs"
  },
  {
    "title": "Create a message",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/messages/admin-initiated-conversation/",
    "html": "Create a message\nExample Request & Response\n$ curl https://api.intercom.io/messages \\-X POST \\-H 'Authorization:Bearer <Your access token>' \\-H 'Accept: application/json' \\-H 'Content-Type: application/json' -d{  \"message_type\": \"email\",  \"subject\": \"Hey\",  \"body\": \"Ponies, cute small horses or something more sinister?\",  \"template\": \"plain\",  \"from\": {    \"type\": \"admin\",    \"id\": \"394051\"  },  \"to\": {    \"type\": \"user\",    \"id\": \"536e564f316c83104c000020\"  }}\n\nHTTP/1.1 200 OK{  \"type\": \"admin_message\",  \"id\": \"2001\",  \"created_at\": 1401916877,  \"message_type\": \"email\",  \"subject\" : \"Hey\",  \"body\" : \"Ponies, cute small horses or something more sinister?\",  \"template\": \"plain\",  \"owner\": {    \"email\": \"wash@serenity.io\",    \"id\": \"394051\",    \"name\": \"Wash\",    \"type\": \"admin\"  }}\n\nintercom.messages.create(  :message_type => 'email',  :subject  => 'This Land',  :body     => \"Har har har! Mine is an evil laugh!\",  :template => \"plain\", # or \"personal\",  :from => {    :type => \"admin\",    :id   => \"394051\"  },  :to => {    :type => \"user\",    :id => \"536e564f316c83104c000020\"  })\n\n<?php$intercom->messages->create([    \"message_type\" => \"email\",    \"subject\" => \"Plato Quote\",    \"body\" => \"And what, Socrates, is the food of the soul?\",    \"from\" => [        \"type\" => \"admin\",        \"id\" => \"814860\"    ],    \"to\" => [        \"type\" => \"user\",        \"email\" => \"socrates@email.com\"    ]]);?>\n\nUser user = new User()  .setId(\"5310d8e8598c9a0b24000005\");Admin admin = new Admin()  .setId(\"394051\");AdminMessage adminMessage = new AdminMessage()  .setAdmin(admin)  .setUser(user)  .setSubject(\"This Land\")  .setBody(\"Har har har! Mine is an evil laugh!\")  .setMessageType(\"email\")  .setTemplate(\"plain\"); // or personalConversation.create(adminMessage);\n\n\nYou can create a message that has been initiated by an admin. The conversation can be either an in-app message or an email.\n\nDELAY AFTER CONTACT CREATION\n\nThere can be a short delay between when a contact is created and when a contact becomes available to be messaged through the API. A 404 Not Found error will be returned in this case.\n\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tThe kind of message being created. Values: inapp or email\nsubject\tString\tYes, if message_type: email.\tThe title of the email.\nbody\tString\tYes\tThe content of the message.Limited HTML and plaintext are supported.\ntemplate\tString\tYes, if message_type: email.\tThe style of the outgoing message.Possible values plain or personal.\nfrom\tObject\tYes\tSee From Object below for more.\nto\tObject\tYes\tSee To Object below for more.\nFrom Object\nAttribute\tType\tRequired?\tDescription\ntype\tString\tYes\tAlways admin.\nid\tString\tYes\tThe identifier for the admin which is given by Intercom.\nTo Object\nAttribute\tType\tRequired?\tDescription\ntype\tString\tYes\tThe role associated to the contact - user or lead.\nid\tString\tYes\tThe identifier for the contact which is given by Intercom.\nResponse\n\nThis will return the Message that has been created.\n\nRETRIEVING ASSOCIATED CONVERSATIONS\n\nAs this is a message, there will be no conversation present until the contact responds. Once they do, you will have to search for a contact's conversations with the id of the message."
  },
  {
    "title": "List all messages",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/messages/list-all-messages/",
    "html": "List all messages\n\nTo list all messages, you will need to use our Export API and download the data in CSV format. This API is available in v2.5 and above."
  },
  {
    "title": "The company model",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/companies/company-model/",
    "html": "The company model\nExample Company Object\n{\\n  \\\"type\\\": \\\"company\\\",\\n  \\\"id\\\": \\\"531ee472cce572a6ec000006\\\",\\n  \\\"name\\\": \\\"Blue Sun\\\",\\n  \\\"plan\\\": {\\n        \\\"type\\\": \\\"plan\\\",\\n        \\\"id\\\": \\\"269315\\\",\\n        \\\"name\\\": \\\"pro\\\"\\n    },\\n  \\\"company_id\\\": \\\"6\\\",\\n  \\\"remote_created_at\\\": 1394531169,\\n  \\\"created_at\\\": 1394533506,\\n  \\\"updated_at\\\": 1396874658,\\n  \\\"size\\\": 85,\\n  \\\"website\\\": \\\"http://www.example.com\\\",\\n  \\\"industry\\\": \\\"Manufacturing\\\",\\n  \\\"monthly_spend\\\": 49,\\n  \\\"session_count\\\": 26,\\n  \\\"user_count\\\": 10,\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"team_mates\\\": 0\\n  }\\n}\n\n\nCompanies allow you to represent organizations using your product. Each company will have its own description and be associated with contacts. You can fetch, create, update and list companies.\n\nCompanies will not appear within Intercom until users have been added or associated with a company.\n\nCompany object\nAttribute\tType\tDescription\ntype\tString\tValue is 'company'.\nid\tString\tThe Intercom defined id representing the company.\ncreated_at\tDate (UNIX timestamp)\tThe time the company was added to Intercom.\nremote_created_at\tDate (UNIX timestamp)\tThe time the company was created by you.\nupdated_at\tDate (UNIX timestamp)\tThe last time the company was updated.\nlast_request_at\tDate (UNIX timestamp)\tThe time the company last recorded making a request.\ncompany_id\tString\tThe company id you have defined for the company.\nname\tString\tThe name of the company.\ncustom_attributes\tObject\tThe custom attributes you have set on the company.\nsession_count\tInteger\tHow many sessions the company has recorded.\nmonthly_spend\tInteger\tHow much revenue the company generates for your business.\nuser_count\tInteger\tThe number of users in the company.\nplan\tObject\tThe name of the plan you have associated with the company.\nsize\tInteger\tThe number of employees in the company.\nwebsite\tString\tThe URL for the company website.\nindustry\tString\tThe industry that the company operates in.\nPlan object\nAttribute\tType\tDescription\ntype\tstring\tWill always be of type 'plan'\nid\tstring\tThe plan ID\nname\tstring\tThe name of the plan, note that this is the only field that can be set via the API."
  },
  {
    "title": "The segment model",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/segments/segment-model/",
    "html": "The segment model\nExample Segment Object\n{\\n  \\\"type\\\": \\\"segment\\\",\\n  \\\"id\\\": \\\"53203e244cba153d39000062\\\",\\n  \\\"name\\\": \\\"New\\\",\\n  \\\"created_at\\\": 1394621988,\\n  \\\"updated_at\\\": 1394622004\\n}\n\n\nA segment is a group of your contacts defined by rules that you set. Contacts are automatically added to the segment every time the contact updates to match those rules. You can use Search for contacts to find contacts that match the same rules.\n\nSegment Object\nKey\tType\tDescription\ntype\tstring\tvalue is segment'.\nid\tstring\tThe unique identifier representing the segment.\nname\tstring\tThe name of the segment.\ncreated_at\ttimestamp\tThe time the segment was created.\nupdated_at\ttimestamp\tThe time the segment was updated.\nperson_type\tstring\tType of the record: user or lead.\ncount\tinteger\tThe number of items in the user segment. It's returned when include_count=true is included in the request."
  },
  {
    "title": "The tag model",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/tags/tag-model/",
    "html": "The tag model\nExample Object\n{\\n  \\\"id\\\": \\\"17513\\\",\\n  \\\"name\\\": \\\"independent\\\",\\n  \\\"type\\\": \\\"tag\\\"\\n}\n\n\nA tag allows you to label your contacts and companies and list them using that tag.\n\nTag Object\nKey\tType\tDescription\ntype\tstring\tvalue is 'tag'\nid\tstring\tThe id of the tag\nname\tstring\tThe name of the tag"
  },
  {
    "title": "Update a data attribute",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/data-attributes/update-data-attributes/",
    "html": "Update a data attribute\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/data_attributes/163728 \\\\-X PUT \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept: application/json' \\\\-H 'Content-Type: application/json' -d{  \\\"description\\\": \\\"You are either great or bad\\\",  \\\"options\\\": [    {\\\"value\\\": \\\"great\\\"},    {\\\"value\\\": \\\"bad\\\"}  ]}\n\nExample Errors\nHTTP/1.1 404 NOT FOUND{  \"type\": \"error.list\",  \"request_id\": \"0006klvnje6ffng7ot80\",  \"errors\": [    {      \"code\": \"field_not_found\",      \"message\": \"We couldn't find that data attribute to update\"    }  ]}\n\nHTTP/1.1 422 UNPROCESSIBLE ENTITY{  \"type\": \"error.list\",  \"request_id\": \"0006klvnje6ffng7ot80\",  \"errors\": [    {      \"code\": \"data_invalid\",      \"message\": \"The Data Attribute you are trying to archive has a dependant object\"    }  ]}\n\nHTTP/1.1 400 BAD REQUEST{  \"type\": \"error.list\",  \"request_id\": \"0000rnvpf3m1f3nf4k40\",  \"errors\": [    {      \"code\": \"parameter_invalid\",      \"message\": \"You must have at least two options on a list type data attribute\"    }  ]}\n\n\nYou can update data attribute.\n\nRequest Body Parameters\nArgument\tType\tDescription\ndescription\tString\t(Optional) The readable description you see in the UI for the attribute.\noptions\tList\t(Optional) To change to or update list attributes. Provide a set of hashes with value as the key of the options you want to make.data_type must be string.\narchived\tBoolean\t(Optional) Whether the attribute is to be archived or not.\nUPDATING THE DATA TYPE IS NOT POSSIBLE\n\nIt is currently a dangerous action to execute changing a data attribute's type via the API. You will need to update the type via the UI instead.\n\nResponse\n\nThis will return a Data Attribute Model showing the details of your updated attribute."
  },
  {
    "title": "Conversation Count Model",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/counts/conversation-counts/",
    "html": "Conversation Count Model\nConversation Count Object\n\nThe conversation count supplies global counts about your App's conversations\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nconversation\tobject\tContains counts related to conversations\nconversation.assigned\tnumber\tContains the number of assigned conversations\nconversation.closed\tnumber\tContains the number of closed conversations\nconversation.open\tnumber\tContains the number of open conversations\nconversation.unassigned\tnumber\tContains the number of unassigned conversations\n{\n    \"type\": \"count\",\n    \"conversation\": {\n        \"open\": 30,\n        \"closed\": 17,\n        \"unassigned\": 0,\n        \"assigned\": 30\n    }\n}\n\n# Conversation Counts\n$ curl 'https://api.intercom.io/counts?type=conversation' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# Conversation App Counts\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"count\",\n    \"conversation\": {\n        \"open\": 30,\n        \"closed\": 17,\n        \"unassigned\": 0,\n        \"assigned\": 30\n    }\n}\n\nintercom.counts.for_type(type: 'conversation')\n\n<?php\n$counts = $intercom->counts->getCounts([\"type\" => \"conversation\"]);\nprint_r($counts);\n?>\n\n// Conversation Counts\nfinal Counts.Conversation totals = Counts.conversationTotals();\ntotals.getAssigned();\ntotals.getClosed();\ntotals.getOpen();\ntotals.getUnassigned();\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nConversation Count\tconversation\tNone"
  },
  {
    "title": "Retrieve a company",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/companies/view-a-company/",
    "html": "Retrieve a company\nExample Request & Response\n$ curl \\\n-s https://api.intercom.io/companies?company_id=141 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Accept:application/json\" \\\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"company\",\n  \"id\": \"531ee472cce572a6ec000006\",\n  \"name\": \"Blue Sun\",\n  \"plan\": {\n    \"type\":\"plan\",\n    \"id\":\"1\",\n    \"name\":\"Paid\"\n  },\n  \"company_id\": \"141\",\n  \"remote_created_at\": 1394531169,\n  \"created_at\": 1394533506,\n  \"updated_at\": 1396874658,\n  \"last_request_at\": 1396874658,\n  \"monthly_spend\": 49,\n  \"session_count\": 26,\n  \"user_count\": 10,\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"team_mates\": 0\n  }\n}\n\nintercom.companies.find(:id => \"41e66f0313708347cb0000d0\")\n\n<?php\n# Using the name of the company\n$intercom->companies->getCompanies(['name' => 'OneAmerica']);\n\n# Via company_id\n$intercom->companies->getCompanies(['company_id' => '10']);\n\n?>\n\nString id = \"541a144b201ebf2ec5000001\";\nCompany company = Company.find(id);\n\n\nYou can fetch a single company.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nname\tString\tNo\tThe name of the company.\nThe parameter should be url encoded.\ncompany_id\tString\tNo\tThe company_id you have given to the company.\n\nA company can also be fetched by its name using a name or company_id parameter in the url, whose values are the ones you have defined for that company -\n\nhttps://api.intercom.io/companies?name={name}\nhttps://api.intercom.io/companies?company_id={company_id}\nResponse\n\nThis will return the Company model that has been created or updated."
  },
  {
    "title": "Delete a contact",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/contacts/delete-contact/",
    "html": "Delete a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can delete a single contact.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return an object with details on the deleted contact.\n\nAttribute\tType\tDescription\nid\tString\tThe unique identifier for the contact which is given by Intercom\nobject\tString\tThe type of object - contact\ndeleted\tBoolean\tWhether the contact has been deleted - true"
  },
  {
    "title": "List all data attributes",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/data-attributes/list-data-attributes/",
    "html": "List all data attributes\nExample Request & Response\ncurlcurl\n$ curl https://api.intercom.io/data_attributes?model=contact-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json'\n\n{  \\\"type\\\": \\\"list\\\",  \\\"data\\\": [    {      \\\"type\\\": \\\"data_attribute\\\",      \\\"model\\\": \\\"customer\\\",      \\\"name\\\": \\\"paid_subscriber\\\",      \\\"full_name\\\": \\\"custom_attributes.paid_subscriber\\\",      \\\"label\\\": \\\"paid_subscriber\\\",      \\\"description\\\": \\\"\\\",      \\\"data_type\\\": \\\"string\\\",      \\\"options\\\": [        \\\"pick_value_1\\\",        \\\"pick_value_2\\\"      ],      \\\"api_writable\\\": true,      \\\"ui_writable\\\": true,      \\\"custom\\\": true,      \\\"archived\\\": false,      \\\"admin_id\\\": \\\"1\\\",      \\\"created_at\\\": 1392734388,      \\\"updated_at\\\": 1392734388    },    {      \\\"type\\\": \\\"data_attribute\\\",      \\\"model\\\": \\\"customer\\\",      \\\"name\\\": \\\"region_name\\\",      \\\"full_name\\\": \\\"location_data.region_name\\\",      \\\"label\\\": \\\"Region\\\",      \\\"description\\\": \\\"\\\",      \\\"data_type\\\": \\\"string\\\",      \\\"api_writable\\\": false,      \\\"ui_writable\\\": true,      \\\"custom\\\": false,      \\\"archived\\\": false    },    {      \\\"type\\\": \\\"data_attribute\\\",      \\\"model\\\": \\\"company\\\",      \\\"name\\\": \\\"plan\\\",      \\\"full_name\\\": \\\"plan\\\",      \\\"label\\\": \\\"Plan\\\",      \\\"description\\\": \\\"\\\",      \\\"data_type\\\": \\\"string\\\",      \\\"api_writable\\\": true,      \\\"ui_writable\\\": true,      \\\"custom\\\": false,      \\\"archived\\\": false    }  ]}\n\n\nYou can fetch a list of all data attributes belonging to a workspace contacts or companies.\n\nRequest Query Parameters\nParameter\tType\tRequired?\tDescription\nmodel\tString\tNo\tSpecify the data attribute model to return. Possible values are contact and company.\ninclude_archived\tBoolean\tNo\tInclude archived attributes in the list.By default we return only non archived data attributes.\nResponse\n\nThis will return a List of Data Attribute Models."
  },
  {
    "title": "The data attribute model",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/data-attributes/data-attribute-model/",
    "html": "The data attribute model\nExample Data Attribute Object\n{  \\\"type\\\": \\\"data_attribute\\\",  \\\"model\\\": \\\"contact\\\",  \\\"name\\\": \\\"paid_subscriber\\\",  \\\"full_name\\\": \\\"custom_attributes.paid_subscriber\\\",   \\\"label\\\": \\\"paid_subscriber\\\",   \\\"description\\\": \\\"\\\",  \\\"data_type\\\": \\\"string\\\",   \\\"options\\\": [    \\\"pick_value_1\\\",    \\\"pick_value_2\\\"  ],  \\\"api_writable\\\": true,   \\\"ui_writable\\\": true,   \\\"custom\\\": true,   \\\"archived\\\": false,   \\\"admin_id\\\": \\\"1\\\",  \\\"created_at\\\": 1392734388,  \\\"updated_at\\\": 1392734388}\n\n\nData Attributes are a type of metadata used to describe your contact and company models. These include standard and custom attributes. By using the data attributes endpoint, you can get the global list of attributes for your workspace, as well as create and archive custom attributes.\n\nData Attribute Object\nKey\tType\tDescription\ntype\tstring\tValue is data_attribute\nmodel\tstring\tValue is contact for user/lead attributes, and company for company attributes.\nname\tstring\tName of the attributeExamples:email``region_name for region_name stored in location_data objectimage_url for image_url stored in avatar objectpaid_subscriber for CDA named paid_subscriber\nfull_name\tstring\tFull name of the attribute. Should match the name unless it's a nested attribute.Examples:email``location_data.region_name``avatar.image_url``custom_attributes.paid_subscriberWe can split full_name on . to access nested user object values.\nlabel\tstring\tReadable name of the attribute (i.e. name you see in the UI)\ndescription\tstring\tReadable description of the attribute\ndata_type\tstring\tType of data stored in the attribute.Possible values: string``integer``float``boolean``date\noptions\tlist\tList of predefined options for attribute value\napi_writable\tboolean\tCan this attribute be updated through API\nui_writable\tboolean\tCan this attribute be updated in the UI\ncustom\tboolean\tSet to true if this is a CDA\narchived\tboolean\tOnly applicable to CDAs\ncreated_at\ttimestamp\tThe time the CDA was created.Only applicable to CDAs.\nupdated_at\ttimestamp\tThe last time the CDA was updated.Only applicable to CDAs\nadmin_id\tstring\tTeammate who created the attribute.Only applicable to CDAs"
  },
  {
    "title": "User Segment/Tag Count Model",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/counts/user-tag-counts/",
    "html": "User Segment/Tag Count Model\n\nThe count of tags and segments includes archived tags and segments.\n\nUser Segment/Tag Count Object\n\nCount Object includes count for users and leads.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nuser\tobject\tContains a field called segment containing segment counts\nuser.segment\tarray\tContains a list of segment counts\nuser.tag\tarray\tContains a list of tag counts\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"tag\": [\n        {\n          \"Independent\": 3\n        }\n    ]\n  }\n}\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"segment\": [\n      {\n        \"Active\": 1\n      },\n      {\n        \"New\": 0\n      },\n      {\n        \"VIP\": 0\n      },\n      {\n        \"Slipping Away\": 0\n      },\n      {\n        \"segment 1\": 1\n      }\n    ]\n  }\n}\n\n# User Tag Count\n$ curl 'https://api.intercom.io/counts?type=user&count=tag' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# User Segment Count\n$ curl 'https://api.intercom.io/counts?type=user&count=segment' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# User Tag Count\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"tag\": [\n        {\n          \"Independent\": 3\n        }\n    ]\n  }\n}\n\n# User Segment Count\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"segment\": [\n      {\n        \"Active\": 1\n      },\n      {\n        \"New\": 0\n      },\n      {\n        \"VIP\": 0\n      },\n      {\n        \"Slipping Away\": 0\n      },\n      {\n        \"segment 1\": 1\n      }\n    ]\n  }\n}\n\nintercom.counts.for_type(type: 'user', count: 'tag')\nintercom.counts.for_type(type: 'user', count: 'segment')\n\n<?php\n// User Tag Count\n$counts = $intercom->counts->getCounts([\"type\" => \"user\", \"count\" => \"tag\"]);\nprint_r($counts);\n\n// Company Segment Count\n$counts = $intercom->counts->getCounts([\"type\" => \"user\", \"count\" => \"segment\"]);\n?>\n\n// User Tag Count\nfinal List<Counts.CountItem> tags = Counts.userTags();\nfor (Counts.CountItem tag : tags) {\n  out.println(tag.getName() + \": \" + tag.getValue());\n}\n\n// User Segment Count\nfinal List<Counts.CountItem> segments = Counts.userSegments();\nfor (Counts.CountItem seg : segments) {\n  out.println(seg.getName() + \": \" + seg.getValue());\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nUser Segment Count\tuser\tsegment\nUser Tag Count\tuser\ttag"
  },
  {
    "title": "Spacer",
    "url": "https://developers.intercom.com/docs/references/canvas-kit/presentationcomponents/spacer/",
    "html": "Spacer\n\nA spacer component is used to create empty space between components.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tspacer\t\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nsize\txs``s``m``l``xl\tNo\tThe amount of space between components.Default is s.\nPreview"
  },
  {
    "title": "Divider",
    "url": "https://developers.intercom.com/docs/references/canvas-kit/presentationcomponents/divider/",
    "html": "Divider\n\nA divider component is used to separate components with a line.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdivider\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "The team model",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/teams/teams-model/",
    "html": "The team model\nExample Team Object\n{\\n    \\\"type\\\": \\\"team\\\",\\n    \\\"id\\\": \\\"814865\\\",\\n    \\\"name\\\": \\\"Example Team\\\",\\n    \\\"admin_ids\\\": [\\n        493881\\n    ]\\n}\n\n\nTeams are groups of admins in Intercom.\n\nTeam Object\nKey\tType\tDescription\ntype\tstring\tValue is team.\nid\tstring\tThe id of the team\nname\tstring\tThe name of the team\nadmin_ids\tlist\tThe list of admin id's that are a part of the team"
  },
  {
    "title": "Visitors",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/visitors/visitors/",
    "html": "Visitors\n\nVisitors are useful for representing logged-out users that didn't interact with the Intercom widget yet. Visitors are not visible in Intercom platform. After specific actions Visitors can be converted to Leads in Intercom.\n\nThe Visitors resource provides methods to fetch, update, convert and delete."
  },
  {
    "title": "Create a note for contact",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/notes/create-note-for-contact/",
    "html": "Create a note for contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/note \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' -d\\n\\n{\\n  \\\"body\\\": \\\"Shiny\\\",\\n  \\\"admin_id\\\": \\\"12345\\\"\\n}\\n\n\nExample Errors\nhttphttp\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Resource Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can remove a note to a single contact.\n\nRequest Path Parameter\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom.\nRequest Body Parameter\nParameter\tType\tRequired?\tDescription\nbody\tString\tYes\tThe text of the note.\nadmin_id\tString\tYes\tThe unique identifier for the admin which is given by Intercom.\nResponse\n\nThis will return a Note model for the note that was added to the contact."
  },
  {
    "title": "Visitor Object",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/visitors/visitor-object/",
    "html": "Visitor Object\n\nA visitor object contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'visitor'\nid\tstring\tThe Intercom defined id representing the Visitor\ncreated_at\ttimestamp\tThe time the Visitor was added to Intercom\nupdated_at\ttimestamp\tThe last time the Visitor was updated\nuser_id\tstring\tAutomatically generated identifier for the Visitor\nname\tstring\tThe name of the Visitor\ncustom_attributes\tobject\tThe custom attributes you have set on the Visitor\nlast_request_at\ttimestamp\tThe time the Lead last recorded making a request\navatar\tobject\tAn avatar object for the Visitor\nunsubscribed_from_emails\tboolean\tWhether the Visitor is unsubscribed from emails\nlast_seen_ip\tnull\tThis will return null as of V1.1 in an effort to remove PII from our API.\nuser_agent_data\tnull\tThis will return null as of V1.1 in an effort to remove PII from our API.\nlocation_data\tobject\tA Location Object relating to the Visitor\nsocial_profiles\tlist\tA list of social profiles associated with the Visitor\nsegments\tlist\tThis will return an empty list of segments as part of our effort to deprecate this attribute on the visitor model for performance and accuracy reasons.\ntags\tlist\tA list of tags associated with the Visitor."
  },
  {
    "title": "Delete a visitor",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/visitors/delete-a-visitor/",
    "html": "Delete a visitor\nExample ID Delete Request\ncurlcurl\n$ curl \\\\\\nhttps://api.intercom.io/visitors/5321a20f72cdbb4192000013 \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"visitor\\\",\\n  \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n  \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  ...\\n}\\n# NB: Full Visitor objects are returned\n"
  },
  {
    "title": "Error Objects",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/errors/error-objects/",
    "html": "Error Objects\nError List Object\n{\n  \"type\": \"error.list\",\n  \"errors\": [\n    {\n      \"code\": \"not_found\",\n      \"message\": \"No such user_id[314159]\",\n      \"field\": \"user_id\"\n    },\n    {\n      \"code\": \"not_found\",\n      \"message\": \"No such email[pi@example.org]\",\n      \"field\": \"email\"\n    }\n  ]\n}\n\n// the JavaScript client doesn't directly expose error data\n\n# the Ruby client doesn't directly expose error data\n\n<?php\n// the PHP client doesn't directly expose error data\n?>\n\ntry {\n  UserCollection uc = User.list();\n} catch(IntercomException  ie) {\n  Error e = ie.getFirstError();\n  log.error(\"{}:{}\", e.getCode(), e.getMessage());\n}\n\n\nThe API will return an Error List for a failed request, which will contain one or more Error objects.\n\nError List Attributes\n\nEach error has the following attributes\n\nField\tDescription\ntype\tThe type is error.list\nerrors\tAn array of one or more error objects\nError Object Attributes\n\nEach Error Object has the following attributes\n\nField\tDescription\ncode\tA string indicating the kind of error, used to further qualify the HTTP response code\nmessage\tOptional. Human readable description of the error\nfield\tOptional. Used to identify a particular field or query parameter that was in error."
  },
  {
    "title": "View a Visitor",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/visitors/view-a-visitor/",
    "html": "View a Visitor\nExample ID Request\n$ curl \\\n-s https://api.intercom.io/visitors/573479f784c5acde6a000575 \\   \n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nor \n\n$ curl \\\n-s https://api.intercom.io/visitors\\?user_id\\=16e690c0-485a-4e87-ae98-a326e788a4f7 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"visitor\",\n  \"id\": \"573479f784c5acde6a000575\",\n  \"user_id\": \"16e690c0-485a-4e87-ae98-a326e788a4f7\",\n  \"email\": \"winstonsmith@truth.org\",\n  \"name\": \"Winston Smith\",\n  ...\n}\n# NB: Full Visitor objects are returned\n\nvisitor = intercom.visitors.find(:id => \"530370b477ad7120001d\")\nvisitor = intercom.visitors.find(:user_id => \"8a88a590-e1c3-41e2-a502-e0649dbf721c\")\n\n\nVisitors can be looked up individually via their id, or with a user_id parameter.\nTo get the visitor user_id from the browser you can use the Intercom JS SDK following method : Intercom('getVisitorId')."
  },
  {
    "title": "Update a Visitor",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/visitors/update-a-visitor/",
    "html": "Update a Visitor\nExample Request\n$ curl https://api.intercom.io/visitors \\\n-XPUT \\\n-H 'Authorization:Bearer <Your access token>'  \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"user_id\": \"124\",\n  \"name\": \"Winston Smith\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 9\n  }\n}'\n\nHTTP/1.1 200 OK\n\n# contact response\n\nvisitor.name = \"Winston Smith\"\nvisitor.custom_attribute[:foo] = 'bar'\nintercom.visitors.save(visitor)\n\n\nSending a PUT request to /visitors and passing identifiers (user_id or id) in the body will result in an update of an existing Visitor.\n\nIt is not possible to uniquely identify a Visitor for an update with an email address. Including an email address in the PUT request will result in converting the Visitor to a Lead."
  },
  {
    "title": "Retrieve a team",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/teams/view-a-team/",
    "html": "Retrieve a team\nExample Request & Response\n$ curl https://api.intercom.io/teams/2744328 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"admin_ids\": [\n        646303,\n        814860\n    ],\n    \"id\": \"2744328\",\n    \"name\": \"the_a_team\",\n    \"type\": \"team\"\n}\n\n\nYou can fetch the details of a single team, containing an array of admins that belong to this team.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier of a given team.\nResponse\n\nThis will return a Team Object."
  },
  {
    "title": "List attached contacts",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/companies/list-company-contacts/",
    "html": "List attached contacts\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/companies/<id>/contacts \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nInvalid starting_after param\nHTTP/1.1 400 BAD REQUEST\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"000nbboasf1qqab6b910\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"client_error\\\",\\n      \\\"message\\\": \\\"Invalid starting_after param. Please try again using a starting_after value from a paginated response\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can fetch a list of all contacts that belong to a company.\n\nResponse\n\nThis will return a paginated list of Contact objects.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - list\ndata\tArray\tAn array containing Contact Objects\ntotal_count\tInteger\tThe total number of contacts\npages\tPagination Object\tThe information needed to paginate through contacts"
  },
  {
    "title": "List Company Users",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/companies/list-company-users/",
    "html": "List Company Users\nExample ID Request\n$ curl https://api.intercom.io/companies/5310dabd598c9a0a7e000005/users \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nintercom.companies.users(company.id)\n\nMap<String, String> params params = Maps.newHashMap();\nparams.put(\"company_id\", \"6\");\nUserCollection users = Company.listUsers(params);\n\nExample Company ID Request\n$ curl https://api.intercom.io/companies?company_id=22&type=user \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"user.list\",\n  \"total_count\": 10,\n  \"users\": [\n    {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ]\n}\n\n# NB: Full User objects are returned\n\nintercom.companies.users(company.company_id)\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"company_id\", \"1\");\nCompany company = Company.find(map);\n\n\nThe users belonging to a company can be listed by sending a GET request to https://api.intercom.io/companies/{id}/users, where {id} is the value of the company's id field.\n\nTo query for a company's users using the company id value you have assigned to the company, send a GET request to https://api.intercom.io/companies, using the parameter {company_id} with value of the company id, and a type field with a value of users.\n\nRequest Parameters\nParameter\tRequired\tDescription\ncompany_id\tyes\tYour company id for the company.\ntype\tyes\tThe value must be user\nReturns\n\nA pageable list of users and leads. Response objects contain type set to user and contact respectively. See the section \"List Users\" and \"List Leads\" for details of the JSON response."
  },
  {
    "title": "Scroll over all companies",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/companies/iterating-over-all-companies/",
    "html": "Scroll over all companies\n\nThe list all companies functionality does not work well for huge datasets, and can result in errors and performance problems when paging deeply. The Scroll API provides an efficient mechanism for iterating over all companies in a dataset.\n\nEach app can only have 1 scroll open at a time. You'll get an error message if you try to have more than one open per app.\nIf the scroll isn't used for 1 minute, it expires and calls with that scroll param will fail\nIf the end of the scroll is reached, \"companies\" will be empty and the scroll parameter will expire\n# Send a GET request to get the first page of companies\n$ curl \\\n'https://api.intercom.io/companies/scroll' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n# To get the next page use the scroll param returned in the response\n$ curl \\\n'https://api.intercom.io/companies/scroll?scroll_param=562bc29f-ea55-4823-aaaf-f3faadceaa59' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"company.list\",\n  \"companies\": [\n    {\n      \"type\": \"company\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ],\n  \"scroll_param\": \"25b649f7-4d33-4ef6-88f5-60e5b8244309\"\n}\n\n# You can use the scroll method to list all your companies\nintercom.companies.scroll.each { |company| puts company.name}\n# Alternatively you can use the scroll.next method to get 100 companies with each request\nresult = intercom.companies.scroll.next\nresult.scroll_param\n=> \"0730e341-63ef-44da-ab9c-9113f886326d\"\nresult = intercom.companies.scroll.next(\"0730e341-63ef-44da-ab9c-9113f886326d\");\n\nSCROLL PARAMETER\n\nYou can get the first page of companies by simply sending a GET request to the scroll endpoint. For subsequent requests you will need to use the scroll parameter from the response.\n\n❗️ Scroll network timeouts\n\nSince scroll is often used on large datasets network errors such as timeouts can be encountered. When this occurs you will need to restart your scroll query as it is not possible to continue from a specific point when using scroll.\n\nWhen this occurs you will see a HTTP 500 error with the following message:\n\"Request failed due to an internal network error. Please restart the scroll operation.\""
  },
  {
    "title": "Detach a contact from a company",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/companies/detach-contact-from-company/",
    "html": "Detach a contact from a company\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<contact_id>/companies/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nhttphtml\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can detach a company from a single contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\ncontact_id\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nid\tString\tYes\tThe unique identifier for the company which is given by Intercom\nResponse\n\nThis will return a Company model for the company that was just detached from the contact."
  },
  {
    "title": "Delete a company",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/companies/delete-a-company/",
    "html": "Delete a company\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/companies/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Company Not Found\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can delete a single company.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the company which is given by Intercom\nResponse\n\nThis will return an object with details on the deleted contact.\n\nAttribute\tType\tDescription\nid\tString\tThe unique identifier for the company which is given by Intercom\nobject\tString\tThe type of object - company\ndeleted\tBoolean\tWhether the company has been deleted - true"
  },
  {
    "title": "List Companies",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/companies/list-companies/",
    "html": "List Companies\nList companies\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/companies \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"company.list\\\",\\n  \\\"total_count\\\": 105,\\n  \\\"companies\\\": [\\n    {\\n      \\\"type\\\": \\\"company\\\",\\n      \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n       ...\\n     },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/companies?per_page=50&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 3\\n  }\\n}\\n\\n# NB: Full company objects are returned\n\n\nYou can fetch a list of companies. The company list is sorted by the last_request_at field and by default is ordered descending, most recently requested first.\n\nNote that the API does not include companies who have no associated users in list responses.\n\nRequest Parameters\n\nYou can optionally request the result page size and which page to fetch as follows -\n\nParameter\tRequired\tDescription\npage\tno\twhat page of results to fetch defaults to first page.\nper_page\tno\thow many results per page defaults to 50.\norder\tno\tasc or desc. Return the companies in ascending or descending order. defaults to desc.\nReturns\n\nA pageable list of companies. The list contains a pages object that indicates if more items exist via the next field, whose value is a URL that can be used to fetch the next page. If the next field is not present, that indicates there are no further items in the list.\n\nWhen using the Companies endpoint and the pages object to iterate through the returned companies, there is a limit of 10,000 Companies that can be returned. If you need to list or iterate on more than 10,000 Companies, please use the Scroll API."
  },
  {
    "title": "List by Tag or Segment",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/companies/list-by-tag-or-segment/",
    "html": "List by Tag or Segment\nExample List by tag request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/companies?tag_id=17 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"company.list\\\",\\n  \\\"total_count\\\": 105,\\n  \\\"companies\\\": [\\n    {\\n      \\\"type\\\": \\\"company\\\",\\n      \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n       ...\\n     },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/companies?tag=14&per_page=50&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 3\\n  }\\n}\\n\\n# NB: Full company objects are returned\n\n\nYou can fetch segmented and tagged companies by querying the companies resource with the segment_id and tag_id parameters (for information on how to tag companies see the section \"Create and update tags\").\n\nNote that you can query by tag or segment but not both in the same request.\n\nRequest Parameters\nParameter\tRequired\tDescription\ntag_id\tone of\tThe id of the tag to filter by.\nsegment_id\tone of\tThe id of the segment to filter by.\nReturns\n\nA pageable list of companies. Like a plain company list, the result contains a pages object that indicates if more companies exist via the next field."
  },
  {
    "title": "Create or update a company",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/companies/create-or-update-company/",
    "html": "Create or update a company\nExample Request & Response\n$ curl https://api.intercom.io/companies \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type:application/json' -d '\n{\n  \"name\": \"Blue Sun\",\n  \"plan\": \"Paid\",\n  \"company_id\": \"6\",\n  \"remote_created_at\": 1394531169,\n  \"size\": 750,\n  \"website\": \"http://www.example.com\",\n  \"industry\": \"Manufacturing\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"team_mates\": 0,\n    \"monthly_spend\": 155.98\n  }\n}'\n\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"company\",\n    \"company_id\": \"6\",\n    \"id\": \"57e0120926806ceca3c13ba8\",\n    \"app_id\": \"pi3243fa\",\n    \"name\": \"Blue Sun\",\n    \"remote_created_at\": 1394531169,\n    \"created_at\": 1474302473,\n    \"updated_at\": 1475659931,\n    \"last_request_at\": 1473419085,\n    \"monthly_spend\": 49,\n    \"session_count\": 0,\n    \"user_count\": 0,\n    \"tags\": {\n        \"type\": \"tag.list\",\n        \"tags\": []\n    },\n    \"segments\": {\n        \"type\": \"segment.list\",\n        \"segments\": [\n            {\n                \"type\": \"segment\",\n                \"id\": \"56cc69cc8618d37b45000009\"\n            }\n        ]\n    },\n    \"plan\": {\n        \"type\": \"plan\",\n        \"id\": \"108609\",\n        \"name\": \"Paid\"\n    },\n    \"custom_attributes\": {\n        \"paid_subscriber\": true,\n        \"team_mates\": 0,\n        \"referral_source\": \"Google\",\n        \"founded\": \"20th Century\",\n        \"monthly_spend\": 155.98,\n        \"remove\": true\n    }\n}\n\nintercom.companies.create(:company_id => 6, :name => \"Blue Sun\", :plan => \"Paid\")\n\n<?php\n$intercom->companies->create([\n    \"name\" => \"Academy\",\n    \"id\" => \"10\"\n])\n?>\n\nimport static io.intercom.api.CustomAttribute.*;\n\nCompany company = new Company()\n  .setName(\"Blue Sun\")\n  .setCompanyID(\"1\")\n  .setPlan(new Company.Plan(\"premium\"))\n  .addCustomAttribute(newIntegerAttribute(\"items\", 246))\n  .addCustomAttribute(CustomAttribute.newStringAttribute(\"bar\", \"fruity\"));\n\ncompany = Company.create(company);\n\ncompany.setName(\"Blue Sun Corporation\");\nCompany.update(company);\n\n\nYou can create or update a company.\n\nCOMPANIES WITH NO USERS\n\nCompanies will be only visible in Intercom when there is at least one associated user.\n\nCompanies are looked up via company_id in a POST request, if not found via company_id, the new company will be created, if found, that company will be updated.\n\nRequest Body Parameters\nArgument\tType\tDescription\nremote_created_at\ttimestamp\tThe time the company was created by you.\ncompany_id\tstring\tThe company id you have defined for the company.\nCan't be updated.\nname\tstring\tThe name of the company.\nmonthly_spend\tnumber\tHow much revenue the company generates for your business. Note that this will truncate floats. i.e. it only allow for whole integers, 155.98 will be truncated to 155. Note that this has an upper limit of 2**31-1 or 2147483647..\nplan\tstring\tThe name of the plan you have associated with the company.\nsize\tnumber\tThe number of employees in this company.\nwebsite\tstring\tThe URL for this company's website. Please note that the value specified here is not validated. Accepts any string.\nindustry\tstring\tThe industry that this company operates in.\ncustom_attributes\tobject\tA hash of key/value pairs containing any other data about the company you want Intercom to store..\nResponse\n\nThis will return the Company model that has been created or updated."
  },
  {
    "title": "Scroll over all companies",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/companies/iterating-over-all-companies/",
    "html": "Scroll over all companies\n\nThe list all companies functionality does not work well for huge datasets, and can result in errors and performance problems when paging deeply. The Scroll API provides an efficient mechanism for iterating over all companies in a dataset.\n\nEach app can only have 1 scroll open at a time. You'll get an error message if you try to have more than one open per app.\nIf the scroll isn't used for 1 minute, it expires and calls with that scroll param will fail\nIf the end of the scroll is reached, \"companies\" will be empty and the scroll parameter will expire\n# Send a GET request to get the first page of companies\n$ curl \\\n'https://api.intercom.io/companies/scroll' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n# To get the next page use the scroll param returned in the response\n$ curl \\\n'https://api.intercom.io/companies/scroll?scroll_param=562bc29f-ea55-4823-aaaf-f3faadceaa59' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"company.list\",\n  \"companies\": [\n    {\n      \"type\": \"company\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ],\n  \"scroll_param\": \"25b649f7-4d33-4ef6-88f5-60e5b8244309\"\n}\n\n# You can use the scroll method to list all your companies\nintercom.companies.scroll.each { |company| puts company.name}\n# Alternatively you can use the scroll.next method to get 100 companies with each request\nresult = intercom.companies.scroll.next\nresult.scroll_param\n=> \"0730e341-63ef-44da-ab9c-9113f886326d\"\nresult = intercom.companies.scroll.next(\"0730e341-63ef-44da-ab9c-9113f886326d\");\n\nSCROLL PARAMETER\n\nYou can get the first page of companies by simply sending a GET request to the scroll endpoint. For subsequent requests you will need to use the scroll parameter from the response.\n\n❗️ Scroll network timeouts\n\nSince scroll is often used on large datasets network errors such as timeouts can be encountered. When this occurs you will need to restart your scroll query as it is not possible to continue from a specific point when using scroll.\n\nWhen this occurs you will see a HTTP 500 error with the following message:\n\"Request failed due to an internal network error. Please restart the scroll operation.\""
  },
  {
    "title": "Delete a Company",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/companies/delete-a-company/",
    "html": "Delete a Company\n\nCurrently, the API does not support deleting a company. The operation may be added in the future."
  },
  {
    "title": "Adding to group conversations as customer",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/conversations/adding-to-group-conversations-as-customer/",
    "html": "Adding to group conversations as customer\nAdding a customer to a group conversation as customer\n$ curl 'https://api.intercom.io/conversations/11055118659/customers' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"intercom_user_id\": \"55c1c78946b0aa9ef45b09ff\",\n  \"customer\":{\n    \"intercom_user_id\": \"58c1c78946a0aa9ef45b098a\"\n  }\n}'\n\nHTTP/1.1 200 OK\n\n{\"customers\":[\n  {\"type\":\"user\",\"id\":\"597f02cb22f4bb37597e0b7d\"}, \n  {\"type\":\"lead\",\"id\":\"58ff3f670f14ab4f1aa83750\"}]\n}\n\n\nCustomers can also be added by other customer that's already part of the conversation.\n\nArguments\nArgument\tRequired\tDescription\nintercom_user_id\tone of\tThe Intercom defined id representing the user (in the URL)\nuser_id\tone of\tThe user id you have defined for the user (or auto defined in the case of leads)\nemail\tone of\tThe email you have defined for the user\ncustomer\tYes\tJSON object describing the customer that you want to add to the conversation."
  },
  {
    "title": "Attach a contact to a company",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/companies/attach-contact-to-company/",
    "html": "Attach a contact to a company\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/companies \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type:application/json' -d '\\n\\n{\\n\\t\\\"id\\\": \\\"56cde0cc3deab1bd8c000100\\\"\\n}\\n\n\nExample Errors\nhttphtml\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can attach a company to a single contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nRequest Body Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the company which is given by Intercom\nResponse\n\nThis will return a Company model for the company that was just attached to the contact."
  },
  {
    "title": "Create or Update Company",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/companies/create-or-update-company/",
    "html": "Create or Update Company\nExample Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/companies \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type:application/json' -d '\\n{\\n  \\\"name\\\": \\\"Blue Sun\\\",\\n  \\\"plan\\\": \\\"Paid\\\",\\n  \\\"company_id\\\": \\\"6\\\",\\n  \\\"remote_created_at\\\": 1394531169,\\n  \\\"size\\\": 750,\\n  \\\"website\\\": \\\"http://www.example.com\\\",\\n  \\\"industry\\\": \\\"Manufacturing\\\",\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"team_mates\\\": 0,\\n    \\\"monthly_spend\\\": 155.98\\n  }\\n}'\n\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"company\\\",\\n    \\\"company_id\\\": \\\"6\\\",\\n    \\\"id\\\": \\\"57e0120926806ceca3c13ba8\\\",\\n    \\\"app_id\\\": \\\"pi3243fa\\\",\\n    \\\"name\\\": \\\"Blue Sun\\\",\\n    \\\"remote_created_at\\\": 1394531169,\\n    \\\"created_at\\\": 1474302473,\\n    \\\"updated_at\\\": 1475659931,\\n    \\\"last_request_at\\\": 1473419085,\\n    \\\"monthly_spend\\\": 49,\\n    \\\"session_count\\\": 0,\\n    \\\"user_count\\\": 0,\\n    \\\"tags\\\": {\\n        \\\"type\\\": \\\"tag.list\\\",\\n        \\\"tags\\\": []\\n    },\\n    \\\"segments\\\": {\\n        \\\"type\\\": \\\"segment.list\\\",\\n        \\\"segments\\\": [\\n            {\\n                \\\"type\\\": \\\"segment\\\",\\n                \\\"id\\\": \\\"56cc69cc8618d37b45000009\\\"\\n            }\\n        ]\\n    },\\n    \\\"plan\\\": {\\n        \\\"type\\\": \\\"plan\\\",\\n        \\\"id\\\": \\\"108609\\\",\\n        \\\"name\\\": \\\"Paid\\\"\\n    },\\n    \\\"custom_attributes\\\": {\\n        \\\"paid_subscriber\\\": true,\\n        \\\"team_mates\\\": 0,\\n        \\\"referral_source\\\": \\\"Google\\\",\\n        \\\"founded\\\": \\\"20th Century\\\",\\n        \\\"monthly_spend\\\": 155.98,\\n        \\\"remove\\\": true\\n    }\\n}\n\n\nCompanies can be created or updated via a POST to https://api.intercom.io/companies, which accepts a JSON object describing the company.\n\nCOMPANIES WITH NO USERS\n\nIt is important to note that companies will be only visible in Intercom when there is at least one associated user. Check the Companies and Users section for more information\n\nCompanies are looked up via company_id, if not found via company_id, the new company will be created, if found, that company will be updated.\n\nNote that the company_id field itself cannot be updated through the API.\n\nCompanies may also be created or updated via a User request - see the section \"Create or Update User\".\n\nAttributes\n\nThe table below shows the fields you can create or update for a company -\n\nAttribute\tType\tDescription\nremote_created_at\ttimestamp\tThe time the company was created by you\ncompany_id\tstring\tThe company id you have defined for the company\nname\tstring\tThe name of the company\nmonthly_spend\tnumber\tHow much revenue the company generates for your business. Note that this will truncate floats. i.e. it only allow for whole integers, 155.98 will be truncated to 155. Note that this has an upper limit of 2**31-1 or 2147483647.\nplan\tstring\tThe name of the plan you have associated with the company\nsize\tnumber\tThe number of employees in this company\nwebsite\tstring\tThe URL for this company's website. Please note that the value specified here is not validated. Accepts any string.\nindustry\tstring\tThe industry that this company operates in\ncustom_attributes\tobject\tA hash of key/value pairs containing any other data about the company you want Intercom to store.\nCustom Attributes\n\nThe custom_attributes object allows you to send any information you wish about a company with the following restrictions -\n\nField names must not contain Periods (.) or Dollar ($) characters\nField names must be no longer than 190 characters.\nField values must be JSON Strings, Numbers or Booleans - Objects and Arrays will be rejected.\nString field values must be no longer than 255 characters.\nMaximum of 100 fields.\nSession Count\n\nA company's session count is tied to users' session count whilst in the context of that company. So, to update a company session count,\nupdate the user with that company and increment the user's session.\n\nReturns\n\nThe created or updated company object.\n\nNew company objects will be provided with an id field - this value cannot be created or edited by clients."
  },
  {
    "title": "Pagination",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/common-structures/pagination/",
    "html": "Pagination\n\nSome list resources in the API are paginated by default to allow clients to traverse data over multiple requests. Their responses may contain a pages object that contains pagination links a client can use to traverse the data without having to construct a query. The link relations for the pages field are as follows -\n\nParameter\tDescription\nnext\tA link to the next page of results. A response that does not contain a next link does not have further data to fetch.\nprev\tA link to the previous page of results.\nfirst\tA link to the first page of results.\nlast\tA link to the last page of results."
  },
  {
    "title": "Use of HTTP",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/common-structures/use-of-http/",
    "html": "Use of HTTP\n\nRequest methods are used in accordance with HTTP -\n\nGET is used to access resources and perform queries. The API does not allow modifications (creates, updates, deletes) to occur via GET.\nPOST is used to create or update resources. The preferred model for creation is to post JSON to a 'collections' resource - for example the collections resource for users is https://api.intercom.io/users. PATCH is not currently used by the API.\nDELETE is used to delete resources.\n\nResponses use standard HTTP codes. Where there are client or server errors, a list of of one or more errors in JSON format is returned in the body - see Error Objects for more details.\n\nThe API may send cache directives where suitable, notably the ETag, Last-Modified and If-Modified-Since headers.\n\nThe Accept header must be used by a client used to indicate a preferred response for GET/HEAD requests. Requests without an Accept header of application/json may be rejected with a client error of 404 or 406. The Content-Type header should be used by clients to indicate the submitted format for POST/PUT requests."
  },
  {
    "title": "Identifiers and URLs",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/common-structures/identifiers-and-urls/",
    "html": "Identifiers and URLs\n\nAll objects in the API have an id field indicating their logical identifier. Some objects may optionally also have a self field that indicates a URL or canonical address for the object.\n\nParameter\tDescription\nid\tA string that identifies the object within the API. The id field will not be larger than 128 characters (in SQL it corresponds to a varchar(128)).\nself\tA URL that addresses the object within the API. The self field will not be larger than 255 characters (in SQL it corresponds to a varchar(255)).\n\nThese fields must always be treated as opaque strings - no guarantees are made about the internal structure of the id or self fields for an object.\n\nThe id field is always defined by the API server and is guaranteed to be unique relative to the type field - this means no two user objects will have the same id field, but a user and a company may have the same value for their id fields. . Some object types (such as User), also support client defined identifiers.\n\nThe company and user objects deserve special mention when it comes to identity for two reasons -\n\nThey allow you send your own external identifiers - email and user_id for users and company_id for companies.\nThe user id field is in some cases, aliased to intercom_user_id. This is done to distinguish it from other identifiers in the API and to avoid confusion as to which object type an id denotes."
  },
  {
    "title": "Webhook Models",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/webhooks/webhooks/webhook-models-1/",
    "html": "Webhook Models\nWebhook Topics\n\nThe following topics are available and you can be notified when an action relating to that topic occurs. You just need to tell us where to send the notification. The 'Item Type' column shows the API type that will be sent as the data of the notification.\n\nTopic\tItem Type\tDescription\nconversation.user.created\tConversation\tSubscribe to user/lead initiated conversations\nconversation.user.replied\tConversation\tSubscribe to contact user/lead conversation replies\nconversation.admin.replied\tConversation\tSubscribe to admin conversation replies\nconversation.admin.single.created\tConversation\tSubscribe to admin initiated 1:1 conversations\nconversation.admin.assigned\tConversation\tSubscribe to admin conversation assignments\nconversation.admin.noted\tConversation\tSubscribe to admin conversation notes\nconversation.admin.closed\tConversation\tSubscribe to admin conversation closes\nconversation.admin.opened\tConversation\tSubscribe to admin conversation opens\nconversation.admin.snoozed\tConversation\tSubscribe to admin conversation snoozes\nconversation.admin.unsnoozed\tConversation\tSubscribe to admin conversation unsnoozes\nconversation_part.tag.created\tConversation\tSubscribe to conversation parts being tagged\nconversation_part.redacted\tConversation\tSubscribe to conversation parts being deleted\nconversation.rating.added\tConversation\tSubscribe to conversations getting a rating\nconversation.deleted\tConversation\tSubscribe to conversation deleted\nuser.created\tUser\tSubscribe to user creations\nuser.deleted\tUser\tSubscribe to user deletions\nuser.unsubscribed\tUser\tSubscribe to user unsubscriptions from email\nuser.email.updated\tUser\tSubscribe to user email address being updated\nuser.tag.created\tUserTag\tSubscribe to users being tagged\nuser.tag.deleted\tUserTag\tSubscribe to users being untagged\ncontact.created\tLead\tSubscribe to lead creations\ncontact.signed_up\tLead\tSubscribe to leads converting to users\ncontact.added_email\tLead\tSubscribe to emails being added to leads\ncontact.tag.created\tContactTag\tSubscribe to leads being tagged\ncontact.tag.deleted\tContactTag\tSubscribe to leads being untagged\nvisitor.signed_up\tVisitor\tSubscribe to visitors converting to users\ncompany.created\tCompany\tSubscribe to company creations\nevent.created\tEvent\tSubscribe to events\nping\tPing\tSent when a post to the subscription's ping resource is received, or periodically by Intercom. Ping is always subscribed to.\nWebhooks and Permissions\n\nEach webhook topic is associated with one or more permission scopes. If you would like to setup a webhook for a particular topic then you will need to select the appropriate permission scope to be able to request a notification for that topic.\n\nMULTIPLE PERMISSIONS\n\nSome topic are associated with multiple permissions. In these cases you don't need to select all of these permissions to subscribe to that topic.\n\nWebhook topic\tWorks with permissions\tGroups\nconversation_part.tag.created\tRead conversations\tConversation data\nconversation_part.redacted\tRead conversations\tConversation data\nconversation.rating.added\tRead conversations\tConversation data\nconversation.admin.assigned\tRead conversations\tConversation data\nconversation.admin.closed\tRead conversations\tConversation data\nconversation.admin.noted\tRead conversations\tConversation data\nconversation.admin.opened\tRead conversations\tConversation data\nconversation.admin.replied\tRead conversations\tConversation data\nconversation.admin.single. created\tRead conversations\tConversation data\nconversation.admin.snoozed\tRead conversations\tConversation data\nconversation.admin.unsnoozed\tRead conversations\tConversation data\nconversation.user.created\tRead conversations\tConversation data\nconversation.user.replied\tRead conversations\tConversation data\nconversation.deleted\tRead conversations\tConversation data\ncontact.added_email\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.email.updated\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.unsubscribed\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nvisitor.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nevent.created\tRead events\tCustomer event data\ncompany.created\tRead users and companies, Read one user and one company\tCompany data\nWebhook Notification Object\n\nA notification object contains the following fields:\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'notification_event'\nid\tstring\tThe Intercom defined id representing the notification.\nself\tstring\tThe Intercom defined URL for the subscription. Optional.\ncreated_at\ttimestamp\tThe timestamp the notification was created.\ntopic\tstring\tCorresponds to a topic.\ndelivery_attempts\tnumber\tThe number of times this notification has been attempted.\nfirst_sent_at\ttimestamp\tThe first time the delivery was attempted.\ndata\tobject\tA container for the data associated with the notification.\ndata.item\tobject\tThe data associated with the notification, which will have a 'type' field.\n\nThe contents of data.item object will be defined according to its type field. In the example to the right, the type value of company indicates a company object.\n\n{\n  \"type\": \"notification_event\",\n  \"topic\": \"company.created\",\n  \"id\": \"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b3\",\n  \"app_id\" : \"a86dr8yl\",\n  \"created_at\": 1392731331,\n  \"delivery_attempts\": 1,\n  \"first_sent_at\": 1392731392,\n  \"data\": {\n    \"item\": {\n      \"type\": \"company\",\n      \"id\": \"531ee472cce572a6ec000006\",\n      \"name\": \"Blue Sun\",\n      \"company_id\": \"6\",\n      \"remote_created_at\": 1394531169,\n      \"created_at\": 1394533506,\n      \"updated_at\": 1396874658,\n      \"custom_attributes\": {\n      }\n    }\n  }\n}\n\nHandling Webhook Notifications\n\nWhen you setup a subscription you will receive notifications on your chosen topics. How you handle those notifications, i.e. the HTTP status code returned, will determine the subsequent state of that subscription.\n\nResponse Code\tDescription\tAction\n2xx\tSuccess\tThe webhook was successfully delivered.\n410\tGone\tWhen a 410 is received, we assume the resource is no longer available. We will disable the subscription and no more notifications will be sent.\n429\tToo many requests\tWhen a 429 is received, all notifications from that subscription will be throttled. Depending on the rate of delivery, this delay can be between 1 minute to 2 hours. If 429s continue and any notification is delayed for > 2 hours then we will drop that notification.\n4xx (excl. 429) 5xx\tClient or service errors\tWe will retry after 1 minute for all other errors. If the 2nd retry fails then we mark the notification delivery as failed.\nTIMEOUT\n\nYou have 5 seconds to respond to a notification. If you don't send a response inside that time, the notification is treated as failed and will be retried only once after 1 minute.\n\nSigned Notifications\n\nEach webhook notification is signed by Intercom via an X-Hub-Signature header. We do this so that you can verify the notification came from Intercom by decoding the signature.\n\nThe value of this X-Hub-Signature header is computed by creating a signature using the body of the JSON request and your app's client_secret value, which you can find on the Basic Info page of your app.\n\nThe signature is the hexadecimal (40-byte) representation of a SHA-1 signature computed using the HMAC algorithm as defined in RFC2104.\n\nThe X-Hub-Signature header value starts with the string sha1= followed by the signature.\n\nPOST https://example.org/hooks\nUser-Agent: intercom-parrot-service-client/1.0\nX-Hub-Signature: sha1=21ff2e149e0fdcac6f947740f6177f6434bda921\nAccept: application/json\nContent-Type: application/json\n\n{\n  \"type\" : \"notification_event\",\n  \"id\" : \"notif_78c122d0-23ba-11e4-9464-79b01267cc2e\",\n  \"topic\" : \"user.created\",\n  \"app_id\" : \"a86dr8yl\",\n  \"data\" : {\n    \"type\" : \"notification_event_data\",\n    \"item\" : {\n      \"type\" : \"user\",\n      \"id\" : \"530370b477ad7120001d\",\n      \"user_id\" : \"25\",\n      \"name\" : \"Hoban Washburne\",\n      \"unsubscribed_from_emails\" : false,\n      \"custom_attributes\" : {}\n    }\n  }\n}\n\nContact Tag Model for Webhooks\n\nThe Contact Tag model is only returned for webhooks. It is not used with the Lead (i.e. contact) or Tag endpoints themselves. You can see an example object below:\n\nExample Contact Tag Model in Webhooks\n{  \\\"type\\\": \\\"contact_tag\\\",  \\\"created_at\\\": 1392731331,  \\\"tag\\\" : {      \\\"id\\\": \\\"1287\\\",      \\\"name\\\": \\\"independent\\\",      \\\"type\\\": \\\"tag\\\"    },  \\\"contact\\\" : {      \\\"type\\\": \\\"contact\\\",      \\\"id\\\": \\\"1287ab1287fefe\\\",      \\\"user_id\\\": \\\"12\\\"  }}\n\n\nA contact tag is composed from the existing contact and tag JSON and is sent when contacts are tagged and untagged via the contact.tag.created and contact.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'contact_tag'.\ncreated_at\ttimestamp\tThe time the contact tag object was created.\ntag\tTag\tThe tag that was added or removed.\ncontact\tcontact\tThe contact that was tagged or untagged.\nUser Tag Model for Webhooks\n\nThe User Tag model is only returned for webhooks. It is not used with the User or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"user_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"17513\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"user\" : {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n      \"user_id\": \"25\"\n  }\n}\n\n\nA user tag is composed from the existing user and tag JSON and is sent when users are tagged and untagged via the user.tag.created and user.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user_tag'.\ncreated_at\ttimestamp\tThe time the user tag object was created.\ntag\tTag\tThe tag that was added or removed.\nuser\tUser\tThe user that was tagged or untagged."
  },
  {
    "title": "Company Model",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/companies/company-model/",
    "html": "Company Model\nExample Company Object\n{\\n  \\\"type\\\": \\\"company\\\",\\n  \\\"id\\\": \\\"531ee472cce572a6ec000006\\\",\\n  \\\"name\\\": \\\"Blue Sun\\\",\\n  \\\"plan\\\": \\\"plan1\\\",\\n  \\\"company_id\\\": \\\"6\\\",\\n  \\\"remote_created_at\\\": 1394531169,\\n  \\\"created_at\\\": 1394533506,\\n  \\\"updated_at\\\": 1396874658,\\n  \\\"size\\\": 85,\\n  \\\"website\\\": \\\"http://www.example.com\\\",\\n  \\\"industry\\\": \\\"Manufacturing\\\",\\n  \\\"monthly_spend\\\": 49,\\n  \\\"session_count\\\": 26,\\n  \\\"user_count\\\": 10,\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"team_mates\\\": 0\\n  }\\n}\n\nExample Company List\n{\\n  \\\"type\\\": \\\"company.list\\\",\\n  \\\"total_count\\\": 1,\\n  \\\"companies\\\": [\\n    {\\n      \\\"type\\\": \\\"company\\\",\\n      \\\"id\\\": \\\"531ee472cce572a6ec000006\\\",\\n      \\\"name\\\": \\\"Blue Sun\\\",\\n      \\\"plan\\\": \\\"plan1\\\",\\n      \\\"company_id\\\": \\\"6\\\",\\n      \\\"remote_created_at\\\": 1394531169,\\n      \\\"created_at\\\": 1394533506,\\n      \\\"updated_at\\\": 1396874658,\\n      \\\"size\\\": 85,\\n      \\\"website\\\": \\\"http://www.example.com\\\",\\n      \\\"industry\\\": \\\"Manufacturing\\\",\\n      \\\"monthly_spend\\\": 49,\\n      \\\"session_count\\\": 26,\\n      \\\"user_count\\\": 10,\\n      \\\"custom_attributes\\\": {\\n        \\\"paid_subscriber\\\" : true,\\n        \\\"team_mates\\\": 0\\n      }\\n    }\\n  ],\\n  \\\"pages\\\": {\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 1\\n  }\\n}\n\nCompany Object\n\nA company object contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'company'\nid\tstring\tThe Intercom defined id representing the company\ncreated_at\ttimestamp\tThe time the company was added to Intercom\nremote_created_at\ttimestamp\tThe time the company was created by you\nupdated_at\ttimestamp\tThe last time the company was updated\nlast_request_at\ttimestamp\tThe time the company last recorded making a request\ncompany_id\tstring\tThe company id you have defined for the company\nname\tstring\tThe name of the company\ncustom_attributes\tobject\tThe custom attributes you have set on the company\nsession_count\tinteger\tHow many sessions the company has recorded\nmonthly_spend\tnumber\tHow much revenue the company generates for your business\nuser_count\tnumber\tThe number of users in the company\nplan*\tstring\tThe name of the plan you have associated with the company.\nsize\tinteger\tThe number of employees in the company\nwebsite\tstring\tThe URL for the company website\nindustry\tstring\tThe industry that the company operates in\n\n* Note that plan is set as a string but returned as an object as described below. You can only set the name of a plan using the plan string.\n\nAttribute\tType\tDescription\ntype\tstring\tWill always be of type 'plan'\nid\tstring\tThe plan ID\nname\tstring\tThe name of the plan, note that this is the only field that can be set via the API.\n\nAny integer values in the user model are limited to the int32 range -2^31 to 2^31 -1\n\nCompany List\n\nA company list contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'company.list'\ntotal_count\tinteger\tThe number of companies for this App\ncompanies\tarray\tA list of companies\npages\tobject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch"
  },
  {
    "title": "Encoding",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/common-structures/encoding/",
    "html": "Encoding\n\nData is encoded as defined by JSON in RFC4627. The default encoding for APIs is UTF-8. Certain characters, such as Emojji may be handled as surrogate unicode pairs (see section '2.5. Strings' of RFC4627).\n\nSome query parameters may need to be url encoded when sending - for example, the email parameter value used to query users should be encoded.\n\nHTML ENCODING\n\nIt should be noted that the following identifiers are encoded to protect from potential cross-site scripting attacks: 'name', 'user_id', 'company_id' and 'email'. As a result you may see these identifiers in their encoded format when you retrieve them via the API. \\nNote that the characters we encode are double quote, single quote, ampersand, less than and greater than symbols i.e \" ' & < >\n\nHTML Encoding example\nLet's say you have a company name like \\\"X&Y's\\\". \\nThen when you retrieve it from the API it will look like this:\\n\\\"X&amp;Y&#39;s\\\"\n"
  },
  {
    "title": "Companies",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/companies/companies/",
    "html": "Companies\n\nCompanies allow you to represent commercial organizations using your product.\n\nEach company will have its own description and be associated with users. You can create and update companies and add custom attributes describing them. Companies can be viewed individually or as a list, and can be queried using tags or segments.\n\nCompanies will not appear within Intercom until users have been added or associated with a company."
  },
  {
    "title": "Object Model",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/common-structures/object-model/",
    "html": "Object Model\nCommon Fields and Metadata\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"id\\\": \\\"456456456456\\\",\\n  \\\"self\\\": \\\"https://api.intercom.io/users/456456456456\\\",\\n  \\\"created_at\\\": 1392241887,\\n  \\\"custom_attributes\\\": {\\n    \\\"note\\\": \\\"some extra information\\\"\\n  }\\n}\n\nCommon Fields\n\nAPI objects have a type field indicating their object type. Each object in the API may be given an identifier, indicated via its id field, and will typically be addressable via a URI. Many objects will also have a created_at field indicating the object's creation date as a UTC Unix timestamp.\n\nDates and Timestamps\n\nAll temporal fields in the API are encoded as Unix timestamps and are by definition always treated as UTC. The most common time fields in the API are created_at and updated_at.\n\nParameter\tDescription\ncreated_at\tThe time the object was created. In most, but not all cases, this is the time the object was created according to the API server.\nupdated_at\tThe time the object was last updated according to the API server.\nOptional Fields\n\nUnpopulated optional data is returned as follows -\n\nNumber, String and Boolean types may be returned as having null values.\nArrays and Objects may be returned as empty ([] {})\n\nIn general clients should be able to handle null and empty fields.\n\nMetadata and Custom Attributes\n\nSome object types, such as Events, Users and Companies, have a metadata or custom_attributes field that allows clients to set custom-defined data about an object."
  },
  {
    "title": "View User Event Summaries",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/data-events/view-user-events-summaries/",
    "html": "View User Event Summaries\nGet summary count of user events\ncurlcurl\n$ curl 'https://api.intercom.io/events?type=user&user_id=314159&summary=true' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\n{\\n    \\\"type\\\": \\\"event.summary\\\",\\n    \\\"email\\\": \\\"test-user@example.com\\\",\\n    \\\"intercom_user_id\\\": \\\"56e1e5d4a40df1cc57000101\\\",\\n    \\\"user_id\\\": \\\"314159\\\",\\n    \\\"events\\\": [\\n        {\\n            \\\"name\\\": \\\"updated-profile\\\",\\n            \\\"first\\\": \\\"2016-03-18T10:05:15.000Z\\\",\\n            \\\"last\\\": \\\"2016-03-18T13:28:38.000Z\\\",\\n            \\\"count\\\": 5,\\n            \\\"description\\\": null\\n        },    \\n        {\\n            \\\"name\\\": \\\"purchased-item\\\",\\n            \\\"first\\\": \\\"2016-09-30T11:39:06.000Z\\\",\\n            \\\"last\\\": \\\"2016-09-30T11:39:06.000Z\\\",\\n            \\\"count\\\": 4,\\n            \\\"description\\\": null\\n        },\\n        {\\n            \\\"name\\\": \\\"subscribed-for-demo\\\",\\n            \\\"first\\\": \\\"2016-11-24T12:26:34.000Z\\\",\\n            \\\"last\\\": \\\"2016-11-24T12:26:34.000Z\\\",\\n            \\\"count\\\": 2,\\n            \\\"description\\\": null\\n        }\\n    ]\\n}\n\n\nIf you simply want to get a count of the number of different events associated with a user then you can use the 'summary=true' parameter of the events endpoint. This means you do not receive the full list of all users events and just the counts of the different events per user."
  },
  {
    "title": "Context",
    "url": "https://developers.intercom.com/docs/references/1.3/canvas-kit/requestobjects/context/",
    "html": "Context\nDescription\n\nThe context object provides additional details on where the app has been added (or is currently being used), what page the app is being used on, and information on the Messenger settings. This is in order for you give a fully customised experience based on the customers use case.\n\nIf the location is conversation then you will also be given a conversation_id. If you need to use details about the conversation, then you have to use the conversation_id to make a call to our Conversations API and retrieve the conversation object.\n\nAttributes\nKey\tType\tLocation\tDescription\nconversation_id\tinteger\tConversation\tThe id of the conversation where the app is added or being used.\nlocation\tstring\tConversation, Messenger Home, Message, Operator\tWhere the app is added or the action took place. Can be either 'conversation', 'home', 'message', or 'operator'.\nlocale\tstring\tConversation, Messenger Home, Message, Operator\tThe default end-user language of the Messenger. Use to localise Messenger App content.\nmessenger_action_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers action colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nmessenger_background_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers background colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nreferrer\tstring\tConversation, Messenger Home, Message, Operator\tThe current page URL where the app is being used.\nExample Objects\n{\n  conversation_id: 4294967297,\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n\n{\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n"
  },
  {
    "title": "Customer",
    "url": "https://developers.intercom.com/docs/references/1.3/canvas-kit/requestobjects/customer/",
    "html": "Customer\nDescription\n\nThe customer object provides information on the Intercom customer. You can see more about this on the User Model page of our API Reference.\n\nExample Object\n{\n  customer: {\n    \"type\": \"user\",\n    \"id\": \"530370b477ad7120001d\",\n    \"user_id\": \"25\",\n    \"email\": \"wash@serenity.io\",\n    \"phone\": \"+1123456789\",\n    \"name\": \"Hoban Washburne\",\n    \"updated_at\": 1392734388,\n    \"unsubscribed_from_emails\": false,\n    \"last_request_at\": 1397574667,\n    \"signed_up_at\": 1392731331,\n    \"created_at\": 1392734388,\n    \"session_count\": 179,\n    \"pseudonym\": null,\n    \"anonymous\": false,\n    \"referrer\": \"https://example.org\",\n    \"utm_campaign\": null,\n    \"utm_content\": null,\n    \"utm_medium\": null,\n    \"utm_source\": null,\n    \"utm_term\": null,\n    \"custom_attributes\": {\n      \"paid_subscriber\" : true,\n      \"monthly_spend\": 155.5,\n      \"team_mates\": 1\n    },\n    \"avatar\": {\n      \"type\":\"avatar\",\n      \"image_url\": \"https://example.org/128Wash.jpg\"\n    },\n    \"location_data\": {\n      \"type\": \"location_data\",\n      \"city_name\": \"Dublin\",\n      \"continent_code\": \"EU\",\n      \"country_code\": \"IRL\",\n      \"country_name\": \"Ireland\",\n      \"postal_code\": null,\n      \"region_name\": \"Dublin\",\n      \"timezone\": \"Europe/Dublin\"\n    },\n    \"social_profiles\": {\n      \"type\":\"social_profile.list\",\n      \"social_profiles\": [\n        {\n          \"name\": \"Twitter\",\n          \"id\": \"1235d3213\",\n          \"username\": \"th1sland\",\n          \"url\": \"http://twitter.com/th1sland\"\n        }\n      ]\n    },\n    \"companies\": {\n      \"type\": \"company.list\",\n      \"companies\": [\n        {\n          \"id\" : \"530370b477ad7120001e\"\n        }\n      ]\n    },\n    \"segments\": {\n      \"type\": \"segment.list\",\n      \"segments\": [\n        {\n          \"id\" : \"5310d8e7598c9a0b24000002\"\n        }\n      ]\n    },\n    \"tags\": {\n      \"type\": \"tag.list\",\n      \"tags\": [\n        {\n          \"id\": \"202\"\n        }\n      ]\n    }\n  }\n}\n"
  },
  {
    "title": "Stored Data",
    "url": "https://developers.intercom.com/docs/references/2.4/canvas-kit/responseobjects/stored-data/",
    "html": "Stored Data\nDescription\n\nA canvas object may optionally contain a stored_data object. This is where you can add key-value pairs of data that you want to be sent in whatever the next request is.\n\nFor example, the flow of your app might have multiple canvases with data being inputted on each one. You may want to have all this data available to use at the end of the flow for the final canvas. You can therefore put all this data in the stored_data object so it's sent in subsequent requests and is available at the end.\n\nExample Object\nstored_data: {\"key\": \"value\"} //Can be more than one pair\n"
  },
  {
    "title": "Results",
    "url": "https://developers.intercom.com/docs/references/1.3/canvas-kit/responseobjects/results/",
    "html": "Results\nDescription\n\nThe results object should be sent when you want to end configuration of the app and trigger the Initialize request to be sent. You provide the key-value pairs of data you want access to and we will send these in the Initialize request within a card_creation_options object.\n\nExample Object\nresults: { \"key\": \"value\" } // Can be more than one pair\n"
  },
  {
    "title": "List Company Users",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/companies/list-company-users/",
    "html": "List Company Users\nExample ID Request\n$ curl https://api.intercom.io/companies/5310dabd598c9a0a7e000005/users \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nintercom.companies.users(company.id)\n\nMap<String, String> params params = Maps.newHashMap();\nparams.put(\"company_id\", \"6\");\nUserCollection users = Company.listUsers(params);\n\nExample Company ID Request\n$ curl https://api.intercom.io/companies?company_id=22&type=user \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"user.list\",\n  \"total_count\": 10,\n  \"users\": [\n    {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ]\n}\n\n# NB: Full User objects are returned\n\nintercom.companies.users(company.company_id)\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"company_id\", \"1\");\nCompany company = Company.find(map);\n\n\nThe users belonging to a company can be listed by sending a GET request to https://api.intercom.io/companies/{id}/users, where {id} is the value of the company's id field.\n\nTo query for a company's users using the company id value you have assigned to the company, send a GET request to https://api.intercom.io/companies, using the parameter {company_id} with value of the company id, and a type field with a value of users.\n\nRequest Parameters\nParameter\tRequired\tDescription\ncompany_id\tyes\tYour company id for the company.\ntype\tyes\tThe value must be user\nReturns\n\nA pageable list of users and leads. Response objects contain type set to user and contact respectively. See the section \"List Users\" and \"List Leads\" for details of the JSON response."
  },
  {
    "title": "Submitting Events",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/data-events/submitting-events/",
    "html": "Submitting Events\nSubmit an Event\n$ curl https://api.intercom.io/events \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Content-Type: application/json\" -d'\n{\n  \"event_name\" : \"invited-friend\",\n  \"created_at\": 1391691571,\n  \"user_id\" : \"314159\"\n}'\n\nHTTP/1.1 202 Accepted\n\nIntercom('trackEvent', 'invited-friend');\n\nintercom.events.create(event_name: \"invited-friend\", email: user.email, created_at: 1391691571)\n\n<?php\n$intercom->events->create([\n    \"event_name\" => \"php-test\",\n    \"created_at\" => 1500907513,\n    \"user_id\" => \"1276\"\n]);\n?>\n\nEvent event = new Event()\n  .setEventName(\"invited-friend\")\n  .setCreatedAt(1234L)\n  .setUserID(\"314159\");\n\nEvent.create(event);\n\n\nYou will need an Access Token that has write permissions to send Events. Once you have a key you can submit events via POST to the Events resource, which is located at https://api.intercom.io/events, or you can send events using one of the client libraries. When working with the HTTP API directly a client should send the event with a Content-Type of application/json.\n\nWhen using the JavaScript API, adding the code to your app makes the Events API available. Once added, you can submit an event using the trackEvent method. This will associate the event with the Lead or currently logged-in user or logged-out visitor/lead and send it to Intercom. The final parameter is a map that can be used to send optional metadata about the event.\n\nWith the Ruby client you pass a hash describing the event to Intercom::Event.create, or call the track_user method directly on the current user object (e.g. user.track_event).\n\nLEAD EVENTS\n\nWhen submitting events for Leads, you will need to specify the Lead's id.\n\nHTTP API Responses\nSuccessful responses to submitted events return 202 Accepted with an empty body.\nUnauthorised access will be rejected with a 401 Unauthorized or 403 Forbidden response code.\nEvents sent about users that cannot be found will return a 404 Not Found.\nServer errors will return a 500 response code and may contain an error message in the body. * Submitting a new event while your app is at the maximum default event limit of 120 events will result in a 422 Unprocessable Entity error."
  },
  {
    "title": "List Events",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/data-events/list-user-events/",
    "html": "List Events\n\nPlease note that you can only 'list' events that are less than 90 days old. Event counts and summaries will still include your events older than 90 days but you cannot 'list' these events individually if they are older than 90 days\n\nList all customer events\ncurlcurlrubyphpjava\n$ curl 'https://api.intercom.io/events?type=user&user_id=314159' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"event.list\\\",\\n  \\\"events\\\": [\\n      {\\n        \\\"event_name\\\" : \\\"ordered-item\\\",\\n        \\\"created_at\\\": 1391691571,\\n        \\\"user_id\\\" : \\\"314159\\\"\\n      },\\n      {\\n        \\\"event_name\\\" : \\\"invited-friend\\\",\\n        \\\"created_at\\\": 1389913941,\\n        \\\"user_id\\\" : \\\"314159\\\",\\n        \\\"metadata\\\": {\\n         \\\"invitee_email\\\": \\\"pi@example.org\\\",\\n         \\\"invite_code\\\": \\\"ADDAFRIEND\\\"\\n         }\\n      },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/events?type=user&intercom_user_id=55a3b&before=144474756550\\\"\\n  }\\n}\\n\\n# NB: Full event objects are returned\n\n\nThe events belonging to a customer can be listed by sending a GET request to https://api.intercom.io/events with a user or lead identifier along with a type parameter. The identifier parameter can be one of user_id, email or intercom_user_id. The type parameter value must be user.\n\nhttps://api.intercom.io/events?type=user&user_id={user_id}\nhttps://api.intercom.io/events?type=user&email={email}\nhttps://api.intercom.io/events?type=user&intercom_user_id={id} (this call can be used to list leads)\n\nThe email parameter value should be url encoded when sending.\n\nYou can optionally define the result page size as well with the per_page parameter.\n\nRequest Parameters\nParameter\tRequired\tDescription\ntype\tyes\tThe value must be user\nuser_id\tno\tThe user id you have defined for the user\nemail\tno\tThe email you have defined for the user\nintercom_user_id\tno\tThe Intercom defined id for the user\nper_page\tno\tHow many results to return per page defaults to 50.\nsummary\tno\tBoolean value. When set to true, event counts are returned grouped by event name.\nReturns\n\nA pageable list of events. The event list contains a pages object that indicates if more events exist for the customer via the next field, whose value is a URL that can be used to fetch the next page. If the next field is not present, that indicates there are no further events for the user. Clients should note that the parameters in the returned link are not assured to be the same as those sent in the request.\n\nThe event list is sorted by the created_at field and ordered descending, most recently created first.\n\nAs well as the fields that were supplied when the event was posted to Intercom (see Event model for details) the event payload will also contain an id field that uniquely identifies the event and may optionally contain an intercom_user_id containing the Intercom defined id representing the user.\n\nYou can use the API to get counts of users, leads and companies filtered by certain criteria.\n\nCounts are a good way to periodically obtain data for the purposes of tracking rates of change in user and company data."
  },
  {
    "title": "Event Metadata Types",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/data-events/event-metadata-types/",
    "html": "Event Metadata Types\nEvent Metadata Types\n$ curl https://api.intercom.io/events \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Content-Type: application/json\" -d'\n{\n  \"event_name\" : \"placed-order\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"314159\",\n  \"metadata\": {\n    \"order_date\": 1392036272,\n    \"stripe_invoice\": \"inv_3434343434\",\n    \"order_number\": {\n      \"value\":\"3434-3434\",\n      \"url\": \"https://example.org/orders/3434-3434\"\n    },\n    \"price\": {\n      \"currency\":\"usd\",\n      \"amount\": 2999\n    }\n  }\n}'\n\nvar more_metadata = {\n  order_date: 1392036272,\n  stripe_invoice: 'inv_3434343434',\n  order_number: {\n    value: \"3434-3434\",\n    url: 'https://example.org/orders/3434-3434'\n  },\n  price: {\n    currency: 'usd',\n    amount: 2999\n  }\n};\nIntercom('trackEvent', 'placed-order', more_metadata);\n\nmore_metadata = {\n  :order_date => Time.now.to_i,\n  :stripe_invoice => 'inv_3434343434',\n  :order_number => {\n    :value => '3434-3434',\n    :url => 'https://example.org/orders/3434-3434'\n  },\n  price: {\n    :currency => 'usd',\n    :amount => 2999\n  }\n}\nintercom.events.create({\n  :event_name => \"placed-order\",\n  :email => current_user.email,\n  :created_at => 1391691571,\n  :metadata => more_metadata\n})\n\n<?php\n$metadata = ([\n    \"order_date\" => time(),\n    \"stripe_invoice\" => \"inv_3434343434\",\n    \"order_number\" => ([\n        \"value\" => \"3434-3434\",\n        \"url\" => \"https://example.org/orders/3434-3434\"]),\n        \"price\" => ([\n            \"currency\" => \"usd\",\n            \"amount\" => 2999])\n]);\n\n$intercom->events->create([\n    \"event_name\" => \"placed-order\",\n    \"created_at\" => 1500907515,\n    \"user_id\" => \"20413\",\n    \"metadata\" => $metadata\n]);\n?>\n\nMap<String,Object> order = Maps.newHashMap();\norder.put(\"value\", \"3434-3434\");\norder.put(\"url\", \"https://example.org/orders/3434-3434\");\n\nMap<String,Object> price = Maps.newHashMap();\nprice.put(\"currency\", \"usd\");\nprice.put(\"amount\", 2999);\n\nMap<String,Object> meta = Maps.newHashMap();\nmeta.put(\"order_date\", currentTimeMillis()/1000L);\nmeta.put(\"stripe_invoice\", \"inv_3434343434\");\nmeta.put(\"price\", price);\nmeta.put(\"order_number\", order);\n\nEvent event = new Event()\n  .setEventName(\"placed-order\")\n  .setUserID(\"314159\")\n  .setMetadata(meta);\n\nEvent.create(event);\n\n# The metadata key values in the example\n# are treated as follows-\n#\n# - order_date: a Date\n#    (key ends with '_date').\n#\n# - stripe_invoice: The identifier of the Stripe invoice\n#     (has a 'stripe_invoice' key)\n#\n# - order_number: Rich Link\n#     (contains 'url' and 'value')\n#\n# - price: Amount in US Dollars\n#     (contains 'amount' and 'currency')\n\n\nMetadata Objects support a few simple types that Intercom can present on your behalf -\n\nType\tDescription\tExample\nString\tThe value is a JSON String\t\"source\":\"desktop\"\nNumber\tThe value is a JSON Number\t\"load\": 3.67\nDate\tThe key ends with the String _date and the value is a Unix timestamp, assumed to be in the UTC timezone.\t\"contact_date\": 1392036272\nLink\tThe value is a HTTP or HTTPS URI.\t\"article\": \"https://example.org/ab1de.html\"\nRich Link\tThe value is a JSON object that contains url and value keys.\t\"article\": {\"url\": \"https://example.org/ab1de.html\", \"value\":\"the dude abides\"}\nStripe Data\tThe key is one of - 'stripe_customer', 'stripe_invoice', 'stripe_charge'. The value is a Stripe identifier.\t\"stripe_customer\": \"cus_42424242424\"\nMonetary Amount\tThe value is a JSON object that contains amount and currency keys. The amount key is a positive integer representing the amount in cents. The price in the example to the right denotes €349.99.\t\"price\": {\"amount\": 34999, \"currency\": \"eur\"}\nAPI Responses\nSuccessful responses to submitted events return 202 Accepted with an empty body.\nUnauthorised access will be rejected with a 401 Unauthorized or 403 Forbidden response code.\nEvents sent about users that cannot be found will return a 404 Not Found.\nEvent lists containing duplicate events will have those duplicates ignored.\nServer errors will return a 500 response code and may contain an error message in the body."
  },
  {
    "title": "Event Model",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/data-events/event-model/",
    "html": "Event Model\nEvent Object\n{\n  \"event_name\" : \"invited-friend\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"342311\"\n}\n\n// Sufficient to send just the event name\nIntercom('trackEvent', 'invited-friend');\n\n# create an event as a hash\nevent = {\n  :event_name => \"invited-friend\",\n  :email => current_user.email,\n  :created_at => 1391691571\n}\nintercom.events.create event\n\n<?php\n$event = array(\n  \"event_name\" => \"invited-friend\",\n  \"created_at\" => 1391691571,\n  \"user_id\" => \"314159\"\n);\n$intercom->events->create($event);\n?>\n\nEvent event = new Event()\n  .setEventName(\"invited-friend\")\n  .setUserID(\"1314159\");\n  .setCreatedAt(currentTimeMillis()/1000L);\n\nEvent.create(event);\n\nEvent Object\n\nAn Event Object describes the event and contains the following fields\n\nAttribute\tRequired\tDescription\nevent_name\tyes\tThe name of the event that occurred. This is presented to your App's admins when filtering and creating segments - a good event name is typically a past tense 'verb-noun' combination, to improve readability, for example updated-plan.\ncreated_at\tyes\tThe time the event occurred as a UTC Unix timestamp\nuser_id\tyes if no email\tYour identifier for the user.\nid\tyes if no email or user_id.\tYour identifier for a lead or a user.\nemail\tyes if no user_id\tAn email address for your user. An email should only be used where your application uses email to uniquely identify users\nmetadata\tno\toptional metadata about the event.\n\nThe event_name field is processed as follows -\n\nNames are treated as case insensitive - 'Completed-Order' and 'completed-order' will be considered the same event for your application.\nPeriods (.) and dollars ($) in event names are replaced with hyphens. e.g., 'completed.order' will be stored as 'completed-order'.\n\nTo avoid confusion we recommend submitting lower case event names that do not contain periods or dollars!\n\nMetadata Object\n\nSending an event with metadata\n\n$ curl https://api.intercom.io/events \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Content-Type: application/json\" -d'\n{\n  \"event_name\" : \"invited-friend\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"314159\",\n  \"metadata\": {\n     \"invitee_email\": \"pi@example.org\",\n     \"invite_code\": \"ADDAFRIEND\"\n  }\n}'\n\nvar metadata = {\n  invitee_email: 'pi@example.org',\n  invite_code: 'ADDAFRIEND'\n};\nIntercom('trackEvent', 'invited-friend', metadata);\n\nmetadata = {\n  :invitee_email => 'pi@example.org',\n  :invite_code => 'ADDAFRIEND'\n}\nintercom.events.create {\n  :event_name => \"invited-friend\",\n  :email => current_user.email,\n  :created_at => 1391691571,\n  :metadata => metadata\n}\n\n<?php\n$metadata = array(\n  \"invitee_email\" => \"pi@example.org\",\n  \"invite_code\" => \"ADDAFRIEND\"\n);\n$intercom->events->create(array(\n  \"event_name\" => \"invited-friend\",\n  \"created_at\" => 1391691571,\n  \"user_id\" => \"314159\",\n  \"metadata\" => $metadata\n));\n?>\n\nEvent event = new Event()\n  .setEventName(\"invited-friend\")\n  .setUserID(\"314159\")\n  .putMetadata(\"invite_mail\", \"pi@example.org\")\n  .putMetadata(\"invite_code\", \"ADDAFRIEND\")\n  .putMetadata(\"found_date\", currentTimeMillis()/1000L);\n\nEvent.create(event);\n\n\nMetadata can be used to submit an event with extra key value data. Each event can contain up to ten metadata key values.\n\nSome use cases for event metadata are -\n\nLinking an event back to a page in your website.\nDescribing before and after values for a subscription plan change.\nSending contextual information about an online order, a booking.\n\nYou can now trigger messages to your users based on event and event metadata and also include the metadata in the messages. For more information on how this works, learn more about event based messaging\n\nSee the section 'Metadata Types' for more information on the kinds of metadata you can send."
  },
  {
    "title": "Error Objects",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/errors/error-objects/",
    "html": "Error Objects\nError List Object\n{\n  \"type\": \"error.list\",\n  \"errors\": [\n    {\n      \"code\": \"not_found\",\n      \"message\": \"No such user_id[314159]\",\n      \"field\": \"user_id\"\n    },\n    {\n      \"code\": \"not_found\",\n      \"message\": \"No such email[pi@example.org]\",\n      \"field\": \"email\"\n    }\n  ]\n}\n\n// the JavaScript client doesn't directly expose error data\n\n# the Ruby client doesn't directly expose error data\n\n<?php\n// the PHP client doesn't directly expose error data\n?>\n\ntry {\n  UserCollection uc = User.list();\n} catch(IntercomException  ie) {\n  Error e = ie.getFirstError();\n  log.error(\"{}:{}\", e.getCode(), e.getMessage());\n}\n\n\nThe API will return an Error List for a failed request, which will contain one or more Error objects.\n\nError List Attributes\n\nEach error has the following attributes\n\nField\tDescription\ntype\tThe type is error.list\nerrors\tAn array of one or more error objects\nError Object Attributes\n\nEach Error Object has the following attributes\n\nField\tDescription\ncode\tA string indicating the kind of error, used to further qualify the HTTP response code\nmessage\tOptional. Human readable description of the error\nfield\tOptional. Used to identify a particular field or query parameter that was in error."
  },
  {
    "title": "Data Events",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/data-events/events/",
    "html": "Data Events\n\nEvents are how you can submit user activity to Intercom. Once you're sending Intercom event data, you can filter your user base with those events and create Auto Messages to send whenever an event occurs. Every event is associated with an event name, the time it happened, the user that caused the event, and optionally some extra metadata. Events record the count, first and last occurrence of an event.\n\nEvents are different to Custom Attributes in that events are information on what Users did and when they did it, whereas Custom Attributes represent the User's current state as seen in their profile. For example, the first time they subscribed to a paid plan, or the most recent time they changed their plan would be represented by events, whereas a User Attribute would be used to record their current plan.\n\nBecause Events are used for filtering and messaging, and event names are used directly in Intercom by your App's Admins we recommend sending high-level activity about your users that you would like to message on, rather than raw clickstream or user interface actions. For example an order action is a good candidate for an Event, versus all the clicks and actions that were taken to get to that point. We also recommend sending event names that combine a past tense verb and nouns, such as 'created-project'.\n\nThe Events API varies slightly from the rest of the APIs as follows -\n\nYou can submit events using JavaScript using the trackEvent method.\nWhen there's an error or errors, a list structure is returned instead of a single error."
  },
  {
    "title": "Admin Conversations Count Model",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/counts/admin-conversations/",
    "html": "Admin Conversations Count Model\nAdmin Conversation Count Object\n\nThe admin conversation count supplies per Admin counts\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nconversation\tobject\tContains counts related to admins\nconversation.admin\tarray\tContains and array of objects detailing each Admin\nconversation.admin.open\tnumber\tContains the number of open conversations for the Admin\nconversation.admin.closed\tnumber\tContains the number of closed conversations for the Admin\nconversation.admin.id\tstring\tContains the Admin id\nconversation.admin.name\tstring\tContains the Admin name\n{\n  \"type\": \"count\",\n  \"conversation\": {\n    \"admin\": [\n      {\n        \"id\": \"1\",\n        \"name\": \"Wash\",\n        \"open\": 0,\n        \"closed\": 1\n      },\n      {\n        \"id\": \"2\",\n        \"name\": \"Jayne\",\n        \"open\": 0,\n        \"closed\": 0\n      }\n    ]\n  }\n}\n\n# Conversation Admin Counts\n$ curl 'https://api.intercom.io/counts?type=conversation&count=admin' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# Conversation Admin Counts\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"conversation\": {\n    \"admin\": [\n      {\n        \"id\": \"1\",\n        \"name\": \"Wash\",\n        \"open\": 0,\n        \"closed\": 1\n      },\n      {\n        \"id\": \"2\",\n        \"name\": \"Jayne\",\n        \"open\": 0,\n        \"closed\": 0\n      }\n    ]\n  }\n}\n\nintercom.counts.for_type(type: 'conversation', count: 'admin')\n\n<?php\n// Conversation Admin Count\n$counts = $intercom->counts->getCounts([\"type\" => \"conversation\", \"count\" => \"admin\"]);\nprint_r($counts);\n?>\n\n// Conversation Admin Count\nfinal Counts.Conversation counts = Counts.conversationAdmins();\nList<Admin> admins = counts.getAdmins();\nfor (Admin admin : admins) {\n    out.println(\n      admin.getName() + \": \" +\n      admin.getClosed() + \", \" +\n      admin.getOpen());\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nConversation Admin Count\tconversation\tadmin"
  },
  {
    "title": "Object Model",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/common-structures/object-model/",
    "html": "Object Model\nCommon Fields and Metadata\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"id\\\": \\\"456456456456\\\",\\n  \\\"self\\\": \\\"https://api.intercom.io/users/456456456456\\\",\\n  \\\"created_at\\\": 1392241887,\\n  \\\"custom_attributes\\\": {\\n    \\\"note\\\": \\\"some extra information\\\"\\n  }\\n}\n\nCommon Fields\n\nAPI objects have a type field indicating their object type. Each object in the API may be given an identifier, indicated via its id field, and will typically be addressable via a URI. Many objects will also have a created_at field indicating the object's creation date as a UTC Unix timestamp.\n\nDates and Timestamps\n\nAll temporal fields in the API are encoded as Unix timestamps and are by definition always treated as UTC. The most common time fields in the API are created_at and updated_at.\n\nParameter\tDescription\ncreated_at\tThe time the object was created. In most, but not all cases, this is the time the object was created according to the API server.\nupdated_at\tThe time the object was last updated according to the API server.\nOptional Fields\n\nUnpopulated optional data is returned as follows -\n\nNumber, String and Boolean types may be returned as having null values.\nArrays and Objects may be returned as empty ([] {})\n\nIn general clients should be able to handle null and empty fields.\n\nMetadata and Custom Attributes\n\nSome object types, such as Events, Users and Companies, have a metadata or custom_attributes field that allows clients to set custom-defined data about an object."
  },
  {
    "title": "Identifiers and URLs",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/common-structures/identifiers-and-urls/",
    "html": "Identifiers and URLs\n\nAll objects in the API have an id field indicating their logical identifier. Some objects may optionally also have a self field that indicates a URL or canonical address for the object.\n\nParameter\tDescription\nid\tA string that identifies the object within the API. The id field will not be larger than 128 characters (in SQL it corresponds to a varchar(128)).\nself\tA URL that addresses the object within the API. The self field will not be larger than 255 characters (in SQL it corresponds to a varchar(255)).\n\nThese fields must always be treated as opaque strings - no guarantees are made about the internal structure of the id or self fields for an object.\n\nThe id field is always defined by the API server and is guaranteed to be unique relative to the type field - this means no two user objects will have the same id field, but a user and a company may have the same value for their id fields. . Some object types (such as User), also support client defined identifiers.\n\nThe company and user objects deserve special mention when it comes to identity for two reasons -\n\nThey allow you send your own external identifiers - email and user_id for users and company_id for companies.\nThe user id field is in some cases, aliased to intercom_user_id. This is done to distinguish it from other identifiers in the API and to avoid confusion as to which object type an id denotes."
  },
  {
    "title": "Error Objects",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/errors/error-objects/",
    "html": "Error Objects\nError List Object\n{\n  \"type\": \"error.list\",\n  \"errors\": [\n    {\n      \"code\": \"not_found\",\n      \"message\": \"No such user_id[314159]\",\n      \"field\": \"user_id\"\n    },\n    {\n      \"code\": \"not_found\",\n      \"message\": \"No such email[pi@example.org]\",\n      \"field\": \"email\"\n    }\n  ]\n}\n\n// the JavaScript client doesn't directly expose error data\n\n# the Ruby client doesn't directly expose error data\n\n<?php\n// the PHP client doesn't directly expose error data\n?>\n\ntry {\n  UserCollection uc = User.list();\n} catch(IntercomException  ie) {\n  Error e = ie.getFirstError();\n  log.error(\"{}:{}\", e.getCode(), e.getMessage());\n}\n\n\nThe API will return an Error List for a failed request, which will contain one or more Error objects.\n\nError List Attributes\n\nEach error has the following attributes\n\nField\tDescription\ntype\tThe type is error.list\nerrors\tAn array of one or more error objects\nError Object Attributes\n\nEach Error Object has the following attributes\n\nField\tDescription\ncode\tA string indicating the kind of error, used to further qualify the HTTP response code\nmessage\tOptional. Human readable description of the error\nfield\tOptional. Used to identify a particular field or query parameter that was in error."
  },
  {
    "title": "List all notes",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/notes/list-notes-of-contact/",
    "html": "List all notes\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/notes \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can fetch a list of notes that are associated to a contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return a paginated list of Note objects.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - note.list\ndata\tArray\tAn array containing Note Objects\ntotal_count\tInteger\tThe total number of companies associated to this contact\npages\tPagination Object\tThe information needed to paginate through companies"
  },
  {
    "title": "Error Codes",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/errors/error-codes/",
    "html": "Error Codes\n\nThe API may send the following error codes. Other codes may be added in the future.\n\nField\tDescription\nserver_error\tGeneric server error\nclient_error\tGeneric client error\ntype_mismatch\tThe JSON value type is incorrect for the field\nparameter_not_found\tA required parameter was not supplied\nparameter_invalid\tA parameter's value is invalid\naction_forbidden\tThe action is not authorized\nconflict\tThere is existing data that clashes with the request data\napi_plan_restricted\tThe API is not available on this App's Plan\nrate_limit_exceeded\tThe rate limit for the App has been exceeded\nunsupported\tThe operation is not supported\ntoken_revoked\tThe token or API Key has been revoked\ntoken_blocked\tThe API Key or App has been blocked\ntoken_not_found\tThe token or API Key does not exist\ntoken_unauthorized\tThe token or API Key is not allowed to access the resource\ntoken_expired\tThe token is expired\nmissing_authorization\tNo authorization data was found on the request\nretry_after\tThe client should wait for a time before retrying the request\njob_closed\tThe client should start a new bulk job\nnot_restorable\tThis user was blocked and cannot be recreated\nteam_not_found\tThe team does not exist\nteam_unavailable\tThis team is deprecated so conversations cannot be assigned to it\nadmin_not_found\tThe admin does not exist"
  },
  {
    "title": "Leads",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/leads/leads/",
    "html": "Leads\n\nContacts (for Leads only) is no longer available as a resource. In order to see information and take action on leads, you should be using the Contacts API."
  },
  {
    "title": "The data event model",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/data-events/event-model/",
    "html": "The data event model\nEvent Object\n{\n  \"event_name\" : \"invited-friend\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"342311\"\n}\n\n// Sufficient to send just the event name\nIntercom('trackEvent', 'invited-friend');\n\n# create an event as a hash\nevent = {\n  :event_name => \"invited-friend\",\n  :email => current_user.email,\n  :created_at => 1391691571\n}\nintercom.events.create event\n\n<?php\n$event = array(\n  \"event_name\" => \"invited-friend\",\n  \"created_at\" => 1391691571,\n  \"user_id\" => \"314159\"\n);\n$intercom->events->create($event);\n?>\n\nEvent event = new Event()\n  .setEventName(\"invited-friend\")\n  .setUserID(\"1314159\");\n  .setCreatedAt(currentTimeMillis()/1000L);\n\nEvent.create(event);\n\n\nEvents are how you can submit user activity to Intercom. Once you're sending Intercom event data, you can filter your user base with those events and create Auto Messages to send whenever an event occurs. Every event is associated with an event name, the time it happened, the user that caused the event, and optionally some extra metadata. Events record the count, first and last occurrence of an event.\n\nEvents are different to Custom Attributes in that events are information on what Users did and when they did it, whereas Custom Attributes represent the User's current state as seen in their profile. For example, the first time they subscribed to a paid plan, or the most recent time they changed their plan would be represented by events, whereas a User Attribute would be used to record their current plan.\n\nBecause Events are used for filtering and messaging, and event names are used directly in Intercom by your App's Admins we recommend sending high-level activity about your users that you would like to message on, rather than raw clickstream or user interface actions. For example an order action is a good candidate for an Event, versus all the clicks and actions that were taken to get to that point. We also recommend sending event names that combine a past tense verb and nouns, such as 'created-project'.\n\nThe Events API varies slightly from the rest of the APIs as follows -\n\nYou can submit events using JavaScript using the trackEvent method.\nWhen there's an error or errors, a list structure is returned instead of a single error.\nEvent Object\nAttribute\tRequired\tDescription\nevent_name\tyes\tThe name of the event that occurred. This is presented to your App's admins when filtering and creating segments - a good event name is typically a past tense 'verb-noun' combination, to improve readability, for example updated-plan.\ncreated_at\tyes\tThe time the event occurred as a UTC Unix timestamp\nuser_id\tyes if no email\tYour identifier for the user.\nid\tyes if no email or user_id.\tYour identifier for a lead or a user.\nemail\tyes if no user_id\tAn email address for your user. An email should only be used where your application uses email to uniquely identify users\nmetadata\tno\toptional metadata about the event.\n\nThe event_name field is processed as follows -\n\nNames are treated as case insensitive - 'Completed-Order' and 'completed-order' will be considered the same event for your application.\nPeriods (.) and dollars ($) in event names are replaced with hyphens. e.g., 'completed.order' will be stored as 'completed-order'.\n\nTo avoid confusion we recommend submitting lower case event names that do not contain periods or dollars!\n\nMetadata Object\n\nSending an event with metadata\n\n$ curl https://api.intercom.io/events \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Content-Type: application/json\" -d'\n{\n  \"event_name\" : \"invited-friend\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"314159\",\n  \"metadata\": {\n     \"invitee_email\": \"pi@example.org\",\n     \"invite_code\": \"ADDAFRIEND\"\n  }\n}'\n\nvar metadata = {\n  invitee_email: 'pi@example.org',\n  invite_code: 'ADDAFRIEND'\n};\nIntercom('trackEvent', 'invited-friend', metadata);\n\nmetadata = {\n  :invitee_email => 'pi@example.org',\n  :invite_code => 'ADDAFRIEND'\n}\nintercom.events.create {\n  :event_name => \"invited-friend\",\n  :email => current_user.email,\n  :created_at => 1391691571,\n  :metadata => metadata\n}\n\n<?php\n$metadata = array(\n  \"invitee_email\" => \"pi@example.org\",\n  \"invite_code\" => \"ADDAFRIEND\"\n);\n$intercom->events->create(array(\n  \"event_name\" => \"invited-friend\",\n  \"created_at\" => 1391691571,\n  \"user_id\" => \"314159\",\n  \"metadata\" => $metadata\n));\n?>\n\nEvent event = new Event()\n  .setEventName(\"invited-friend\")\n  .setUserID(\"314159\")\n  .putMetadata(\"invite_mail\", \"pi@example.org\")\n  .putMetadata(\"invite_code\", \"ADDAFRIEND\")\n  .putMetadata(\"found_date\", currentTimeMillis()/1000L);\n\nEvent.create(event);\n\n\nMetadata can be used to submit an event with extra key value data. Each event can contain up to ten metadata key values.\n\nSome use cases for event metadata are -\n\nLinking an event back to a page in your website.\nDescribing before and after values for a subscription plan change.\nSending contextual information about an online order, a booking.\n\nYou can now trigger messages to your users based on event and event metadata and also include the metadata in the messages. For more information on how this works, learn more about event based messaging\n\nSee the section 'Metadata Types' for more information on the kinds of metadata you can send."
  },
  {
    "title": "Webhook Models",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/webhooks/webhooks/webhook-models-1/",
    "html": "Webhook Models\nWebhook Topics\n\nThe following topics are available and you can be notified when an action relating to that topic occurs. You just need to tell us where to send the notification. The 'Item Type' column shows the API type that will be sent as the data of the notification.\n\nTopic\tItem Type\tDescription\nconversation.user.created\tConversation\tSubscribe to user/lead initiated conversations\nconversation.user.replied\tConversation\tSubscribe to contact user/lead conversation replies\nconversation.admin.replied\tConversation\tSubscribe to admin conversation replies\nconversation.admin.single.created\tConversation\tSubscribe to admin initiated 1:1 conversations\nconversation.admin.assigned\tConversation\tSubscribe to admin conversation assignments\nconversation.admin.noted\tConversation\tSubscribe to admin conversation notes\nconversation.admin.closed\tConversation\tSubscribe to admin conversation closes\nconversation.admin.opened\tConversation\tSubscribe to admin conversation opens\nconversation.admin.snoozed\tConversation\tSubscribe to admin conversation snoozes\nconversation.admin.unsnoozed\tConversation\tSubscribe to admin conversation unsnoozes\nconversation_part.tag.created\tConversation\tSubscribe to conversation parts being tagged\nconversation_part.redacted\tConversation\tSubscribe to conversation parts being deleted\nconversation.rating.added\tConversation\tSubscribe to conversations getting a rating\nconversation.deleted\tConversation\tSubscribe to conversation deleted\nuser.created\tUser\tSubscribe to user creations\nuser.deleted\tUser\tSubscribe to user deletions\nuser.unsubscribed\tUser\tSubscribe to user unsubscriptions from email\nuser.email.updated\tUser\tSubscribe to user email address being updated\nuser.tag.created\tUserTag\tSubscribe to users being tagged\nuser.tag.deleted\tUserTag\tSubscribe to users being untagged\ncontact.created\tLead\tSubscribe to lead creations\ncontact.signed_up\tLead\tSubscribe to leads converting to users\ncontact.added_email\tLead\tSubscribe to emails being added to leads\ncontact.tag.created\tContactTag\tSubscribe to leads being tagged\ncontact.tag.deleted\tContactTag\tSubscribe to leads being untagged\nvisitor.signed_up\tVisitor\tSubscribe to visitors converting to users\ncompany.created\tCompany\tSubscribe to company creations\nevent.created\tEvent\tSubscribe to events\nping\tPing\tSent when a post to the subscription's ping resource is received, or periodically by Intercom. Ping is always subscribed to.\nWebhooks and Permissions\n\nEach webhook topic is associated with one or more permission scopes. If you would like to setup a webhook for a particular topic then you will need to select the appropriate permission scope to be able to request a notification for that topic.\n\nMULTIPLE PERMISSIONS\n\nSome topic are associated with multiple permissions. In these cases you don't need to select all of these permissions to subscribe to that topic.\n\nWebhook topic\tWorks with permissions\tGroups\nconversation_part.tag.created\tRead conversations\tConversation data\nconversation_part.redacted\tRead conversations\tConversation data\nconversation.rating.added\tRead conversations\tConversation data\nconversation.admin.assigned\tRead conversations\tConversation data\nconversation.admin.closed\tRead conversations\tConversation data\nconversation.admin.noted\tRead conversations\tConversation data\nconversation.admin.opened\tRead conversations\tConversation data\nconversation.admin.replied\tRead conversations\tConversation data\nconversation.admin.single. created\tRead conversations\tConversation data\nconversation.admin.snoozed\tRead conversations\tConversation data\nconversation.admin.unsnoozed\tRead conversations\tConversation data\nconversation.user.created\tRead conversations\tConversation data\nconversation.user.replied\tRead conversations\tConversation data\nconversation.deleted\tRead conversations\tConversation data\ncontact.added_email\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.email.updated\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.unsubscribed\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nvisitor.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nevent.created\tRead events\tCustomer event data\ncompany.created\tRead users and companies, Read one user and one company\tCompany data\nWebhook Notification Object\n\nA notification object contains the following fields:\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'notification_event'\nid\tstring\tThe Intercom defined id representing the notification.\nself\tstring\tThe Intercom defined URL for the subscription. Optional.\ncreated_at\ttimestamp\tThe timestamp the notification was created.\ntopic\tstring\tCorresponds to a topic.\ndelivery_attempts\tnumber\tThe number of times this notification has been attempted.\nfirst_sent_at\ttimestamp\tThe first time the delivery was attempted.\ndata\tobject\tA container for the data associated with the notification.\ndata.item\tobject\tThe data associated with the notification, which will have a 'type' field.\n\nThe contents of data.item object will be defined according to its type field. In the example to the right, the type value of company indicates a company object.\n\n{\n  \"type\": \"notification_event\",\n  \"topic\": \"company.created\",\n  \"id\": \"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b3\",\n  \"app_id\" : \"a86dr8yl\",\n  \"created_at\": 1392731331,\n  \"delivery_attempts\": 1,\n  \"first_sent_at\": 1392731392,\n  \"data\": {\n    \"item\": {\n      \"type\": \"company\",\n      \"id\": \"531ee472cce572a6ec000006\",\n      \"name\": \"Blue Sun\",\n      \"company_id\": \"6\",\n      \"remote_created_at\": 1394531169,\n      \"created_at\": 1394533506,\n      \"updated_at\": 1396874658,\n      \"custom_attributes\": {\n      }\n    }\n  }\n}\n\nHandling Webhook Notifications\n\nWhen you setup a subscription you will receive notifications on your chosen topics. How you handle those notifications, i.e. the HTTP status code returned, will determine the subsequent state of that subscription.\n\nResponse Code\tDescription\tAction\n2xx\tSuccess\tThe webhook was successfully delivered.\n410\tGone\tWhen a 410 is received, we assume the resource is no longer available. We will disable the subscription and no more notifications will be sent.\n429\tToo many requests\tWhen a 429 is received, all notifications from that subscription will be throttled. Depending on the rate of delivery, this delay can be between 1 minute to 2 hours. If 429s continue and any notification is delayed for > 2 hours then we will drop that notification.\n4xx (excl. 429) 5xx\tClient or service errors\tWe will retry after 1 minute for all other errors. If the 2nd retry fails then we mark the notification delivery as failed.\nTIMEOUT\n\nYou have 5 seconds to respond to a notification. If you don't send a response inside that time, the notification is treated as failed and will be retried only once after 1 minute.\n\nSigned Notifications\n\nEach webhook notification is signed by Intercom via an X-Hub-Signature header. We do this so that you can verify the notification came from Intercom by decoding the signature.\n\nThe value of this X-Hub-Signature header is computed by creating a signature using the body of the JSON request and your app's client_secret value, which you can find on the Basic Info page of your app.\n\nThe signature is the hexadecimal (40-byte) representation of a SHA-1 signature computed using the HMAC algorithm as defined in RFC2104.\n\nThe X-Hub-Signature header value starts with the string sha1= followed by the signature.\n\nPOST https://example.org/hooks\nUser-Agent: intercom-parrot-service-client/1.0\nX-Hub-Signature: sha1=21ff2e149e0fdcac6f947740f6177f6434bda921\nAccept: application/json\nContent-Type: application/json\n\n{\n  \"type\" : \"notification_event\",\n  \"id\" : \"notif_78c122d0-23ba-11e4-9464-79b01267cc2e\",\n  \"topic\" : \"user.created\",\n  \"app_id\" : \"a86dr8yl\",\n  \"data\" : {\n    \"type\" : \"notification_event_data\",\n    \"item\" : {\n      \"type\" : \"user\",\n      \"id\" : \"530370b477ad7120001d\",\n      \"user_id\" : \"25\",\n      \"name\" : \"Hoban Washburne\",\n      \"unsubscribed_from_emails\" : false,\n      \"custom_attributes\" : {}\n    }\n  }\n}\n\nContact Tag Model for Webhooks\n\nThe Contact Tag model is only returned for webhooks. It is not used with the Lead (i.e. contact) or Tag endpoints themselves. You can see an example object below:\n\nExample Contact Tag Model in Webhooks\n{  \\\"type\\\": \\\"contact_tag\\\",  \\\"created_at\\\": 1392731331,  \\\"tag\\\" : {      \\\"id\\\": \\\"1287\\\",      \\\"name\\\": \\\"independent\\\",      \\\"type\\\": \\\"tag\\\"    },  \\\"contact\\\" : {      \\\"type\\\": \\\"contact\\\",      \\\"id\\\": \\\"1287ab1287fefe\\\",      \\\"user_id\\\": \\\"12\\\"  }}\n\n\nA contact tag is composed from the existing contact and tag JSON and is sent when contacts are tagged and untagged via the contact.tag.created and contact.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'contact_tag'.\ncreated_at\ttimestamp\tThe time the contact tag object was created.\ntag\tTag\tThe tag that was added or removed.\ncontact\tcontact\tThe contact that was tagged or untagged.\nUser Tag Model for Webhooks\n\nThe User Tag model is only returned for webhooks. It is not used with the User or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"user_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"17513\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"user\" : {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n      \"user_id\": \"25\"\n  }\n}\n\n\nA user tag is composed from the existing user and tag JSON and is sent when users are tagged and untagged via the user.tag.created and user.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user_tag'.\ncreated_at\ttimestamp\tThe time the user tag object was created.\ntag\tTag\tThe tag that was added or removed.\nuser\tUser\tThe user that was tagged or untagged."
  },
  {
    "title": "The note model",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/notes/note-model/",
    "html": "The note model\nExample Note Object\n{\\n  \\\"type\\\": \\\"note\\\",\\n  \\\"id\\\": \\\"16\\\",\\n  \\\"created_at\\\": 1389913941,\\n  \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n  \\\"author\\\": {\\n    \\\"type\\\": \\\"admin\\\",\\n    \\\"id\\\": \\\"21\\\",\\n    \\\"name\\\": \\\"Jayne Cobb\\\",\\n    \\\"email\\\": \\\"jayne@serenity.io\\\",\\n    \\\"companies\\\": []\\n  },\\n  \\\"user\\\": {\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\"\\n  }\\n}\n\n\nNotes allow you to annotate and comment on your contacts.\n\nCOMPANIES AND CONVERSATIONS\n\nCurrently not possible to create notes for companies. Reach out if you want to submit a feature request, we take these into account.\\n\\nConversations notes are created via the Reply a conversations API.\n\nNote Object\nKey\tType\tDescription\ntype\tString\tvalue is 'note'\nid\tString\tThe id representing the note\ncreated_at\tTimestamp\tThe time the note was created\nuser\tObject\tThe user the note was created about\nbody\tString\tThe body text of the note.\nauthor\tObject\tOptional. Represents the Admin that created the note"
  },
  {
    "title": "List all teams",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/teams/list-teams/",
    "html": "List all teams\nExample Request & Response\n$ curl https://api.intercom.io/teams \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n{\n    \"teams\": [\n        {\n            \"admin_ids\": [\n                492881,\n                1195856\n            ],\n            \"id\": \"814865\",\n            \"name\": \"BA_App\",\n            \"type\": \"team\"\n        },\n        {\n            \"admin_ids\": [\n                646303,\n                814860\n            ],\n            \"id\": \"2744328\",\n            \"name\": \"the_a_team\",\n            \"type\": \"team\"\n        }\n    ],\n    \"type\": \"team.list\"\n}\n\n\nYou can fetch a list of all teams for a given workspace.\n\nResponse\n\nThis will return a list of team objects for the App. The result may also have a pages object if the response is paginated.\n\nTeam List\nAttribute\tType\tDescription\ntype\tstring\tValue is 'team.list'\nteams\tarray\tA list of team objects\npages\tobject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch."
  },
  {
    "title": "HTTP Responses",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/errors/http-responses/",
    "html": "HTTP Responses\n\nThe API returns HTTP responses on each request to indicate the success or otherwise of API requests. The codes listed below are often used, and the API may use others. Note that 4xx and 5xx responses may be returned for any request and clients should cater for them.\n\nResponse Code\tDescription\n400\tBad Request -- General client error, possibly malformed data.\n401\tUnauthorized -- The API Key was not authorised (or no API Key was found).\n402\tPayment Required -- The API is not available on your current plan.\n403\tForbidden -- The request is not allowed.\n404\tNot Found -- The resource was not found.\n405\tMethod Not Allowed -- The resource does not accept the HTTP method.\n406\tNot Acceptable -- The resource cannot return the client's required content type.\n408\tRequest Timeout -- The server would not wait any longer for the client.\n409\tConflict - Multiple existing users match this email address - must be more specific using user_id\n415\tUnsupported Media Type - The server doesn't accept the submitted content-type.\n422\tUnprocessable Entity -- The data was well-formed but invalid.\n429\tToo Many Requests -- The client has reached or exceeded a rate limit, or the server is overloaded.\n500, 502, 503, 504\tServer errors - something went wrong with Intercom's servers. These responses are most likely momentary operational errors (e.g. temporary unavailability), and, as a result, requests should be retried once."
  },
  {
    "title": "List all tags",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/tags/list-tags-for-an-app/",
    "html": "List all tags\nExample List Tag Request\n$ curl https://api.intercom.io/tags \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n{\n  \"type\": \"list\",\n  \"data\": [\n    {\n      \"type\": \"tag\",\n      \"name\": \"Beta User\",\n      \"id\": 1\n    },\n    {\n      \"type\": \"tag\",\n      \"name\": \"Amazing User\",\n      \"id\": 2\n    },\n    {\n      \"type\": \"tag\",\n      \"name\": \"Epic User\",\n      \"id\": 3\n    }\n  ]\n}\n\nintercom.tags.all.each { ... }\n\n<?php\n$tags= $intercom->tags->getTags([]);\nforeach ($tags->tags as $tag) {\n    print \"id:\".$tag->id.\" name:\".$tag->name.\"\\n\";\n}?>\n\nTagCollection tags = Tag.list();\nwhile (tags.hasNext()) {\n    out.println(tags.next().getId());\n}\n\n\nYou can list all tags.\n\nResponse\n\nA list of tag objects.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'list'\ntags\tarray\tA list of tag objects"
  },
  {
    "title": "List all data attributes",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/data-attributes/list-data-attributes/",
    "html": "List all data attributes\nExample Request & Response\ncurlcurl\n$ curl https://api.intercom.io/data_attributes?model=contact-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json'\n\n{  \\\"type\\\": \\\"list\\\",  \\\"data\\\": [    {      \\\"type\\\": \\\"data_attribute\\\",      \\\"model\\\": \\\"customer\\\",      \\\"name\\\": \\\"paid_subscriber\\\",      \\\"full_name\\\": \\\"custom_attributes.paid_subscriber\\\",      \\\"label\\\": \\\"paid_subscriber\\\",      \\\"description\\\": \\\"\\\",      \\\"data_type\\\": \\\"string\\\",      \\\"options\\\": [        \\\"pick_value_1\\\",        \\\"pick_value_2\\\"      ],      \\\"api_writable\\\": true,      \\\"ui_writable\\\": true,      \\\"custom\\\": true,      \\\"archived\\\": false,      \\\"admin_id\\\": \\\"1\\\",      \\\"created_at\\\": 1392734388,      \\\"updated_at\\\": 1392734388    },    {      \\\"type\\\": \\\"data_attribute\\\",      \\\"model\\\": \\\"customer\\\",      \\\"name\\\": \\\"region_name\\\",      \\\"full_name\\\": \\\"location_data.region_name\\\",      \\\"label\\\": \\\"Region\\\",      \\\"description\\\": \\\"\\\",      \\\"data_type\\\": \\\"string\\\",      \\\"api_writable\\\": false,      \\\"ui_writable\\\": true,      \\\"custom\\\": false,      \\\"archived\\\": false    },    {      \\\"type\\\": \\\"data_attribute\\\",      \\\"model\\\": \\\"company\\\",      \\\"name\\\": \\\"plan\\\",      \\\"full_name\\\": \\\"plan\\\",      \\\"label\\\": \\\"Plan\\\",      \\\"description\\\": \\\"\\\",      \\\"data_type\\\": \\\"string\\\",      \\\"api_writable\\\": true,      \\\"ui_writable\\\": true,      \\\"custom\\\": false,      \\\"archived\\\": false    }  ]}\n\n\nYou can fetch a list of all data attributes belonging to a workspace contacts or companies.\n\nRequest Query Parameters\nParameter\tType\tRequired?\tDescription\nmodel\tString\tNo\tSpecify the data attribute model to return. Possible values are contact and company.\ninclude_archived\tBoolean\tNo\tInclude archived attributes in the list.By default we return only non archived data attributes.\nResponse\n\nThis will return a List of Data Attribute Models."
  },
  {
    "title": "Webhook notifications",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/webhooks/webhook-notifications/",
    "html": "Webhook notifications\n\nA Webhook notification is the object delivered when an event is triggered, and notifications have data payloads that contain references to the Intercom objects associated with the event. There may be instances when we pause, suspend or delay notifications.\n\nWhy are my Webhook topic notifications missing?\nPaused subscription notifications\n\nIf your endpoint URL responds with more than 1000 consecutive HTTP error codes in a 15-minute window, we pause your Webhook topic notifications for 15 minutes after which we start sending as normal again.\n\nSuspended subscriptions\n\nIf your endpoint URL responds with HTTP error codes for more than seven days, we suspend your Webhook subscription, and you will stop receiving any further notifications.\n\nIf we suspend your subscription, we display an error banner on the Webhooks page under the Configure menu of the relevant App in your Developer Hub.\n\nAfter resolving any issues with your server, you can resume suspended subscriptions by pressing Set live from the top right of the page.\n\nWe only suspend Webhook subscriptions for Private apps. Webhook subscriptions used in Public apps are never suspended.\n\nWhy are my Webhook topic notifications delayed?\nRate limiting\n\nWe will prioritise the first 150,000 events per minute of your Webhook topic notifications and then rate limit all further notifications with a lower priority.\n\nSlow topic notifications\n\nWe prioritise Webhook topic notifications for endpoint URLs that successfully respond within 500ms. If response times exceed 500ms, we deliver topic notifications with a lower priority.\n\nThrottling\n\nIf we receive an HTTP 429 (Too Many Requests) response from your endpoint URL, we throttle further notifications with a delay that starts at 1 minute and extends to 2 hours. We drop any throttled notifications if we do not receive a successful response within 2 hours.\n\nWhy are my Webhook topic notifications out of order?\n\nEach notification object has a timestamp created_at field. We do not offer any guarantee on the order of Webhook topic notifications.\n\nWhat happens to my Webhook topic notifications when Intercom is down?\n\nIf Intercom's System Status interrupts notification delivery, we will store them and resume sending once we restore the service. We will always prioritise the most recent notifications and process older delayed notifications with a lower priority.\n\nWhat volume of notifications should I expect?\n\nEvents in Intercom with the potential for generating a high volume of Webhook topic notifications are related to the Content Stat object and Contact object.\n\nFor example, the volume of Content Stat Webhook topic notifications is typically five times the size of the audience receiving the Outbound Message content; Chats, Emails, Mobile Push etc.\n\nConfigure your endpoint URL server to handle spikes in velocity and volume to minimise paused and suspended Webhook subscriptions or rate-limited and throttled Webhook topic notifications.\n\nWhy am I receiving duplicate notifications?\n\nIf we do not receive an HTTP 200 (OK) response within 5 seconds of sending a notification, we will resend the notification one more time.\n\nTo avoid this, we recommend responding with HTTP 200 (OK) immediately upon receipt and before you trigger any long-running tasks."
  },
  {
    "title": "Webhook Topics",
    "url": "https://developers.intercom.com/docs/references/2.3/webhooks/webhook-models/",
    "html": "Webhook Topics\n\nThe following topics are available and you can be notified when an action relating to that topic occurs. You just need to tell us where to send the notification. The 'Item Type' column shows the API type that will be sent as the data of the notification.\n\nTopic\tItem Type\tDescription\nconversation.user.created\tConversation\tSubscribe to user/lead initiated conversations\nconversation.user.replied\tConversation\tSubscribe to contact user/lead conversation replies\nconversation.admin.replied\tConversation\tSubscribe to admin conversation replies\nconversation.admin.single.created\tConversation\tSubscribe to admin initiated 1:1 conversations\nconversation.admin.assigned\tConversation\tSubscribe to admin conversation assignments\nconversation.admin.noted\tConversation\tSubscribe to admin conversation notes\nconversation.admin.closed\tConversation\tSubscribe to admin conversation closes\nconversation.admin.opened\tConversation\tSubscribe to admin conversation opens\nconversation.admin.snoozed\tConversation\tSubscribe to admin conversation snoozes\nconversation.admin.unsnoozed\tConversation\tSubscribe to admin conversation unsnoozes\nconversation_part.tag.created\tConversation\tSubscribe to conversation parts being tagged\nconversation_part.redacted\tConversation\tSubscribe to conversation parts being deleted\nconversation.rating.added\tConversation\tSubscribe to conversations getting a rating\nconversation.deleted\tConversation\tSubscribe to conversation deleted\nuser.created\tUser\tSubscribe to user creations\nuser.deleted\tUser\tSubscribe to user deletions\nuser.unsubscribed\tUser\tSubscribe to user unsubscriptions from email\nuser.email.updated\tUser\tSubscribe to user email address being updated\nuser.tag.created\tUserTag\tSubscribe to users being tagged\nuser.tag.deleted\tUserTag\tSubscribe to users being untagged\ncontact.created\tLead\tSubscribe to lead creations\ncontact.signed_up\tLead\tSubscribe to leads converting to users\ncontact.added_email\tLead\tSubscribe to emails being added to leads\ncontact.tag.created\tContactTag\tSubscribe to leads being tagged\ncontact.tag.deleted\tContactTag\tSubscribe to leads being untagged\nvisitor.signed_up\tVisitor\tSubscribe to visitors converting to users\ncompany.created\tCompany\tSubscribe to company creations\nevent.created\tEvent\tSubscribe to events\nping\tPing\tSent when a post to the subscription's ping resource is received, or periodically by Intercom. Ping is always subscribed to.\nWebhooks and Permissions\n\nEach webhook topic is associated with one or more permission scopes. If you would like to setup a webhook for a particular topic then you will need to select the appropriate permission scope to be able to request a notification for that topic.\n\n🚧 Multiple permissions\n\nSome topic are associated with multiple permissions. In these cases you don't need to select all of these permissions to subscribe to that topic.\n\nWebhook topic\tWorks with permissions\tGroups\nconversation_part.tag.created\tRead conversations\tConversation data\nconversation_part.redacted\tRead conversations\tConversation data\nconversation.rating.added\tRead conversations\tConversation data\nconversation.admin.assigned\tRead conversations\tConversation data\nconversation.admin.closed\tRead conversations\tConversation data\nconversation.admin.noted\tRead conversations\tConversation data\nconversation.admin.opened\tRead conversations\tConversation data\nconversation.admin.replied\tRead conversations\tConversation data\nconversation.admin.single. created\tRead conversations\tConversation data\nconversation.admin.snoozed\tRead conversations\tConversation data\nconversation.admin.unsnoozed\tRead conversations\tConversation data\nconversation.user.created\tRead conversations\tConversation data\nconversation.user.replied\tRead conversations\tConversation data\nconversation.deleted\tRead conversations\tConversation data\ncontact.added_email\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.email.updated\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.unsubscribed\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nvisitor.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nevent.created\tRead events\tCustomer event data\ncompany.created\tRead users and companies, Read one user and one company\tCompany data\nWebhook Notification Object\n\nA notification object contains the following fields:\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'notification_event'\nid\tstring\tThe Intercom defined id representing the notification.\nself\tstring\tThe Intercom defined URL for the subscription. Optional.\ncreated_at\ttimestamp\tThe timestamp the notification was created.\ntopic\tstring\tCorresponds to a topic.\ndelivery_attempts\tnumber\tThe number of times this notification has been attempted.\nfirst_sent_at\ttimestamp\tThe first time the delivery was attempted.\ndata\tobject\tA container for the data associated with the notification.\ndata.item\tobject\tThe data associated with the notification, which will have a 'type' field.\n\nThe contents of data.item object will be defined according to its type field. In the example to the right, the type value of company indicates a company object.\n\n{\n  \"type\": \"notification_event\",\n  \"topic\": \"company.created\",\n  \"id\": \"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b3\",\n  \"app_id\" : \"a86dr8yl\",\n  \"created_at\": 1392731331,\n  \"delivery_attempts\": 1,\n  \"first_sent_at\": 1392731392,\n  \"data\": {\n    \"item\": {\n      \"type\": \"company\",\n      \"id\": \"531ee472cce572a6ec000006\",\n      \"name\": \"Blue Sun\",\n      \"company_id\": \"6\",\n      \"remote_created_at\": 1394531169,\n      \"created_at\": 1394533506,\n      \"updated_at\": 1396874658,\n      \"custom_attributes\": {\n      }\n    }\n  }\n}\n\nHandling Webhook Notifications\n\nWhen you setup a subscription you will receive notifications on your chosen topics. How you handle those notifications, i.e. the HTTP status code returned, will determine the subsequent state of that subscription.\n\nResponse Code\tDescription\tAction\n2xx\tSuccess\tThe webhook was successfully delivered.\n410\tGone\tWhen a 410 is received, we assume the resource is no longer available. We will disable the subscription and no more notifications will be sent.\n429\tToo many requests\tWhen a 429 is received, all notifications from that subscription will be throttled. Depending on the rate of delivery, this delay can be between 1 minute to 2 hours. If 429s continue and any notification is delayed for > 2 hours then we will drop that notification.\n4xx (excl. 429) 5xx\tClient or service errors\tWe will retry after 1 minute for all other errors. If the 2nd retry fails then we mark the notification delivery as failed.\n\n❗️ Timeout\n\nYou have 5 seconds to respond to a notification. If you don't send a response inside that time, the notification is treated as failed and will be retried only once after 1 minute.\n\nSigned Notifications\n\nEach webhook notification is signed by Intercom via an X-Hub-Signature header. We do this so that you can verify the notification came from Intercom by decoding the signature.\n\nThe value of this X-Hub-Signature header is computed by creating a signature using the body of the JSON request and your app's client_secret value, which you can find on the Basic Info page of your app.\n\nThe signature is the hexadecimal (40-byte) representation of a SHA-1 signature computed using the HMAC algorithm as defined in RFC2104.\n\nThe X-Hub-Signature header value starts with the string sha1= followed by the signature.\n\nPOST https://example.org/hooks\nUser-Agent: intercom-parrot-service-client/1.0\nX-Hub-Signature: sha1=21ff2e149e0fdcac6f947740f6177f6434bda921\nAccept: application/json\nContent-Type: application/json\n\n{\n  \"type\" : \"notification_event\",\n  \"id\" : \"notif_78c122d0-23ba-11e4-9464-79b01267cc2e\",\n  \"topic\" : \"user.created\",\n  \"app_id\" : \"a86dr8yl\",\n  \"data\" : {\n    \"type\" : \"notification_event_data\",\n    \"item\" : {\n      \"type\" : \"user\",\n      \"id\" : \"530370b477ad7120001d\",\n      \"user_id\" : \"25\",\n      \"name\" : \"Hoban Washburne\",\n      \"unsubscribed_from_emails\" : false,\n      \"custom_attributes\" : {}\n    }\n  }\n}\n\nContact Tag Model for Webhooks\n\nThe Contact Tag model is only returned for webhooks. It is not used with the Lead (i.e. contact) or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"contact_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"1287\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"contact\" : {\n      \"type\": \"contact\",\n      \"id\": \"1287ab1287fefe\",\n      \"user_id\": \"12\"\n  }\n}\n\n\nA contact tag is composed from the existing contact and tag JSON and is sent when contacts are tagged and untagged via the contact.tag.created and contact.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'contact_tag'.\ncreated_at\ttimestamp\tThe time the contact tag object was created.\ntag\tTag\tThe tag that was added or removed.\ncontact\tcontact\tThe contact that was tagged or untagged.\nUser Tag Model for Webhooks\n\nThe User Tag model is only returned for webhooks. It is not used with the User or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"user_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"17513\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"user\" : {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n      \"user_id\": \"25\"\n  }\n}\n\n\nA user tag is composed from the existing user and tag JSON and is sent when users are tagged and untagged via the user.tag.created and user.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user_tag'.\ncreated_at\ttimestamp\tThe time the user tag object was created.\ntag\tTag\tThe tag that was added or removed.\nuser\tUser\tThe user that was tagged or untagged."
  },
  {
    "title": "Current Canvas",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/requestobjects/current-canvas/",
    "html": "Current Canvas\nDescription\n\nThe current_canvas object mirrors the same format as the Canvas Object. This will be the canvas that was most recently showing before the request was sent.\n\nExample Object\n{\n  current_canvas: {\n    content: { \n      components : [\n        {\n          \"type\": \"button\",\n          \"id\": \"button-1\",\n          \"label\": \"This canvas showed before I was clicked\",\n          \"action\": {\n            \"type\": \"submit\"\n          }\n        }\n      ]\n    }\n  }\n}\n"
  },
  {
    "title": "Context",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/requestobjects/context/",
    "html": "Context\nDescription\n\nThe context object provides additional details on where the app has been added (or is currently being used), what page the app is being used on, and information on the Messenger settings. This is in order for you give a fully customised experience based on the customers use case.\n\nIf the location is conversation then you will also be given a conversation_id. If you need to use details about the conversation, then you have to use the conversation_id to make a call to our Conversations API and retrieve the conversation object.\n\nAttributes\nKey\tType\tLocation\tDescription\nconversation_id\tinteger\tConversation\tThe id of the conversation where the app is added or being used.\nlocation\tstring\tConversation, Messenger Home, Message, Operator\tWhere the app is added or the action took place. Can be either 'conversation', 'home', 'message', or 'operator'.\nlocale\tstring\tConversation, Messenger Home, Message, Operator\tThe default end-user language of the Messenger. Use to localise Messenger App content.\nmessenger_action_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers action colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nmessenger_background_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers background colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nreferrer\tstring\tConversation, Messenger Home, Message, Operator\tThe current page URL where the app is being used.\nExample Objects\n{\n  conversation_id: 4294967297,\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n\n{\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n"
  },
  {
    "title": "Pagination",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/common-structures/pagination/",
    "html": "Pagination\n\nThe majority of list resources in the API are paginated to allow clients to traverse data over multiple requests.\n\nTheir responses are likely to contain a pages object that hosts pagination links which a client can use to paginate through the data without having to construct a query. The link relations for the pages field are as follows.\n\nPages Object\nParameter\tDescription\nnext\tA link to the next page of results. A response that does not contain a next link does not have further data to fetch.\nprev\tA link to the previous page of results.\nfirst\tA link to the first page of results.\nlast\tA link to the last page of results.\nWHAT ABOUT FOR CONTACTS AND SEARCHES?\n\nWhen listing any Contact objects, we will instead use a cursor-based approach.\n\nOur Search resources will instead use a POST-based approach."
  },
  {
    "title": "Use of HTTP",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/common-structures/use-of-http/",
    "html": "Use of HTTP\n\nRequest methods are used in accordance with HTTP.\n\nGET is used to access resources and perform queries. The API does not allow modifications (creates, updates, deletes) to occur via GET.\nPOST is used to create or update resources. The preferred model for creation is to post JSON to a 'collections' resource - for example the collections resource for users is https://api.intercom.io/users.\nDELETE is used to delete resources.\n\nResponses use standard HTTP codes. Where there are client or server errors, a list of of one or more errors in JSON format is returned in the body - see Error Objects for more details.\n\nThe API may send cache directives where suitable, notably the ETag, Last-Modified and If-Modified-Since headers.\n\nThe Accept header must be used by a client used to indicate a preferred response for GET/HEAD requests. Requests without an Accept header of application/json may be rejected with a client error of 404 or 406.\n\nThe Content-Type header should be used by clients to indicate the submitted format for POST/PUT requests."
  },
  {
    "title": "Contact",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/requestobjects/contact/",
    "html": "Contact\nDescription\n\nThe contact object provides information on the Intercom contact. You can see more about this on the Contacts Model page of our API Reference.\n\nExample Object\n{\n  \"type\": \"contact\",\n  \"id\": \"5ba682d23d7cf92bef87bfd4\",\n  \"workspace_id\": \"ecahpwf5\",\n  \"external_id\": \"25\",\n  \"role\": \"user\",\n  \"email\": \"wash@serenity.io\",\n  \"phone\": \"+1123456789\",\n  \"name\": \"Hoban Washburn\",\n  \"avatar\": \"https://example.org/128Wash.jpg\",\n  \"owner_id\": 127,\n  \"social_profiles\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"social_profile\",\n        \"name\": \"Twitter\",\n        \"url\": \"http://twitter.com/th1sland\"\n      }\n    ]\n  },\n  \"has_hard_bounced\": false,\n  \"marked_email_as_spam\": false,\n  \"unsubscribed_from_emails\": false,\n  \"created_at\": 1571672154,\n  \"updated_at\": 1571672158,\n  \"signed_up_at\": 1571069751,\n  \"last_seen_at\": 1571069751,\n  \"last_replied_at\": 1571672158,\n  \"last_contacted_at\": 1571672158,\n  \"last_email_opened_at\": 1571673478,\n  \"last_email_clicked_at\": 1571676789,\n  \"language_override\": null,\n  \"browser\": \"chrome\",\n  \"browser_version\": \"77.0.3865.90\",\n  \"browser_language\": \"en\",\n  \"os\": \"OS X 10.14.6\",\n  \"location\": {\n    \"type\": \"location\",\n    \"country\": \"Ireland\",\n    \"region\": \"Dublin\",\n    \"city\": \"Dublin\"\n  },\n  \"android_app_name\": null,\n  \"android_app_version\": null,\n  \"android_device\": null,\n  \"android_os_version\": null,\n  \"android_sdk_version\": null,\n  \"android_last_seen_at\": null,\n  \"ios_app_name\": null,\n  \"ios_app_version\": null,\n  \"ios_device\": null,\n  \"ios_os_version\": null,\n  \"ios_sdk_version\": null,\n  \"ios_last_seen_at\": null,\n  \"custom_attributes\": {\n    \"paid_subscriber\": true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 1\n  },\n  \"tags\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"tag\",\n        \"id\": \"2\",\n        \"url\": \"/tags/2\"\n      },\n      {\n        \"type\": \"tag\",\n        \"id\": \"4\",\n        \"url\": \"/tags/4\"\n      },\n      {\n        \"type\": \"tag\",\n        \"id\": \"5\",\n        \"url\": \"/tags/5\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/tags\",\n    \"total_count\": 3,\n    \"has_more\": false\n  },\n  \"notes\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"note\",\n        \"id\": \"20114858\",\n        \"url\": \"/notes/20114858\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/notes\",\n    \"total_count\": 1,\n    \"has_more\": false\n  },\n  \"companies\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"company\",\n        \"id\": \"5ba686093d7cf93552a3dc99\",\n        \"url\": \"/companies/5ba686093d7cf93552a3dc99\"\n        \n      },\n      {\n        \"type\": \"company\",\n        \"id\": \"5cee64a03d7cf90c51b36f19\",\n        \"url\": \"/companies/5cee64a03d7cf90c51b36f19\"\n      },\n      {\n        \"type\": \"company\",\n        \"id\": \"5d7668883d7cf944dbc5c791\",\n        \"url\": \"/companies/5d7668883d7cf944dbc5c791\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/companies\",\n    \"total_count\": 3,\n    \"has_more\": false\n  }\n}\n"
  },
  {
    "title": "Pagination & Sorting (Search)",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/common-structures/pagination-search/",
    "html": "Pagination & Sorting (Search)\n\nWhen you use any Search resource, we require you to make a POST request that will not accept the common query params of GET requests. Therefore, the structure here has slight variations to our cursor-based approach.\n\n📘\n\nThis currently only applies to Searching for Contacts and Searching for Conversations.\n\nPagination\nExample Request Body with Pagination for first page\n{\\n \\\"query\\\":  {\\n    \\\"field\\\": \\\"name\\\",\\n    \\\"operator\\\": \\\"=\\\",\\n    \\\"value\\\": \\\"alex\\\"\\n  },\\n  \\\"pagination\\\": {\\n    \\\"per_page\\\": 5,\\n  } \\n}\n\n\nYou can specify how many items per page you want to fetch.\n\nDEFAULT PAGINATION AMOUNT\n\nIf pagination is not provided, the request defaults to 50 items.\n\nExample Initial Pages Object\n{\\n  \\\"pages\\\": {\\n  \\\"type\\\": \\\"pages\\\",\\n  \\\"next\\\": {\\n    \\\"page\\\": 4,\\n    \\\"starting_after\\\": \\\"1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\\\\nIncfQLD3ouPkZlCwJ86F\\\\n\\\"\\n  },\\n  \\\"page\\\": 3,\\n  \\\"per_page\\\": 5,\\n  \\\"total_pages\\\": 10\\n  }\\n}\n\n\nIn order to iterate through pages, you must parse the query response. A query with multiple response pages will include a next key in the pages hash. When a next value is provided, the starting_after value must be sent back in a new request to iterate to the next page.\n\n🚧 Paginating through all results\n\nThis method of pagination is used to iterate through a result set until all results have been fetched, not to directly go to page X of the results. This is not possible.\n\nExample Request Body with Pagination for next page\n{\\n \\\"query\\\":  {\\n    \\\"field\\\": \\\"name\\\",\\n    \\\"operator\\\": \\\"=\\\",\\n    \\\"value\\\": \\\"alex\\\"\\n  },\\n  \\\"pagination\\\": {\\n    \\\"per_page\\\": 5,\\n    \\\"starting_after\\\": \\\"1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\\\\nIncfQLD3ouPkZlCwJ86F\\\\n\\\"\\n  } \\n}\\n\n\n\n🚧 Warning about search context state\n\nThe starting_after context is stateless. Consequently, if items are updated between 2 paginated queries, this can lead to duplicate or missed records.\n\nFor example, if a query is sorting results by number of sessions and an item is updated from 1 session to 2 sessions during the pagination, they may be listed on page 1 of the results, but also on page 2.\n\nSorting\nExample Request Body with Sort\n{\n \"query\":  {\n    \"field\": \"name\",\n    \"operator\": \"=\",\n    \"value\": \"alex\"\n  },\n  \"sort\": {\n    \"field\": \"name\",\n    \"order\": \"ascending\"\n  } \n}\n\n\nThe Search resources can also sort query results by using the following parameters within the sort object:\n\nParameter\tRequired?\tDescription\nfield\tYes\tAny searchable attribute (available on the Simple Query \"Allowed fields\").\norder\tNo\tEither \"ascending\" or \"descending\" - default to \"descending\" if none is provided.\nDEFAULT SORT ORDER\n\nIf no sort pattern is provided, the query will use the default sorting parameter \"last_request_at\" with a descending value (e.g. listing most recent active items first)."
  },
  {
    "title": "Context",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/requestobjects/context/",
    "html": "Context\nDescription\n\nThe context object provides additional details on where the app has been added (or is currently being used), what page the app is being used on, and information on the Messenger settings. This is in order for you give a fully customised experience based on the customers use case.\n\nIf the location is conversation then you will also be given a conversation_id. If you need to use details about the conversation, then you have to use the conversation_id to make a call to our Conversations API and retrieve the conversation object.\n\nAttributes\nKey\tType\tLocation\tDescription\nconversation_id\tinteger\tConversation\tThe id of the conversation where the app is added or being used.\nlocation\tstring\tConversation, Messenger Home, Message, Operator\tWhere the app is added or the action took place. Can be either 'conversation', 'home', 'message', or 'operator'.\nlocale\tstring\tConversation, Messenger Home, Message, Operator\tThe default end-user language of the Messenger. Use to localise Messenger App content.\nmessenger_action_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers action colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nmessenger_background_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers background colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nreferrer\tstring\tConversation, Messenger Home, Message, Operator\tThe current page URL where the app is being used.\nExample Objects\n{\n  conversation_id: 4294967297,\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n\n{\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n"
  },
  {
    "title": "Card Creation Options",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/requestobjects/card-creation-options/",
    "html": "Card Creation Options\nDescription\n\nThe card_creation_options object is a JSON hash containing key-value pairs. These key-value pairs either represent:\n\nData that was sent within the results object in response to the Configure request.\nData that was sent within the card_creation_options object in response to the Submit request.\nExample Object\ncard_creation_options: { \"key\": \"value\" } //Can be more than one pair\n"
  },
  {
    "title": "List Company Users",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/companies/list-company-users/",
    "html": "List Company Users\nExample ID Request\n$ curl https://api.intercom.io/companies/5310dabd598c9a0a7e000005/users \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nintercom.companies.users(company.id)\n\nMap<String, String> params params = Maps.newHashMap();\nparams.put(\"company_id\", \"6\");\nUserCollection users = Company.listUsers(params);\n\nExample Company ID Request\n$ curl https://api.intercom.io/companies?company_id=22&type=user \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"user.list\",\n  \"total_count\": 10,\n  \"users\": [\n    {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ]\n}\n\n# NB: Full User objects are returned\n\nintercom.companies.users(company.company_id)\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"company_id\", \"1\");\nCompany company = Company.find(map);\n\n\nThe users belonging to a company can be listed by sending a GET request to https://api.intercom.io/companies/{id}/users, where {id} is the value of the company's id field.\n\nTo query for a company's users using the company id value you have assigned to the company, send a GET request to https://api.intercom.io/companies, using the parameter {company_id} with value of the company id, and a type field with a value of users.\n\nRequest Parameters\nParameter\tRequired\tDescription\ncompany_id\tyes\tYour company id for the company.\ntype\tyes\tThe value must be user\nReturns\n\nA pageable list of users and leads. Response objects contain type set to user and contact respectively. See the section \"List Users\" and \"List Leads\" for details of the JSON response."
  },
  {
    "title": "Admin",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/requestobjects/admin/",
    "html": "Admin\nDescription\n\nThe admin object provides information on the Intercom teammate. You can see more about this on the Admin Model page of our API Reference.\n\nExample Object\n{\n  admin: {\n    type: \"admin\",\n    id: \"814860\",\n    name: \"IntercomTest\",\n    email: \"theadmin@example.com\",\n    job_title: \"Existentialist\",\n    away_mode_enabled: false,\n    away_mode_reassign: false,\n    avatar: {\n      image_url: \"https://static.site.test.icon\"\n    },\n    team_ids: [\n      814865\n    ]\n  }\n}\n"
  },
  {
    "title": "List by Tag or Segment",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/companies/list-by-tag-or-segment/",
    "html": "List by Tag or Segment\nExample List by tag request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/companies?tag_id=17 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"company.list\\\",\\n  \\\"total_count\\\": 105,\\n  \\\"companies\\\": [\\n    {\\n      \\\"type\\\": \\\"company\\\",\\n      \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n       ...\\n     },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/companies?tag=14&per_page=50&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 3\\n  }\\n}\\n\\n# NB: Full company objects are returned\n\n\nYou can fetch segmented and tagged companies by querying the companies resource with the segment_id and tag_id parameters (for information on how to tag companies see the section \"Create and update tags\").\n\nNote that you can query by tag or segment but not both in the same request.\n\nRequest Parameters\nParameter\tRequired\tDescription\ntag_id\tone of\tThe id of the tag to filter by.\nsegment_id\tone of\tThe id of the segment to filter by.\nReturns\n\nA pageable list of companies. Like a plain company list, the result contains a pages object that indicates if more companies exist via the next field."
  },
  {
    "title": "List Companies",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/companies/list-companies/",
    "html": "List Companies\nList companies\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/companies \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"company.list\\\",\\n  \\\"total_count\\\": 105,\\n  \\\"companies\\\": [\\n    {\\n      \\\"type\\\": \\\"company\\\",\\n      \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n       ...\\n     },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/companies?per_page=50&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 3\\n  }\\n}\\n\\n# NB: Full company objects are returned\n\n\nYou can fetch a list of companies. The company list is sorted by the last_request_at field and by default is ordered descending, most recently requested first.\n\nNote that the API does not include companies who have no associated users in list responses.\n\nRequest Parameters\n\nYou can optionally request the result page size and which page to fetch as follows -\n\nParameter\tRequired\tDescription\npage\tno\twhat page of results to fetch defaults to first page.\nper_page\tno\thow many results per page defaults to 50.\norder\tno\tasc or desc. Return the companies in ascending or descending order. defaults to desc.\nReturns\n\nA pageable list of companies. The list contains a pages object that indicates if more items exist via the next field, whose value is a URL that can be used to fetch the next page. If the next field is not present, that indicates there are no further items in the list.\n\nWhen using the Companies endpoint and the pages object to iterate through the returned companies, there is a limit of 10,000 Companies that can be returned. If you need to list or iterate on more than 10,000 Companies, please use the Scroll API."
  },
  {
    "title": "Scroll over all companies",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/companies/iterating-over-all-companies/",
    "html": "Scroll over all companies\n\nThe list all companies functionality does not work well for huge datasets, and can result in errors and performance problems when paging deeply. The Scroll API provides an efficient mechanism for iterating over all companies in a dataset.\n\nEach app can only have 1 scroll open at a time. You'll get an error message if you try to have more than one open per app.\nIf the scroll isn't used for 1 minute, it expires and calls with that scroll param will fail\nIf the end of the scroll is reached, \"companies\" will be empty and the scroll parameter will expire\n# Send a GET request to get the first page of companies\n$ curl \\\n'https://api.intercom.io/companies/scroll' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n# To get the next page use the scroll param returned in the response\n$ curl \\\n'https://api.intercom.io/companies/scroll?scroll_param=562bc29f-ea55-4823-aaaf-f3faadceaa59' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"company.list\",\n  \"companies\": [\n    {\n      \"type\": \"company\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ],\n  \"scroll_param\": \"25b649f7-4d33-4ef6-88f5-60e5b8244309\"\n}\n\n# You can use the scroll method to list all your companies\nintercom.companies.scroll.each { |company| puts company.name}\n# Alternatively you can use the scroll.next method to get 100 companies with each request\nresult = intercom.companies.scroll.next\nresult.scroll_param\n=> \"0730e341-63ef-44da-ab9c-9113f886326d\"\nresult = intercom.companies.scroll.next(\"0730e341-63ef-44da-ab9c-9113f886326d\");\n\nSCROLL PARAMETER\n\nYou can get the first page of companies by simply sending a GET request to the scroll endpoint. For subsequent requests you will need to use the scroll parameter from the response.\n\n❗️ Scroll network timeouts\n\nSince scroll is often used on large datasets network errors such as timeouts can be encountered. When this occurs you will need to restart your scroll query as it is not possible to continue from a specific point when using scroll.\n\nWhen this occurs you will see a HTTP 500 error with the following message:\n\"Request failed due to an internal network error. Please restart the scroll operation.\""
  },
  {
    "title": "Admin Conversations Count Model",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/counts/admin-conversations/",
    "html": "Admin Conversations Count Model\nAdmin Conversation Count Object\n\nThe admin conversation count supplies per Admin counts\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nconversation\tobject\tContains counts related to admins\nconversation.admin\tarray\tContains and array of objects detailing each Admin\nconversation.admin.open\tnumber\tContains the number of open conversations for the Admin\nconversation.admin.closed\tnumber\tContains the number of closed conversations for the Admin\nconversation.admin.id\tstring\tContains the Admin id\nconversation.admin.name\tstring\tContains the Admin name\n{\n  \"type\": \"count\",\n  \"conversation\": {\n    \"admin\": [\n      {\n        \"id\": \"1\",\n        \"name\": \"Wash\",\n        \"open\": 0,\n        \"closed\": 1\n      },\n      {\n        \"id\": \"2\",\n        \"name\": \"Jayne\",\n        \"open\": 0,\n        \"closed\": 0\n      }\n    ]\n  }\n}\n\n# Conversation Admin Counts\n$ curl 'https://api.intercom.io/counts?type=conversation&count=admin' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# Conversation Admin Counts\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"conversation\": {\n    \"admin\": [\n      {\n        \"id\": \"1\",\n        \"name\": \"Wash\",\n        \"open\": 0,\n        \"closed\": 1\n      },\n      {\n        \"id\": \"2\",\n        \"name\": \"Jayne\",\n        \"open\": 0,\n        \"closed\": 0\n      }\n    ]\n  }\n}\n\nintercom.counts.for_type(type: 'conversation', count: 'admin')\n\n<?php\n// Conversation Admin Count\n$counts = $intercom->counts->getCounts([\"type\" => \"conversation\", \"count\" => \"admin\"]);\nprint_r($counts);\n?>\n\n// Conversation Admin Count\nfinal Counts.Conversation counts = Counts.conversationAdmins();\nList<Admin> admins = counts.getAdmins();\nfor (Admin admin : admins) {\n    out.println(\n      admin.getName() + \": \" +\n      admin.getClosed() + \", \" +\n      admin.getOpen());\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nConversation Admin Count\tconversation\tadmin"
  },
  {
    "title": "Companies",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/companies/companies/",
    "html": "Companies\n\nCompanies allow you to represent commercial organizations using your product.\n\nEach company will have its own description and be associated with users. You can create and update companies and add custom attributes describing them. Companies can be viewed individually or as a list, and can be queried using tags or segments.\n\nCompanies will not appear within Intercom until users have been added or associated with a company."
  },
  {
    "title": "Card Creation Options",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/requestobjects/card-creation-options/",
    "html": "Card Creation Options\nDescription\n\nThe card_creation_options object is a JSON hash containing key-value pairs. These key-value pairs either represent:\n\nData that was sent within the results object in response to the Configure request.\nData that was sent within the card_creation_options object in response to the Submit request.\nExample Object\ncard_creation_options: { \"key\": \"value\" } //Can be more than one pair\n"
  },
  {
    "title": "Close a conversation",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/conversations/close-a-conversation/",
    "html": "Close a conversation\nExample Request & Response\ncurljson\n$ curl https://api.intercom.io/conversations/<id>/parts\\n-X POST\\n-H 'Authorization:Bearer <Your access token>'\\n-H 'Accept:application/json'\\n-H 'Content-Type:application/json' -d\\n\\n{ \\n  \\\"message_type\\\": \\\"close\\\",\\n  \\\"type\\\": \\\"admin\\\",\\n  \\\"admin_id\\\": 5784329,\\n  \\\"body\\\": \\\"Closed conversation because of X.\\\"\\n}\n\n\nYou can close a conversation.\n\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Body Parameters\nParameter\tType\tRequired?\tDescripton\nmessage_type\tString\tYes\tAlways close.\ntype\tString\tYes\tAlways admin.\nadmin_id\tString\tYes\tThe id of the admin who is performing the action.\nbody\tString\tNo\tOptionally you can leave a message in the conversation to provide additional context to the user and other teammates.\nResponse\n\nThis will return the Conversation that has been closed."
  },
  {
    "title": "Company Model",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/companies/company-model/",
    "html": "Company Model\nExample Company Object\n{\\n  \\\"type\\\": \\\"company\\\",\\n  \\\"id\\\": \\\"531ee472cce572a6ec000006\\\",\\n  \\\"name\\\": \\\"Blue Sun\\\",\\n  \\\"plan\\\": \\\"plan1\\\",\\n  \\\"company_id\\\": \\\"6\\\",\\n  \\\"remote_created_at\\\": 1394531169,\\n  \\\"created_at\\\": 1394533506,\\n  \\\"updated_at\\\": 1396874658,\\n  \\\"size\\\": 85,\\n  \\\"website\\\": \\\"http://www.example.com\\\",\\n  \\\"industry\\\": \\\"Manufacturing\\\",\\n  \\\"monthly_spend\\\": 49,\\n  \\\"session_count\\\": 26,\\n  \\\"user_count\\\": 10,\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"team_mates\\\": 0\\n  }\\n}\n\nExample Company List\n{\\n  \\\"type\\\": \\\"company.list\\\",\\n  \\\"total_count\\\": 1,\\n  \\\"companies\\\": [\\n    {\\n      \\\"type\\\": \\\"company\\\",\\n      \\\"id\\\": \\\"531ee472cce572a6ec000006\\\",\\n      \\\"name\\\": \\\"Blue Sun\\\",\\n      \\\"plan\\\": \\\"plan1\\\",\\n      \\\"company_id\\\": \\\"6\\\",\\n      \\\"remote_created_at\\\": 1394531169,\\n      \\\"created_at\\\": 1394533506,\\n      \\\"updated_at\\\": 1396874658,\\n      \\\"size\\\": 85,\\n      \\\"website\\\": \\\"http://www.example.com\\\",\\n      \\\"industry\\\": \\\"Manufacturing\\\",\\n      \\\"monthly_spend\\\": 49,\\n      \\\"session_count\\\": 26,\\n      \\\"user_count\\\": 10,\\n      \\\"custom_attributes\\\": {\\n        \\\"paid_subscriber\\\" : true,\\n        \\\"team_mates\\\": 0\\n      }\\n    }\\n  ],\\n  \\\"pages\\\": {\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 1\\n  }\\n}\n\nCompany Object\n\nA company object contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'company'\nid\tstring\tThe Intercom defined id representing the company\ncreated_at\ttimestamp\tThe time the company was added to Intercom\nremote_created_at\ttimestamp\tThe time the company was created by you\nupdated_at\ttimestamp\tThe last time the company was updated\nlast_request_at\ttimestamp\tThe time the company last recorded making a request\ncompany_id\tstring\tThe company id you have defined for the company\nname\tstring\tThe name of the company\ncustom_attributes\tobject\tThe custom attributes you have set on the company\nsession_count\tinteger\tHow many sessions the company has recorded\nmonthly_spend\tnumber\tHow much revenue the company generates for your business\nuser_count\tnumber\tThe number of users in the company\nplan*\tstring\tThe name of the plan you have associated with the company.\nsize\tinteger\tThe number of employees in the company\nwebsite\tstring\tThe URL for the company website\nindustry\tstring\tThe industry that the company operates in\n\n* Note that plan is set as a string but returned as an object as described below. You can only set the name of a plan using the plan string.\n\nAttribute\tType\tDescription\ntype\tstring\tWill always be of type 'plan'\nid\tstring\tThe plan ID\nname\tstring\tThe name of the plan, note that this is the only field that can be set via the API.\n\nAny integer values in the user model are limited to the int32 range -2^31 to 2^31 -1\n\nCompany List\n\nA company list contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'company.list'\ntotal_count\tinteger\tThe number of companies for this App\ncompanies\tarray\tA list of companies\npages\tobject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch"
  },
  {
    "title": "Contact",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/requestobjects/contact/",
    "html": "Contact\nDescription\n\nThe contact object provides information on the Intercom contact. You can see more about this on the Contacts Model page of our API Reference.\n\nExample Object\n{\n  \"type\": \"contact\",\n  \"id\": \"5ba682d23d7cf92bef87bfd4\",\n  \"workspace_id\": \"ecahpwf5\",\n  \"external_id\": \"25\",\n  \"role\": \"user\",\n  \"email\": \"wash@serenity.io\",\n  \"phone\": \"+1123456789\",\n  \"name\": \"Hoban Washburn\",\n  \"avatar\": \"https://example.org/128Wash.jpg\",\n  \"owner_id\": 127,\n  \"social_profiles\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"social_profile\",\n        \"name\": \"Twitter\",\n        \"url\": \"http://twitter.com/th1sland\"\n      }\n    ]\n  },\n  \"has_hard_bounced\": false,\n  \"marked_email_as_spam\": false,\n  \"unsubscribed_from_emails\": false,\n  \"created_at\": 1571672154,\n  \"updated_at\": 1571672158,\n  \"signed_up_at\": 1571069751,\n  \"last_seen_at\": 1571069751,\n  \"last_replied_at\": 1571672158,\n  \"last_contacted_at\": 1571672158,\n  \"last_email_opened_at\": 1571673478,\n  \"last_email_clicked_at\": 1571676789,\n  \"language_override\": null,\n  \"browser\": \"chrome\",\n  \"browser_version\": \"77.0.3865.90\",\n  \"browser_language\": \"en\",\n  \"os\": \"OS X 10.14.6\",\n  \"location\": {\n    \"type\": \"location\",\n    \"country\": \"Ireland\",\n    \"region\": \"Dublin\",\n    \"city\": \"Dublin\"\n  },\n  \"android_app_name\": null,\n  \"android_app_version\": null,\n  \"android_device\": null,\n  \"android_os_version\": null,\n  \"android_sdk_version\": null,\n  \"android_last_seen_at\": null,\n  \"ios_app_name\": null,\n  \"ios_app_version\": null,\n  \"ios_device\": null,\n  \"ios_os_version\": null,\n  \"ios_sdk_version\": null,\n  \"ios_last_seen_at\": null,\n  \"custom_attributes\": {\n    \"paid_subscriber\": true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 1\n  },\n  \"tags\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"tag\",\n        \"id\": \"2\",\n        \"url\": \"/tags/2\"\n      },\n      {\n        \"type\": \"tag\",\n        \"id\": \"4\",\n        \"url\": \"/tags/4\"\n      },\n      {\n        \"type\": \"tag\",\n        \"id\": \"5\",\n        \"url\": \"/tags/5\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/tags\",\n    \"total_count\": 3,\n    \"has_more\": false\n  },\n  \"notes\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"note\",\n        \"id\": \"20114858\",\n        \"url\": \"/notes/20114858\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/notes\",\n    \"total_count\": 1,\n    \"has_more\": false\n  },\n  \"companies\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"company\",\n        \"id\": \"5ba686093d7cf93552a3dc99\",\n        \"url\": \"/companies/5ba686093d7cf93552a3dc99\"\n        \n      },\n      {\n        \"type\": \"company\",\n        \"id\": \"5cee64a03d7cf90c51b36f19\",\n        \"url\": \"/companies/5cee64a03d7cf90c51b36f19\"\n      },\n      {\n        \"type\": \"company\",\n        \"id\": \"5d7668883d7cf944dbc5c791\",\n        \"url\": \"/companies/5d7668883d7cf944dbc5c791\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/companies\",\n    \"total_count\": 3,\n    \"has_more\": false\n  }\n}\n"
  },
  {
    "title": "Delete a Company",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/companies/delete-a-company/",
    "html": "Delete a Company\n\nCurrently, the API does not support deleting a company. The operation may be added in the future."
  },
  {
    "title": "Current Canvas",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/requestobjects/current-canvas/",
    "html": "Current Canvas\nDescription\n\nThe current_canvas object mirrors the same format as the Canvas Object. This will be the canvas that was most recently showing before the request was sent.\n\nExample Object\n{\n  current_canvas: {\n    content: { \n      components : [\n        {\n          \"type\": \"button\",\n          \"id\": \"button-1\",\n          \"label\": \"This canvas showed before I was clicked\",\n          \"action\": {\n            \"type\": \"submit\"\n          }\n        }\n      ]\n    }\n  }\n}\n"
  },
  {
    "title": "Create or Update Company",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/companies/create-or-update-company/",
    "html": "Create or Update Company\nExample Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/companies \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type:application/json' -d '\\n{\\n  \\\"name\\\": \\\"Blue Sun\\\",\\n  \\\"plan\\\": \\\"Paid\\\",\\n  \\\"company_id\\\": \\\"6\\\",\\n  \\\"remote_created_at\\\": 1394531169,\\n  \\\"size\\\": 750,\\n  \\\"website\\\": \\\"http://www.example.com\\\",\\n  \\\"industry\\\": \\\"Manufacturing\\\",\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"team_mates\\\": 0,\\n    \\\"monthly_spend\\\": 155.98\\n  }\\n}'\n\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"company\\\",\\n    \\\"company_id\\\": \\\"6\\\",\\n    \\\"id\\\": \\\"57e0120926806ceca3c13ba8\\\",\\n    \\\"app_id\\\": \\\"pi3243fa\\\",\\n    \\\"name\\\": \\\"Blue Sun\\\",\\n    \\\"remote_created_at\\\": 1394531169,\\n    \\\"created_at\\\": 1474302473,\\n    \\\"updated_at\\\": 1475659931,\\n    \\\"last_request_at\\\": 1473419085,\\n    \\\"monthly_spend\\\": 49,\\n    \\\"session_count\\\": 0,\\n    \\\"user_count\\\": 0,\\n    \\\"tags\\\": {\\n        \\\"type\\\": \\\"tag.list\\\",\\n        \\\"tags\\\": []\\n    },\\n    \\\"segments\\\": {\\n        \\\"type\\\": \\\"segment.list\\\",\\n        \\\"segments\\\": [\\n            {\\n                \\\"type\\\": \\\"segment\\\",\\n                \\\"id\\\": \\\"56cc69cc8618d37b45000009\\\"\\n            }\\n        ]\\n    },\\n    \\\"plan\\\": {\\n        \\\"type\\\": \\\"plan\\\",\\n        \\\"id\\\": \\\"108609\\\",\\n        \\\"name\\\": \\\"Paid\\\"\\n    },\\n    \\\"custom_attributes\\\": {\\n        \\\"paid_subscriber\\\": true,\\n        \\\"team_mates\\\": 0,\\n        \\\"referral_source\\\": \\\"Google\\\",\\n        \\\"founded\\\": \\\"20th Century\\\",\\n        \\\"monthly_spend\\\": 155.98,\\n        \\\"remove\\\": true\\n    }\\n}\n\n\nCompanies can be created or updated via a POST to https://api.intercom.io/companies, which accepts a JSON object describing the company.\n\nCOMPANIES WITH NO USERS\n\nIt is important to note that companies will be only visible in Intercom when there is at least one associated user. Check the Companies and Users section for more information\n\nCompanies are looked up via company_id, if not found via company_id, the new company will be created, if found, that company will be updated.\n\nNote that the company_id field itself cannot be updated through the API.\n\nCompanies may also be created or updated via a User request - see the section \"Create or Update User\".\n\nAttributes\n\nThe table below shows the fields you can create or update for a company -\n\nAttribute\tType\tDescription\nremote_created_at\ttimestamp\tThe time the company was created by you\ncompany_id\tstring\tThe company id you have defined for the company\nname\tstring\tThe name of the company\nmonthly_spend\tnumber\tHow much revenue the company generates for your business. Note that this will truncate floats. i.e. it only allow for whole integers, 155.98 will be truncated to 155. Note that this has an upper limit of 2**31-1 or 2147483647.\nplan\tstring\tThe name of the plan you have associated with the company\nsize\tnumber\tThe number of employees in this company\nwebsite\tstring\tThe URL for this company's website. Please note that the value specified here is not validated. Accepts any string.\nindustry\tstring\tThe industry that this company operates in\ncustom_attributes\tobject\tA hash of key/value pairs containing any other data about the company you want Intercom to store.\nCustom Attributes\n\nThe custom_attributes object allows you to send any information you wish about a company with the following restrictions -\n\nField names must not contain Periods (.) or Dollar ($) characters\nField names must be no longer than 190 characters.\nField values must be JSON Strings, Numbers or Booleans - Objects and Arrays will be rejected.\nString field values must be no longer than 255 characters.\nMaximum of 100 fields.\nSession Count\n\nA company's session count is tied to users' session count whilst in the context of that company. So, to update a company session count,\nupdate the user with that company and increment the user's session.\n\nReturns\n\nThe created or updated company object.\n\nNew company objects will be provided with an id field - this value cannot be created or edited by clients."
  },
  {
    "title": "Webhook models",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/webhooks/webhook-models/",
    "html": "Webhook models\nWebhook Topics\n\nYou can subscribe to the following Webhook topics, and you will receive notifications on your endpoint URL when an event occurs. The 'Object' column shows the Intercom object related to the event sent as part of the notification.\n\nEach Webhook topic is associated with one or more permissions. When you set up a subscription to a particular topic, you will need to select the appropriate permissions to be able to receive a notification for that topic.\n\n🚧 Multiple permissions\n\nSome topics are associated with multiple permissions. In these cases, you don't need to select all these permissions to subscribe to that topic.\n\nAdmin topics\nTopic\tObject\tEvent description\tPermissions\nadmin.added_to_workspace\tAdmin\tAn Admin being added to workspace\tRead admins\nadmin.away_mode_updated\tAdmin\tAdmin away mode updates\tRead admins\nadmin.removed_from_workspace\tAdmin\tAn Admin being removed from a workspace\tRead admins\nadmin.logged_in\tAdmin\tAn Admin logging into a workspace\tRead admins\nadmin.logged_out\tAdmin\tAn Admin manually logging out of Intercom in the current workspace or when the Admin's session expires after signing in through SAML SSO\tRead admins\nCompany topics\nTopic\tObject\tEvent description\tPermissions\ncompany.created\tCompany\tCompany creations\tRead users and companies\nRead one user and one company\ncompany.deleted\tCompany\tCompany deletions\tRead users and companies\nRead one user and one company\ncompany.updated\tCompany\tCompany being updated\tRead users and companies\nRead one user and one company\ncompany.contact.attached\tCompany, Contact\tCompany attached to a Contact\tRead users and companies, Read one user and one company\ncompany.contact.detached\tCompany, Contact\tCompany detached from a Contact\tRead users and companies, Read one user and one company\nContact topics\nTopic\tObject\tEvent description\tPermissions\ncontact.archived\tContact\tContacts archived\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.deleted\tContact\tContacts deleted\tRead users and companies\nRead one user and one company\ncontact.email.updated\tContact\tA Contact email address is updated\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.lead.added_email\tContact\tAn email address is added to a Contact\n(Lead)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.lead.created\tContact\tContact creations\n(Lead)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.lead.signed_up\tContact\tContacts converting from Leads to Users\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.lead.tag.created\tContact Tag\tContacts being tagged (Lead)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.lead.tag.deleted\tContact Tag\tContacts being untagged (Lead)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.lead.updated\tContact\tContacts being updated\n(Lead)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.merged\tContact\tContacts being merged\n(User and Lead)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.subscribed\tSubscription\tContacts subscribing to email\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.unarchive\tContact\tContacts unarchived\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.unsubscribed\tSubscription\tContacts unsubscribing from email\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.user.created\tContact\tContact creations\n(User)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.user.tag.created\tContact Tag\tContacts being tagged\n(User)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.user.tag.deleted\tContact Tag\tContacts being untagged\n(User)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.user.updated\tContact\tContact updated (User)\tRead users and companies, Read and write users,\nRead one user and one company\nConversation topics\nTopic\tObject\tEvent description\tPermissions\nconversation.admin.assigned\tConversation\tAdmin conversation assignments\tRead conversations\nconversation.admin.closed\tConversation\tAdmin conversation closed\tRead conversations\nconversation.admin.noted\tConversation\tAdmin conversation notes\tRead conversations\nconversation.admin.open.assigned\tConversation\tAdmin open conversation assignments\tRead conversations\nconversation.admin.opened\tConversation\tAdmin conversation opens\tRead conversations\nconversation.admin.replied\tConversation\tAdmin conversation replies\tRead conversations\nconversation.admin.single.created\tConversation\tAdmin initiated 1:1 conversations\tRead conversations\nconversation.admin.snoozed\tConversation\tAdmin conversation snoozes\tRead conversations\nconversation.admin.unsnoozed\tConversation\tAdmin conversation unsnoozes\tRead conversations\nconversation.deleted\tConversation\tConversation deleted\tRead conversations\nconversation_part.redacted\tConversation Part\tConversation parts being deleted\tRead conversations\nconversation_part.tag.created\tConversation Part\tConversation parts being tagged\tRead conversations\nconversation.priority.updated\tConversation\tConversation priority updated\tRead conversations\nconversation.rating.added\tConversation\tConversations getting a rating\tRead conversations\nconversation.read\tConversation\tContacts reading conversations\n(User and Lead)\t\nconversation.user.created\tConversation\tContact initiated conversations\n(User and Lead)\tRead conversations\nconversation.user.replied\tConversation\tContact conversation replies\n(Visitor, Lead and User)\tRead conversations\nconversation.contact.attached\tConversation, Contact\tContact attached to a conversation\tRead conversations\nconversation.contact.detached\tConversation, Contact\tContact detached from a conversation\tRead conversations\nEvent topics\nTopic\tObject\tEvent description\tPermissions\nevent.created\tEvent\tEvents created\tRead events\nSubscription topics\nTopics\tObject\tEvent description\tPermissions\ngranular.unsubscribe\tSubscription\tA User unsubscribes from a message subscription type\tRead and list users and companies\nRead and write users\nRead one user and one company\ngranular.subscribe\tSubscription\tA User subscribes from a message subscription type\tRead and list users and companies\nRead and write users\nRead one user and one company\nVisitor topics\nTopics\tObject\tEvent description\tPermissions\nvisitor.signed_up\tVisitor\tContacts converting from Visitors to Users\tRead users and companies\nRead and write users\nRead one user and one company\nPing\nTopics\tObject\tEvent description\nping\tPing\tSent when a post to the subscription's ping resource is received or periodically by Intercom. Ping is always subscribed to.\nContent stat topics\nTopics\tObject\tEvent description\tPermissions\ncontent_stat.banner\tContent Stat\tBanner message events:\n- receipt (Banner displayed)\n- goal_success\n- click\n- collected_email\n- reaction\tRead content data\ncontent_stat.carousel\tContent Stat\tMobile carousel events:\n- receipt (Carousel displayed)\n- goal_success\n- button_tap\n- completion\n- dismissal\n- permission_grant\tRead content data\ncontent_stat.chat\tContent Stat\tChat message events:\n- receipt (Chat delivered)\n- goal_success\n- open\n- click\n- collected_email\n- reply\tRead content data\ncontent_stat.checklist\tContent Stat\tChecklist events:\n- receipt (Checklist shown)\n- goal_success\tRead content data\ncontent_stat.custom_bot\tContent Stat\tCustom Bot events:\n- receipt\n- goal_success\n- reply\n- completion\tRead content data\ncontent_stat.email\tContent Stat\tEmail events:\n- receipt (Email sent)\n- goal_success\n- open\n- click\n- reply\n\nEmail failure events:\n- hard_bounce\n- soft_bounce\n- spam_complaint\n- unsubscribe\tRead content data\ncontent_stat.news_item\tContent Stat\tNews Item events:\n- receipt (News Item displayed)\n- open\n- click\n- reaction\tRead content data\ncontent_stat.post\tContent Stat\tPost message events:\n- receipt (Post sent)\n- goal_success\n- open\n- click\n- Reply\n- reaction\tRead content data\ncontent_stat.push\tContent Stat\tPush message events:\n- receipt (Push sent)\n- goal_success\n- Open\n\nPush message failure events:\n- push_failure\tRead content data\ncontent_stat.series\tContent Stat\tSeries campaign events:\n- receipt\n- goal_success\n- series_completion\n- series_disengagement\n- series_exit\tRead content data\ncontent_stat.series.webhook\tContent Stat\tSeries Webhook events:\n- receipt\n\nSeries Webhook failure event:\n- failure\tRead content data\ncontent_stat.sms\tContent Stat\tSMS message events:\n- receipt (SMS sent)\n- goal_success\n- keyword_reply\n\nFailure stat types include:\n- sms_failure\n- unsubscribe\tRead content data\ncontent_stat.survey\tContent Stat\tSurvey events:\n- receipt (Survey shown)\n- goal_success\n- answer\n- click\n- completion\n- dismissal\tRead content data\ncontent_stat.tooltip_group\tContent Stat\tTooltip events:\n- receipt\n- goal_success\tRead content data\ncontent_stat.tour\tContent Stat\tProduct tour events:\n- receipt (Tour shown)\n- goal_success\n- tour_step_failure\n- completion\tRead content data\nWebhook notification object\n\nA standard Webhook notification object contains the following fields:\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'notification_event'\nid\tstring\tThe Intercom defined id representing the notification.\nself\tstring\tThe Intercom defined URL for the subscription. Optional.\ncreated_at\ttimestamp\tThe timestamp the notification was created.\ntopic\tstring\tCorresponds to a topic.\ndelivery_attempts\tnumber\tThe number of times this notification has been attempted.\nfirst_sent_at\ttimestamp\tThe first time the delivery was attempted.\ndata\tobject\tA container for the data associated with the notification.\ndata.item\tobject\tThe data associated with the notification, which will have a 'type' field.\n\nThe contents of data.item object will be defined according to its type field. In the example below, the type value of Company indicates a company object.\n\n{\n  \"type\": \"notification_event\",\n  \"topic\": \"company.created\",\n  \"id\": \"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b3\",\n  \"app_id\" : \"a86dr8yl\",\n  \"created_at\": 1392731331,\n  \"delivery_attempts\": 1,\n  \"first_sent_at\": 1392731392,\n  \"data\": {\n    \"item\": {\n      \"type\": \"company\",\n      \"id\": \"531ee472cce572a6ec000006\",\n      \"name\": \"Blue Sun\",\n      \"company_id\": \"6\",\n      \"remote_created_at\": 1394531169,\n      \"created_at\": 1394533506,\n      \"updated_at\": 1396874658,\n      \"custom_attributes\": {\n      }\n    }\n  }\n}\n\nHandling Webhook notifications\n\nYou will receive notifications on your chosen topics when you set up a subscription. How you handle those notifications, i.e. the HTTP status code returned, will determine the subsequent state of that subscription.\n\n❗️ Timeout\n\nYou have 5 seconds to respond to a notification. If you don't send a response within that time, the notification is treated as failed and will be retried only once after 1 minute.\n\nIf you respond with too many error responses, we drop future notifications for a period of 15 minutes.\n\nResponse Code\tDescription\tAction\n2xx\tSuccess\tThe webhook was successfully delivered.\n410\tGone\tWhen a 410 is received, we assume the resource is no longer available. We will disable the subscription and no more notifications will be sent.\n429\tToo many requests\tWhen a 429 is received, all notifications from that subscription will be throttled. Depending on the rate of delivery, this delay can be between 1 minute to 2 hours. If 429s continue and any notification is delayed for > 2 hours then we will drop that notification.\n4xx (excl. 429)\n5xx\tClient or service errors\tWe will retry after 1 minute for all other errors. If the 2nd retry fails then we mark the notification delivery as failed.\nSigned notifications\n\nIntercom signs webhook notifications via an X-Hub-Signature header. We do this so that you can verify that the notification came from Intercom by decoding the signature.\n\nWe compute the value of this X-Hub-Signature header by creating a signature using the body of the JSON request and your App's client_secret value, which you can find on the Basic Info page of your App.\n\nThe signature is the hexadecimal (40-byte) representation of an SHA-1 signature computed using the HMAC algorithm defined in RFC2104.\n\nThe X-Hub-Signature header value starts with the string sha1= followed by the signature.\n\nPOST https://example.org/hooks\nUser-Agent: intercom-parrot-service-client/1.0\nX-Hub-Signature: sha1=21ff2e149e0fdcac6f947740f6177f6434bda921\nAccept: application/json\nContent-Type: application/json\n\n{\n  \"type\" : \"notification_event\",\n  \"id\" : \"notif_78c122d0-23ba-11e4-9464-79b01267cc2e\",\n  \"topic\" : \"user.created\",\n  \"app_id\" : \"a86dr8yl\",\n  \"data\" : {\n    \"type\" : \"notification_event_data\",\n    \"item\" : {\n      \"type\" : \"user\",\n      \"id\" : \"530370b477ad7120001d\",\n      \"user_id\" : \"25\",\n      \"name\" : \"Hoban Washburne\",\n      \"unsubscribed_from_emails\" : false,\n      \"custom_attributes\" : {}\n    }\n  }\n}\n\nAdmin notification object\n\nThe Admin notification object is similar to the model returned via the API. You can see an example object below:\n\n{\n  \"type\": \"admin\",\n  \"id\": \"1\",\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@intercom.io\",\n  \"job_title\": \"CEO\",\n  \"away_mode_enabled\": true,\n  \"away_mode_reassign\": false,\n  \"away_status_reason\": \"🍔 On lunch\",\n  \"has_inbox_seat\": true,\n  \"team_ids\": []\n}\n\nContact Tag notification object\n\nWe only return the Contact Tag notification object for Webhooks. You can see an example object below:\n\n{\n  \"type\": \"contact_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"1287\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"contact\" : {\n      \"type\": \"contact\",\n      \"id\": \"1287ab1287fefe\",\n        ........\n  }\n}\n\n\nA Contact Tag notification object is composed from the existing Contact and Tag objects and is sent when Contacts are tagged and untagged via the contact.user.tag.created, contact.lead.tag.created, contact.lead.tag.deleted and contact.user.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'contact_tag'.\ncreated_at\ttimestamp\tThe time the contact tag object was created.\ntag\tTag\tThe tag that was added or removed.\ncontact\tcontact\tThe contact that was tagged or untagged.\nContent Stat notification object\n\nWe only return the Content Stat notification object for Webhooks. You can see an example object below:\n\n{\n  \"type\": \"content_stat.series\",\n  \"created_at\": \"2022-10-11T15:01:07.000Z\",\n  \"content_stat\": {\n    \"id\": 1,\n    \"content_type\": \"series\",\n     \"content_id\": 1,\n     \"stat_type\": \"receipt\",\n     \"ruleset_id\": 29,\n     \"content_title\": \"Untitled\",\n     \"ruleset_version_id\": -1,\n     \"receipt_id\": 1,\n     \"tags\": {\n       \"type\": \"list\",\n       \"has_more\": false,\n       \"data\": [],\n       \"total_count\": 0\n     },\n     \"series_id\": 1,\n     \"series_title\": null,\n     \"node_id\": 3\n  },\n  \"contact\": {\n    \"type\": \"contact\",\n    \"id\": \"6318db7dfb80c614fe1792b5\",\n    ...\n  }\n}\n\n\nThe Content Stat notification object will match our existing Webhook notification object detailed here and contains the following fields:\n\nAttribute\tType\tDescription\nid\tstring\tThe unique identifier for the Content Stat set by Intercom\ncontent_type\tstring\tThe type of Content the Stat relates to, e.g. Email, Chat, Post, Push etc\ncontent_id\tstring\tThe unique identifier for the Content given by Intercom, In an A/B test each version has its own identifier.\nstat_type\tstring\tType of the stat event. While there are some common stat types like \"receipt\", others are content specific. Content Type email, for example, has stats for unsubscribe, bounce etc. The list of supported stat types is included in the table above. Others may be added over time.\ncontent_title\tstring\tThe title of Content you see in your Intercom Workspace\nruleset_id\tstring\tThe unique identifier of the Outbound Message the Content relates to in your Intercom Workspace\nruleset_version_id\tstring\tThe unique identifier of the Outbound Message version the Content relates to in your Intercom Workspace\nseries_id\tstring\tOptional - If the stat relates to a Content object (email, push, etc) which is part of a Series campaign, this will include the ID of that Series campaign\nseries_title\tstring\tOptional - If the stat relates to a Content object (email, push, etc) which is part of a Series campaign, this is title of the Series\nnode_id\tstring\tOptional - If the stat relates to a Content object (email, push, etc) which is part of a Series campaign, this is the ID of the Node in the Series\ncontact\tobject\tNested Contact object. This is the user or lead to whom the content was sent.\ncompany\tobject\tOptional nested Company object. If the content stat relates to a company (company predicates were used in the audience targeting), the company information is also included.\nContent Stat Survey response notification object\n\nThe content_stat.survey notification object contains additional payload fields relating to Survey answers. The individual answer key is included in the answer stat type event. The answers key is included in the completion stat type event showing all answers in the Survey.\n\nAttribute\tType\tDescription\nanswered_at\tstring\tThe time the question was answered.\nquestion_id\tstring\tThe ID of the specific survey question.\nquestion_text\tstring\tThe text of the question\nresponse\tstring\tThe raw response from the user"
  },
  {
    "title": "Assigning a Conversation to Unassigned",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/conversations/assigning-a-conversation-to-unassigned/",
    "html": "Assigning a Conversation to Unassigned\n\nYou can assign a conversation to be unassigned when you reply to a conversation. You should do this if you do not want the conversation to remain in your own inbox. This will allow other people pick up the conversation when the user replies to it\n\nAssign to Unassigned\n#Assign converstion to unassigned\ncurl https://api.intercom.io/conversations/6167678340/reply \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"body\": \"Reassigning to no-one!\",\n  \"type\": \"admin\",\n  \"admin_id\": \"1234\",\n  \"assignee_id\": \"0\",\n  \"message_type\": \"assignment\"\n}'\n\n#Assign converstion to unassigned  \nintercom.conversations.reply({\n  :id => '10289052666', \n  :type => 'admin',\n  :admin_id => \"1234\",\n  :assignee_id => 0,\n  :message_type => 'assignment', \n  :body => 'reassigning to no-one!'\n})\n\n<?php\n$intercom->conversations->replyToConversation(\"10957850396\", [\n    \"intercom_user_id\" => \"5977303470ab497b1babb9ef\",\n    \"body\" => \"Reassigning to no-one, i.e. unassigned\", // appears as note\n    \"type\" => \"admin\",\n    \"admin_id\" => \"814860\",\n    \"message_type\" => \"assignment\",\n    \"assignee_id\" => \"0\" \n]);\n?>\n\nAssigning a conversation to another teammate\n\nYou can also assign a conversation to another admin. Just use the admin ID of the person you want to assign the conversation to instead of '0'. You POST body should look something like this:\n\nAssign to a teammate\n{\\n  \\\"body\\\": \\\"Reassigning to someone else\\\",\\n  \\\"type\\\": \\\"admin\\\",\\n  \\\"admin_id\\\": \\\"814860\\\",\\n  \\\"assignee_id\\\": \\\"530165\\\",\\n  \\\"message_type\\\": \\\"assignment\\\"\\n}\n\nASSIGN TO A TEAM\n\nRemember you can also assign a conversation to a team. Just replace the admin ID with the team ID"
  },
  {
    "title": "User Segment/Tag Count Model",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/counts/user-tag-counts/",
    "html": "User Segment/Tag Count Model\n\nThe count of tags and segments includes archived tags and segments.\n\nUser Segment/Tag Count Object\n\nCount Object includes count for users and leads.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nuser\tobject\tContains a field called segment containing segment counts\nuser.segment\tarray\tContains a list of segment counts\nuser.tag\tarray\tContains a list of tag counts\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"tag\": [\n        {\n          \"Independent\": 3\n        }\n    ]\n  }\n}\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"segment\": [\n      {\n        \"Active\": 1\n      },\n      {\n        \"New\": 0\n      },\n      {\n        \"VIP\": 0\n      },\n      {\n        \"Slipping Away\": 0\n      },\n      {\n        \"segment 1\": 1\n      }\n    ]\n  }\n}\n\n# User Tag Count\n$ curl 'https://api.intercom.io/counts?type=user&count=tag' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# User Segment Count\n$ curl 'https://api.intercom.io/counts?type=user&count=segment' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# User Tag Count\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"tag\": [\n        {\n          \"Independent\": 3\n        }\n    ]\n  }\n}\n\n# User Segment Count\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"segment\": [\n      {\n        \"Active\": 1\n      },\n      {\n        \"New\": 0\n      },\n      {\n        \"VIP\": 0\n      },\n      {\n        \"Slipping Away\": 0\n      },\n      {\n        \"segment 1\": 1\n      }\n    ]\n  }\n}\n\nintercom.counts.for_type(type: 'user', count: 'tag')\nintercom.counts.for_type(type: 'user', count: 'segment')\n\n<?php\n// User Tag Count\n$counts = $intercom->counts->getCounts([\"type\" => \"user\", \"count\" => \"tag\"]);\nprint_r($counts);\n\n// Company Segment Count\n$counts = $intercom->counts->getCounts([\"type\" => \"user\", \"count\" => \"segment\"]);\n?>\n\n// User Tag Count\nfinal List<Counts.CountItem> tags = Counts.userTags();\nfor (Counts.CountItem tag : tags) {\n  out.println(tag.getName() + \": \" + tag.getValue());\n}\n\n// User Segment Count\nfinal List<Counts.CountItem> segments = Counts.userSegments();\nfor (Counts.CountItem seg : segments) {\n  out.println(seg.getName() + \": \" + seg.getValue());\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nUser Segment Count\tuser\tsegment\nUser Tag Count\tuser\ttag"
  },
  {
    "title": "Counts",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/counts/counts/",
    "html": "Counts\n\nYou can use the API to get counts of users and companies filtered by certain criteria.\n\nCounts are a good way to periodically obtain data for the purposes of tracking rates of change in user and company data."
  },
  {
    "title": "Conversation Count Model",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/counts/conversation-counts/",
    "html": "Conversation Count Model\nConversation Count Object\n\nThe conversation count supplies global counts about your App's conversations\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nconversation\tobject\tContains counts related to conversations\nconversation.assigned\tnumber\tContains the number of assigned conversations\nconversation.closed\tnumber\tContains the number of closed conversations\nconversation.open\tnumber\tContains the number of open conversations\nconversation.unassigned\tnumber\tContains the number of unassigned conversations\n{\n    \"type\": \"count\",\n    \"conversation\": {\n        \"open\": 30,\n        \"closed\": 17,\n        \"unassigned\": 0,\n        \"assigned\": 30\n    }\n}\n\n# Conversation Counts\n$ curl 'https://api.intercom.io/counts?type=conversation' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# Conversation App Counts\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"count\",\n    \"conversation\": {\n        \"open\": 30,\n        \"closed\": 17,\n        \"unassigned\": 0,\n        \"assigned\": 30\n    }\n}\n\nintercom.counts.for_type(type: 'conversation')\n\n<?php\n$counts = $intercom->counts->getCounts([\"type\" => \"conversation\"]);\nprint_r($counts);\n?>\n\n// Conversation Counts\nfinal Counts.Conversation totals = Counts.conversationTotals();\ntotals.getAssigned();\ntotals.getClosed();\ntotals.getOpen();\ntotals.getUnassigned();\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nConversation Count\tconversation\tNone"
  },
  {
    "title": "App Total Count Model",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/counts/company-user-counts/",
    "html": "App Total Count Model\nApp Total Count Object\n\nThe total count object contains the summary of the following fields in your app -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count.hash'\ncompany\tobject\tContains the number of companies in your App\nsegment\tobject\tContains the number of segments in your App\ntag\tobject\tContains the number of tags in your App\nuser\tobject\tContains the number of users in your App\nlead\tobject\tContains the number of leads in your App\n\nThe count of tags and segments includes archived tags and segments.\n\n{\n    \"type\": \"count.hash\",\n    \"company\": {\n        \"count\": 55\n    },\n    \"user\": {\n        \"count\": 54944\n    },\n    \"lead\": {\n        \"count\": 17\n    },\n    \"tag\": {\n        \"count\": 1012\n    },\n    \"segment\": {\n        \"count\": 7\n    }\n}\n\n# App Counts\n$ curl 'https://api.intercom.io/counts' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# App Total Counts\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"count.hash\",\n    \"company\": {\n        \"count\": 55\n    },\n    \"user\": {\n        \"count\": 54944\n    },\n    \"lead\": {\n        \"count\": 17\n    },\n    \"tag\": {\n        \"count\": 1012\n    },\n    \"segment\": {\n        \"count\": 7\n    }\n}\n\nintercom.counts.for_app\n\n<?php\n// Global App Counts\n$intercom->counts->getCounts([]);\n?>\n\n// Global App Counts\nfinal Counts.Totals appTotals = Counts.appTotals();\nappTotals.getCompany().getValue();\nappTotals.getSegment().getValue();\nappTotals.getTag().getValue();\nappTotals.getUser().getValue();\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nGlobal App Counts\tNone\tNone"
  },
  {
    "title": "Submit action",
    "url": "https://developers.intercom.com/docs/references/canvas-kit/actioncomponents/submit-action/",
    "html": "Submit action\n\nA submit action triggers a Submit Request to be sent. This request will include all values which have been entered into all the interactive components on the current canvas.\n\nParameters\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsubmit\tYes\tThe type of action you are attaching to a component.\nExample Object\naction: {\n  \"type\": \"submit\"\n}\n"
  },
  {
    "title": "URL Action",
    "url": "https://developers.intercom.com/docs/references/canvas-kit/actioncomponents/url-action/",
    "html": "URL Action\n\nA URL action opens a given link in a new browser tab.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\turl\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which will open in a new tab.\nExample Object\naction: {\n  \"type\": \"url\",\n  \"url\":  \"https://www.example.com\"\n}\n"
  },
  {
    "title": "Conversation Count Model",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/counts/conversation-counts/",
    "html": "Conversation Count Model\nConversation Count Object\n\nThe conversation count supplies global counts about your App's conversations\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nconversation\tobject\tContains counts related to conversations\nconversation.assigned\tnumber\tContains the number of assigned conversations\nconversation.closed\tnumber\tContains the number of closed conversations\nconversation.open\tnumber\tContains the number of open conversations\nconversation.unassigned\tnumber\tContains the number of unassigned conversations\n{\n    \"type\": \"count\",\n    \"conversation\": {\n        \"open\": 30,\n        \"closed\": 17,\n        \"unassigned\": 0,\n        \"assigned\": 30\n    }\n}\n\n# Conversation Counts\n$ curl 'https://api.intercom.io/counts?type=conversation' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# Conversation App Counts\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"count\",\n    \"conversation\": {\n        \"open\": 30,\n        \"closed\": 17,\n        \"unassigned\": 0,\n        \"assigned\": 30\n    }\n}\n\nintercom.counts.for_type(type: 'conversation')\n\n<?php\n$counts = $intercom->counts->getCounts([\"type\" => \"conversation\"]);\nprint_r($counts);\n?>\n\n// Conversation Counts\nfinal Counts.Conversation totals = Counts.conversationTotals();\ntotals.getAssigned();\ntotals.getClosed();\ntotals.getOpen();\ntotals.getUnassigned();\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nConversation Count\tconversation\tNone"
  },
  {
    "title": "Company User/Segment/Tag Count Model",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/counts/company-tag-counts/",
    "html": "Company User/Segment/Tag Count Model\nCompany User/Segment/Tag Count Object\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\ncompany\tobject\tContains a field called segment containing segment counts\ncompany.segment\tarray\tContains a list of segment objects their name and their number of companies tagged\ncompany.tag\tarray\tContains a list of tag objects with their name and their number of companies tagged\ncompany.user\tarray\tContains an array of companies with their name and their number of users\ncurlcurlrubyphpjava\n# Company Tag Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=tag&per_page=5' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\n# Company Segment Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=segment' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\n# Company User Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=user' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\n# Company Tag Count\\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"count\\\",\\n    \\\"company\\\": {\\n        \\\"tag\\\": [\\n            {\\n                \\\"VIP\\\": 0\\n            },\\n            {\\n                \\\"UpMarket\\\": 0\\n            },\\n            {\\n                \\\"test\\\": 0\\n            },\\n            {\\n                \\\"new\\\": 0\\n            },\\n            {\\n                \\\"smb\\\": 0\\n            }\\n        ]\\n    },\\n    \\\"pages\\\": {\\n        \\\"pages\\\": {\\n            \\\"type\\\": \\\"pages\\\",\\n            \\\"next\\\": \\\"https://api.intercom.io/counts?type=company&count=tag&page=2&per_page=5\\\",\\n            \\\"page\\\": 1,\\n            \\\"per_page\\\": 5,\\n            \\\"total_pages\\\": 203\\n        }\\n    }\\n}\\n\\n# Company Segment Count\\nHTTP/1.1 200 OK\\n{\\n    \\\"type\\\": \\\"count\\\",\\n    \\\"company\\\": {\\n        \\\"segment\\\": [\\n            {\\n                \\\"Active\\\": 2\\n            },\\n            {\\n                \\\"New\\\": 0\\n            },\\n            {\\n                \\\"Slipping Away\\\": 0\\n            },\\n            {\\n                \\\"id=10\\\": 10\\n            }\\n        ]\\n    },\\n    \\\"pages\\\": {}\\n}\\n\\n# Company User Count\\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"count\\\",\\n  \\\"company\\\": {\\n    \\\"user\\\": [\\n      {\\n        \\\"Independents\\\": 7,\\n        \\\"remote_company_id\\\": \\\"6\\\"\\n      },\\n      {\\n        \\\"Alliance\\\": 1,\\n        \\\"remote_company_id\\\": \\\"7\\\"\\n      }\\n    ]\\n  },\\n  \\\"pages\\\": {}\\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nCompany Segment Count\tcompany\tsegment\nCompany Tag Count\tcompany\ttag\nCompany User Count\tcompany\tuser\nPAGINATION WITH COMPANY COUNTS\n\nCompany tag counts are returned via pagination, which means it defaults to 50 results per page unless you specify otherwise. e.g. \\n'https://api.intercom.io/counts?type=company&count=tag&per_page=10\\\"\\n\\nTo get the next page of results you need to make a GET request with the \"next\" RUL supplied in the initial response."
  },
  {
    "title": "App Total Count Model",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/counts/company-user-counts/",
    "html": "App Total Count Model\n\nYou can use the API to get counts of users and companies filtered by certain criteria.\n\nCounts are a legacy way to periodically obtain data for the purposes of tracking rates of change in contact and company data.\n\nWorkspace Total Count Object\n\nThe total count object contains the summary of the following fields in a workspace, -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count.hash'\ncompany\tobject\tContains the number of companies in your App\nsegment\tobject\tContains the number of segments in your App\ntag\tobject\tContains the number of tags in your App\nuser\tobject\tContains the number of users in your App\nlead\tobject\tContains the number of leads in your App\n\nThe count of tags and segments includes archived tags and segments.\n\n{\n    \"type\": \"count.hash\",\n    \"company\": {\n        \"count\": 55\n    },\n    \"user\": {\n        \"count\": 54944\n    },\n    \"lead\": {\n        \"count\": 17\n    },\n    \"tag\": {\n        \"count\": 1012\n    },\n    \"segment\": {\n        \"count\": 7\n    }\n}\n\n# App Counts\n$ curl 'https://api.intercom.io/counts' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# App Total Counts\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"count.hash\",\n    \"company\": {\n        \"count\": 55\n    },\n    \"user\": {\n        \"count\": 54944\n    },\n    \"lead\": {\n        \"count\": 17\n    },\n    \"tag\": {\n        \"count\": 1012\n    },\n    \"segment\": {\n        \"count\": 7\n    }\n}\n\nintercom.counts.for_app\n\n<?php\n// Global App Counts\n$intercom->counts->getCounts([]);\n?>\n\n// Global App Counts\nfinal Counts.Totals appTotals = Counts.appTotals();\nappTotals.getCompany().getValue();\nappTotals.getSegment().getValue();\nappTotals.getTag().getValue();\nappTotals.getUser().getValue();\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nGlobal App Counts\tNone\tNone"
  },
  {
    "title": "Company User/Segment/Tag Count Model",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/counts/company-tag-counts/",
    "html": "Company User/Segment/Tag Count Model\nCompany User/Segment/Tag Count Object\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\ncompany\tobject\tContains a field called segment containing segment counts\ncompany.segment\tarray\tContains a list of segment objects their name and their number of companies tagged\ncompany.tag\tarray\tContains a list of tag objects with their name and their number of companies tagged\ncompany.user\tarray\tContains an array of companies with their name and their number of users\ncurlcurlrubyphpjava\n# Company Tag Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=tag&per_page=5' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\n# Company Segment Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=segment' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\n# Company User Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=user' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\n# Company Tag Count\\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"count\\\",\\n    \\\"company\\\": {\\n        \\\"tag\\\": [\\n            {\\n                \\\"VIP\\\": 0\\n            },\\n            {\\n                \\\"UpMarket\\\": 0\\n            },\\n            {\\n                \\\"test\\\": 0\\n            },\\n            {\\n                \\\"new\\\": 0\\n            },\\n            {\\n                \\\"smb\\\": 0\\n            }\\n        ]\\n    },\\n    \\\"pages\\\": {\\n        \\\"pages\\\": {\\n            \\\"type\\\": \\\"pages\\\",\\n            \\\"next\\\": \\\"https://api.intercom.io/counts?type=company&count=tag&page=2&per_page=5\\\",\\n            \\\"page\\\": 1,\\n            \\\"per_page\\\": 5,\\n            \\\"total_pages\\\": 203\\n        }\\n    }\\n}\\n\\n# Company Segment Count\\nHTTP/1.1 200 OK\\n{\\n    \\\"type\\\": \\\"count\\\",\\n    \\\"company\\\": {\\n        \\\"segment\\\": [\\n            {\\n                \\\"Active\\\": 2\\n            },\\n            {\\n                \\\"New\\\": 0\\n            },\\n            {\\n                \\\"Slipping Away\\\": 0\\n            },\\n            {\\n                \\\"id=10\\\": 10\\n            }\\n        ]\\n    },\\n    \\\"pages\\\": {}\\n}\\n\\n# Company User Count\\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"count\\\",\\n  \\\"company\\\": {\\n    \\\"user\\\": [\\n      {\\n        \\\"Independents\\\": 7,\\n        \\\"remote_company_id\\\": \\\"6\\\"\\n      },\\n      {\\n        \\\"Alliance\\\": 1,\\n        \\\"remote_company_id\\\": \\\"7\\\"\\n      }\\n    ]\\n  },\\n  \\\"pages\\\": {}\\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nCompany Segment Count\tcompany\tsegment\nCompany Tag Count\tcompany\ttag\nCompany User Count\tcompany\tuser\nPAGINATION WITH COMPANY COUNTS\n\nCompany tag counts are returned via pagination, which means it defaults to 50 results per page unless you specify otherwise. e.g. \\n'https://api.intercom.io/counts?type=company&count=tag&per_page=10\\\"\\n\\nTo get the next page of results you need to make a GET request with the \"next\" RUL supplied in the initial response."
  },
  {
    "title": "Pagination",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/common-structures/pagination/",
    "html": "Pagination\n\nThe majority of list resources in the API are paginated to allow clients to traverse data over multiple requests.\n\nTheir responses are likely to contain a pages object that hosts pagination links which a client can use to paginate through the data without having to construct a query. The link relations for the pages field are as follows.\n\nPages Object\nParameter\tDescription\nnext\tA link to the next page of results. A response that does not contain a next link does not have further data to fetch.\nprev\tA link to the previous page of results.\nfirst\tA link to the first page of results.\nlast\tA link to the last page of results.\nWHAT ABOUT FOR CONTACTS AND SEARCHES?\n\nWhen listing any Contact objects, we will instead use a cursor-based approach.\n\nOur Search resources will instead use a POST-based approach."
  },
  {
    "title": "Identifiers and URLs",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/common-structures/identifiers-and-urls/",
    "html": "Identifiers and URLs\n\nAll objects in the API have an id field indicating their logical identifier. Some objects may optionally also have a self field that indicates a URL or canonical address for the object.\n\nParameter\tDescription\nid\tA string that identifies the object within the API. The id field will not be larger than 128 characters (in SQL it corresponds to a varchar(128)).\nself\tA URL that addresses the object within the API. The self field will not be larger than 255 characters (in SQL it corresponds to a varchar(255)).\n\nThese fields must always be treated as opaque strings - no guarantees are made about the internal structure of the id or self fields for an object.\n\nThe id field is always defined by the API server and is guaranteed to be unique relative to the type field - this means no two user objects will have the same id field, but a user and a company may have the same value for their id fields. . Some object types (such as User), also support client defined identifiers.\n\nThe company and user objects deserve special mention when it comes to identity for two reasons -\n\nThey allow you send your own external identifiers - email and user_id for users and company_id for companies.\nThe user id field is in some cases, aliased to intercom_user_id. This is done to distinguish it from other identifiers in the API and to avoid confusion as to which object type an id denotes."
  },
  {
    "title": "Use of HTTP",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/common-structures/use-of-http/",
    "html": "Use of HTTP\n\nRequest methods are used in accordance with HTTP.\n\nGET is used to access resources and perform queries. The API does not allow modifications (creates, updates, deletes) to occur via GET.\nPOST is used to create or update resources. The preferred model for creation is to post JSON to a 'collections' resource - for example the collections resource for users is https://api.intercom.io/users.\nDELETE is used to delete resources.\n\nResponses use standard HTTP codes. Where there are client or server errors, a list of of one or more errors in JSON format is returned in the body - see Error Objects for more details.\n\nThe API may send cache directives where suitable, notably the ETag, Last-Modified and If-Modified-Since headers.\n\nThe Accept header must be used by a client used to indicate a preferred response for GET/HEAD requests. Requests without an Accept header of application/json may be rejected with a client error of 404 or 406.\n\nThe Content-Type header should be used by clients to indicate the submitted format for POST/PUT requests."
  },
  {
    "title": "Encoding",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/common-structures/encoding/",
    "html": "Encoding\n\nData is encoded as defined by JSON in RFC4627. The default encoding for APIs is UTF-8. Certain characters, such as Emojji may be handled as surrogate unicode pairs (see section '2.5. Strings' of RFC4627).\n\nSome query parameters may need to be url encoded when sending - for example, the email parameter value used to query users should be encoded.\n\nHTML ENCODING\n\nIt should be noted that the following identifiers are encoded to protect from potential cross-site scripting attacks: 'name', 'user_id', 'company_id' and 'email'. As a result you will see these identifiers in their encoded format when you retrieve them via the API. \\nNote that the characters we encode are double quote, single quote, ampersand, less than and greater than symbols i.e \" ' & < >\n\nHTML Encoding example\nLet's say you have a company name like \\\"X&Y's\\\". \\nThen when you retrieve it from the API it will look like this:\\n\\\"X&amp;Y&#39;s\\\"\n"
  },
  {
    "title": "Use of HTTP",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/common-structures/use-of-http/",
    "html": "Use of HTTP\n\nRequest methods are used in accordance with HTTP -\n\nGET is used to access resources and perform queries. The API does not allow modifications (creates, updates, deletes) to occur via GET.\nPOST is used to create or update resources. The preferred model for creation is to post JSON to a 'collections' resource - for example the collections resource for users is https://api.intercom.io/users. PATCH is not currently used by the API.\nDELETE is used to delete resources.\n\nResponses use standard HTTP codes. Where there are client or server errors, a list of of one or more errors in JSON format is returned in the body - see Error Objects for more details.\n\nThe API may send cache directives where suitable, notably the ETag, Last-Modified and If-Modified-Since headers.\n\nThe Accept header must be used by a client used to indicate a preferred response for GET/HEAD requests. Requests without an Accept header of application/json may be rejected with a client error of 404 or 406. The Content-Type header should be used by clients to indicate the submitted format for POST/PUT requests."
  },
  {
    "title": "Object Model",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/common-structures/object-model/",
    "html": "Object Model\nCommon Fields and Metadata\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"id\\\": \\\"456456456456\\\",\\n  \\\"self\\\": \\\"https://api.intercom.io/users/456456456456\\\",\\n  \\\"created_at\\\": 1392241887,\\n  \\\"custom_attributes\\\": {\\n    \\\"note\\\": \\\"some extra information\\\"\\n  }\\n}\n\nCommon Fields\n\nAPI objects have a type field indicating their object type. Each object in the API may be given an identifier, indicated via its id field, and will typically be addressable via a URI. Many objects will also have a created_at field indicating the object's creation date as a UTC Unix timestamp.\n\nDates and Timestamps\n\nAll temporal fields in the API are encoded as Unix timestamps and are by definition always treated as UTC. The most common time fields in the API are created_at and updated_at.\n\nParameter\tDescription\ncreated_at\tThe time the object was created. In most, but not all cases, this is the time the object was created according to the API server.\nupdated_at\tThe time the object was last updated according to the API server.\nOptional Fields\n\nUnpopulated optional data is returned as follows -\n\nNumber, String and Boolean types may be returned as having null values.\nArrays and Objects may be returned as empty ([] {})\n\nIn general clients should be able to handle null and empty fields.\n\nMetadata and Custom Attributes\n\nSome object types, such as Events, Users and Companies, have a metadata or custom_attributes field that allows clients to set custom-defined data about an object."
  },
  {
    "title": "Pagination",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/common-structures/pagination/",
    "html": "Pagination\n\nSome list resources in the API are paginated by default to allow clients to traverse data over multiple requests. Their responses may contain a pages object that contains pagination links a client can use to traverse the data without having to construct a query. The link relations for the pages field are as follows -\n\nParameter\tDescription\nnext\tA link to the next page of results. A response that does not contain a next link does not have further data to fetch.\nprev\tA link to the previous page of results.\nfirst\tA link to the first page of results.\nlast\tA link to the last page of results."
  },
  {
    "title": "Pagination & Sorting (Search)",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/common-structures/pagination-search/",
    "html": "Pagination & Sorting (Search)\n\nWhen you use any Search resource, we require you to make a POST request that will not accept the common query params of GET requests. Therefore, the structure here has slight variations to our cursor-based approach.\n\n📘\n\nThis currently only applies to Searching for Contacts and Searching for Conversations.\n\nPagination\nExample Request Body with Pagination for first page\n{\\n \\\"query\\\":  {\\n    \\\"field\\\": \\\"name\\\",\\n    \\\"operator\\\": \\\"=\\\",\\n    \\\"value\\\": \\\"alex\\\"\\n  },\\n  \\\"pagination\\\": {\\n    \\\"per_page\\\": 5,\\n  } \\n}\n\n\nYou can specify how many items per page you want to fetch.\n\nDEFAULT PAGINATION AMOUNT\n\nIf pagination is not provided, the request defaults to 50 items.\n\nExample Initial Pages Object\n{\\n  \\\"pages\\\": {\\n  \\\"type\\\": \\\"pages\\\",\\n  \\\"next\\\": {\\n    \\\"page\\\": 4,\\n    \\\"starting_after\\\": \\\"1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\\\\nIncfQLD3ouPkZlCwJ86F\\\\n\\\"\\n  },\\n  \\\"page\\\": 3,\\n  \\\"per_page\\\": 5,\\n  \\\"total_pages\\\": 10\\n  }\\n}\n\n\nIn order to iterate through pages, you must parse the query response. A query with multiple response pages will include a next key in the pages hash. When a next value is provided, the starting_after value must be sent back in a new request to iterate to the next page.\n\n🚧 Paginating through all results\n\nThis method of pagination is used to iterate through a result set until all results have been fetched, not to directly go to page X of the results. This is not possible.\n\nExample Request Body with Pagination for next page\n{\\n \\\"query\\\":  {\\n    \\\"field\\\": \\\"name\\\",\\n    \\\"operator\\\": \\\"=\\\",\\n    \\\"value\\\": \\\"alex\\\"\\n  },\\n  \\\"pagination\\\": {\\n    \\\"per_page\\\": 5,\\n    \\\"starting_after\\\": \\\"1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\\\\nIncfQLD3ouPkZlCwJ86F\\\\n\\\"\\n  } \\n}\\n\n\n\n🚧 Warning about search context state\n\nThe starting_after context is stateless. Consequently, if items are updated between 2 paginated queries, this can lead to duplicate or missed records.\n\nFor example, if a query is sorting results by number of sessions and an item is updated from 1 session to 2 sessions during the pagination, they may be listed on page 1 of the results, but also on page 2.\n\nSorting\nExample Request Body with Sort\n{\n \"query\":  {\n    \"field\": \"name\",\n    \"operator\": \"=\",\n    \"value\": \"alex\"\n  },\n  \"sort\": {\n    \"field\": \"name\",\n    \"order\": \"ascending\"\n  } \n}\n\n\nThe Search resources can also sort query results by using the following parameters within the sort object:\n\nParameter\tRequired?\tDescription\nfield\tYes\tAny searchable attribute (available on the Simple Query \"Allowed fields\").\norder\tNo\tEither \"ascending\" or \"descending\" - default to \"descending\" if none is provided.\nDEFAULT SORT ORDER\n\nIf no sort pattern is provided, the query will use the default sorting parameter \"last_request_at\" with a descending value (e.g. listing most recent active items first)."
  },
  {
    "title": "Pagination (Cursor)",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/common-structures/pagination-cursor/",
    "html": "Pagination (Cursor)\n\nWe're starting to adopt a cursor-based approach to pagination for certain list resources.\n\nThis currently only applies when listing Contacts.\n\nExample Initial Request\ncURL (Initial Request)\n$ curl https://api.intercom.io/contacts?per_page=5 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nInitial Request\n\nYou can initially specify how many items per_page you want to fetch.\n\nParameter\tType\tDescription\nper_page\tInteger\tThe number of items returned in a single response.\nDefault is 50.\nMax is 150.\nExample Initial Pages Object\nJSON\n{\\n  \\\"pages\\\": {\\n    \\\"type\\\": \\\"pages\\\",\\n    \\\"next\\\": {\\n      \\\"page\\\": 4,\\n      \\\"starting_after\\\": \\\"1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\\\\nIncfQLD3ouPkZlCwJ86F\\\\n\\\"\\n    },\\n    \\\"page\\\": 3,\\n    \\\"per_page\\\": 5,\\n    \\\"total_pages\\\": 10\\n   }\\n}\n\nResponse\n\nIn order to iterate through pages, you must parse the query response. A query with multiple response pages will include a next key in the pages object. When a next value is provided, the starting_after value must be sent back in a new request in order to iterate to the next page.\n\nParameter\tType\tDescription\nstarting_after\tString\tThe cursor used for pagination in order to fetch the next page of results.\n\n🚧 Paginating through all results\n\nThis method of pagination is used to iterate through a result set until all results have been fetched, not to directly go to page X of the results. This is not possible.\n\nExample Subsequent Requests\ncURL (Subsequent Requests)\n$ curl https://api.intercom.io/contacts?starting_after=1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\\\\nIncfQLD3ouPkZlCwJ86F\\\\n \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\n"
  },
  {
    "title": "Object Model",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/common-structures/object-model/",
    "html": "Object Model\nCommon Fields and Metadata\n{\\n  \\\"type\\\": \\\"contacts\\\",\\n  \\\"id\\\": \\\"456456456456\\\",\\n  \\\"created_at\\\": 1392241887,\\n  \\\"custom_attributes\\\": {\\n    \\\"note\\\": \\\"some extra information\\\"\\n  }\\n}\n\nCommon Fields\n\nAPI objects have a type field indicating their object type. Each object in the API may be given an identifier, indicated via its id field, and will typically be addressable via a URI. Many objects will also have a created_at field indicating the object's creation date as a UTC Unix timestamp.\n\nDates and Timestamps\n\nAll temporal fields in the API are encoded as Unix timestamps and are by definition always treated as UTC. The most common time fields in the API are created_at and updated_at.\n\nParameter\tDescription\ncreated_at\tThe time the object was created. In most, but not all cases, this is the time the object was created according to the API server.\nupdated_at\tThe time the object was last updated according to the API server.\nOptional Fields\n\nUnpopulated optional data is returned as follows -\n\nNumber, String and Boolean types may be returned as having null values.\nArrays and Objects may be returned as empty ([] {})\n\nIn general clients should be able to handle null and empty fields.\n\nMetadata and Custom Attributes\n\nSome object types, such as Events, Users and Companies, have a metadata or custom_attributes field that allows clients to set custom-defined data about an object."
  },
  {
    "title": "List Companies",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/companies/list-companies/",
    "html": "List Companies\nList companies\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/companies \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"company.list\\\",\\n  \\\"total_count\\\": 105,\\n  \\\"companies\\\": [\\n    {\\n      \\\"type\\\": \\\"company\\\",\\n      \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n       ...\\n     },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/companies?per_page=50&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 3\\n  }\\n}\\n\\n# NB: Full company objects are returned\n\n\nYou can fetch a list of companies. The company list is sorted by the last_request_at field and by default is ordered descending, most recently requested first.\n\nNote that the API does not include companies who have no associated users in list responses.\n\nRequest Parameters\n\nYou can optionally request the result page size and which page to fetch as follows -\n\nParameter\tRequired\tDescription\npage\tno\twhat page of results to fetch defaults to first page.\nper_page\tno\thow many results per page defaults to 50.\norder\tno\tasc or desc. Return the companies in ascending or descending order. defaults to desc.\nReturns\n\nA pageable list of companies. The list contains a pages object that indicates if more items exist via the next field, whose value is a URL that can be used to fetch the next page. If the next field is not present, that indicates there are no further items in the list.\n\nWhen using the Companies endpoint and the pages object to iterate through the returned companies, there is a limit of 10,000 Companies that can be returned. If you need to list or iterate on more than 10,000 Companies, please use the Scroll API."
  },
  {
    "title": "Tags",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/tags/tags/",
    "html": "Tags\n\nA tag allows you to label your users and companies and list them using that tag.\n\nThis section describes how tags can be created, updated and deleted. It also describes how users and companies can be tagged or untagged individually or in bulk.\n\nHow to query using a tag is described in the respective sections for users and companies - see \"List by Tag, Segment, Company\" for Users, and \"List by Tag or Segment\" for Companies."
  },
  {
    "title": "Teams",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/teams/teams/",
    "html": "Teams\n\nTeams are how you can view your teams within Intercom.\n\nThe API currently only supports viewing the teams that are already created. Creating and managing teams must be done through the Intercom App."
  },
  {
    "title": "View a Segment",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/segments/view-a-segment/",
    "html": "View a Segment\nExample Request\n$ curl https://api.intercom.io/segments/53203e244cba153d39000062 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"segment\",\n  \"id\": \"53203e244cba153d39000062\",\n  \"name\": \"New\",\n  \"created_at\": 1394621988,\n  \"updated_at\": 1394622004\n}\n\nintercom.segments.find(:id => '1234')\n\nSegment segment = Segment.find(\"1234\");\n\n\nEach segment has its own URL -\n\nhttps://api.intercom.io/segments/{id}\n\nWhere {id} is the value of the segment's id field. A GET request to a segment's URL will return the segment object.\n\nYou can also get a count for an individual user segment by adding the parameter include_count=true\n\n$ curl https://api.intercom.io/segments/58a707924f6651b07b94376c?include_count=true \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"segment\",\n    \"id\": \"58a707924f6651b07b94376c\",\n    \"name\": \"id=10\",\n    \"created_at\": 1487341458,\n    \"updated_at\": 1487341459,\n    \"person_type\": \"user\",\n    \"count\": 5\n}\n\nReturns\n\nA segment object."
  },
  {
    "title": "List Company Users",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/companies/list-company-users/",
    "html": "List Company Users\nExample ID Request\n$ curl https://api.intercom.io/companies/5310dabd598c9a0a7e000005/users \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nintercom.companies.users(company.id)\n\nMap<String, String> params params = Maps.newHashMap();\nparams.put(\"company_id\", \"6\");\nUserCollection users = Company.listUsers(params);\n\nExample Company ID Request\n$ curl https://api.intercom.io/companies?company_id=22&type=user \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"user.list\",\n  \"total_count\": 10,\n  \"users\": [\n    {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ]\n}\n\n# NB: Full User objects are returned\n\nintercom.companies.users(company.company_id)\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"company_id\", \"1\");\nCompany company = Company.find(map);\n\n\nThe users belonging to a company can be listed by sending a GET request to https://api.intercom.io/companies/{id}/users, where {id} is the value of the company's id field.\n\nTo query for a company's users using the company id value you have assigned to the company, send a GET request to https://api.intercom.io/companies, using the parameter {company_id} with value of the company id, and a type field with a value of users.\n\nRequest Parameters\nParameter\tRequired\tDescription\ncompany_id\tyes\tYour company id for the company.\ntype\tyes\tThe value must be user\nReturns\n\nA pageable list of users and leads. Response objects contain type set to user and contact respectively. See the section \"List Users\" and \"List Leads\" for details of the JSON response."
  },
  {
    "title": "User Segment/Tag Count Model",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/counts/user-tag-counts/",
    "html": "User Segment/Tag Count Model\n\nThe count of tags and segments includes archived tags and segments.\n\nUser Segment/Tag Count Object\n\nCount Object includes count for users and leads.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nuser\tobject\tContains a field called segment containing segment counts\nuser.segment\tarray\tContains a list of segment counts\nuser.tag\tarray\tContains a list of tag counts\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"tag\": [\n        {\n          \"Independent\": 3\n        }\n    ]\n  }\n}\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"segment\": [\n      {\n        \"Active\": 1\n      },\n      {\n        \"New\": 0\n      },\n      {\n        \"VIP\": 0\n      },\n      {\n        \"Slipping Away\": 0\n      },\n      {\n        \"segment 1\": 1\n      }\n    ]\n  }\n}\n\n# User Tag Count\n$ curl 'https://api.intercom.io/counts?type=user&count=tag' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# User Segment Count\n$ curl 'https://api.intercom.io/counts?type=user&count=segment' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# User Tag Count\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"tag\": [\n        {\n          \"Independent\": 3\n        }\n    ]\n  }\n}\n\n# User Segment Count\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"segment\": [\n      {\n        \"Active\": 1\n      },\n      {\n        \"New\": 0\n      },\n      {\n        \"VIP\": 0\n      },\n      {\n        \"Slipping Away\": 0\n      },\n      {\n        \"segment 1\": 1\n      }\n    ]\n  }\n}\n\nintercom.counts.for_type(type: 'user', count: 'tag')\nintercom.counts.for_type(type: 'user', count: 'segment')\n\n<?php\n// User Tag Count\n$counts = $intercom->counts->getCounts([\"type\" => \"user\", \"count\" => \"tag\"]);\nprint_r($counts);\n\n// Company Segment Count\n$counts = $intercom->counts->getCounts([\"type\" => \"user\", \"count\" => \"segment\"]);\n?>\n\n// User Tag Count\nfinal List<Counts.CountItem> tags = Counts.userTags();\nfor (Counts.CountItem tag : tags) {\n  out.println(tag.getName() + \": \" + tag.getValue());\n}\n\n// User Segment Count\nfinal List<Counts.CountItem> segments = Counts.userSegments();\nfor (Counts.CountItem seg : segments) {\n  out.println(seg.getName() + \": \" + seg.getValue());\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nUser Segment Count\tuser\tsegment\nUser Tag Count\tuser\ttag"
  },
  {
    "title": "Counts",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/counts/counts/",
    "html": "Counts\n\nYou can use the API to get counts of users and companies filtered by certain criteria.\n\nCounts are a good way to periodically obtain data for the purposes of tracking rates of change in user and company data."
  },
  {
    "title": "Teams Model",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/teams/teams-model/",
    "html": "Teams Model\nExample Object\n{\\n    \\\"type\\\": \\\"team\\\",\\n    \\\"id\\\": \\\"814865\\\",\\n    \\\"name\\\": \\\"Example Team\\\",\\n    \\\"admin_ids\\\": [\\n        493881\\n    ]\\n}\n\nTeam Object\nAttribute\tType\tDescription\ntype\tstring\tValue is team.\nid\tstring\tThe id of the team\nname\tstring\tThe name of the team\nadmin_ids\tlist\tThe list of admin id's that are a part of the team"
  },
  {
    "title": "List by Tag or Segment",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/companies/list-by-tag-or-segment/",
    "html": "List by Tag or Segment\nExample List by tag request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/companies?tag_id=17 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"company.list\\\",\\n  \\\"total_count\\\": 105,\\n  \\\"companies\\\": [\\n    {\\n      \\\"type\\\": \\\"company\\\",\\n      \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n       ...\\n     },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/companies?tag=14&per_page=50&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 3\\n  }\\n}\\n\\n# NB: Full company objects are returned\n\n\nYou can fetch segmented and tagged companies by querying the companies resource with the segment_id and tag_id parameters (for information on how to tag companies see the section \"Create and update tags\").\n\nNote that you can query by tag or segment but not both in the same request.\n\nRequest Parameters\nParameter\tRequired\tDescription\ntag_id\tone of\tThe id of the tag to filter by.\nsegment_id\tone of\tThe id of the segment to filter by.\nReturns\n\nA pageable list of companies. Like a plain company list, the result contains a pages object that indicates if more companies exist via the next field."
  },
  {
    "title": "Identifiers and URLs",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/common-structures/identifiers-and-urls/",
    "html": "Identifiers and URLs\n\nAll objects in the API have an id field indicating their logical identifier.\n\nParameter\tDescription\nid\tA string that identifies the object within the API. The id field will not be larger than 128 characters (in SQL it corresponds to a varchar(128)).\n\nThese fields must always be treated as opaque strings - no guarantees are made about the internal structure of the id fields for an object.\n\nThe id field is always defined by the API server and is guaranteed to be unique relative to the type field - this means no two user objects will have the same id field, but a user and a company may have the same value for their id fields. . Some object types (such as Contact), also support client defined identifiers.\n\nThe company and user objects deserve special mention when it comes to identity for two reasons -\n\nThey allow you send your own external identifiers\nThe contact id field is in some cases, aliased to intercom_user_id. This is done to distinguish it from other identifiers in the API and to avoid confusion as to which object type an id denotes."
  },
  {
    "title": "List Tags for an App",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/tags/list-tags-for-an-app/",
    "html": "List Tags for an App\nExample List Tag Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/tags \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\n{\\n  \\\"type\\\": \\\"tag.list\\\",\\n  \\\"tags\\\": [\\n    {\\n      \\\"type\\\": \\\"tag\\\",\\n      \\\"name\\\": \\\"Beta User\\\",\\n      \\\"id\\\": 1\\n    },\\n    {\\n      \\\"type\\\": \\\"tag\\\",\\n      \\\"name\\\": \\\"Amazing User\\\",\\n      \\\"id\\\": 2\\n    },\\n    {\\n      \\\"type\\\": \\\"tag\\\",\\n      \\\"name\\\": \\\"Epic User\\\",\\n      \\\"id\\\": 3\\n    }\\n  ]\\n}\n\n\nYou can fetch the tags for an App by sending a GET request to https://api.intercom.io/tags.\n\nParameters\n\nNone.\n\nReturns\n\nA list of tag objects for the App.\n\nTag List\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'tag.list'\ntags\tarray\tA list of tag objects"
  },
  {
    "title": "Encoding",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/common-structures/encoding/",
    "html": "Encoding\n\nData is encoded as defined by JSON in RFC4627. The default encoding for APIs is UTF-8. Certain characters, such as Emoji may be handled as surrogate unicode pairs (see section '2.5. Strings' of RFC4627).\n\nSome query parameters may need to be url encoded when sending - for example, the email parameter value used to query users should be encoded.\n\nHTML ENCODING\n\nIt should be noted that the following identifiers are encoded to protect from potential cross-site scripting attacks: 'name', 'user_id', 'company_id' and 'email'. As a result you may see these identifiers in their encoded format when you retrieve them via the API. \\nNote that the characters we encode are double quote, single quote, ampersand, less than and greater than symbols i.e \" ' & < >\n\nHTML Encoding example\n\\\"X&Ys\\\" == \\\"X&amp;Y&#39;s\\\"\n"
  },
  {
    "title": "Scroll over all companies",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/companies/iterating-over-all-companies/",
    "html": "Scroll over all companies\n\nThe list all companies functionality does not work well for huge datasets, and can result in errors and performance problems when paging deeply. The Scroll API provides an efficient mechanism for iterating over all companies in a dataset.\n\nEach app can only have 1 scroll open at a time. You'll get an error message if you try to have more than one open per app.\nIf the scroll isn't used for 1 minute, it expires and calls with that scroll param will fail\nIf the end of the scroll is reached, \"companies\" will be empty and the scroll parameter will expire\n# Send a GET request to get the first page of companies\n$ curl \\\n'https://api.intercom.io/companies/scroll' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n# To get the next page use the scroll param returned in the response\n$ curl \\\n'https://api.intercom.io/companies/scroll?scroll_param=562bc29f-ea55-4823-aaaf-f3faadceaa59' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"company.list\",\n  \"companies\": [\n    {\n      \"type\": \"company\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ],\n  \"scroll_param\": \"25b649f7-4d33-4ef6-88f5-60e5b8244309\"\n}\n\n# You can use the scroll method to list all your companies\nintercom.companies.scroll.each { |company| puts company.name}\n# Alternatively you can use the scroll.next method to get 100 companies with each request\nresult = intercom.companies.scroll.next\nresult.scroll_param\n=> \"0730e341-63ef-44da-ab9c-9113f886326d\"\nresult = intercom.companies.scroll.next(\"0730e341-63ef-44da-ab9c-9113f886326d\");\n\nSCROLL PARAMETER\n\nYou can get the first page of companies by simply sending a GET request to the scroll endpoint. For subsequent requests you will need to use the scroll parameter from the response.\n\n❗️ Scroll network timeouts\n\nSince scroll is often used on large datasets network errors such as timeouts can be encountered. When this occurs you will need to restart your scroll query as it is not possible to continue from a specific point when using scroll.\n\nWhen this occurs you will see a HTTP 500 error with the following message:\n\"Request failed due to an internal network error. Please restart the scroll operation.\""
  },
  {
    "title": "List Companies",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/companies/list-companies/",
    "html": "List Companies\nList companies\n$ curl https://api.intercom.io/companies \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"company.list\",\n  \"total_count\": 105,\n  \"companies\": [\n    {\n      \"type\": \"company\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ],\n  \"pages\": {\n    \"next\": \"https://api.intercom.io/companies?per_page=50&page=2\",\n    \"page\": 1,\n    \"per_page\": 50,\n    \"total_pages\": 3\n  }\n}\n\n# NB: Full company objects are returned\n\nintercom.companies.all.each { ... }\n\n<?php\n$companies= $intercom->companies->getCompanies([]);\nforeach ($companies->companies as $company) {\n    print_r($company->company_id);\n    echo \"\\n\";\n}\n?>\n\nCompanyCollection companies = Company.list();\n// get first page\nList<Company> items = companies.getPageItems();\n// or iterate over pages\nwhile (companies.hasNext()) {\n  System.out.println(companies.next().getName());\n}\n\n\nYou can fetch a list of companies. The company list is sorted by the last_request_at field and by default is ordered descending, most recently requested first.\n\nNote that the API does not include companies who have no associated users in list responses.\n\nRequest Parameters\n\nYou can optionally request the result page size and which page to fetch as follows -\n\nParameter\tRequired\tDescription\npage\tno\twhat page of results to fetch defaults to first page.\nper_page\tno\thow many results per page defaults to 50.\norder\tno\tasc or desc. Return the companies in ascending or descending order. defaults to desc.\nReturns\n\nA pageable list of companies. The list contains a pages object that indicates if more items exist via the next field, whose value is a URL that can be used to fetch the next page. If the next field is not present, that indicates there are no further items in the list.\n\nWhen using the Companies endpoint and the pages object to iterate through the returned companies, there is a limit of 10,000 Companies that can be returned. If you need to list or iterate on more than 10,000 Companies, please use the Scroll API."
  },
  {
    "title": "Segments",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/segments/segments/",
    "html": "Segments\n\nA segment is a group of your users defined by rules that you set. Users are automatically added to the segment every time the user updates to match those rules. Segments are different to tags, in that users need to be added to tags manually and tag members are not automatically managed.\n\nThe API supports fetching the list of segments created in your App, however creating and managing segments must be done through Intercom. For more information about segmenting users, please see the product documentation."
  },
  {
    "title": "Conversation Count Model",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/counts/conversation-counts/",
    "html": "Conversation Count Model\nConversation Count Object\n\nThe conversation count supplies global counts about your App's conversations\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nconversation\tobject\tContains counts related to conversations\nconversation.assigned\tnumber\tContains the number of assigned conversations\nconversation.closed\tnumber\tContains the number of closed conversations\nconversation.open\tnumber\tContains the number of open conversations\nconversation.unassigned\tnumber\tContains the number of unassigned conversations\n{\n    \"type\": \"count\",\n    \"conversation\": {\n        \"open\": 30,\n        \"closed\": 17,\n        \"unassigned\": 0,\n        \"assigned\": 30\n    }\n}\n\n# Conversation Counts\n$ curl 'https://api.intercom.io/counts?type=conversation' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# Conversation App Counts\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"count\",\n    \"conversation\": {\n        \"open\": 30,\n        \"closed\": 17,\n        \"unassigned\": 0,\n        \"assigned\": 30\n    }\n}\n\nintercom.counts.for_type(type: 'conversation')\n\n<?php\n$counts = $intercom->counts->getCounts([\"type\" => \"conversation\"]);\nprint_r($counts);\n?>\n\n// Conversation Counts\nfinal Counts.Conversation totals = Counts.conversationTotals();\ntotals.getAssigned();\ntotals.getClosed();\ntotals.getOpen();\ntotals.getUnassigned();\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nConversation Count\tconversation\tNone"
  },
  {
    "title": "Delete a Tag",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/tags/delete-a-tag/",
    "html": "Delete a Tag\nExample Delete Tag Request\n$ curl https://api.intercom.io/tags/17513 \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n# Not exposed in Ruby client\n\n<?php\n// Not exposed in PHP client\n?>\n\nTag.delete(tag);\n\n\nA tag can be deleted by sending a DELETE request to its URL. A tag's URL is defined using using the tag's id field to create a URL of the form, https://api.intercom.io/tags/{id}."
  },
  {
    "title": "List Teams",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/teams/list-teams/",
    "html": "List Teams\nList Teams\n$ curl https://api.intercom.io/teams \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n{\n    \"teams\": [\n        {\n            \"admin_ids\": [\n                492881,\n                1195856\n            ],\n            \"id\": \"814865\",\n            \"name\": \"BA_App\",\n            \"type\": \"team\"\n        },\n        {\n            \"admin_ids\": [\n                646303,\n                814860\n            ],\n            \"id\": \"2744328\",\n            \"name\": \"the_a_team\",\n            \"type\": \"team\"\n        }\n    ],\n    \"type\": \"team.list\"\n}\n\n\nAn App's teams can be fetched by sending a GET request to https://api.intercom.io/teams.\n\nTeam List\nAttribute\tType\tDescription\ntype\tstring\tValue is 'team.list'\nteams\tarray\tA list of team objects\npages\tobject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch.\nRequest Parameters\n\nNone.\n\nReturns\n\nA list of team objects for the App. The result may also have a pages object if the response is paginated."
  },
  {
    "title": "List Segments",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/segments/list-segments/",
    "html": "List Segments\nExample Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/segments\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"segment.list\\\",\\n  \\\"segments\\\": [\\n    {\\n      \\\"created_at\\\": 1393613031,\\n      \\\"id\\\": \\\"5310d8e7598c9a0b24000002\\\",\\n      \\\"name\\\": \\\"Active\\\",\\n      \\\"type\\\": \\\"segment\\\",\\n      \\\"updated_at\\\": 1393613031\\n    },\\n    {\\n      \\\"created_at\\\": 1393613030,\\n      \\\"id\\\": \\\"5310d8e6598c9a0b24000001\\\",\\n      \\\"name\\\": \\\"New\\\",\\n      \\\"type\\\": \\\"segment\\\",\\n      \\\"updated_at\\\": 1393613030\\n    },\\n    {\\n      \\\"created_at\\\": 1393613031,\\n      \\\"id\\\": \\\"5310d8e7598c9a0b24000003\\\",\\n      \\\"name\\\": \\\"Slipping Away\\\",\\n      \\\"type\\\": \\\"segment\\\",\\n      \\\"updated_at\\\": 1393613031\\n    }\\n  ]\\n}\n\n\nYou can list the user segments for your App by sending a GET request to https://api.intercom.io/segments. Company segments can be listed by sending a GET request to https://api.intercom.io/segments?type=company.\n\nYou can also include counts in your segment model in the response if you add the parameter include_count=true in the request. Note that this is only relevant for user segments.\n\n$ curl 'https://api.intercom.io/segments?include_count=true'\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"segment.list\",\n    \"segments\": [\n        {\n            \"type\": \"segment\",\n            \"id\": \"56cc69cd8618d37b4500000c\",\n            \"name\": \"Active\",\n            \"created_at\": 1456237005,\n            \"updated_at\": 1487064099,\n            \"person_type\": \"user\",\n            \"count\": 3\n        },\n        {\n            \"type\": \"segment\",\n            \"id\": \"56cc69cc8618d37b4500000b\",\n            \"name\": \"New\",\n            \"created_at\": 1456237004,\n            \"updated_at\": 1473241975,\n            \"person_type\": \"user\",\n            \"count\": 0\n        },\n        {\n            \"type\": \"segment\",\n            \"id\": \"56cc69cd8618d37b4500000d\",\n            \"name\": \"Slipping Away\",\n            \"created_at\": 1456237005,\n            \"updated_at\": 1473241975,\n            \"person_type\": \"user\",\n            \"count\": 0\n        },\n        {\n            \"type\": \"segment\",\n            \"id\": \"56e6f1f2b7ebc2061200000d\",\n            \"name\": \"test3WebSession\",\n            \"created_at\": 1457975794,\n            \"updated_at\": 1473241976,\n            \"person_type\": \"user\",\n            \"count\": 1\n        }\n    ]\n}\n\nSegment List\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'segment.list'\nsegments\tarray\tA list of segment objects\npages\tobject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch.\nReturns\n\nA list of segment objects for the App. The result may also have a pages object if the response is paginated."
  },
  {
    "title": "Delete a Company",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/companies/delete-a-company/",
    "html": "Delete a Company\n\nCurrently, the API does not support deleting a company. The operation may be added in the future."
  },
  {
    "title": "Admin Conversations Count Model",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/counts/admin-conversations/",
    "html": "Admin Conversations Count Model\nAdmin Conversation Count Object\n\nThe admin conversation count supplies per Admin counts\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nconversation\tobject\tContains counts related to admins\nconversation.admin\tarray\tContains and array of objects detailing each Admin\nconversation.admin.open\tnumber\tContains the number of open conversations for the Admin\nconversation.admin.closed\tnumber\tContains the number of closed conversations for the Admin\nconversation.admin.id\tstring\tContains the Admin id\nconversation.admin.name\tstring\tContains the Admin name\n{\n  \"type\": \"count\",\n  \"conversation\": {\n    \"admin\": [\n      {\n        \"id\": \"1\",\n        \"name\": \"Wash\",\n        \"open\": 0,\n        \"closed\": 1\n      },\n      {\n        \"id\": \"2\",\n        \"name\": \"Jayne\",\n        \"open\": 0,\n        \"closed\": 0\n      }\n    ]\n  }\n}\n\n# Conversation Admin Counts\n$ curl 'https://api.intercom.io/counts?type=conversation&count=admin' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# Conversation Admin Counts\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"conversation\": {\n    \"admin\": [\n      {\n        \"id\": \"1\",\n        \"name\": \"Wash\",\n        \"open\": 0,\n        \"closed\": 1\n      },\n      {\n        \"id\": \"2\",\n        \"name\": \"Jayne\",\n        \"open\": 0,\n        \"closed\": 0\n      }\n    ]\n  }\n}\n\nintercom.counts.for_type(type: 'conversation', count: 'admin')\n\n<?php\n// Conversation Admin Count\n$counts = $intercom->counts->getCounts([\"type\" => \"conversation\", \"count\" => \"admin\"]);\nprint_r($counts);\n?>\n\n// Conversation Admin Count\nfinal Counts.Conversation counts = Counts.conversationAdmins();\nList<Admin> admins = counts.getAdmins();\nfor (Admin admin : admins) {\n    out.println(\n      admin.getName() + \": \" +\n      admin.getClosed() + \", \" +\n      admin.getOpen());\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nConversation Admin Count\tconversation\tadmin"
  },
  {
    "title": "App Total Count Model",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/counts/company-user-counts/",
    "html": "App Total Count Model\nApp Total Count Object\n\nThe total count object contains the summary of the following fields in your app -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count.hash'\ncompany\tobject\tContains the number of companies in your App\nsegment\tobject\tContains the number of segments in your App\ntag\tobject\tContains the number of tags in your App\nuser\tobject\tContains the number of users in your App\nlead\tobject\tContains the number of leads in your App\n\nThe count of tags and segments includes archived tags and segments.\n\n{\n    \"type\": \"count.hash\",\n    \"company\": {\n        \"count\": 55\n    },\n    \"user\": {\n        \"count\": 54944\n    },\n    \"lead\": {\n        \"count\": 17\n    },\n    \"tag\": {\n        \"count\": 1012\n    },\n    \"segment\": {\n        \"count\": 7\n    }\n}\n\n# App Counts\n$ curl 'https://api.intercom.io/counts' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# App Total Counts\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"count.hash\",\n    \"company\": {\n        \"count\": 55\n    },\n    \"user\": {\n        \"count\": 54944\n    },\n    \"lead\": {\n        \"count\": 17\n    },\n    \"tag\": {\n        \"count\": 1012\n    },\n    \"segment\": {\n        \"count\": 7\n    }\n}\n\nintercom.counts.for_app\n\n<?php\n// Global App Counts\n$intercom->counts->getCounts([]);\n?>\n\n// Global App Counts\nfinal Counts.Totals appTotals = Counts.appTotals();\nappTotals.getCompany().getValue();\nappTotals.getSegment().getValue();\nappTotals.getTag().getValue();\nappTotals.getUser().getValue();\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nGlobal App Counts\tNone\tNone"
  },
  {
    "title": "Scroll over all companies",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/companies/iterating-over-all-companies/",
    "html": "Scroll over all companies\n\nThe list all companies functionality does not work well for huge datasets, and can result in errors and performance problems when paging deeply. The Scroll API provides an efficient mechanism for iterating over all companies in a dataset.\n\nEach app can only have 1 scroll open at a time. You'll get an error message if you try to have more than one open per app.\nIf the scroll isn't used for 1 minute, it expires and calls with that scroll param will fail\nIf the end of the scroll is reached, \"companies\" will be empty and the scroll parameter will expire\n# Send a GET request to get the first page of companies\n$ curl \\\n'https://api.intercom.io/companies/scroll' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n# To get the next page use the scroll param returned in the response\n$ curl \\\n'https://api.intercom.io/companies/scroll?scroll_param=562bc29f-ea55-4823-aaaf-f3faadceaa59' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"company.list\",\n  \"companies\": [\n    {\n      \"type\": \"company\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ],\n  \"scroll_param\": \"25b649f7-4d33-4ef6-88f5-60e5b8244309\"\n}\n\n# You can use the scroll method to list all your companies\nintercom.companies.scroll.each { |company| puts company.name}\n# Alternatively you can use the scroll.next method to get 100 companies with each request\nresult = intercom.companies.scroll.next\nresult.scroll_param\n=> \"0730e341-63ef-44da-ab9c-9113f886326d\"\nresult = intercom.companies.scroll.next(\"0730e341-63ef-44da-ab9c-9113f886326d\");\n\nSCROLL PARAMETER\n\nYou can get the first page of companies by simply sending a GET request to the scroll endpoint. For subsequent requests you will need to use the scroll parameter from the response.\n\n❗️ Scroll network timeouts\n\nSince scroll is often used on large datasets network errors such as timeouts can be encountered. When this occurs you will need to restart your scroll query as it is not possible to continue from a specific point when using scroll.\n\nWhen this occurs you will see a HTTP 500 error with the following message:\n\"Request failed due to an internal network error. Please restart the scroll operation.\""
  },
  {
    "title": "Create or Update Company",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/companies/create-or-update-company/",
    "html": "Create or Update Company\nExample Request\n$ curl https://api.intercom.io/companies \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type:application/json' -d '\n{\n  \"name\": \"Blue Sun\",\n  \"plan\": \"Paid\",\n  \"company_id\": \"6\",\n  \"remote_created_at\": 1394531169,\n  \"size\": 750,\n  \"website\": \"http://www.example.com\",\n  \"industry\": \"Manufacturing\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"team_mates\": 0,\n    \"monthly_spend\": 155.98\n  }\n}'\n\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"company\",\n    \"company_id\": \"6\",\n    \"id\": \"57e0120926806ceca3c13ba8\",\n    \"app_id\": \"pi3243fa\",\n    \"name\": \"Blue Sun\",\n    \"remote_created_at\": 1394531169,\n    \"created_at\": 1474302473,\n    \"updated_at\": 1475659931,\n    \"last_request_at\": 1473419085,\n    \"monthly_spend\": 49,\n    \"session_count\": 0,\n    \"user_count\": 0,\n    \"tags\": {\n        \"type\": \"tag.list\",\n        \"tags\": []\n    },\n    \"segments\": {\n        \"type\": \"segment.list\",\n        \"segments\": [\n            {\n                \"type\": \"segment\",\n                \"id\": \"56cc69cc8618d37b45000009\"\n            }\n        ]\n    },\n    \"plan\": {\n        \"type\": \"plan\",\n        \"id\": \"108609\",\n        \"name\": \"Paid\"\n    },\n    \"custom_attributes\": {\n        \"paid_subscriber\": true,\n        \"team_mates\": 0,\n        \"referral_source\": \"Google\",\n        \"founded\": \"20th Century\",\n        \"monthly_spend\": 155.98,\n        \"remove\": true\n    }\n}\n\nintercom.companies.create(:company_id => 6, :name => \"Blue Sun\", :plan => \"Paid\")\n\n<?php\n$intercom->companies->create([\n    \"name\" => \"Academy\",\n    \"id\" => \"10\"\n])\n?>\n\nimport static io.intercom.api.CustomAttribute.*;\n\nCompany company = new Company()\n  .setName(\"Blue Sun\")\n  .setCompanyID(\"1\")\n  .setPlan(new Company.Plan(\"premium\"))\n  .addCustomAttribute(newIntegerAttribute(\"items\", 246))\n  .addCustomAttribute(CustomAttribute.newStringAttribute(\"bar\", \"fruity\"));\n\ncompany = Company.create(company);\n\ncompany.setName(\"Blue Sun Corporation\");\nCompany.update(company);\n\n\nCompanies can be created or updated via a POST to https://api.intercom.io/companies, which accepts a JSON object describing the company.\n\nCOMPANIES WITH NO USERS\n\nIt is important to note that companies will be only visible in Intercom when there is at least one associated user. Check the Companies and Users section for more information\n\nCompanies are looked up via company_id, if not found via company_id, the new company will be created, if found, that company will be updated.\n\nNote that the company_id field itself cannot be updated through the API.\n\nCompanies may also be created or updated via a User request - see the section \"Create or Update User\".\n\nAttributes\n\nThe table below shows the fields you can create or update for a company -\n\nAttribute\tType\tDescription\nremote_created_at\ttimestamp\tThe time the company was created by you\ncompany_id\tstring\tThe company id you have defined for the company\nname\tstring\tThe name of the company\nmonthly_spend\tnumber\tHow much revenue the company generates for your business. Note that this will truncate floats. i.e. it only allow for whole integers, 155.98 will be truncated to 155. Note that this has an upper limit of 2**31-1 or 2147483647.\nplan\tstring\tThe name of the plan you have associated with the company\nsize\tnumber\tThe number of employees in this company\nwebsite\tstring\tThe URL for this company's website. Please note that the value specified here is not validated. Accepts any string.\nindustry\tstring\tThe industry that this company operates in\ncustom_attributes\tobject\tA hash of key/value pairs containing any other data about the company you want Intercom to store.\nCustom Attributes\n\nThe custom_attributes object allows you to send any information you wish about a company with the following restrictions -\n\nField names must not contain Periods (.) or Dollar ($) characters\nField names must be no longer than 190 characters.\nField values must be JSON Strings, Numbers or Booleans - Objects and Arrays will be rejected.\nString field values must be no longer than 255 characters.\nMaximum of 100 fields.\nSession Count\n\nA company's session count is tied to users' session count whilst in the context of that company. So, to update a company session count,\nupdate the user with that company and increment the user's session.\n\nReturns\n\nThe created or updated company object.\n\nNew company objects will be provided with an id field - this value cannot be created or edited by clients."
  },
  {
    "title": "Delete a Company",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/companies/delete-a-company/",
    "html": "Delete a Company\n\nCurrently, the API does not support deleting a company. The operation may be added in the future."
  },
  {
    "title": "Company Model",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/companies/company-model/",
    "html": "Company Model\nExample Company Object\n{\\n  \\\"type\\\": \\\"company\\\",\\n  \\\"id\\\": \\\"531ee472cce572a6ec000006\\\",\\n  \\\"name\\\": \\\"Blue Sun\\\",\\n  \\\"plan\\\": \\\"plan1\\\",\\n  \\\"company_id\\\": \\\"6\\\",\\n  \\\"remote_created_at\\\": 1394531169,\\n  \\\"created_at\\\": 1394533506,\\n  \\\"updated_at\\\": 1396874658,\\n  \\\"size\\\": 85,\\n  \\\"website\\\": \\\"http://www.example.com\\\",\\n  \\\"industry\\\": \\\"Manufacturing\\\",\\n  \\\"monthly_spend\\\": 49,\\n  \\\"session_count\\\": 26,\\n  \\\"user_count\\\": 10,\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"team_mates\\\": 0\\n  }\\n}\n\nExample Company List\n{\\n  \\\"type\\\": \\\"company.list\\\",\\n  \\\"total_count\\\": 1,\\n  \\\"companies\\\": [\\n    {\\n      \\\"type\\\": \\\"company\\\",\\n      \\\"id\\\": \\\"531ee472cce572a6ec000006\\\",\\n      \\\"name\\\": \\\"Blue Sun\\\",\\n      \\\"plan\\\": \\\"plan1\\\",\\n      \\\"company_id\\\": \\\"6\\\",\\n      \\\"remote_created_at\\\": 1394531169,\\n      \\\"created_at\\\": 1394533506,\\n      \\\"updated_at\\\": 1396874658,\\n      \\\"size\\\": 85,\\n      \\\"website\\\": \\\"http://www.example.com\\\",\\n      \\\"industry\\\": \\\"Manufacturing\\\",\\n      \\\"monthly_spend\\\": 49,\\n      \\\"session_count\\\": 26,\\n      \\\"user_count\\\": 10,\\n      \\\"custom_attributes\\\": {\\n        \\\"paid_subscriber\\\" : true,\\n        \\\"team_mates\\\": 0\\n      }\\n    }\\n  ],\\n  \\\"pages\\\": {\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 1\\n  }\\n}\n\nCompany Object\n\nA company object contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'company'\nid\tstring\tThe Intercom defined id representing the company\ncreated_at\ttimestamp\tThe time the company was added to Intercom\nremote_created_at\ttimestamp\tThe time the company was created by you\nupdated_at\ttimestamp\tThe last time the company was updated\nlast_request_at\ttimestamp\tThe time the company last recorded making a request\ncompany_id\tstring\tThe company id you have defined for the company\nname\tstring\tThe name of the company\ncustom_attributes\tobject\tThe custom attributes you have set on the company\nsession_count\tinteger\tHow many sessions the company has recorded\nmonthly_spend\tnumber\tHow much revenue the company generates for your business\nuser_count\tnumber\tThe number of users in the company\nplan*\tstring\tThe name of the plan you have associated with the company.\nsize\tinteger\tThe number of employees in the company\nwebsite\tstring\tThe URL for the company website\nindustry\tstring\tThe industry that the company operates in\n\n* Note that plan is set as a string but returned as an object as described below. You can only set the name of a plan using the plan string.\n\nAttribute\tType\tDescription\ntype\tstring\tWill always be of type 'plan'\nid\tstring\tThe plan ID\nname\tstring\tThe name of the plan, note that this is the only field that can be set via the API.\n\nAny integer values in the company model are limited to the int32 range -2^31 to 2^31 -1.\n\nCompany List\n\nA company list contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'company.list'\ntotal_count\tinteger\tThe number of companies for this App\ncompanies\tarray\tA list of companies\npages\tobject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch"
  },
  {
    "title": "Company Model",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/companies/company-model/",
    "html": "Company Model\nExample Company Object\n{\n  \"type\": \"company\",\n  \"id\": \"531ee472cce572a6ec000006\",\n  \"name\": \"Blue Sun\",\n  \"plan\": \"plan1\",\n  \"company_id\": \"6\",\n  \"remote_created_at\": 1394531169,\n  \"created_at\": 1394533506,\n  \"updated_at\": 1396874658,\n  \"size\": 85,\n  \"website\": \"http://www.example.com\",\n  \"industry\": \"Manufacturing\",\n  \"monthly_spend\": 49,\n  \"session_count\": 26,\n  \"user_count\": 10,\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"team_mates\": 0\n  }\n}\n\nExample Company List\n{\n  \"type\": \"company.list\",\n  \"total_count\": 1,\n  \"companies\": [\n    {\n      \"type\": \"company\",\n      \"id\": \"531ee472cce572a6ec000006\",\n      \"name\": \"Blue Sun\",\n      \"plan\": \"plan1\",\n      \"company_id\": \"6\",\n      \"remote_created_at\": 1394531169,\n      \"created_at\": 1394533506,\n      \"updated_at\": 1396874658,\n      \"size\": 85,\n      \"website\": \"http://www.example.com\",\n      \"industry\": \"Manufacturing\",\n      \"monthly_spend\": 49,\n      \"session_count\": 26,\n      \"user_count\": 10,\n      \"custom_attributes\": {\n        \"paid_subscriber\" : true,\n        \"team_mates\": 0\n      }\n    }\n  ],\n  \"pages\": {\n    \"page\": 1,\n    \"per_page\": 50,\n    \"total_pages\": 1\n  }\n}\n\nCompany Object\n\nA company object contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'company'\nid\tstring\tThe Intercom defined id representing the company\ncreated_at\ttimestamp\tThe time the company was added to Intercom\nremote_created_at\ttimestamp\tThe time the company was created by you\nupdated_at\ttimestamp\tThe last time the company was updated\nlast_request_at\ttimestamp\tThe time the company last recorded making a request\ncompany_id\tstring\tThe company id you have defined for the company\nname\tstring\tThe name of the company\ncustom_attributes\tobject\tThe custom attributes you have set on the company\nsession_count\tinteger\tHow many sessions the company has recorded\nmonthly_spend\tnumber\tHow much revenue the company generates for your business\nuser_count\tnumber\tThe number of users in the company\nplan*\tstring\tThe name of the plan you have associated with the company.\nsize\tinteger\tThe number of employees in the company\nwebsite\tstring\tThe URL for the company website\nindustry\tstring\tThe industry that the company operates in\n\n* Note that plan is set as a string but returned as an object as described below. You can only set the name of a plan using the plan string.\n\nAttribute\tType\tDescription\ntype\tstring\tWill always be of type 'plan'\nid\tstring\tThe plan ID\nname\tstring\tThe name of the plan, note that this is the only field that can be set via the API.\n\nAny integer values in the user model are limited to the int32 range -2^31 to 2^31 -1\n\nCompany List\n\nA company list contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'company.list'\ntotal_count\tinteger\tThe number of companies for this App\ncompanies\tarray\tA list of companies\npages\tobject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch"
  },
  {
    "title": "Companies",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/companies/companies/",
    "html": "Companies\n\nCompanies allow you to represent commercial organizations using your product.\n\nEach company will have its own description and be associated with users. You can create and update companies and add custom attributes describing them. Companies can be viewed individually or as a list, and can be queried using tags or segments.\n\nCompanies will not appear within Intercom until users have been added or associated with a company."
  },
  {
    "title": "Companies",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/companies/companies/",
    "html": "Companies\n\nCompanies allow you to represent commercial organizations using your product.\n\nEach company will have its own description and be associated with users. You can create and update companies and add custom attributes describing them. Companies can be viewed individually or as a list, and can be queried using tags or segments.\n\nCompanies will not appear within Intercom until users have been added or associated with a company."
  },
  {
    "title": "The company model",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/companies/company-model/",
    "html": "The company model\nExample Company Object\n{\\n  \\\"type\\\": \\\"company\\\",\\n  \\\"id\\\": \\\"531ee472cce572a6ec000006\\\",\\n  \\\"name\\\": \\\"Blue Sun\\\",\\n  \\\"plan\\\": {\\n        \\\"type\\\": \\\"plan\\\",\\n        \\\"id\\\": \\\"269315\\\",\\n        \\\"name\\\": \\\"pro\\\"\\n    },\\n  \\\"company_id\\\": \\\"6\\\",\\n  \\\"remote_created_at\\\": 1394531169,\\n  \\\"created_at\\\": 1394533506,\\n  \\\"updated_at\\\": 1396874658,\\n  \\\"size\\\": 85,\\n  \\\"website\\\": \\\"http://www.example.com\\\",\\n  \\\"industry\\\": \\\"Manufacturing\\\",\\n  \\\"monthly_spend\\\": 49,\\n  \\\"session_count\\\": 26,\\n  \\\"user_count\\\": 10,\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"team_mates\\\": 0\\n  }\\n}\n\n\nCompanies allow you to represent organizations using your product. Each company will have its own description and be associated with contacts. You can fetch, create, update and list companies.\n\nCompanies will not appear within Intercom until users have been added or associated with a company.\n\nCompany object\nAttribute\tType\tDescription\ntype\tString\tValue is 'company'.\nid\tString\tThe Intercom defined id representing the company.\ncreated_at\tDate (UNIX timestamp)\tThe time the company was added to Intercom.\nremote_created_at\tDate (UNIX timestamp)\tThe time the company was created by you.\nupdated_at\tDate (UNIX timestamp)\tThe last time the company was updated.\nlast_request_at\tDate (UNIX timestamp)\tThe time the company last recorded making a request.\ncompany_id\tString\tThe company id you have defined for the company.\nname\tString\tThe name of the company.\ncustom_attributes\tObject\tThe custom attributes you have set on the company.\nsession_count\tInteger\tHow many sessions the company has recorded.\nmonthly_spend\tInteger\tHow much revenue the company generates for your business.\nuser_count\tInteger\tThe number of users in the company.\nplan\tObject\tThe name of the plan you have associated with the company.\nsize\tInteger\tThe number of employees in the company.\nwebsite\tString\tThe URL for the company website.\nindustry\tString\tThe industry that the company operates in.\ntags\tObject\tThe tags that are attached to that company.\nsegments\tObject\tThe segments which that company is contained in.\nPlan object\nAttribute\tType\tDescription\ntype\tstring\tWill always be of type 'plan'\nid\tstring\tThe plan ID\nname\tstring\tThe name of the plan, note that this is the only field that can be set via the API.\nTag Object\nAttribute\tType\tDescription\ntype\tstring\tWill always be of type 'tag.list'\ntags\tarray\tWill contain the list of tags that are attached to that company.\nSegment object\nAttribute\tType\tDescription\ntype\tstring\tWill always be of type 'segment.list'\nsegments\tarray\tWill contain the list of segments which this company is a part of."
  },
  {
    "title": "The message model",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/messages/messages-model/",
    "html": "The message model\nExample Message Object\n{    \"type\": \"message\",    \"id\": \"489373052\",    \"created_at\": 1539897198,    \"subject\": \"This is the subject - if it's an email\",    \"body\": \"<p>Hello</p>\",    \"message_type\": \"email\"}\n\n\nMessage are how you reach out to contacts in Intercom. They are created when an admin sends an outbound message to a contact.\n\nMessage Object\nKey\tType\tDescription\ntype\tString\tAlways message.\nid\tString\tThe id representing the message.\ncreated_at\tUNIX Timestamp\tThe time the conversation was created.\nsubject\tString\tThe subject of the message.Only present if message_type: email.\nbody\tString\tThe message body, which may contain HTML.\nmessage_type\tString\tThe type of message that was sent. Can be email, inapp, facebook or twitter."
  },
  {
    "title": "Company User/Segment/Tag Count Model",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/counts/company-tag-counts/",
    "html": "Company User/Segment/Tag Count Model\nCompany User/Segment/Tag Count Object\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\ncompany\tobject\tContains a field called segment containing segment counts\ncompany.segment\tarray\tContains a list of segment objects their name and their number of companies tagged\ncompany.tag\tarray\tContains a list of tag objects with their name and their number of companies tagged\ncompany.user\tarray\tContains an array of companies with their name and their number of users\ncurlcurlrubyphpjava\n# Company Tag Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=tag&per_page=5' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\n# Company Segment Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=segment' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\n# Company User Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=user' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\n# Company Tag Count\\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"count\\\",\\n    \\\"company\\\": {\\n        \\\"tag\\\": [\\n            {\\n                \\\"VIP\\\": 0\\n            },\\n            {\\n                \\\"UpMarket\\\": 0\\n            },\\n            {\\n                \\\"test\\\": 0\\n            },\\n            {\\n                \\\"new\\\": 0\\n            },\\n            {\\n                \\\"smb\\\": 0\\n            }\\n        ]\\n    },\\n    \\\"pages\\\": {\\n        \\\"pages\\\": {\\n            \\\"type\\\": \\\"pages\\\",\\n            \\\"next\\\": \\\"https://api.intercom.io/counts?type=company&count=tag&page=2&per_page=5\\\",\\n            \\\"page\\\": 1,\\n            \\\"per_page\\\": 5,\\n            \\\"total_pages\\\": 203\\n        }\\n    }\\n}\\n\\n# Company Segment Count\\nHTTP/1.1 200 OK\\n{\\n    \\\"type\\\": \\\"count\\\",\\n    \\\"company\\\": {\\n        \\\"segment\\\": [\\n            {\\n                \\\"Active\\\": 2\\n            },\\n            {\\n                \\\"New\\\": 0\\n            },\\n            {\\n                \\\"Slipping Away\\\": 0\\n            },\\n            {\\n                \\\"id=10\\\": 10\\n            }\\n        ]\\n    },\\n    \\\"pages\\\": {}\\n}\\n\\n# Company User Count\\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"count\\\",\\n  \\\"company\\\": {\\n    \\\"user\\\": [\\n      {\\n        \\\"Independents\\\": 7,\\n        \\\"remote_company_id\\\": \\\"6\\\"\\n      },\\n      {\\n        \\\"Alliance\\\": 1,\\n        \\\"remote_company_id\\\": \\\"7\\\"\\n      }\\n    ]\\n  },\\n  \\\"pages\\\": {}\\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nCompany Segment Count\tcompany\tsegment\nCompany Tag Count\tcompany\ttag\nCompany User Count\tcompany\tuser\nPAGINATION WITH COMPANY COUNTS\n\nCompany tag counts are returned via pagination, which means it defaults to 50 results per page unless you specify otherwise. e.g. \\n'https://api.intercom.io/counts?type=company&count=tag&per_page=10\\\"\\n\\nTo get the next page of results you need to make a GET request with the \"next\" RUL supplied in the initial response."
  },
  {
    "title": "Conversation Count Model",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/counts/conversation-counts/",
    "html": "Conversation Count Model\nConversation Count Object\n\nThe conversation count supplies global counts about your App's conversations\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nconversation\tobject\tContains counts related to conversations\nconversation.assigned\tnumber\tContains the number of assigned conversations\nconversation.closed\tnumber\tContains the number of closed conversations\nconversation.open\tnumber\tContains the number of open conversations\nconversation.unassigned\tnumber\tContains the number of unassigned conversations\n{\n    \"type\": \"count\",\n    \"conversation\": {\n        \"open\": 30,\n        \"closed\": 17,\n        \"unassigned\": 0,\n        \"assigned\": 30\n    }\n}\n\n# Conversation Counts\n$ curl 'https://api.intercom.io/counts?type=conversation' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# Conversation App Counts\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"count\",\n    \"conversation\": {\n        \"open\": 30,\n        \"closed\": 17,\n        \"unassigned\": 0,\n        \"assigned\": 30\n    }\n}\n\nintercom.counts.for_type(type: 'conversation')\n\n<?php\n$counts = $intercom->counts->getCounts([\"type\" => \"conversation\"]);\nprint_r($counts);\n?>\n\n// Conversation Counts\nfinal Counts.Conversation totals = Counts.conversationTotals();\ntotals.getAssigned();\ntotals.getClosed();\ntotals.getOpen();\ntotals.getUnassigned();\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nConversation Count\tconversation\tNone"
  },
  {
    "title": "List all data events",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/data-events/list-user-events/",
    "html": "List all data events\n\nPlease note that you can only 'list' events that are less than 90 days old. Event counts and summaries will still include your events older than 90 days but you cannot 'list' these events individually if they are older than 90 days\n\nList all customer events\ncurlcurlrubyphpjava\n$ curl 'https://api.intercom.io/events?type=user&user_id=314159' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"event.list\\\",\\n  \\\"events\\\": [\\n      {\\n        \\\"event_name\\\" : \\\"ordered-item\\\",\\n        \\\"created_at\\\": 1391691571,\\n        \\\"user_id\\\" : \\\"314159\\\"\\n      },\\n      {\\n        \\\"event_name\\\" : \\\"invited-friend\\\",\\n        \\\"created_at\\\": 1389913941,\\n        \\\"user_id\\\" : \\\"314159\\\",\\n        \\\"metadata\\\": {\\n         \\\"invitee_email\\\": \\\"pi@example.org\\\",\\n         \\\"invite_code\\\": \\\"ADDAFRIEND\\\"\\n         }\\n      },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/events?type=user&intercom_user_id=55a3b&before=144474756550\\\"\\n  }\\n}\\n\\n# NB: Full event objects are returned\n\n\nThe events belonging to a customer can be listed by sending a GET request to https://api.intercom.io/events with a user or lead identifier along with a type parameter. The identifier parameter can be one of user_id, email or intercom_user_id. The type parameter value must be user.\n\nhttps://api.intercom.io/events?type=user&user_id={user_id}\nhttps://api.intercom.io/events?type=user&email={email}\nhttps://api.intercom.io/events?type=user&intercom_user_id={id} (this call can be used to list leads)\n\nThe email parameter value should be url encoded when sending.\n\nYou can optionally define the result page size as well with the per_page parameter.\n\nRequest Parameters\nParameter\tRequired\tDescription\ntype\tyes\tThe value must be user\nuser_id\tno\tThe user id you have defined for the user\nemail\tno\tThe email you have defined for the user\nintercom_user_id\tno\tThe Intercom defined id for the user\nper_page\tno\tHow many results to return per page defaults to 50.\nsummary\tno\tBoolean value. When set to true, event counts are returned grouped by event name.\nReturns\n\nA pageable list of events. The event list contains a pages object that indicates if more events exist for the customer via the next field, whose value is a URL that can be used to fetch the next page. If the next field is not present, that indicates there are no further events for the user. Clients should note that the parameters in the returned link are not assured to be the same as those sent in the request.\n\nThe event list is sorted by the created_at field and ordered descending, most recently created first.\n\nAs well as the fields that were supplied when the event was posted to Intercom (see Event model) for details) the event payload will also contain an id field that uniquely identifies the event and may optionally contain an intercom_user_id containing the Intercom defined id representing the user.\n\nYou can use the API to get counts of users, leads and companies filtered by certain criteria.\n\nCounts are a good way to periodically obtain data for the purposes of tracking rates of change in user and company data."
  },
  {
    "title": "List attached segments for contact",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/contacts/list-attached-segments/",
    "html": "List attached segments for contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/segments \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can fetch a list of segments that are associated to a contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return a list of Segment objects.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - list\ndata\tArray\tAn array containing Segment Objects"
  },
  {
    "title": "Search for contacts",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/contacts/search-for-contacts/",
    "html": "Search for contacts\n\nYou can search for multiple contacts by the value of their attributes in order to fetch exactly who you want.\n\nTo search for contacts, you need to send a POST request to https://api.intercom.io/contacts/search. This will accept a query object in the body which will define your filters in order to search for contacts.\n\nWHY IS THERE A DELAY WHEN CREATING CONTACTS AND SEARCHING FOR THEM?\n\nIf a contact has recently been created, there is a possibility that it will not yet be available when searching. This means that it may not appear in the response. This delay can take a few minutes. If you need to be instantly notified then you could use webhooks instead, which you'd currently have to iterate on to see if they match your search filters.\n\nSearch with single filter\n\nYou should provide the following parameters within a query object:\n\nParameter\tRequired?\tDescription\nfield\tYes\tThe fields associated to a customer that you can search for. See all accepted fields below.\noperator\tYes\tThe operator that you want to compare by. See all accepted operators below.\nvalue\tYes\tThe value you want to search by.\nSearch with multiple filters\n\nYou can search with multiple filters by combining a list of single filter objects within a value array and saying whether you want to ensure all given values match (AND), or only one of these match (OR). The query object should contain these parameters.\n\nParameter\tRequired?\tDescription\noperator\tYes\tThe operator (AND or OR) by which to query the combined values.\nvalue\tYes\tAn array of single query objects.\nONLY CHECKING IF ONE VALUE MATCHES?\n\nIf you're only using OR to check that one matches out of the values, you could instead use IN as the operator in a single filter query. You could also use NIN to say that it does not match one of the values.\n\nNESTING & LIMITATIONS\n\nYou can nest these filters in order to get even more granular insights that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4).\\n\\nThere are some limitations to the amount of multiple's there can be:\\n\\n_ There's a limit of max 2 nested filters\\n_ There's a limit of max 15 filters for each AND or OR group\n\nExample Request (Single Filter)\nRequest\n{\\n \\\"query\\\":  {\\n    \\\"field\\\": \\\"custom_attributes.salesforce_status\\\",\\n    \\\"operator\\\": \\\"~\\\",\\n    \\\"value\\\": \\\"open\\\"\\n  }\\n}\n\nExample Request (Multiple Filters)\njsonjson\n{\\n \\\"query\\\":  {\\n    \\\"operator\\\": \\\"AND\\\",\\n    \\\"value\\\": [\\n      {\\n        \\\"field\\\": \\\"custom_attributes.social_network\\\",\\n        \\\"operator\\\": \\\"=\\\",\\n        \\\"value\\\": \\\"facebook\\\"\\n      }, \\n      {\\n        \\\"field\\\": \\\"custom_attributes.social_network\\\",\\n        \\\"operator\\\": \\\"=\\\",\\n        \\\"value\\\": \\\"twitter\\\"\\n      },\\n      {\\n        \\\"field\\\": \\\"custom_attributes.social_network\\\",\\n        \\\"operator\\\": \\\"=\\\",\\n        \\\"value\\\": \\\"instagram\\\"\\n      }\\n    ]\\n  }\\n}\n\n{\\n \\\"query\\\":  {\\n    \\\"field\\\": \\\"custom_attributes.social_network\\\",\\n    \\\"operator\\\": \\\"IN\\\",\\n    \\\"value\\\": [\\\"facebook\\\", \\\"twitter\\\", \\\"instagram\\\"]\\n  }\\n}\n\nExample Request (Nested Filters)\nRequest\n{\\n \\\"query\\\":  {\\n    \\\"operator\\\": \\\"AND\\\",\\n    \\\"value\\\": [\\n      {\\n        \\\"operator\\\": \\\"OR\\\",\\n        \\\"value\\\": [\\n          {\\n            \\\"field\\\": \\\"created_at\\\",\\n            \\\"operator\\\": \\\">\\\",\\n            \\\"value\\\": 1560436650\\n          }, \\n          {\\n            \\\"field\\\": \\\"signed_up_at\\\",\\n            \\\"operator\\\": \\\">\\\",\\n            \\\"value\\\": 1560436784\\n          }\\n        ]\\n      },\\n      {\\n        \\\"operator\\\": \\\"OR\\\",\\n        \\\"value\\\": [\\n          {\\n            \\\"field\\\": \\\"custom_attributes.salseforce_status\\\",\\n            \\\"operator\\\": \\\"~\\\",\\n            \\\"value\\\": \\\"Open\\\"\\n          }, \\n          {\\n            \\\"field\\\": \\\"custom_attributes.salesforce_object_type\\\",\\n            \\\"operator\\\": \\\"=\\\",\\n            \\\"value\\\": \\\"Lead\\\"\\n          }\\n        ]\\n      }\\n    ]\\n  }\\n}\n\nExample Errors\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n      {\n        \"code\": \"bad_request\",\n        \"message\": \"bad 'random_param' parameter\"\n      }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_query\",\n      \"message\": \"Invalid query. Ensure 'field', 'operator', 'value' are present for field queries. Ensure 'operator' and 'value' for composite queries.\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_values\",\n      \"message\": \"Value depth exceeds 10 items\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_value\",\n      \"message\": \"123 is not a valid string\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_field\",\n      \"message\": \"not_a_field is not a valid field\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_operator\",\n      \"message\": \"Composite operators must be of type AND or OR \"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_operator\",\n      \"message\": \"email does not support operator: >\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_value\",\n      \"message\": \"Number of elements in composite query is greater than 15, please try again with a smaller list\"\n    }\n  ]\n}\n\nAccepted Fields\nSEARCHING FOR TIMESTAMP FIELDS\n\nAll timestamp fields (created_at, updated_at etc.) are indexed as Dates for Contact Search queries; Datetime queries are not currently supported. This means you can only query for timestamp fields by day - not hour, minute or second.\\n\\nFor example, if you search for all Contacts with a created_at value greater (>) than 1577869200 (the UNIX timestamp for January 1st, 2020 9:00 AM), that will be interpreted as 1577836800 (January 1st, 2020 12:00 AM). The search results will then include Contacts created from January 2nd, 2020 12:00 AM onwards.\\n\\nIf you'd like to get contacts created on January 1st, 2020 you should search with a created_at value equal (=) to 1577836800 (January 1st, 2020 12:00 AM).\\n\\nThis behaviour applies only to timestamps used in search queries. The search results will still contain the full UNIX timestamp and be sorted accordingly.\n\nMost key listed as part of the Contacts Model are searchable, whether writeable or not. The value you search for has to match the accepted type, otherwise the query will fail (ie. as created_at accepts a date, the value cannot be a string such as \"foorbar\").\n\nField\tType\nid\tString\nrole\tString\nAccepts user or lead\nname\tString\navatar\tString\nowner_id\tInteger\nemail\tString\nphone\tString\nexternal_id\tString\ncreated_at\tDate (UNIX Timestamp)\nsigned_up_at\tDate (UNIX Timestamp)\nupdated_at\tDate (UNIX Timestamp)\nlast_seen_at\tDate (UNIX Timestamp)\nlast_contacted_at\tDate (UNIX Timestamp)\nlast_replied_at\tDate (UNIX Timestamp)\nlast_email_opened_at\tDate (UNIX Timestamp)\nlast_email_clicked_at\tDate (UNIX Timestamp)\nlanguage_override\tString\nbrowser\tString\nbrowser_language\tString\nos\tString\nlocation.country\tString\nlocation.region\tString\nlocation.city\tString\nunsubscribed_from_emails\tBoolean\nmarked_email_as_spam\tBoolean\nhas_hard_bounced\tBoolean\nios_last_seen_at\tDate (UNIX Timestamp)\nios_app_version\tString\nios_device\tString\nios_app_device\tString\nios_os_version\tString\nios_app_name\tString\nios_sdk_version\tString\nandroid_last_seen_at\tDate (UNIX Timestamp)\nandroid_app_version\tString\nandroid_device\tString\nandroid_app_name\tString\nandoid_sdk_version\tString\nsegment_id\tString\ntag_id\tString\ncustom_attributes.{attribute_name}\tString\nAccepted Operators\n\nThe table below shows the operators you can use to define how you want to search for the value. The operator should be put in as a string (\"=\"). The operator has to be compatible with the field's type (eg. you cannot search with > for a given string value as it's only compatible for integer's and dates).\n\nOperator\tValid Types\tDescription\n=\tAll\tEquals\n!=\tAll\tDoesn't Equal\nIN\tAll\tIn\nShortcut for OR queries\nValues must be in Array\nNIN\tAll\tNot In\nShortcut for OR ! queries\nValues must be in Array\n>\tInteger\nDate (UNIX Timestamp)\tGreater than\n<\tInteger\nDate (UNIX Timestamp)\tLower than\n~\tString\tContains\n!~\tString\tDoesn't Contain\n^\tString\tStarts With\n$\tString\tEnds With\nResponse\n\nA JSON payload with a list of Contact model that match the search query, with a total_count integer saying how many models have been returned."
  },
  {
    "title": "Unarchive a contact",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/contacts/unarchive-a-contact/",
    "html": "Unarchive a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/unarchive \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can unarchive a single contact.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return an object with details on the unarchived contact.\n\nAttribute\tType\tDescription\nid\tString\tThe unique identifier for the contact which is given by Intercom\nobject\tString\tThe type of object - contact\narchived\tBoolean\tWhether the contact has been archived - false"
  },
  {
    "title": "List attached companies",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/contacts/list-companies-of-contact/",
    "html": "List attached companies\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/companies \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can fetch a list of companies that are associated to a contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return a paginated list of Company objects.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - company.list\ncompanies\tArray\tAn array containing Company Objects\ntotal_count\tInteger\tThe total number of companies associated to this contact\npages\tPagination Object\tThe information needed to paginate through companies"
  },
  {
    "title": "Admin Conversations Count Model",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/counts/admin-conversations/",
    "html": "Admin Conversations Count Model\nAdmin Conversation Count Object\n\nThe admin conversation count supplies per Admin counts\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nconversation\tobject\tContains counts related to admins\nconversation.admin\tarray\tContains and array of objects detailing each Admin\nconversation.admin.open\tnumber\tContains the number of open conversations for the Admin\nconversation.admin.closed\tnumber\tContains the number of closed conversations for the Admin\nconversation.admin.id\tstring\tContains the Admin id\nconversation.admin.name\tstring\tContains the Admin name\n{\n  \"type\": \"count\",\n  \"conversation\": {\n    \"admin\": [\n      {\n        \"id\": \"1\",\n        \"name\": \"Wash\",\n        \"open\": 0,\n        \"closed\": 1\n      },\n      {\n        \"id\": \"2\",\n        \"name\": \"Jayne\",\n        \"open\": 0,\n        \"closed\": 0\n      }\n    ]\n  }\n}\n\n# Conversation Admin Counts\n$ curl 'https://api.intercom.io/counts?type=conversation&count=admin' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# Conversation Admin Counts\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"conversation\": {\n    \"admin\": [\n      {\n        \"id\": \"1\",\n        \"name\": \"Wash\",\n        \"open\": 0,\n        \"closed\": 1\n      },\n      {\n        \"id\": \"2\",\n        \"name\": \"Jayne\",\n        \"open\": 0,\n        \"closed\": 0\n      }\n    ]\n  }\n}\n\nintercom.counts.for_type(type: 'conversation', count: 'admin')\n\n<?php\n// Conversation Admin Count\n$counts = $intercom->counts->getCounts([\"type\" => \"conversation\", \"count\" => \"admin\"]);\nprint_r($counts);\n?>\n\n// Conversation Admin Count\nfinal Counts.Conversation counts = Counts.conversationAdmins();\nList<Admin> admins = counts.getAdmins();\nfor (Admin admin : admins) {\n    out.println(\n      admin.getName() + \": \" +\n      admin.getClosed() + \", \" +\n      admin.getOpen());\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nConversation Admin Count\tconversation\tadmin"
  },
  {
    "title": "App Total Count Model",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/counts/company-user-counts/",
    "html": "App Total Count Model\n\nYou can use the API to get counts of users and companies filtered by certain criteria.\n\nCounts are a legacy way to periodically obtain data for the purposes of tracking rates of change in contact and company data.\n\nWorkspace Total Count Object\n\nThe total count object contains the summary of the following fields in a workspace, -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count.hash'\ncompany\tobject\tContains the number of companies in your App\nsegment\tobject\tContains the number of segments in your App\ntag\tobject\tContains the number of tags in your App\nuser\tobject\tContains the number of users in your App\nlead\tobject\tContains the number of leads in your App\n\nThe count of tags and segments includes archived tags and segments.\n\n{\n    \"type\": \"count.hash\",\n    \"company\": {\n        \"count\": 55\n    },\n    \"user\": {\n        \"count\": 54944\n    },\n    \"lead\": {\n        \"count\": 17\n    },\n    \"tag\": {\n        \"count\": 1012\n    },\n    \"segment\": {\n        \"count\": 7\n    }\n}\n\n# App Counts\n$ curl 'https://api.intercom.io/counts' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# App Total Counts\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"count.hash\",\n    \"company\": {\n        \"count\": 55\n    },\n    \"user\": {\n        \"count\": 54944\n    },\n    \"lead\": {\n        \"count\": 17\n    },\n    \"tag\": {\n        \"count\": 1012\n    },\n    \"segment\": {\n        \"count\": 7\n    }\n}\n\nintercom.counts.for_app\n\n<?php\n// Global App Counts\n$intercom->counts->getCounts([]);\n?>\n\n// Global App Counts\nfinal Counts.Totals appTotals = Counts.appTotals();\nappTotals.getCompany().getValue();\nappTotals.getSegment().getValue();\nappTotals.getTag().getValue();\nappTotals.getUser().getValue();\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nGlobal App Counts\tNone\tNone"
  },
  {
    "title": "Create a data attribute",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/data-attributes/create-data-attributes/",
    "html": "Create a data attribute\nExample Requests & Response\ncurlhttp\n$ curl https://api.intercom.io/data_attributes \\\\-X POST \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept: application/json' \\\\-H 'Content-Type: application/json' -d{  \\\"name\\\": \\\"list_cda\\\",  \\\"description\\\": \\\"You are either alive or dead\\\",  \\\"data_type\\\": \\\"options\\\",  \\\"company\\\": false,  \\\"options\\\": [    {\\\"value\\\": \\\"alive\\\"},    {\\\"value\\\": \\\"dead\\\"}  ]}\n\nExample Errors\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"0006klvnje6ffng7ot80\",\n  \"errors\": [\n    {\n      \"code\": \"parameter_invalid\",\n      \"message\": \"You already have 'text_cda' in your people data. To save this as new company data, use a different name.\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"0000rnvpf3m1f3nf4k40\",\n  \"errors\": [\n    {\n      \"code\": \"parameter_invalid\",\n      \"message\": \"Your name for this attribute must only contain alphanumeric characters, currency symbols, and hyphens\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"0000rnvpf3m1f3nf4k40\",\n  \"errors\": [\n    {\n      \"code\": \"parameter_invalid\",\n      \"message\": \"'Name' is one of our standard attributes for your people data. To save this as new people data, use a different name.\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"0000rnvpf3m1f3nf4k40\",\n  \"errors\": [\n    {\n      \"code\": \"parameter_invalid\",\n      \"message\": \"Data Type isn't an option\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"0000rnvpf3m1f3nf4k40\",\n  \"errors\": [\n    {\n      \"code\": \"parameter_invalid\",\n      \"message\": \"You must have at least two options on a list type data attribute\"\n    }\n  ]\n}\n\n\nYou can create a data attributes for a contact or a company.\n\nRequest Body Parameters\nAttribute\tType\tDescription\nname\tstring\tThe name of the attribute.\nmodel\tString\tThe model where the attribute applies to. Accepts contact or company .\ndata_type\tstring\tThe type of data stored for this attribute. Accepted values are string, integer, float, boolean, date.\ndescription\tstring\t(Optional) The readable description you see in the UI for the attribute.\noptions\tarray\t(Optional) To create list attributes. Provide a set of hashes with value as the key of the options you want to make. data_type must be string.\nResponse\n\nThis will return a Data Attribute Model showing the details of your created attribute."
  },
  {
    "title": "Merge two contacts",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/contacts/merge-contact/",
    "html": "Merge two contacts\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/merge \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\\n\\n{\\n  \\\"from\\\": \\\"5d70dd30de4efd54f42fd526\\\",\\n  \\\"into\\\": \\\"5ba682d23d7cf92bef87bfd4\\\"\\n}\\n\n\nExample Errors\nhttphttp\nHTTP/1.1 404 FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\\n\n\nHTTP/1.1 400 UNPROCESSABLE ENTITY\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"0019c4t1derm7namdon0\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"invalid_merge\\\",\\n      \\\"message\\\": \\\"Merging can only be performed on a lead into a user\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can merge a contact with a role of lead into a contact with a role of user.\n\nWHAT HAPPENS UPON A CONTACT BEING MERGED?\n\nThe contact that's specified as from will be deleted after being merged into the contact specified as into. Attributes that don't exist on the contact specified as into will be copied over.\n\nRequest Body Parameters\nParameter\tType\tRequired\tDescription\nfrom\tString\tYes\tThe unique identifier for the contact to merge away from. Must be a lead.\ninto\tString\tYes\tThe unique identifier for the contact to merge into. Must be a user.\nResponse\n\nThis will return a Contact model for the contact who's been merged into."
  },
  {
    "title": "List all contacts",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/contacts/list-contacts/",
    "html": "List all contacts\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nInvalid starting_after param\nHTTP/1.1 400 BAD REQUEST\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"000nbboasf1qqab6b910\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"client_error\\\",\\n      \\\"message\\\": \\\"Invalid starting_after param. Please try again using a starting_after value from a paginated response\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can fetch a list of all contacts.\n\nResponse\n\nThis will return a paginated list of Contact objects.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - list\ndata\tArray\tAn array containing Contact Objects\ntotal_count\tInteger\tThe total number of contacts\npages\tPagination Object\tThe information needed to paginate through contacts"
  },
  {
    "title": "List attached tags",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/contacts/list-tags-of-contact/",
    "html": "List attached tags\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/tags \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can fetch a list of tags that are associated to a contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return a list of Tag objects.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - tag.list\ntags\tArray\tAn array containing Tag Objects"
  },
  {
    "title": "Create a contact",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/contacts/create-contact/",
    "html": "Create a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts \\\\-X POST \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json'-H 'Content-Type: application/json' -d{\\t\\\"role\\\": \\\"user\\\",\\t\\\"external_id\\\": \\\"25\\\",\\t\\\"email\\\": \\\"wash@serenity.io\\\",\\t\\\"phone\\\": \\\"+1123456789\\\",\\t\\\"name\\\": \\\"Hoban Washburn\\\",\\t\\\"avatar\\\": \\\"https://example.org/128Wash.jpg\\\",\\t\\\"last_seen_at\\\": 1571069751,\\t\\\"signed_up_at\\\": 1571069751,\\t\\\"owner_id\\\": 127,\\t\\\"unsubscribed_from_emails\\\": false,\\t\\\"custom_attributes\\\": {\\t\\t\\\"paid_subscriber\\\": true,\\t\\t\\\"monthly_spend\\\": 155.5,\\t\\t\\\"team_mates\\\": 1\\t}}\n\nExample Errors\nhttphttp\nHTTP/1.1 409 CONFLICT{  \\\"type\\\": \\\"error.list\\\",  \\\"request_id\\\": \\\"80ec9d92-99ff-4da9-9a0e-c0ab7c42f7e7\\\",  \\\"errors\\\": [    {      \\\"code\\\": \\\"conflict\\\",      \\\"message\\\": \\\"A contact matching those details already exists with id=5da6f18e3d7cf967e4582d05\\\"    }  ]}\n\nHTTP/1.1 400 BAD REQUEST{  \\\"type\\\": \\\"error.list\\\",  \\\"request_id\\\": \\\"00043csj9iva7pl9mmmg\\\",  \\\"errors\\\": [    {      \\\"code\\\": \\\"parameter_invalid\\\",      \\\"message\\\": \\\"The owner specified is not a member of the workspace\\\"    }  ]}\n\n\nYou can create a new contact (ie. user or lead).\n\nRequest Body Parameters\nAttribute\tType\tRequired\tDescription\nrole\tString\tYes\tThe role of the contact. Accepted values are user or lead.\nexternal_id\tString\tYes - if role is user and email is blank\tA unique identifier for the contact which is given to Intercom\nemail\tString\tYes - if role is user and external_id is blank\tThe contacts email\nphone\tString\tNo\tThe contacts phone\nname\tString\tNo\tThe contacts name\navatar\tString\tNo\tAn image URL containing the avatar of a contact\nsigned_up_at\tTimestamp\tNo\tThe time specified for when a contact signed up\nlast_seen_at\tTimestamp\tNo\tThe time when the contact was last seen (either where the Intercom Messenger was installed or when specified manually)\nowner_id\tInteger\tNo\tThe id of an admin that has been assigned account ownership of the contact\nunsubscribed_from_emails\tBoolean\tNo\tWhether the contact is unsubscribed from emails\ncustom_attributes\tObject\tNo\tThe custom attributes which are set for the contact\nCREATING NEW CUSTOM DATA ATTRIBUTES\n\nYou can only write to custom data attributes that already exist on the workspace. If you need to create new attributes to write to, you should Create Data Attributes through the data Attributes API.\n\nResponse\n\nThis will return a Contact model of the contact you just created."
  },
  {
    "title": "Retrieve a contact",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/contacts/get-contact/",
    "html": "Retrieve a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id> \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can fetch the details of a single contact.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return a Contact model."
  },
  {
    "title": "Archive a contact",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/contacts/archive-a-contact/",
    "html": "Archive a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/archive \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can archive a single contact.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return an object with details on the archived contact.\n\nAttribute\tType\tDescription\nid\tString\tThe unique identifier for the contact which is given by Intercom\nobject\tString\tThe type of object - contact\narchived\tBoolean\tWhether the contact has been archived - true"
  },
  {
    "title": "Update Visitor Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/update_visitor_request/",
    "html": "Update an existing visitor."
  },
  {
    "title": "Search for conversations",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/conversations/search-for-conversations/",
    "html": "Search for conversations\n\nYou can search for multiple conversations by the value of their attributes in order to fetch exactly which ones you want.\n\nTo search for conversations, you need to send a POST request to https://api.intercom.io/conversations/search. This will accept a query object in the body which will define your filters in order to search for conversations.\n\nSearch with single filter\n\nYou should provide the following parameters within a query object:\n\nParameter\tRequired?\tDescription\nfield\tYes\tThe fields associated to a conversation that you can search for. See all accepted fields.\noperator\tYes\tThe operator that you want to compare by. See all accepted operators below.\nvalue\tYes\tThe value you want to search by.\nSearch with multiple filters\n\nYou can search with multiple filters by combining a list of single filter objects within a value array and saying whether you want to ensure all given values match (AND), or only one of these match (OR). The query object should contain these parameters.\n\nParameter\tRequired?\tDescription\noperator\tYes\tThe operator (AND or OR) by which to query the combined values.\nvalue\tYes\tAn array of single query objects.\nONLY CHECKING IF ONE VALUE MATCHES?\n\nIf you're only using OR to check that one matches out of the values, you could instead use IN as the operator in a single filter query. You could also use NIN to say that it does not match one of the values.\n\nNESTING & LIMITATIONS\n\nYou can nest these filters in order to get even more granular insights that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4).\\There are some limitations to the amount of multiple's there can be:\\_ There's a limit of max 2 nested filters_ There's a limit of max 15 filters for each AND or OR group\n\nExample Request (Single Filter)\nRequest\n{ \\\"query\\\":  {    \\\"field\\\": \\\"updated_at\\\",    \\\"operator\\\": \\\">\\\",    \\\"value\\\": 1560436784  }}\n\nExample Request (Multiple Filters)\njsonjson\n{ \\\"query\\\":  {    \\\"operator\\\": \\\"AND\\\",    \\\"value\\\": [      {        \\\"field\\\": \\\"statistics.time_to_admin_reply\\\",        \\\"operator\\\": \\\">\\\",        \\\"value\\\": 1000      },       {        \\\"field\\\": \\\"assignee_id\\\",        \\\"operator\\\": \\\"=\\\",        \\\"value\\\": \\\"1627383\\\"      },      {        \\\"field\\\": \\\"open\\\",        \\\"operator\\\": \\\"=\\\",        \\\"value\\\": true      }    ]  }}\n\n{ \\\"query\\\":  {    \\\"field\\\": \\\"tags\\\",    \\\"operator\\\": \\\"IN\\\",    \\\"value\\\": [\\\"feature-request\\\", \\\"bug\\\", \\\"confusion\\\"]  }}\n\nExample Request (Nested Filters)\nRequest\n{ \\\"query\\\":  {    \\\"operator\\\": \\\"AND\\\",    \\\"value\\\": [      {        \\\"operator\\\": \\\"OR\\\",        \\\"value\\\": [          {            \\\"field\\\": \\\"updated_at\\\",            \\\"operator\\\": \\\">\\\",            \\\"value\\\": 1560436650          },           {            \\\"field\\\": \\\"conversation_rating.rating\\\",            \\\"operator\\\": \\\"=\\\",            \\\"value\\\": 1          }        ]      },      {        \\\"operator\\\": \\\"OR\\\",        \\\"value\\\": [          {            \\\"field\\\": \\\"updated_at\\\",            \\\"operator\\\": \\\">\\\",            \\\"value\\\": 1560436650          },           {            \\\"field\\\": \\\"conversation_rating.rating\\\",            \\\"operator\\\": \\\"=\\\",            \\\"value\\\": 2          }        ]      }    ]  }}\n\nExample Errors\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n      {\n        \"code\": \"bad_request\",\n        \"message\": \"bad 'random_param' parameter\"\n      }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_query\",\n      \"message\": \"Invalid query. Ensure 'field', 'operator', 'value' are present for field queries. Ensure 'operator' and 'value' for composite queries.\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_value\",\n      \"message\": \"123 is not a valid string\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_field\",\n      \"message\": \"not_a_field is not a valid field\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_values\",\n      \"message\": \"Value depth exceeds 10 items\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_value\",\n      \"message\": \"Number of elements in composite query is greater than 15, please try again with a smaller list\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_operator\",\n      \"message\": \"Composite operators must be of type AND or OR \"\n    }\n  ]\n}\n\nAccepted Fields\n\nMost keys listed as part of the The conversation model is searchable, whether writeable or not. The value you search for has to match the accepted type, otherwise the query will fail (ie. as created_at accepts a date, the value cannot be a string such as \"foorbar\").\n\nField\tType\nid\tString\ncreated_at\tDate (UNIX timestamp)\nupdated_at\tDate (UNIX timestamp)\nsource.type\tString\nsource.id\tString\nsource.delivered_as\tString\nsource.subject\tString\nsource.body\tString\nsource.author.id\tString\nsource.author.type\tString\nsource.author.name\tString\nsource.author.email\tString\nsource.url\tString\ncontact_ids\tString\nteammate_ids\tString\nassignee_id\tString\nchannel_initiated\tString Accepted fields are conversation, push, facebook, twitter and email.\nopen\tBoolean\nread\tBoolean\nstate\tString\nwaiting_since\tDate (UNIX timestamp)\nsnoozed_until\tDate (UNIX timestamp)\ntag_ids\tString\npriority\tString\nstatistics.time_to_assignment\tInteger\nstatistics.time_to_admin_reply\tInteger\nstatistics.time_to_first_close\tInteger\nstatistics.time_to_last_close\tInteger\nstatistics.median_time_to_reply\tInteger\nstatistics.first_contact_reply_at\tDate (UNIX timestamp)\nstatistics.first_assignment_at\tDate (UNIX timestamp)\nstatistics.first_admin_reply_at\tDate (UNIX timestamp)\nstatistics.first_close_at\tDate (UNIX timestamp)\nstatistics.last_assignment_at\tDate (UNIX timestamp)\nstatistics.last_assignment_admin_reply_at\tDate (UNIX timestamp)\nstatistics.last_contact_reply_at\tDate (UNIX timestamp)\nstatistics.last_admin_reply_at\tDate (UNIX timestamp)\nstatistics.last_close_at\tDate (UNIX timestamp)\nstatistics.last_closed_by_id\tString\nstatistics.count_reopens\tInteger\nstatistics.count_assignments\tInteger\nstatistics.count_conversation_parts\tInteger\nconversation_rating.requested_at\tDate (UNIX timestamp)\nconversation_rating.replied_at\tDate (UNIX timestamp)\nconversation_rating.score\tInteger\nconversation_rating.remark\tString\nconversation_rating.contact_id\tString\nconversation_rating.admin_d\tString\nAccepted Operators\n\nThe table below shows the operators you can use to define how you want to search for the value. The operator should be put in as a string (\"=\"). The operator has to be compatible with the field's type (eg. you cannot search with > for a given string value as it's only compatible for integer's and dates).\n\nOperator\tValid Types\tDescription\n=\tAll\tEquals\n!=\tAll\tDoesn't Equal\nIN\tAll\tIn Shortcut for OR queries Values most be in Array\nNIN\tAll\tNot In Shortcut for OR ! queries Values must be in Array\n>\tInteger Date (UNIX Timestamp)\tGreater (or equal) than\n<\tInteger Date (UNIX Timestamp)\tLower (or equal) than\n~\tString\tContains\n!~\tString\tDoesn't Contain\n^\tString\tStarts With\n$\tString\tEnds With\nResponse\n\nA JSON payload with a list of Conversations Model that match the search query, with a total_count integer saying how many models have been returned."
  },
  {
    "title": "Update Ticket Type Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/update_ticket_type_request/",
    "html": "The request payload for updating a ticket type. You can copy the icon property for your ticket type from Twemoji Cheatsheet"
  },
  {
    "title": "Search data",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/search_request/",
    "html": "Search using Intercoms Search APIs."
  },
  {
    "title": "Admin Conversations Count Model",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/counts/admin-conversations/",
    "html": "Admin Conversations Count Model\nAdmin Conversation Count Object\n\nThe admin conversation count supplies per Admin counts\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nconversation\tobject\tContains counts related to admins\nconversation.admin\tarray\tContains and array of objects detailing each Admin\nconversation.admin.open\tnumber\tContains the number of open conversations for the Admin\nconversation.admin.closed\tnumber\tContains the number of closed conversations for the Admin\nconversation.admin.id\tstring\tContains the Admin id\nconversation.admin.name\tstring\tContains the Admin name\n{\n  \"type\": \"count\",\n  \"conversation\": {\n    \"admin\": [\n      {\n        \"id\": \"1\",\n        \"name\": \"Wash\",\n        \"open\": 0,\n        \"closed\": 1\n      },\n      {\n        \"id\": \"2\",\n        \"name\": \"Jayne\",\n        \"open\": 0,\n        \"closed\": 0\n      }\n    ]\n  }\n}\n\n# Conversation Admin Counts\n$ curl 'https://api.intercom.io/counts?type=conversation&count=admin' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# Conversation Admin Counts\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"conversation\": {\n    \"admin\": [\n      {\n        \"id\": \"1\",\n        \"name\": \"Wash\",\n        \"open\": 0,\n        \"closed\": 1\n      },\n      {\n        \"id\": \"2\",\n        \"name\": \"Jayne\",\n        \"open\": 0,\n        \"closed\": 0\n      }\n    ]\n  }\n}\n\nintercom.counts.for_type(type: 'conversation', count: 'admin')\n\n<?php\n// Conversation Admin Count\n$counts = $intercom->counts->getCounts([\"type\" => \"conversation\", \"count\" => \"admin\"]);\nprint_r($counts);\n?>\n\n// Conversation Admin Count\nfinal Counts.Conversation counts = Counts.conversationAdmins();\nList<Admin> admins = counts.getAdmins();\nfor (Admin admin : admins) {\n    out.println(\n      admin.getName() + \": \" +\n      admin.getClosed() + \", \" +\n      admin.getOpen());\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nConversation Admin Count\tconversation\tadmin"
  },
  {
    "title": "reply_conversation_request",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/reply_conversation_request/",
    "html": "Payload of the request to reply on behalf of a contact using their intercom_user_id"
  },
  {
    "title": "Data Export CSV",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/data_export_csv/",
    "html": "A CSV output file"
  },
  {
    "title": "Deleted Collection Object",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/deleted_collection_object/",
    "html": "Response returned when an object is deleted"
  },
  {
    "title": "Create Ticket Reply Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/create_ticket_reply_request/",
    "html": "You can create a reply on a ticket."
  },
  {
    "title": "App Total Count Model",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/counts/company-user-counts/",
    "html": "App Total Count Model\n\nYou can use the API to get counts of users and companies filtered by certain criteria.\n\nCounts are a legacy way to periodically obtain data for the purposes of tracking rates of change in contact and company data.\n\nWorkspace Total Count Object\n\nThe total count object contains the summary of the following fields in a workspace, -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count.hash'\ncompany\tobject\tContains the number of companies in your App\nsegment\tobject\tContains the number of segments in your App\ntag\tobject\tContains the number of tags in your App\nuser\tobject\tContains the number of users in your App\nlead\tobject\tContains the number of leads in your App\n\nThe count of tags and segments includes archived tags and segments.\n\n{\n    \"type\": \"count.hash\",\n    \"company\": {\n        \"count\": 55\n    },\n    \"user\": {\n        \"count\": 54944\n    },\n    \"lead\": {\n        \"count\": 17\n    },\n    \"tag\": {\n        \"count\": 1012\n    },\n    \"segment\": {\n        \"count\": 7\n    }\n}\n\n# App Counts\n$ curl 'https://api.intercom.io/counts' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# App Total Counts\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"count.hash\",\n    \"company\": {\n        \"count\": 55\n    },\n    \"user\": {\n        \"count\": 54944\n    },\n    \"lead\": {\n        \"count\": 17\n    },\n    \"tag\": {\n        \"count\": 1012\n    },\n    \"segment\": {\n        \"count\": 7\n    }\n}\n\nintercom.counts.for_app\n\n<?php\n// Global App Counts\n$intercom->counts->getCounts([]);\n?>\n\n// Global App Counts\nfinal Counts.Totals appTotals = Counts.appTotals();\nappTotals.getCompany().getValue();\nappTotals.getSegment().getValue();\nappTotals.getTag().getValue();\nappTotals.getUser().getValue();\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nGlobal App Counts\tNone\tNone"
  },
  {
    "title": "The segment model",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/segments/segment-model/",
    "html": "The segment model\nExample Segment Object\n{\\n  \\\"type\\\": \\\"segment\\\",\\n  \\\"id\\\": \\\"53203e244cba153d39000062\\\",\\n  \\\"name\\\": \\\"New\\\",\\n  \\\"created_at\\\": 1394621988,\\n  \\\"updated_at\\\": 1394622004\\n}\n\n\nA segment is a group of your contacts defined by rules that you set. Contacts are automatically added to the segment every time the contact updates to match those rules. You can use Search for contacts to find contacts that match the same rules.\n\nSegment Object\nKey\tType\tDescription\ntype\tstring\tvalue is segment'.\nid\tstring\tThe unique identifier representing the segment.\nname\tstring\tThe name of the segment.\ncreated_at\ttimestamp\tThe time the segment was created.\nupdated_at\ttimestamp\tThe time the segment was updated.\nperson_type\tstring\tType of the record: user or lead.\ncount\tinteger\tThe number of items in the user segment. It's returned when include_count=true is included in the request."
  },
  {
    "title": "View a Company",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/companies/view-a-company/",
    "html": "View a Company\nExample View Request and Response\ncurlcurlrubyphpjava\n$ curl \\\\\\n-s https://api.intercom.io/companies?company_id=141 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H \\\"Accept:application/json\\\" \\\\\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"company\\\",\\n  \\\"id\\\": \\\"531ee472cce572a6ec000006\\\",\\n  \\\"name\\\": \\\"Blue Sun\\\",\\n  \\\"plan\\\": {\\n    \\\"type\\\":\\\"plan\\\",\\n    \\\"id\\\":\\\"1\\\",\\n    \\\"name\\\":\\\"Paid\\\"\\n  },\\n  \\\"company_id\\\": \\\"141\\\",\\n  \\\"remote_created_at\\\": 1394531169,\\n  \\\"created_at\\\": 1394533506,\\n  \\\"updated_at\\\": 1396874658,\\n  \\\"last_request_at\\\": 1396874658,\\n  \\\"monthly_spend\\\": 49,\\n  \\\"session_count\\\": 26,\\n  \\\"user_count\\\": 10,\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"team_mates\\\": 0\\n  }\\n}\n\n\nEach company has its own URL -\n\nhttps://api.intercom.io/companies/{id}\n\nWhere {id} is the value of the company's id field. This URL is the company's canonical address in the API.\n\nRequest Parameters\nParameter\tRequired\tDescription\nname\tno\tThe name of the company\ncompany_id\tno\tThe company_id you have given to the company\n\nA company can also be fetched by its name using a name or company_id parameter in the url, whose values are the ones you have defined for that company -\n\nhttps://api.intercom.io/companies?name={name}\nhttps://api.intercom.io/companies?company_id={company_id}\n\nThe name parameter value should be url encoded when sending, as company names are allowed to have values that either need to be encoded as character data (e.g., whitespace) or are reserved characters (e.g., ':')."
  },
  {
    "title": "List all teams",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/teams/list-teams/",
    "html": "List all teams\nExample Request & Response\n$ curl https://api.intercom.io/teams \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n{\n    \"teams\": [\n        {\n            \"admin_ids\": [\n                492881,\n                1195856\n            ],\n            \"id\": \"814865\",\n            \"name\": \"BA_App\",\n            \"type\": \"team\"\n        },\n        {\n            \"admin_ids\": [\n                646303,\n                814860\n            ],\n            \"id\": \"2744328\",\n            \"name\": \"the_a_team\",\n            \"type\": \"team\"\n        }\n    ],\n    \"type\": \"team.list\"\n}\n\n\nYou can fetch a list of all teams for a given workspace.\n\nResponse\n\nThis will return a list of team objects for the App. The result may also have a pages object if the response is paginated.\n\nTeam List\nAttribute\tType\tDescription\ntype\tstring\tValue is 'team.list'\nteams\tarray\tA list of team objects\npages\tobject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch."
  },
  {
    "title": "Convert a Visitor to a User",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/visitors/convert-a-visitor-to-a-user/",
    "html": "Convert a Visitor to a User\n\nExample User Convert Request\n\ncurlcurl\n$ curl \\\\\\nhttps://api.intercom.io/visitors/convert \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"visitor\\\": {\\n    \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  },\\n  \\\"user\\\": {\\n    \\\"email\\\": \\\"winstonsmith@truth.org\\\"\\n  },\\n  \\\"type\\\": \\\"user\\\"\\n}'\\n\n\n# NB: Full User objects are returned\\n{\\n  \\\"type\\\": \\\"lead\\\",\\n  \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n}\n\n\nVisitors can also be converted to Users. This is done by passing both Visitor and User identifiers and a type attribute set to 'user'. If the User exists, then the Visitor will be merged into it, the Visitor deleted and the User returned. If the User does not exist, the Visitor will be converted to a User, with the User identifiers replacing it's Visitor identifiers.\n\nIdentifiers (id, user_id, email) from Visitors are never added onto Users with a merge.\n\nA Visitor email, but not user_id is retained when converting a Visitor to a new User."
  },
  {
    "title": "The contact model",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/contacts/contacts-model/",
    "html": "The contact model\nExample Contacts Object\nJSON\n{\\n  \\\"type\\\": \\\"contact\\\",\\n  \\\"id\\\": \\\"5ba682d23d7cf92bef87bfd4\\\",\\n  \\\"workspace_id\\\": \\\"ecahpwf5\\\",\\n  \\\"external_id\\\": \\\"25\\\",\\n  \\\"role\\\": \\\"user\\\",\\n  \\\"email\\\": \\\"wash@serenity.io\\\",\\n  \\\"phone\\\": \\\"+1123456789\\\",\\n  \\\"name\\\": \\\"Hoban Washburn\\\",\\n  \\\"avatar\\\": \\\"https://example.org/128Wash.jpg\\\",\\n  \\\"owner_id\\\": 127,\\n  \\\"social_profiles\\\": {\\n    \\\"type\\\": \\\"list\\\",\\n    \\\"data\\\": [\\n      {\\n        \\\"type\\\": \\\"social_profile\\\",\\n        \\\"name\\\": \\\"Twitter\\\",\\n        \\\"url\\\": \\\"http://twitter.com/th1sland\\\"\\n      }\\n    ]\\n  },\\n  \\\"has_hard_bounced\\\": false,\\n  \\\"marked_email_as_spam\\\": false,\\n  \\\"unsubscribed_from_emails\\\": false,\\n  \\\"created_at\\\": 1571672154,\\n  \\\"updated_at\\\": 1571672158,\\n  \\\"signed_up_at\\\": 1571069751,\\n  \\\"last_seen_at\\\": 1571069751,\\n  \\\"last_replied_at\\\": 1571672158,\\n  \\\"last_contacted_at\\\": 1571672158,\\n  \\\"last_email_opened_at\\\": 1571673478,\\n  \\\"last_email_clicked_at\\\": 1571676789,\\n  \\\"language_override\\\": null,\\n  \\\"browser\\\": \\\"chrome\\\",\\n  \\\"browser_version\\\": \\\"77.0.3865.90\\\",\\n  \\\"browser_language\\\": \\\"en\\\",\\n  \\\"os\\\": \\\"OS X 10.14.6\\\",\\n  \\\"location\\\": {\\n    \\\"type\\\": \\\"location\\\",\\n    \\\"country\\\": \\\"Ireland\\\",\\n    \\\"region\\\": \\\"Dublin\\\",\\n    \\\"city\\\": \\\"Dublin\\\"\\n  },\\n  \\\"android_app_name\\\": null,\\n  \\\"android_app_version\\\": null,\\n  \\\"android_device\\\": null,\\n  \\\"android_os_version\\\": null,\\n  \\\"android_sdk_version\\\": null,\\n  \\\"android_last_seen_at\\\": null,\\n  \\\"ios_app_name\\\": null,\\n  \\\"ios_app_version\\\": null,\\n  \\\"ios_device\\\": null,\\n  \\\"ios_os_version\\\": null,\\n  \\\"ios_sdk_version\\\": null,\\n  \\\"ios_last_seen_at\\\": null,\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\": true,\\n    \\\"monthly_spend\\\": 155.5,\\n    \\\"team_mates\\\": 1\\n  },\\n  \\\"tags\\\": {\\n    \\\"type\\\": \\\"list\\\",\\n    \\\"data\\\": [\\n      {\\n        \\\"type\\\": \\\"tag\\\",\\n        \\\"id\\\": \\\"2\\\",\\n        \\\"url\\\": \\\"/tags/2\\\"\\n      },\\n      {\\n        \\\"type\\\": \\\"tag\\\",\\n        \\\"id\\\": \\\"4\\\",\\n        \\\"url\\\": \\\"/tags/4\\\"\\n      },\\n      {\\n        \\\"type\\\": \\\"tag\\\",\\n        \\\"id\\\": \\\"5\\\",\\n        \\\"url\\\": \\\"/tags/5\\\"\\n      }\\n    ],\\n    \\\"url\\\": \\\"/contacts/5ba682d23d7cf92bef87bfd4/tags\\\",\\n    \\\"total_count\\\": 3,\\n    \\\"has_more\\\": false\\n  },\\n  \\\"notes\\\": {\\n    \\\"type\\\": \\\"list\\\",\\n    \\\"data\\\": [\\n      {\\n        \\\"type\\\": \\\"note\\\",\\n        \\\"id\\\": \\\"20114858\\\",\\n        \\\"url\\\": \\\"/notes/20114858\\\"\\n      }\\n    ],\\n    \\\"url\\\": \\\"/contacts/5ba682d23d7cf92bef87bfd4/notes\\\",\\n    \\\"total_count\\\": 1,\\n    \\\"has_more\\\": false\\n  },\\n  \\\"companies\\\": {\\n    \\\"type\\\": \\\"list\\\",\\n    \\\"data\\\": [\\n      {\\n        \\\"type\\\": \\\"company\\\",\\n        \\\"id\\\": \\\"5ba686093d7cf93552a3dc99\\\",\\n        \\\"url\\\": \\\"/companies/5ba686093d7cf93552a3dc99\\\"\\n        \\n      },\\n      {\\n        \\\"type\\\": \\\"company\\\",\\n        \\\"id\\\": \\\"5cee64a03d7cf90c51b36f19\\\",\\n        \\\"url\\\": \\\"/companies/5cee64a03d7cf90c51b36f19\\\"\\n      },\\n      {\\n        \\\"type\\\": \\\"company\\\",\\n        \\\"id\\\": \\\"5d7668883d7cf944dbc5c791\\\",\\n        \\\"url\\\": \\\"/companies/5d7668883d7cf944dbc5c791\\\"\\n      }\\n    ],\\n    \\\"url\\\": \\\"/contacts/5ba682d23d7cf92bef87bfd4/companies\\\",\\n    \\\"total_count\\\": 3,\\n    \\\"has_more\\\": false\\n  }\\n}\n\n\nOur Contacts API is a central place to gather all information and take actions on your contacts (ie. users and leads), such as fetching, searching, creating, updating, and deleting.\n\nThe Contacts Model provides details on these contacts within Intercom, and will specify whether they are a user or lead through the role attribute.\n\nContact Object\nKey\tType\tDescription\ntype\tString\tThe type of object - contact.\nid\tString\tThe unique identifier for the contact which is given by Intercom.\nworkspace_id\tString\tThe id of the workspace which the contact belongs to.\nexternal_id\tString\tA unique identifier for the contact which is given to Intercom.\nrole\tString\tThe role of the contact - user or lead.\nemail\tString\tThe contacts email.\nphone\tString\tThe contacts phone.\nname\tString\tThe contacts name.\navatar\tString\tAn image URL containing the avatar of a contact.\nowner_id\tInteger\tThe id of an admin that has been assigned account ownership of the contact.\nsocial_profiles\tList\tA list of social profiles associated to the contact.\nhas_hard_bounced\tBoolean\tWhether the contact has had an email sent to them hard bounce.\nmarked_email_as_spam\tBoolean\tWhether the contact has marked an email sent to them as spam.\nunsubscribed_from_emails\tBoolean\tWhether the contact is unsubscribed from emails.\ncreated_at\tDate (UNIX timestamp)\tThe time when the contact was created.\nupdated_at\tDate (UNIX timestamp)\tThe time when the contact was last updated.\nsigned_up_at\tDate (UNIX timestamp)\tThe time specified for when a contact signed up.\nlast_seen_at\tDate (UNIX timestamp)\tThe time when the contact was last seen (either where the Intercom Messenger was installed or when specified manually).\nlast_replied_at\tDate (UNIX timestamp)\tThe time when the contact last messaged in.\nlast_contacted_at\tDate (UNIX timestamp)\tThe time when the contact was last messaged.\nlast_email_opened_at\tDate (UNIX timestamp)\tThe time when the contact last opened an email.\nlast_email_clicked_at\tDate (UNIX timestamp)\tThe time when the contact last clicked a link in an email.\nlanguage_override\tString\tA preferred language setting for the contact, used by the Intercom Messenger even if their browser settings change.\nbrowser\tString\tThe name of the browser which the contact is using.\nbrowser_version\tString\tThe version of the browser which the contact is using.\nbrowser_language\tString\tThe language set by the browser which the contact is using.\nos\tString\tThe operating system which the contact is using.\nlocation\tObject\tAn object showing location details of the contact.\nandroid_app_name\tString\tThe name of the Android app which the contact is using.\nandroid_app_version\tString\tThe version of the Android app which the contact is using.\nandroid_device\tString\tThe Android device which the contact is using.\nandroid_os_version\tString\tThe version of the Android OS which the contact is using.\nandroid_sdk_version\tString\tThe version of the Android SDK which the contact is using.\nandroid_last_seen_at\tDate (UNIX timestamp)\tThe last time the contact used the Android app.\nios_app_name\tString\tThe name of the iOS app which the contact is using.\nios_app_version\tString\tThe version of the iOS app which the contact is using.\nios_device\tString\tThe iOS device which the contact is using.\nios_os_version\tString\tThe version of iOS which the contact is using.\nios_sdk_version\tString\tThe version of the iOS SDK which the contact is using.\nios_last_seen_at\tDate (UNIX timestamp)\tThe last time the contact used the iOS app.\ncustom_attributes\tObject\tThe custom attributes which are set for the contact.\ntags\tAddressable List\tThe tags which have been added to the contact.\nnotes\tAddressable List\tThe notes which have been added to the contact.\ncompanies\tAddressable List\tThe companies which the contact belongs to.\nLocation Object\nKey\tType\tDescription\ntype\tString\tThe type of object - location.\ncountry\tString\tThe country where the contact is.\nregion\tString\tA subdivision of the country which the contact is in (ie. state, province, county, territory, etc).\ncity\tString\tThe city where the contact is.\nSocial Profile Object\nKey\tType\tDescription\ntype\tString\tThe type of object - social_profile.\nname\tString\tThe name of the service (ie. Twitter, Facebook, etc).\nurl\tString\tThe profile page for the contact on the service.\nAddressable List\nKey\tType\tDescription\ntype\tString\tThe type of object - list.\ndata\tArray\tAn array of Addressable Objects. Maximum of 10.\nurl\tString\tThe URL where the full list can be accessed (ie. /contacts/1234/companies).\ntotal_count\tInteger\tThe total amount of records.\nhas_more\tBoolean\tWhether there's more Addressable Objects to be viewed. If true, use the url to view all.\nAddressable Object\nKey\tType\tDescription\ntype\tString\tThe type of object - company, note, tag.\nid\tString\tThe id of the object.\nurl\tString\tThe URL where the object in question can be accessed (ie. /companies/45678)."
  },
  {
    "title": "Object Model",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/common-structures/object-model/",
    "html": "Object Model\nCommon Fields and Metadata\n{\n  \"type\": \"user\",\n  \"id\": \"456456456456\",\n  \"self\": \"https://api.intercom.io/users/456456456456\",\n  \"created_at\": 1392241887,\n  \"custom_attributes\": {\n    \"note\": \"some extra information\"\n  }\n}\n\nCommon Fields\n\nAPI objects have a type field indicating their object type. Each object in the API may be given an identifier, indicated via its id field, and will typically be addressable via a URI. Many objects will also have a created_at field indicating the object's creation date as a UTC Unix timestamp.\n\nDates and Timestamps\n\nAll temporal fields in the API are encoded as Unix timestamps and are by definition always treated as UTC. The most common time fields in the API are created_at and updated_at.\n\nParameter\tDescription\ncreated_at\tThe time the object was created. In most, but not all cases, this is the time the object was created according to the API server.\nupdated_at\tThe time the object was last updated according to the API server.\nOptional Fields\n\nUnpopulated optional data is returned as follows -\n\nNumber, String and Boolean types may be returned as having null values.\nArrays and Objects may be returned as empty ([] {})\n\nIn general clients should be able to handle null and empty fields.\n\nMetadata and Custom Attributes\n\nSome object types, such as Events, Users and Companies, have a metadata or custom_attributes field that allows clients to set custom-defined data about an object."
  },
  {
    "title": "Identifiers and URLs",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/common-structures/identifiers-and-urls/",
    "html": "Identifiers and URLs\n\nAll objects in the API have an id field indicating their logical identifier. Some objects may optionally also have a self field that indicates a URL or canonical address for the object.\n\nParameter\tDescription\nid\tA string that identifies the object within the API. The id field will not be larger than 128 characters (in SQL it corresponds to a varchar(128)).\nself\tA URL that addresses the object within the API. The self field will not be larger than 255 characters (in SQL it corresponds to a varchar(255)).\n\nThese fields must always be treated as opaque strings - no guarantees are made about the internal structure of the id or self fields for an object.\n\nThe id field is always defined by the API server and is guaranteed to be unique relative to the type field - this means no two user objects will have the same id field, but a user and a company may have the same value for their id fields. . Some object types (such as User), also support client defined identifiers.\n\nThe company and user objects deserve special mention when it comes to identity for two reasons -\n\nThey allow you send your own external identifiers - email and user_id for users and company_id for companies.\nThe user id field is in some cases, aliased to intercom_user_id. This is done to distinguish it from other identifiers in the API and to avoid confusion as to which object type an id denotes."
  },
  {
    "title": "Conversation Part Model",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/conversations/conversation-part-model/",
    "html": "Conversation Part Model\nExample Conversation Part Object\n{\n    \"type\": \"conversation_part\",\n    \"id\": \"4412\",\n    \"part_type\": \"comment\",\n    \"body\": \"<p>Hi Jane, it's all great thanks!</p>\",\n    \"created_at\": 1400857494,\n    \"updated_at\": 1400857494,\n    \"notified_at\": 1400857587,\n    \"assigned_to\": null,\n    \"author\": {\n      \"type\": \"user\",\n      \"id\": \"536e564f316c83104c000020\"\n    },\n    \"attachments\": []\n}\n\n{\n    \"type\":\"conversation_part\",\n    \"id\":\"1223445555\",\n    \"part_type\":\"comment\",\n    \"body\":\"We've removed this part of the conversation to comply with Twitter's terms and conditions. You can view the complete conversation in Intercom.\",\n    \"created_at\":1567693273,\n    \"updated_at\":1567693273,\n    \"notified_at\":1567693273,\n    \"assigned_to\":null,\n    \"author\":{\n      \"type\":\"user\",\n      \"id\":\"5310d8e7598c9a0b24000002\",\n      \"name\":\"\",\n      \"email\":\"\"\n    },\n    \"attachments\": []\n}\n\n\nA conversation part describes an element of the conversation.\n\nA conversation part has a html encoded body, an author, and may have an attachments list. Conversation parts have created, updated and notified timestamps. Each conversation part also has a part type - these types are described below.\n\nConversation Part Object\nAttribute\tType\tDescription\ntype\tstring\tAlways conversation_part.\nid\tstring\tThe id representing the conversation part.\npart_type\tstring\tThe type of conversation part.\nbody\tstring\tThe message body, which may contain HTML. For Twitter, this will show a generic message regarding why the body is obscured.\ncreated_at\ttimestamp\tThe time the conversation part was created.\nupdated_at\ttimestamp\tThe last time the conversation part was updated.\nnotified_at\ttimestamp\tThe time the user was notified with the conversation part.\nassigned_to\tstring\tThe id of the admin that was assigned the conversation by this conversation_part (null if there has been no change in assignment.)\nauthor\tUser or Admin\tThe type of individual that sent the message (user, admin or bot) and their related id. For Twitter, this will be blank.\nattachments\tList\tA list of attachments for the part.\nConversation Part Types\nType\tDescription\ncomment\tStandard reply from customer or admin to a conversation\nnote\tA note created by an admin on the conversation. A note will only be viewable as an admin\nnote_and_reopen\tAdd a note and reopen the conversations in the one action\nassignment\tAn assignment of the conversation to an admin, or Nobody\nopen\tIdentifies a conversation has been opened\nclose\tIdentifies a conversation has been closed\naway_mode_assignment\tConversation has been assigned due to the admin being in away mode\nparticipant_added\tA participant has been added to a group conversation\nparticipant_removed\tA participant has been removed from a group conversation\nconversation_rating_changed\tA conversation rating has been changed, not this can only occur before the rating has been submitted. Once it has been submitted it cannot be changed\nconversation_rating_remark_added\tA conversation remark has been added to the converation\nsnoozed\tA conversation has been snoozed\nunsnoozed\tA conversation has been unsnoozed\nassign_and_unsnooze\tAssign a conversation and unsnooze it in one action.\ntimer_unsnooze\tUnsnooze a conversation after a set time"
  },
  {
    "title": "The message model",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/messages/messages-model/",
    "html": "The message model\nExample Message Object\n{    \"type\": \"message\",    \"id\": \"489373052\",    \"created_at\": 1539897198,    \"subject\": \"This is the subject - if it's an email\",    \"body\": \"<p>Hello</p>\",    \"message_type\": \"email\"}\n\n\nMessage are how you reach out to contacts in Intercom. They are created when an admin sends an outbound message to a contact.\n\nMessage Object\nKey\tType\tDescription\ntype\tString\tAlways message.\nid\tString\tThe id representing the message.\ncreated_at\tUNIX Timestamp\tThe time the conversation was created.\nsubject\tString\tThe subject of the message.Only present if message_type: email.\nbody\tString\tThe message body, which may contain HTML.\nmessage_type\tString\tThe type of message that was sent. Can be email, inapp, facebook or twitter."
  },
  {
    "title": "Conversation Model",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/conversations/conversation-model/",
    "html": "Conversation Model\nExample Conversation Object\n{\n  \"type\": \"conversation\",\n  \"id\": \"147\",\n  \"created_at\": 1400850973,\n  \"updated_at\": 1400857494,\n  \"waiting_since\": 1400857494,\n  \"snoozed_until\": null,\n  \"conversation_message\": {\n    \"type\": \"conversation_message\",\n    \"subject\": \"\",\n    \"body\": \"<p>Hi Alice,</p><p> We noticed you using our Product,  do you have any questions?</p> <p>- Jane</p>\",\n    \"author\": {\n      \"type\": \"admin\",\n      \"id\": \"25\"\n    },\n    \"attachments\": [\n      {\n        \"name\": \"signature\",\n        \"url\": \"http://example.org/signature.jpg\"\n      }\n    ]\n  },\n  \"user\": {\n    \"type\": \"user\",\n    \"id\": \"536e564f316c83104c000020\"\n  },\n  \"customers\": [\n    {\n      \"type\": \"user\",\n      \"id\": \"58ff3f670f14ab4f1aa83750\"\n    }\n  ],\n  \"assignee\": {\n    \"type\": \"admin\",\n    \"id\": \"25\"\n  },\n  \"open\": true,\n  \"state\": \"open\",\n  \"read\": true,\n  \"conversation_parts\": {\n    \"type\": \"conversation_part.list\",\n    \"conversation_parts\": [\n      //... List of conversation parts\n    ],\n    \"total_count\": 1\n  },\n  \"conversation_rating\": {\n    \"rating\": null,\n    \"remark\": null,\n    \"created_at\": null,\n    \"customer\": {\n        \"type\": null,\n        \"id\": null\n    },\n    \"teammate\": {\n        \"type\": null,\n        \"id\": null\n    }\n  }\n  \"tags\": { \"type\": 'tag.list', \"tags\": [] } \n}\n\n{\n   \"type\":\"conversation\",\n   \"id\":\"1122334455\",\n   \"created_at\":1567693209,\n   \"updated_at\":1568367881,\n   \"waiting_since\":1568367881,\n   \"snoozed_until\":null,\n   \"assignee\":{\n      \"type\":\"admin\",\n      \"id\":\"1223334\"\n   },\n   \"open\":true,\n   \"state\":\"open\",\n   \"read\":true,\n   \"tags\":{\n      \"type\":\"tag.list\",\n      \"tags\":[\n\n      ]\n   },\n   \"conversation_rating\":{\n      \"rating\":null,\n      \"remark\":null,\n      \"created_at\":null,\n      \"customer\":{\n         \"type\":null,\n         \"id\":null\n      },\n      \"teammate\":{\n         \"type\":null,\n         \"id\":null\n      }\n   },\n   \"conversation_parts\":{\n      \"type\":\"conversation_part.list\",\n      \"conversation_parts\":[\n         {\n            \"type\":\"conversation_part\",\n            \"id\":\"1223445555\",\n            \"part_type\":\"comment\",\n            \"body\":\"We've removed this part of the conversation to comply with Twitter's terms and conditions. You can view the complete conversation in Intercom.\",\n            \"created_at\":1567693273,\n            \"updated_at\":1567693273,\n            \"notified_at\":1567693273,\n            \"assigned_to\":null,\n             \"author\":{\n               \"type\":\"user\",\n               \"id\":\"5310d8e7598c9a0b24000002\",\n               \"name\":\"\",\n               \"email\":\"\"\n            },\n            \"attachments\":[\n\n            ],\n            \"external_id\":null\n         },\n      ],\n      \"total_count\":1\n   },\n   \"customer_first_reply\":{\n      \"created_at\":1567693209,\n      \"type\":\"twitter\",\n      \"url\":\"\"\n   },\n   \"conversation_message\":{\n      \"type\":\"twitter\",\n      \"id\":\"409820079\",\n      \"delivered_as\":\"customer_initiated\",\n      \"subject\":\"We've removed this part of the conversation to comply with Twitter's terms and conditions. You can view the complete conversation in Intercom.\",\n      \"body\":\"We've removed this part of the conversation to comply with Twitter's terms and conditions. You can view the complete conversation in Intercom.\",\n      \"author\":{\n         \"type\":\"user\",\n         \"id\":\"5310d8e7598c9a0b24000002\",\n         \"name\":\"\",\n         \"email\":\"\"\n      },\n      \"attachments\":[\n\n      ],\n      \"url\":\"\"\n   },\n   \"customers\":[\n      {\n         \"type\":\"user\",\n         \"id\":\"5310d8e7598c9a0b24000002\"\n      }\n   ],\n   \"user\":{\n      \"type\":\"user\",\n      \"id\":\"5310d8e7598c9a0b24000002\"\n   }\n}\n\n\nA conversation lets you track and describe communications with your users. Each conversation contains the message that initiated the conversation, the user involved, the admin assigned to the conversation and a list of parts describing the conversation thread. The open or closed status of the conversation is also provided.\n\nConversation Object\nAttribute\tType\tDescription\ntype\tstring\tAlways conversation.\nid\tstring\tThe id representing the conversation.\ncreated_at\ttimestamp\tThe time the conversation was created.\nupdated_at\ttimestamp\tThe last time the conversation was updated.\nwaiting_since\ttimestamp\tThe last time a customer responded to an admin. In other words, the time a customer started waiting for a response.\nsnoozed_until\ttimestamp\tIf set this is the time in the future when this conversation will be marked as open. i.e. it will be in a snoozed state until this time.\nconversation_message\tMessage\tThe message that started the conversation rendered for presentation.\nuser\tUser\tThe user the conversation concerns.\ncustomers\tList of customers objects\tThe list of customers (users or leads) involved in this conversation. This will only contain one customer unless more were added via the group conversation feature.\nassignee\tAdmin\tThe admin the conversation is currently assigned to. Note nobody_admin indicates the conversation is assigned to Nobody.\nconversation_parts\tObject\tA conversation part object with a list of conversation parts.\nopen\tBoolean\tIndicates whether a conversation is open (true) or closed (false).\nstate\tString\tCan be set to \"open\", \"closed\" or \"snoozed\".\nread\tBoolean\tIndicates whether a conversation has been read.\ntags\tList\tA list of tags associated with the conversation.\ntotal_count\tInteger\tThe number of conversation parts in this conversation.\nconversation_rating\tobject\tA conversation rating object which contains information on the rating and/or remark added by a customer and the admin assigned to the conversation.\nWAITING_SINCE 2000 YEARS IN THE FUTURE?\n\nWaiting since lets you identify how long a customer has been waiting for a response. This time, however, is not always relevant. For example, when the last person to respond was an admin, or the conversation was closed after a user response (e.g. \"thanks, bye\"). In these cases we will set the date to 2000 years in the future.\n\nMessage Object\nAttribute\tType\tDescription\ntype\tstring\tThis includes conversation, push, facebook, twitter and email.\nid\tstring\tThe id representing the message.\nsubject\tstring\tOptional. The message subject. For Twitter, this will show a generic message regarding why the subject is obscured.\nbody\tstring\tThe message body, which may contain HTML. For Twitter, this will show a generic message regarding why the body is obscured.\nauthor\tAdmin\tThe type of individual that sent the message (user, lead, admin or team) and their related id. For Twitter, this will be blank.\nattachments\tList\tA list of attachments for the part.\nurl\tstring\tThe URL where the conversation was started. For Twitter, Email, and Bots, this will be blank.\nCustomers object\nAttribute\tType\tDescription\ntype\tString\tThis can be either a user or a lead.\nid\tString\tThe ID for the user or lead."
  },
  {
    "title": "Use of HTTP",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/common-structures/use-of-http/",
    "html": "Use of HTTP\n\nRequest methods are used in accordance with HTTP -\n\nGET is used to access resources and perform queries. The API does not allow modifications (creates, updates, deletes) to occur via GET.\nPOST is used to create or update resources. The preferred model for creation is to post JSON to a 'collections' resource - for example the collections resource for users is https://api.intercom.io/users. PATCH is not currently used by the API.\nDELETE is used to delete resources.\n\nResponses use standard HTTP codes. Where there are client or server errors, a list of of one or more errors in JSON format is returned in the body - see Error Objects for more details.\n\nThe API may send cache directives where suitable, notably the ETag, Last-Modified and If-Modified-Since headers.\n\nThe Accept header must be used by a client used to indicate a preferred response for GET/HEAD requests. Requests without an Accept header of application/json may be rejected with a client error of 404 or 406. The Content-Type header should be used by clients to indicate the submitted format for POST/PUT requests."
  },
  {
    "title": "Pagination",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/common-structures/pagination/",
    "html": "Pagination\n\nSome list resources in the API are paginated by default to allow clients to traverse data over multiple requests. Their responses may contain a pages object that contains pagination links a client can use to traverse the data without having to construct a query. The link relations for the pages field are as follows -\n\nParameter\tDescription\ntype\tValue is 'pages'\nnext\tA link to the next page of results. A response that does not contain a next link does not have further data to fetch.\nprev\tA link to the previous page of results.\nfirst\tA link to the first page of results.\nlast\tA link to the last page of results."
  },
  {
    "title": "Text",
    "url": "https://developers.intercom.com/docs/references/canvas-kit/presentationcomponents/text/",
    "html": "Text\n\nThe text component is used for rendering blocks of text. Links and bold font can be rendered through Markdown. There are different styles provided which edit the color, weight, and font size. These cannot be edited through Markdown.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttext\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\ntext\tAny stringMarkdown Links []()Markdown Bold **\tYes\tThe text that will be rendered.\nalign\tleft``center``right\tNo\tAligns the text. Default is left.\nstyle\theader``paragraph``muted``error\tNo\tStyles the text. Default is paragraph.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "Retrieve a company",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/companies/view-a-company/",
    "html": "Retrieve a company\nExample Request & Response\n$ curl \\\n-s https://api.intercom.io/companies?company_id=141 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Accept:application/json\" \\\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"company\",\n  \"id\": \"531ee472cce572a6ec000006\",\n  \"name\": \"Blue Sun\",\n  \"plan\": {\n    \"type\":\"plan\",\n    \"id\":\"1\",\n    \"name\":\"Paid\"\n  },\n  \"company_id\": \"141\",\n  \"remote_created_at\": 1394531169,\n  \"created_at\": 1394533506,\n  \"updated_at\": 1396874658,\n  \"last_request_at\": 1396874658,\n  \"monthly_spend\": 49,\n  \"session_count\": 26,\n  \"user_count\": 10,\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"team_mates\": 0\n  }\n}\n\nintercom.companies.find(:id => \"41e66f0313708347cb0000d0\")\n\n<?php\n# Using the name of the company\n$intercom->companies->getCompanies(['name' => 'OneAmerica']);\n\n# Via company_id\n$intercom->companies->getCompanies(['company_id' => '10']);\n\n?>\n\nString id = \"541a144b201ebf2ec5000001\";\nCompany company = Company.find(id);\n\n\nYou can fetch a single company.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nname\tString\tNo\tThe name of the company.\nThe parameter should be url encoded.\ncompany_id\tString\tNo\tThe company_id you have given to the company.\n\nA company can also be fetched by its name using a name or company_id parameter in the url, whose values are the ones you have defined for that company -\n\nhttps://api.intercom.io/companies?name={name}\nhttps://api.intercom.io/companies?company_id={company_id}\nResponse\n\nThis will return the Company model that has been created or updated."
  },
  {
    "title": "Admin Initiated Conversation",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/conversations/admin-initiated-conversation/",
    "html": "Admin Initiated Conversation\nEmail From Admin\n$ curl https://api.intercom.io/messages \\\n-XPOST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d'\n{\n  \"message_type\": \"email\",\n  \"subject\": \"Hey\",\n  \"body\": \"Ponies, cute small horses or something more sinister?\",\n  \"template\": \"plain\",\n  \"from\": {\n    \"type\": \"admin\",\n    \"id\": \"394051\"\n  },\n  \"to\": {\n    \"type\": \"user\",\n    \"id\": \"536e564f316c83104c000020\"\n  }\n}'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"admin_message\",\n  \"id\": \"2001\",\n  \"created_at\": 1401916877,\n  \"message_type\": \"email\",\n  \"subject\" : \"Hey\",\n  \"body\" : \"Ponies, cute small horses or something more sinister?\",\n  \"template\": \"plain\",\n  \"owner\": {\n    \"email\": \"wash@serenity.io\",\n    \"id\": \"394051\",\n    \"name\": \"Wash\",\n    \"type\": \"admin\"\n  }\n}\n\nintercom.messages.create(\n  :message_type => 'email',\n  :subject  => 'This Land',\n  :body     => \"Har har har! Mine is an evil laugh!\",\n  :template => \"plain\", # or \"personal\",\n  :from => {\n    :type => \"admin\",\n    :id   => \"394051\"\n  },\n  :to => {\n    :type => \"user\",\n    :id => \"536e564f316c83104c000020\"\n  }\n)\n\n<?php\n$intercom->messages->create([\n    \"message_type\" => \"email\",\n    \"subject\" => \"Plato Quote\",\n    \"body\" => \"And what, Socrates, is the food of the soul?\",\n    \"from\" => [\n        \"type\" => \"admin\",\n        \"id\" => \"814860\"\n    ],\n    \"to\" => [\n        \"type\" => \"user\",\n        \"email\" => \"socrates@email.com\"\n    ]\n]);\n?>\n\nUser user = new User()\n  .setId(\"5310d8e8598c9a0b24000005\");\nAdmin admin = new Admin()\n  .setId(\"394051\");\nAdminMessage adminMessage = new AdminMessage()\n  .setAdmin(admin)\n  .setUser(user)\n  .setSubject(\"This Land\")\n  .setBody(\"Har har har! Mine is an evil laugh!\")\n  .setMessageType(\"email\")\n  .setTemplate(\"plain\"); // or personal\nConversation.create(adminMessage);\n\n\nYou can create a new admin initiated message by submitting a POST to https://api.intercom.io/messages along with JSON message.\n\nAn admin initiated message can be delivered to a user as an In-App conversation or as an Email. The message_type field is used to determine which, with a value of either inapp or email. For admin initiated In-App messages, they will not trigger push notifications.\n\nReceiving Users are identified by a user_id, id, or email field in the to object.\n\nReceiving Contacts are identified by a user_id or id field in the to object.\n\nThe type field for the to object is then set to either contact or user.\n\nThe subject field is only used for email type messages and will not be used for inapp message types.\n\nA sending admin must be added using the from field, along with a type field value of admin and the corresponding Intercom id for that admin. The admin's Intercom id value may be obtained from the List Admins resource.\n\nCONVERSATION V MESSAGE\n\nNote that since creating an admin-initiated conversation hits the /messages endpoint, the response contains a message object rather than a conversation object. As a result you will not see the conversation ID in the returned message object. You may, however, retrieve the customers's conversations and iterate over them looking for the message_id value.\n\nAttributes\nAttribute\tType\tDescription\nmessage_type\tstring\tThe kind of message being created. Values: inapp or email\nsubject\tstring\tOptional unless message_type is email. The title of the email.\nbody\tstring\tThe content of the message. HTML or plaintext.\ntemplate\tstring\tThe style of the outgoing message. Only valid for email messages. Possible values plain or personal.\nfrom\tobject\tRequired. An admin object containing the admin's id. The type field must have a value of admin.\nto\tobject\tRequired. A user object containing the user's id, email or user_id. The type field must have a value of user or of contact.\nReturns\n\nThe created message object.\n\nIf the from type was supplied with an admin's details, the owner field in the response will represent the admin in question."
  },
  {
    "title": "Current Canvas",
    "url": "https://developers.intercom.com/docs/references/canvas-kit/requestobjects/current-canvas/",
    "html": "Current Canvas\nDescription\n\nThe current_canvas object mirrors the same format as the Canvas Object. This will be the canvas that was most recently showing before the request was sent.\n\nExample Object\n{\n  current_canvas: {\n    content: { \n      components : [\n        {\n          \"type\": \"button\",\n          \"id\": \"button-1\",\n          \"label\": \"This canvas showed before I was clicked\",\n          \"action\": {\n            \"type\": \"submit\"\n          }\n        }\n      ]\n    }\n  }\n}\n"
  },
  {
    "title": "View a Company",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/companies/view-a-company/",
    "html": "View a Company\nExample View Request and Response\ncurlcurlrubyphpjava\n$ curl \\\\\\n-s https://api.intercom.io/companies?company_id=141 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H \\\"Accept:application/json\\\" \\\\\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"company\\\",\\n  \\\"id\\\": \\\"531ee472cce572a6ec000006\\\",\\n  \\\"name\\\": \\\"Blue Sun\\\",\\n  \\\"plan\\\": {\\n    \\\"type\\\":\\\"plan\\\",\\n    \\\"id\\\":\\\"1\\\",\\n    \\\"name\\\":\\\"Paid\\\"\\n  },\\n  \\\"company_id\\\": \\\"141\\\",\\n  \\\"remote_created_at\\\": 1394531169,\\n  \\\"created_at\\\": 1394533506,\\n  \\\"updated_at\\\": 1396874658,\\n  \\\"last_request_at\\\": 1396874658,\\n  \\\"monthly_spend\\\": 49,\\n  \\\"session_count\\\": 26,\\n  \\\"user_count\\\": 10,\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"team_mates\\\": 0\\n  }\\n}\n\n\nEach company has its own URL -\n\nhttps://api.intercom.io/companies/{id}\n\nWhere {id} is the value of the company's id field. This URL is the company's canonical address in the API.\n\nRequest Parameters\nParameter\tRequired\tDescription\nname\tno\tThe name of the company\ncompany_id\tno\tThe company_id you have given to the company\n\nA company can also be fetched by its name using a name or company_id parameter in the url, whose values are the ones you have defined for that company -\n\nhttps://api.intercom.io/companies?name={name}\nhttps://api.intercom.io/companies?company_id={company_id}\n\nThe name parameter value should be url encoded when sending, as company names are allowed to have values that either need to be encoded as character data (e.g., whitespace) or are reserved characters (e.g., ':')."
  },
  {
    "title": "Assigning a Conversation to Unassigned",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/conversations/assigning-a-conversation-to-unassigned/",
    "html": "Assigning a Conversation to Unassigned\n\nYou can assign a conversation to be unassigned when you reply to a conversation. You should do this if you do not want the conversation to remain in your own inbox. This will allow other people pick up the conversation when the user replies to it\n\nAssign to Unassigned\n#Assign converstion to unassigned\ncurl https://api.intercom.io/conversations/6167678340/reply \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"body\": \"Reassigning to no-one!\",\n  \"type\": \"admin\",\n  \"admin_id\": \"1234\",\n  \"assignee_id\": \"0\",\n  \"message_type\": \"assignment\"\n}'\n\n#Assign converstion to unassigned  \nintercom.conversations.reply({\n  :id => '10289052666', \n  :type => 'admin',\n  :admin_id => \"1234\",\n  :assignee_id => 0,\n  :message_type => 'assignment', \n  :body => 'reassigning to no-one!'\n})\n\n<?php\n$intercom->conversations->replyToConversation(\"10957850396\", [\n    \"intercom_user_id\" => \"5977303470ab497b1babb9ef\",\n    \"body\" => \"Reassigning to no-one, i.e. unassigned\", // appears as note\n    \"type\" => \"admin\",\n    \"admin_id\" => \"814860\",\n    \"message_type\" => \"assignment\",\n    \"assignee_id\" => \"0\" \n]);\n?>\n\nAssigning a conversation to another teammate\n\nYou can also assign a conversation to another admin. Just use the admin ID of the person you want to assign the conversation to instead of '0'. You POST body should look something like this:\n\n{\n  \"body\": \"Reassigning to someone else\",\n  \"type\": \"admin\",\n  \"admin_id\": \"814860\",\n  \"assignee_id\": \"530165\",\n  \"message_type\": \"assignment\"\n}\n\nASSIGN TO A TEAM\n\nRemember you can also assign a conversation to a team. Just replace the admin ID with the team ID"
  },
  {
    "title": "Encoding",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/common-structures/encoding/",
    "html": "Encoding\n\nData is encoded as defined by JSON in RFC4627. The default encoding for APIs is UTF-8. Certain characters, such as Emojji may be handled as surrogate unicode pairs (see section '2.5. Strings' of RFC4627).\n\nSome query parameters may need to be url encoded when sending - for example, the email parameter value used to query users should be encoded.\n\nHTML ENCODING\n\nIt should be noted that the following identifiers are encoded to protect from potential cross-site scripting attacks: 'name', 'user_id', 'company_id' and 'email'. As a result you may see these identifiers in their encoded format when you retrieve them via the API. \\nNote that the characters we encode are double quote, single quote, ampersand, less than and greater than symbols i.e \" ' & < >\n\nLet's say you have a company name like \"X&Y's\". \nThen when you retrieve it from the API it will look like this:\n\"X&amp;Y&#39;s\"\n"
  },
  {
    "title": "Compatibility",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/common-structures/compatibility/",
    "html": "Compatibility\nUnknown Field\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"user_id\\\" : \\\"456456\\\",\\n  \\\"email\\\" : \\\"j@example.org\\\",\\n  \\\"such_key\\\": \\\"so_value\\\"\\n}\n\nMust Ignore Interpretation\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"user_id\\\" : \\\"456456\\\",\\n  \\\"email\\\" : \\\"j@example.org\\\"\\n}\n\n\nJSON objects in the API follow a must ignore processing model, where clients are expected to ignore data fields they don't understand.\n\nFor example if the client saw the JSON as shown in the example on the right ('Unknown Field') and did not understand the such_key field (and who can blame it?), it must pretend the field wasn't there and will process the object as if it looked liked the object shown in 'Must Ignore'.\n\nWhen fetching content, fields that are optional for API objects are indicated in the documentation - clients must not assume they will always be present. When submitting content, fields that are required to be sent by client are also indicated in the documentation - if these are not sent the API may reject the request.\n\nIn general the API may reject JSON where data is not valid or incomplete with a 422 Unprocessable Entity response and an error message explaining the issue. For example, an email message type may be rejected if it is not sent with a subject field."
  },
  {
    "title": "Input Values",
    "url": "https://developers.intercom.com/docs/references/1.3/canvas-kit/requestobjects/input-values/",
    "html": "Input Values\nDescription\n\nThe input_values object is a JSON hash containing key-value pairs. These key-value pairs represent the data that's been inputted by customers and teammates with a given component.\n\nThe key will be the component_id and the value will be the data that was inputted by this component.\n\nExample Object\ninput_values: { \"<component_id>\": \"<Value entered in component>\" }, //Can be more than one pair\n"
  },
  {
    "title": "Current Canvas",
    "url": "https://developers.intercom.com/docs/references/1.3/canvas-kit/requestobjects/current-canvas/",
    "html": "Current Canvas\nDescription\n\nThe current_canvas object mirrors the same format as the Canvas Object. This will be the canvas that was most recently showing before the request was sent.\n\nExample Object\n{\n  current_canvas: {\n    content: { \n      components : [\n        {\n          \"type\": \"button\",\n          \"id\": \"button-1\",\n          \"label\": \"This canvas showed before I was clicked\",\n          \"action\": {\n            \"type\": \"submit\"\n          }\n        }\n      ]\n    }\n  }\n}\n"
  },
  {
    "title": "Webhook Topics",
    "url": "https://developers.intercom.com/docs/references/2.4/webhooks/webhook-models/",
    "html": "Webhook Topics\n\nThe following topics are available and you can be notified when an action relating to that topic occurs. You just need to tell us where to send the notification. The 'Item Type' column shows the API type that will be sent as the data of the notification.\n\nTopic\tItem Type\tDescription\nconversation.user.created\tConversation\tSubscribe to user/lead initiated conversations\nconversation.user.replied\tConversation\tSubscribe to contact user/lead conversation replies\nconversation.admin.replied\tConversation\tSubscribe to admin conversation replies\nconversation.admin.single.created\tConversation\tSubscribe to admin initiated 1:1 conversations\nconversation.admin.assigned\tConversation\tSubscribe to admin conversation assignments\nconversation.admin.noted\tConversation\tSubscribe to admin conversation notes\nconversation.admin.closed\tConversation\tSubscribe to admin conversation closes\nconversation.admin.opened\tConversation\tSubscribe to admin conversation opens\nconversation.admin.snoozed\tConversation\tSubscribe to admin conversation snoozes\nconversation.admin.unsnoozed\tConversation\tSubscribe to admin conversation unsnoozes\nconversation_part.tag.created\tConversation\tSubscribe to conversation parts being tagged\nconversation_part.redacted\tConversation\tSubscribe to conversation parts being deleted\nconversation.rating.added\tConversation\tSubscribe to conversations getting a rating\nconversation.deleted\tConversation\tSubscribe to conversation deleted\nuser.created\tUser\tSubscribe to user creations\nuser.deleted\tUser\tSubscribe to user deletions\nuser.unsubscribed\tUser\tSubscribe to user unsubscriptions from email\nuser.email.updated\tUser\tSubscribe to user email address being updated\nuser.tag.created\tUserTag\tSubscribe to users being tagged\nuser.tag.deleted\tUserTag\tSubscribe to users being untagged\ncontact.created\tLead\tSubscribe to lead creations\ncontact.signed_up\tLead\tSubscribe to leads converting to users\ncontact.added_email\tLead\tSubscribe to emails being added to leads\ncontact.tag.created\tContactTag\tSubscribe to leads being tagged\ncontact.tag.deleted\tContactTag\tSubscribe to leads being untagged\nvisitor.signed_up\tVisitor\tSubscribe to visitors converting to users\ncompany.created\tCompany\tSubscribe to company creations\nevent.created\tEvent\tSubscribe to events\nping\tPing\tSent when a post to the subscription's ping resource is received, or periodically by Intercom. Ping is always subscribed to.\nWebhooks and Permissions\n\nEach webhook topic is associated with one or more permission scopes. If you would like to setup a webhook for a particular topic then you will need to select the appropriate permission scope to be able to request a notification for that topic.\n\n🚧 Multiple permissions\n\nSome topic are associated with multiple permissions. In these cases you don't need to select all of these permissions to subscribe to that topic.\n\nWebhook topic\tWorks with permissions\tGroups\nconversation_part.tag.created\tRead conversations\tConversation data\nconversation_part.redacted\tRead conversations\tConversation data\nconversation.rating.added\tRead conversations\tConversation data\nconversation.admin.assigned\tRead conversations\tConversation data\nconversation.admin.closed\tRead conversations\tConversation data\nconversation.admin.noted\tRead conversations\tConversation data\nconversation.admin.opened\tRead conversations\tConversation data\nconversation.admin.replied\tRead conversations\tConversation data\nconversation.admin.single. created\tRead conversations\tConversation data\nconversation.admin.snoozed\tRead conversations\tConversation data\nconversation.admin.unsnoozed\tRead conversations\tConversation data\nconversation.user.created\tRead conversations\tConversation data\nconversation.user.replied\tRead conversations\tConversation data\nconversation.deleted\tRead conversations\tConversation data\ncontact.added_email\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\ncontact.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.email.updated\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.created\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.tag.deleted\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nuser.unsubscribed\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nvisitor.signed_up\tRead users and companies, Read and write users, Read one user and one company\tCustomer data\nevent.created\tRead events\tCustomer event data\ncompany.created\tRead users and companies, Read one user and one company\tCompany data\nWebhook Notification Object\n\nA notification object contains the following fields:\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'notification_event'\nid\tstring\tThe Intercom defined id representing the notification.\nself\tstring\tThe Intercom defined URL for the subscription. Optional.\ncreated_at\ttimestamp\tThe timestamp the notification was created.\ntopic\tstring\tCorresponds to a topic.\ndelivery_attempts\tnumber\tThe number of times this notification has been attempted.\nfirst_sent_at\ttimestamp\tThe first time the delivery was attempted.\ndata\tobject\tA container for the data associated with the notification.\ndata.item\tobject\tThe data associated with the notification, which will have a 'type' field.\n\nThe contents of data.item object will be defined according to its type field. In the example to the right, the type value of company indicates a company object.\n\n{\n  \"type\": \"notification_event\",\n  \"topic\": \"company.created\",\n  \"id\": \"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b3\",\n  \"app_id\" : \"a86dr8yl\",\n  \"created_at\": 1392731331,\n  \"delivery_attempts\": 1,\n  \"first_sent_at\": 1392731392,\n  \"data\": {\n    \"item\": {\n      \"type\": \"company\",\n      \"id\": \"531ee472cce572a6ec000006\",\n      \"name\": \"Blue Sun\",\n      \"company_id\": \"6\",\n      \"remote_created_at\": 1394531169,\n      \"created_at\": 1394533506,\n      \"updated_at\": 1396874658,\n      \"custom_attributes\": {\n      }\n    }\n  }\n}\n\nHandling Webhook Notifications\n\nWhen you setup a subscription you will receive notifications on your chosen topics. How you handle those notifications, i.e. the HTTP status code returned, will determine the subsequent state of that subscription.\n\nResponse Code\tDescription\tAction\n2xx\tSuccess\tThe webhook was successfully delivered.\n410\tGone\tWhen a 410 is received, we assume the resource is no longer available. We will disable the subscription and no more notifications will be sent.\n429\tToo many requests\tWhen a 429 is received, all notifications from that subscription will be throttled. Depending on the rate of delivery, this delay can be between 1 minute to 2 hours. If 429s continue and any notification is delayed for > 2 hours then we will drop that notification.\n4xx (excl. 429) 5xx\tClient or service errors\tWe will retry after 1 minute for all other errors. If the 2nd retry fails then we mark the notification delivery as failed.\n\n❗️ Timeout\n\nYou have 5 seconds to respond to a notification. If you don't send a response inside that time, the notification is treated as failed and will be retried only once after 1 minute.\n\nSigned Notifications\n\nEach webhook notification is signed by Intercom via an X-Hub-Signature header. We do this so that you can verify the notification came from Intercom by decoding the signature.\n\nThe value of this X-Hub-Signature header is computed by creating a signature using the body of the JSON request and your app's client_secret value, which you can find on the Basic Info page of your app.\n\nThe signature is the hexadecimal (40-byte) representation of a SHA-1 signature computed using the HMAC algorithm as defined in RFC2104.\n\nThe X-Hub-Signature header value starts with the string sha1= followed by the signature.\n\nPOST https://example.org/hooks\nUser-Agent: intercom-parrot-service-client/1.0\nX-Hub-Signature: sha1=21ff2e149e0fdcac6f947740f6177f6434bda921\nAccept: application/json\nContent-Type: application/json\n\n{\n  \"type\" : \"notification_event\",\n  \"id\" : \"notif_78c122d0-23ba-11e4-9464-79b01267cc2e\",\n  \"topic\" : \"user.created\",\n  \"app_id\" : \"a86dr8yl\",\n  \"data\" : {\n    \"type\" : \"notification_event_data\",\n    \"item\" : {\n      \"type\" : \"user\",\n      \"id\" : \"530370b477ad7120001d\",\n      \"user_id\" : \"25\",\n      \"name\" : \"Hoban Washburne\",\n      \"unsubscribed_from_emails\" : false,\n      \"custom_attributes\" : {}\n    }\n  }\n}\n\nContact Tag Model for Webhooks\n\nThe Contact Tag model is only returned for webhooks. It is not used with the Lead (i.e. contact) or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"contact_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"1287\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"contact\" : {\n      \"type\": \"contact\",\n      \"id\": \"1287ab1287fefe\",\n      \"user_id\": \"12\"\n  }\n}\n\n\nA contact tag is composed from the existing contact and tag JSON and is sent when contacts are tagged and untagged via the contact.tag.created and contact.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'contact_tag'.\ncreated_at\ttimestamp\tThe time the contact tag object was created.\ntag\tTag\tThe tag that was added or removed.\ncontact\tcontact\tThe contact that was tagged or untagged.\nUser Tag Model for Webhooks\n\nThe User Tag model is only returned for webhooks. It is not used with the User or Tag endpoints themselves. You can see an example object below:\n\n{\n  \"type\": \"user_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"17513\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"user\" : {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n      \"user_id\": \"25\"\n  }\n}\n\n\nA user tag is composed from the existing user and tag JSON and is sent when users are tagged and untagged via the user.tag.created and user.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user_tag'.\ncreated_at\ttimestamp\tThe time the user tag object was created.\ntag\tTag\tThe tag that was added or removed.\nuser\tUser\tThe user that was tagged or untagged."
  },
  {
    "title": "List Companies",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/companies/list-companies/",
    "html": "List Companies\nList companies\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/companies \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"company.list\\\",\\n  \\\"total_count\\\": 105,\\n  \\\"companies\\\": [\\n    {\\n      \\\"type\\\": \\\"company\\\",\\n      \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n       ...\\n     },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/companies?per_page=50&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 3\\n  }\\n}\\n\\n# NB: Full company objects are returned\n\n\nYou can fetch a list of companies. The company list is sorted by the last_request_at field and by default is ordered descending, most recently requested first.\n\nNote that the API does not include companies who have no associated users in list responses.\n\nRequest Parameters\n\nYou can optionally request the result page size and which page to fetch as follows -\n\nParameter\tRequired\tDescription\npage\tno\twhat page of results to fetch defaults to first page.\nper_page\tno\thow many results per page defaults to 50.\norder\tno\tasc or desc. Return the companies in ascending or descending order. defaults to desc.\nReturns\n\nA pageable list of companies. The list contains a pages object that indicates if more items exist via the next field, whose value is a URL that can be used to fetch the next page. If the next field is not present, that indicates there are no further items in the list.\n\nWhen using the Companies endpoint and the pages object to iterate through the returned companies, there is a limit of 10,000 Companies that can be returned. If you need to list or iterate on more than 10,000 Companies, please use the Scroll API."
  },
  {
    "title": "# Card Creation Options",
    "url": "https://developers.intercom.com/docs/references/1.3/canvas-kit/requestobjects/card-creation-options/",
    "html": "# Card Creation Options\nDescription\n\nThe card_creation_options object is a JSON hash containing key-value pairs. These key-value pairs either represent:\n\nData that was sent within the results object in response to the Configure request.\nData that was sent within the card_creation_options object in response to the Submit request.\nExample Object\ncard_creation_options: { \"key\": \"value\" } //Can be more than one pair\n"
  },
  {
    "title": "Create or Update Company",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/companies/create-or-update-company/",
    "html": "Create or Update Company\nExample Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/companies \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type:application/json' -d '\\n{\\n  \\\"name\\\": \\\"Blue Sun\\\",\\n  \\\"plan\\\": \\\"Paid\\\",\\n  \\\"company_id\\\": \\\"6\\\",\\n  \\\"remote_created_at\\\": 1394531169,\\n  \\\"size\\\": 750,\\n  \\\"website\\\": \\\"http://www.example.com\\\",\\n  \\\"industry\\\": \\\"Manufacturing\\\",\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"team_mates\\\": 0,\\n    \\\"monthly_spend\\\": 155.98\\n  }\\n}'\n\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"company\\\",\\n    \\\"company_id\\\": \\\"6\\\",\\n    \\\"id\\\": \\\"57e0120926806ceca3c13ba8\\\",\\n    \\\"app_id\\\": \\\"pi3243fa\\\",\\n    \\\"name\\\": \\\"Blue Sun\\\",\\n    \\\"remote_created_at\\\": 1394531169,\\n    \\\"created_at\\\": 1474302473,\\n    \\\"updated_at\\\": 1475659931,\\n    \\\"last_request_at\\\": 1473419085,\\n    \\\"monthly_spend\\\": 49,\\n    \\\"session_count\\\": 0,\\n    \\\"user_count\\\": 0,\\n    \\\"tags\\\": {\\n        \\\"type\\\": \\\"tag.list\\\",\\n        \\\"tags\\\": []\\n    },\\n    \\\"segments\\\": {\\n        \\\"type\\\": \\\"segment.list\\\",\\n        \\\"segments\\\": [\\n            {\\n                \\\"type\\\": \\\"segment\\\",\\n                \\\"id\\\": \\\"56cc69cc8618d37b45000009\\\"\\n            }\\n        ]\\n    },\\n    \\\"plan\\\": {\\n        \\\"type\\\": \\\"plan\\\",\\n        \\\"id\\\": \\\"108609\\\",\\n        \\\"name\\\": \\\"Paid\\\"\\n    },\\n    \\\"custom_attributes\\\": {\\n        \\\"paid_subscriber\\\": true,\\n        \\\"team_mates\\\": 0,\\n        \\\"referral_source\\\": \\\"Google\\\",\\n        \\\"founded\\\": \\\"20th Century\\\",\\n        \\\"monthly_spend\\\": 155.98,\\n        \\\"remove\\\": true\\n    }\\n}\n\n\nCompanies can be created or updated via a POST to https://api.intercom.io/companies, which accepts a JSON object describing the company.\n\nCOMPANIES WITH NO USERS\n\nIt is important to note that companies will be only visible in Intercom when there is at least one associated user. Check the Companies and Users section for more information\n\nCompanies are looked up via company_id, if not found via company_id, the new company will be created, if found, that company will be updated.\n\nNote that the company_id field itself cannot be updated through the API.\n\nCompanies may also be created or updated via a User request - see the section \"Create or Update User\".\n\nAttributes\n\nThe table below shows the fields you can create or update for a company -\n\nAttribute\tType\tDescription\nremote_created_at\ttimestamp\tThe time the company was created by you\ncompany_id\tstring\tThe company id you have defined for the company\nname\tstring\tThe name of the company\nmonthly_spend\tnumber\tHow much revenue the company generates for your business. Note that this will truncate floats. i.e. it only allow for whole integers, 155.98 will be truncated to 155. Note that this has an upper limit of 2**31-1 or 2147483647.\nplan\tstring\tThe name of the plan you have associated with the company\nsize\tnumber\tThe number of employees in this company\nwebsite\tstring\tThe URL for this company's website. Please note that the value specified here is not validated. Accepts any string.\nindustry\tstring\tThe industry that this company operates in\ncustom_attributes\tobject\tA hash of key/value pairs containing any other data about the company you want Intercom to store.\nCustom Attributes\n\nThe custom_attributes object allows you to send any information you wish about a company with the following restrictions -\n\nField names must not contain Periods (.) or Dollar ($) characters\nField names must be no longer than 190 characters.\nField values must be JSON Strings, Numbers or Booleans - Objects and Arrays will be rejected.\nString field values must be no longer than 255 characters.\nMaximum of 100 fields.\nSession Count\n\nA company's session count is tied to users' session count whilst in the context of that company. So, to update a company session count,\nupdate the user with that company and increment the user's session.\n\nReturns\n\nThe created or updated company object.\n\nNew company objects will be provided with an id field - this value cannot be created or edited by clients."
  },
  {
    "title": "Scroll over all companies",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/companies/iterating-over-all-companies/",
    "html": "Scroll over all companies\n\nThe list all companies functionality does not work well for huge datasets, and can result in errors and performance problems when paging deeply. The Scroll API provides an efficient mechanism for iterating over all companies in a dataset.\n\nEach app can only have 1 scroll open at a time. You'll get an error message if you try to have more than one open per app.\nIf the scroll isn't used for 1 minute, it expires and calls with that scroll param will fail\nIf the end of the scroll is reached, \"companies\" will be empty and the scroll parameter will expire\n# Send a GET request to get the first page of companies\n$ curl \\\n'https://api.intercom.io/companies/scroll' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n# To get the next page use the scroll param returned in the response\n$ curl \\\n'https://api.intercom.io/companies/scroll?scroll_param=562bc29f-ea55-4823-aaaf-f3faadceaa59' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"company.list\",\n  \"companies\": [\n    {\n      \"type\": \"company\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ],\n  \"scroll_param\": \"25b649f7-4d33-4ef6-88f5-60e5b8244309\"\n}\n\n# You can use the scroll method to list all your companies\nintercom.companies.scroll.each { |company| puts company.name}\n# Alternatively you can use the scroll.next method to get 100 companies with each request\nresult = intercom.companies.scroll.next\nresult.scroll_param\n=> \"0730e341-63ef-44da-ab9c-9113f886326d\"\nresult = intercom.companies.scroll.next(\"0730e341-63ef-44da-ab9c-9113f886326d\");\n\nSCROLL PARAMETER\n\nYou can get the first page of companies by simply sending a GET request to the scroll endpoint. For subsequent requests you will need to use the scroll parameter from the response.\n\n❗️ Scroll network timeouts\n\nSince scroll is often used on large datasets network errors such as timeouts can be encountered. When this occurs you will need to restart your scroll query as it is not possible to continue from a specific point when using scroll.\n\nWhen this occurs you will see a HTTP 500 error with the following message:\n\"Request failed due to an internal network error. Please restart the scroll operation.\""
  },
  {
    "title": "Delete a Company",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/companies/delete-a-company/",
    "html": "Delete a Company\n\nCurrently, the API does not support deleting a company. The operation may be added in the future."
  },
  {
    "title": "Company Model",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/companies/company-model/",
    "html": "Company Model\nExample Company Object\n{\\n  \\\"type\\\": \\\"company\\\",\\n  \\\"id\\\": \\\"531ee472cce572a6ec000006\\\",\\n  \\\"name\\\": \\\"Blue Sun\\\",\\n  \\\"plan\\\": \\\"plan1\\\",\\n  \\\"company_id\\\": \\\"6\\\",\\n  \\\"remote_created_at\\\": 1394531169,\\n  \\\"created_at\\\": 1394533506,\\n  \\\"updated_at\\\": 1396874658,\\n  \\\"size\\\": 85,\\n  \\\"website\\\": \\\"http://www.example.com\\\",\\n  \\\"industry\\\": \\\"Manufacturing\\\",\\n  \\\"monthly_spend\\\": 49,\\n  \\\"session_count\\\": 26,\\n  \\\"user_count\\\": 10,\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"team_mates\\\": 0\\n  }\\n}\n\nExample Company List\n{\\n  \\\"type\\\": \\\"company.list\\\",\\n  \\\"total_count\\\": 1,\\n  \\\"companies\\\": [\\n    {\\n      \\\"type\\\": \\\"company\\\",\\n      \\\"id\\\": \\\"531ee472cce572a6ec000006\\\",\\n      \\\"name\\\": \\\"Blue Sun\\\",\\n      \\\"plan\\\": \\\"plan1\\\",\\n      \\\"company_id\\\": \\\"6\\\",\\n      \\\"remote_created_at\\\": 1394531169,\\n      \\\"created_at\\\": 1394533506,\\n      \\\"updated_at\\\": 1396874658,\\n      \\\"size\\\": 85,\\n      \\\"website\\\": \\\"http://www.example.com\\\",\\n      \\\"industry\\\": \\\"Manufacturing\\\",\\n      \\\"monthly_spend\\\": 49,\\n      \\\"session_count\\\": 26,\\n      \\\"user_count\\\": 10,\\n      \\\"custom_attributes\\\": {\\n        \\\"paid_subscriber\\\" : true,\\n        \\\"team_mates\\\": 0\\n      }\\n    }\\n  ],\\n  \\\"pages\\\": {\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 1\\n  }\\n}\n\nCompany Object\n\nA company object contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'company'\nid\tstring\tThe Intercom defined id representing the company\ncreated_at\ttimestamp\tThe time the company was added to Intercom\nremote_created_at\ttimestamp\tThe time the company was created by you\nupdated_at\ttimestamp\tThe last time the company was updated\nlast_request_at\ttimestamp\tThe time the company last recorded making a request\ncompany_id\tstring\tThe company id you have defined for the company\nname\tstring\tThe name of the company\ncustom_attributes\tobject\tThe custom attributes you have set on the company\nsession_count\tinteger\tHow many sessions the company has recorded\nmonthly_spend\tnumber\tHow much revenue the company generates for your business\nuser_count\tnumber\tThe number of users in the company\nplan*\tstring\tThe name of the plan you have associated with the company.\nsize\tinteger\tThe number of employees in the company\nwebsite\tstring\tThe URL for the company website\nindustry\tstring\tThe industry that the company operates in\n\n* Note that plan is set as a string but returned as an object as described below. You can only set the name of a plan using the plan string.\n\nAttribute\tType\tDescription\ntype\tstring\tWill always be of type 'plan'\nid\tstring\tThe plan ID\nname\tstring\tThe name of the plan, note that this is the only field that can be set via the API.\n\nAny integer values in the user model are limited to the int32 range -2^31 to 2^31 -1\n\nCompany List\n\nA company list contains the following fields -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'company.list'\ntotal_count\tinteger\tThe number of companies for this App\ncompanies\tarray\tA list of companies\npages\tobject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch"
  },
  {
    "title": "List by Tag or Segment",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/companies/list-by-tag-or-segment/",
    "html": "List by Tag or Segment\nExample List by tag request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/companies?tag_id=17 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"company.list\\\",\\n  \\\"total_count\\\": 105,\\n  \\\"companies\\\": [\\n    {\\n      \\\"type\\\": \\\"company\\\",\\n      \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n       ...\\n     },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/companies?tag=14&per_page=50&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 3\\n  }\\n}\\n\\n# NB: Full company objects are returned\n\n\nYou can fetch segmented and tagged companies by querying the companies resource with the segment_id and tag_id parameters (for information on how to tag companies see the section \"Create and update tags\").\n\nNote that you can query by tag or segment but not both in the same request.\n\nRequest Parameters\nParameter\tRequired\tDescription\ntag_id\tone of\tThe id of the tag to filter by.\nsegment_id\tone of\tThe id of the segment to filter by.\nReturns\n\nA pageable list of companies. Like a plain company list, the result contains a pages object that indicates if more companies exist via the next field."
  },
  {
    "title": "Companies",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/companies/companies/",
    "html": "Companies\n\nCompanies allow you to represent commercial organizations using your product.\n\nEach company will have its own description and be associated with users. You can create and update companies and add custom attributes describing them. Companies can be viewed individually or as a list, and can be queried using tags or segments.\n\nCompanies will not appear within Intercom until users have been added or associated with a company."
  },
  {
    "title": "Submit Action",
    "url": "https://developers.intercom.com/docs/references/1.3/canvas-kit/actioncomponents/submit-action/",
    "html": "Submit Action\n\nA submit action triggers a Submit Request to be sent. This request will include all values which have been entered into all the interactive components on the current canvas.\n\nParameters\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsubmit\tYes\tThe type of action you are attaching to a component.\nExample Object\naction: {\n  \"type\": \"submit\"\n}\n"
  },
  {
    "title": "Counts",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/counts/counts/",
    "html": "Counts\n\nYou can use the API to get counts of users and companies filtered by certain criteria.\n\nCounts are a good way to periodically obtain data for the purposes of tracking rates of change in user and company data."
  },
  {
    "title": "Sheets Action",
    "url": "https://developers.intercom.com/docs/references/1.3/canvas-kit/actioncomponents/sheets-action/",
    "html": "Sheets Action\n\nA sheet action opens the link you give within the Messenger as an embedded iframe.\n\nMore on how Sheets work is in our Canvas Kit documentation.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsheet\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which hosts your sheet.\nExample Object\naction: {\n  type: \"sheet\",\n  url:  \"http://example.com\"\n}\n"
  },
  {
    "title": "Pagination",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/common-structures/pagination/",
    "html": "Pagination\n\nSome list resources in the API are paginated by default to allow clients to traverse data over multiple requests. Their responses may contain a pages object that contains pagination links a client can use to traverse the data without having to construct a query. The link relations for the pages field are as follows -\n\nParameter\tDescription\nnext\tA link to the next page of results. A response that does not contain a next link does not have further data to fetch.\nprev\tA link to the previous page of results.\nfirst\tA link to the first page of results.\nlast\tA link to the last page of results."
  },
  {
    "title": "Use of HTTP",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/common-structures/use-of-http/",
    "html": "Use of HTTP\n\nRequest methods are used in accordance with HTTP -\n\nGET is used to access resources and perform queries. The API does not allow modifications (creates, updates, deletes) to occur via GET.\nPOST is used to create or update resources. The preferred model for creation is to post JSON to a 'collections' resource - for example the collections resource for users is https://api.intercom.io/users. PATCH is not currently used by the API.\nDELETE is used to delete resources.\n\nResponses use standard HTTP codes. Where there are client or server errors, a list of of one or more errors in JSON format is returned in the body - see Error Objects for more details.\n\nThe API may send cache directives where suitable, notably the ETag, Last-Modified and If-Modified-Since headers.\n\nThe Accept header must be used by a client used to indicate a preferred response for GET/HEAD requests. Requests without an Accept header of application/json may be rejected with a client error of 404 or 406. The Content-Type header should be used by clients to indicate the submitted format for POST/PUT requests."
  },
  {
    "title": "Event de-duplication",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/data-events/event-de-duplication/",
    "html": "Event de-duplication\n\nThe API may detect and ignore duplicate events. Each event is uniquely identified as a combination of the following data - the App identifier, the User identifier, the Event name and the Event created time. As a result, it is strongly recommended to send a second granularity Unix timestamp in the created_at field.\n\nDuplicated events are responded to using the normal 202 Accepted code - an error is not thrown, however repeat requests will be counted against any rate limit that is in place."
  },
  {
    "title": "Identifiers and URLs",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/common-structures/identifiers-and-urls/",
    "html": "Identifiers and URLs\n\nAll objects in the API have an id field indicating their logical identifier. Some objects may optionally also have a self field that indicates a URL or canonical address for the object.\n\nParameter\tDescription\nid\tA string that identifies the object within the API. The id field will not be larger than 128 characters (in SQL it corresponds to a varchar(128)).\nself\tA URL that addresses the object within the API. The self field will not be larger than 255 characters (in SQL it corresponds to a varchar(255)).\n\nThese fields must always be treated as opaque strings - no guarantees are made about the internal structure of the id or self fields for an object.\n\nThe id field is always defined by the API server and is guaranteed to be unique relative to the type field - this means no two user objects will have the same id field, but a user and a company may have the same value for their id fields. . Some object types (such as User), also support client defined identifiers.\n\nThe company and user objects deserve special mention when it comes to identity for two reasons -\n\nThey allow you send your own external identifiers - email and user_id for users and company_id for companies.\nThe user id field is in some cases, aliased to intercom_user_id. This is done to distinguish it from other identifiers in the API and to avoid confusion as to which object type an id denotes."
  },
  {
    "title": "Conversation Count Model",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/counts/conversation-counts/",
    "html": "Conversation Count Model\nConversation Count Object\n\nThe conversation count supplies global counts about your App's conversations\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nconversation\tobject\tContains counts related to conversations\nconversation.assigned\tnumber\tContains the number of assigned conversations\nconversation.closed\tnumber\tContains the number of closed conversations\nconversation.open\tnumber\tContains the number of open conversations\nconversation.unassigned\tnumber\tContains the number of unassigned conversations\n{\n    \"type\": \"count\",\n    \"conversation\": {\n        \"open\": 30,\n        \"closed\": 17,\n        \"unassigned\": 0,\n        \"assigned\": 30\n    }\n}\n\n# Conversation Counts\n$ curl 'https://api.intercom.io/counts?type=conversation' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# Conversation App Counts\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"count\",\n    \"conversation\": {\n        \"open\": 30,\n        \"closed\": 17,\n        \"unassigned\": 0,\n        \"assigned\": 30\n    }\n}\n\nintercom.counts.for_type(type: 'conversation')\n\n<?php\n$counts = $intercom->counts->getCounts([\"type\" => \"conversation\"]);\nprint_r($counts);\n?>\n\n// Conversation Counts\nfinal Counts.Conversation totals = Counts.conversationTotals();\ntotals.getAssigned();\ntotals.getClosed();\ntotals.getOpen();\ntotals.getUnassigned();\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nConversation Count\tconversation\tNone"
  },
  {
    "title": "Object Model",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/common-structures/object-model/",
    "html": "Object Model\nCommon Fields and Metadata\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"id\\\": \\\"456456456456\\\",\\n  \\\"self\\\": \\\"https://api.intercom.io/users/456456456456\\\",\\n  \\\"created_at\\\": 1392241887,\\n  \\\"custom_attributes\\\": {\\n    \\\"note\\\": \\\"some extra information\\\"\\n  }\\n}\n\nCommon Fields\n\nAPI objects have a type field indicating their object type. Each object in the API may be given an identifier, indicated via its id field, and will typically be addressable via a URI. Many objects will also have a created_at field indicating the object's creation date as a UTC Unix timestamp.\n\nDates and Timestamps\n\nAll temporal fields in the API are encoded as Unix timestamps and are by definition always treated as UTC. The most common time fields in the API are created_at and updated_at.\n\nParameter\tDescription\ncreated_at\tThe time the object was created. In most, but not all cases, this is the time the object was created according to the API server.\nupdated_at\tThe time the object was last updated according to the API server.\nOptional Fields\n\nUnpopulated optional data is returned as follows -\n\nNumber, String and Boolean types may be returned as having null values.\nArrays and Objects may be returned as empty ([] {})\n\nIn general clients should be able to handle null and empty fields.\n\nMetadata and Custom Attributes\n\nSome object types, such as Events, Users and Companies, have a metadata or custom_attributes field that allows clients to set custom-defined data about an object."
  },
  {
    "title": "Update an article",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/articles/update-an-article/",
    "html": "Update an article\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/articles/<id> \\\\\\n-X PUT \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n\\n{\\n  \\\"title\\\": \\\"New title\\\",\\n  \\\"translated_content\\\": {\\n    \\\"es\\\": {\\n      \\\"title\\\": \\\"Nuevo título\\\",\\n      \\\"state\\\": \\\"published\\\",\\n      \\\"body\\\": \\\"<p>Spanish body in html</p>\\\",\\n      \\\"author_id\\\": \\\"1\\\"\\n    }\\n  }\\n}'\n\n\nYou can update the details of a single article by making a PUT request to https://api.intercom.io/articles/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the article which is given by Intercom.\nRequest Body Parameters\nAttribute\tType\tRequired?\tDescription\ntitle\tString\tNo\tThe title of the article.\nFor multilingual articles, this will be the title of the default language's content.\ndescription\tString\tNo\tThe description of the article.\nFor multilingual articles, this will be the description of the default language's content.\nbody\tString\tNo\tThe body of the article in HTML.\nFor multilingual articles, this will be the body of the default language's content.\nauthor_id\tString\tNo\tThe id of the author of the article.\nFor multilingual articles, this will be the id of the author of the default language's content. Must be a teammate on the help center's workspace.\nstate\tString\tNo\tWhether the article will be published or will be a draft.\nFor multilingual articles, this will be the state of the default language's content.\nparent_id\tString\tNo\tThe id of the article's parent collection or section. An article without this field stands alone.\nparent_type\tString\tNo\tThe type of parent, which can either be a collection or section.\ntranslated_content\tObject\tNo\tAn Article Translated Content Object whereby you can specify multiple multilingual articles to be updated.\nResponse\n\nThis will return an Article model of the article you just updated."
  },
  {
    "title": "Pagination",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/common-structures/pagination/",
    "html": "Pagination\n\nSome list resources in the API are paginated by default to allow clients to traverse data over multiple requests. Their responses may contain a pages object that contains pagination links a client can use to traverse the data without having to construct a query. The link relations for the pages field are as follows -\n\nParameter\tDescription\nnext\tA link to the next page of results. A response that does not contain a next link does not have further data to fetch.\nprev\tA link to the previous page of results.\nfirst\tA link to the first page of results.\nlast\tA link to the last page of results."
  },
  {
    "title": "Use of HTTP",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/common-structures/use-of-http/",
    "html": "Use of HTTP\n\nRequest methods are used in accordance with HTTP -\n\nGET is used to access resources and perform queries. The API does not allow modifications (creates, updates, deletes) to occur via GET.\nPOST is used to create or update resources. The preferred model for creation is to post JSON to a 'collections' resource - for example the collections resource for users is https://api.intercom.io/users. PATCH is not currently used by the API.\nDELETE is used to delete resources.\n\nResponses use standard HTTP codes. Where there are client or server errors, a list of of one or more errors in JSON format is returned in the body - see Error Objects for more details.\n\nThe API may send cache directives where suitable, notably the ETag, Last-Modified and If-Modified-Since headers.\n\nThe Accept header must be used by a client used to indicate a preferred response for GET/HEAD requests. Requests without an Accept header of application/json may be rejected with a client error of 404 or 406. The Content-Type header should be used by clients to indicate the submitted format for POST/PUT requests."
  },
  {
    "title": "The article model",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/articles/the-article-model/",
    "html": "The article model\nExample Article Object\nJSON\n{  \\\"id\\\": 1,  \\\"type\\\": \\\"article\\\",  \\\"workspace_id\\\": \\\"abcdef\\\",  \\\"title\\\": \\\"Default language title\\\",  \\\"description\\\": \\\"Default language description\\\",  \\\"body\\\": \\\"Default language body in html\\\",  \\\"author_id\\\": 1,  \\\"state\\\": \\\"published\\\",  \\\"created_at\\\": 123456,  \\\"updated_at\\\": 123456,  \\\"url\\\": \\\"http://intercom.test/help/en/articles/3-default-language\\\",  \\\"parent_id\\\": 1,  \\\"parent_type\\\": \\\"collection\\\",  \\\"default_locale\\\": \\\"en\\\",  \\\"translated_content\\\": {    \\\"type\\\": \\\"article_translated_content\\\",    \\\"fr\\\": {      \\\"type\\\": \\\"article_content\\\",      \\\"title\\\": \\\"French title\\\",      \\\"description\\\": \\\"French description\\\",   \\t  \\\"body\\\": \\\"French body in html\\\",   \\t  \\\"author_id\\\": 1,     \\t\\\"state\\\": \\\"published\\\",     \\t\\\"created_at\\\": 7891011,     \\t\\\"updated_at\\\": 7891011,     \\t\\\"url\\\": \\\"http://intercom.test/help/fr/articles/3-french-multilingual\\\"    }  },  \\\"statistics\\\": {      \\\"type\\\": \\\"article_statistics\\\",      \\\"views\\\": 10,      \\\"conversations\\\": 0,      \\\"reactions\\\": 8,      \\\"happy_reaction_percentage\\\": 38,      \\\"neutral_reaction_percentage\\\": 38,      \\\"sad_reaction_percentage\\\": 25  }}\n\nExample HTML Body\nHTML\n<h1 class=\\\"intercom-align-left\\\">Header 1</h1><h2 class=\\\"intercom-align-left\\\">Header 2</h2><h2 class=\\\"intercom-align-center\\\">Centered Header</h2><p class=\\\"intercom-align-left\\\">   <a href=\\\"https://intercom.com\\\" target=\\\"_blank\\\">Link</a></p><ul>   <li>Single-level List</li></ul><pre><code>'Pre' Code</code></pre><p class=\\\"intercom-align-left\\\"><code>Inline code</code></p><p class=\\\"intercom-align-left\\\"><b>Bold text</b></p><p class=\\\"intercom-align-left\\\"><i>Italic text</i></p><p class=\\\"intercom-align-center\\\">Centered text</p><p class=\\\"intercom-align-left\\\">Image without link:</p><div class=\\\"intercom-container intercom-align-left\\\">   <img      src=\\\"https://downloads.intercomcdn.com/i/o/204050460/7a140f62f8e715d1d6cf246d/Image.jpg\\\"      /></div><p class=\\\"intercom-align-left\\\">Image with link:</p><div class=\\\"intercom-container intercom-align-left\\\">   <a target=\\\"_blank\\\" href=\\\"https://intercom.com\\\"      ><img      src=\\\"https://downloads.intercomcdn.com/i/o/204049719/b41c9a81c13b8a91023df1e7/Image.jpg\\\"      /></a></div><p class=\\\"intercom-align-left\\\">Image with link and centered:</p><div class=\\\"intercom-container intercom-align-center\\\">   <a target=\\\"_blank\\\" href=\\\"https://intercom.com\\\"      ><img      src=\\\"https://downloads.intercomcdn.com/i/o/204050579/2e85d79a0d9e0c47b088f50c/Image.jpg\\\"      /></a></div><div class=\\\"intercom-container intercom-align-left\\\">   <a class=\\\"intercom-h2b-button\\\" target=\\\"_blank\\\" href=\\\"https://intercom.com\\\"      >Button</a      ></div><div class=\\\"intercom-container intercom-align-center\\\">   <a class=\\\"intercom-h2b-button\\\" target=\\\"_blank\\\" href=\\\"https://intercom.com\\\"      >Centered Button</a      ></div><p class=\\\"intercom-align-left\\\">Video Embed with iFrame:</p><div class=\\\"intercom-h2b-video\\\">   <iframe      src=\\\"https://www.youtube.com/embed/jqO8AQHj7Fw?rel=0\\\"      frameborder=\\\"0\\\"      webkitallowfullscreen      mozallowfullscreen      allowfullscreen      ></iframe></div><p class=\\\"intercom-align-left\\\"></p>\n\n\nThe Articles API is a central place to gather all information and take actions on your articles. Articles can live within collections and sections, or alternatively they can stand alone.\n\nFor collections and sections you should refer to the Help Center endpoint.\n\nArticle Object\nKey\tType\tDescription\ntype\tString\tThe type of object - article.\nid\tString\tThe unique identifier for the article which is given by Intercom.\nworkspace_id\tString\tThe id of the workspace which the article belongs to.\ntitle\tString\tThe title of the article.\nFor multilingual articles, this will be the title of the default language's content.\ndescription\tString\tThe description of the article.\nFor multilingual articles, this will be the description of the default language's content.\nbody\tString\tThe body of the article in HTML.\nFor multilingual articles, this will be the body of the default language's content.\nSee more on what we accept in the Supported HTML table below.\nauthor_id\tString\tThe id of the author of the article.\nFor multilingual articles, this will be the id of the author of the default language's content. Must be a teammate on the help center's workspace.\nstate\tString\tWhether the article is published or is a draft.\nFor multilingual articles, this will be the state of the default language's content.\ncreated_at\tTimestamp\tThe time when the article was created.\nFor multilingual articles, this will be the timestamp of creation of the default language's content.\nupdated_at\tTimestamp\tThe time when the article was last updated.\nFor multilingual articles, this will be the timestamp of last update of the default language's content.\nurl\tString\tThe URL of the article.\nFor multilingual articles, this will be the URL of the default language's content.\nparent_id\tString\tThe id of the article's parent collection or section. An article without this field stands alone.\nparent_type\tString\tThe type of parent, which can either be a collection or section.\ndefault_locale\tString\tThe default locale of the help center. This field is only returned for multilingual help centers.\ntranslated_content\tObject\tAn Article Translated Content Object for multilingual articles. This field is only returned for multilingual help centers.\nArticle Translated Content Object\nKey\tType\tWriteable?\tDescription\ntype\tString\tNo\tThe type of object - article_translated_content.\n<locale> ar, bg, bs, ca, cs, da, de, 'de-form', el, en, es, et, fi, fr, he, hr, hu, id, it, ja, ko, lt, lv, mn, nb, nl, pl, 'pt-BR', pt, ro, ru, sl, sr, sv, tr, vi, 'zh-CN', 'zh-TW'\tObject\tYes\tAn Article Content Object for each supported locale of the multilingual help center. The default locale's content and information will be contained in the initial Article Object. If there's no content for a locale, the value will be nil.\nArticle Content Object\nKey\tType\tWriteable?\tDescription\ntype\tString\tNo\tThe type of object - article_content.\ntitle\tString\tYes\tThe title of the article.\ndescription\tString\tYes\tThe description of the article.\nbody\tString\tYes\tThe body of the article in HTML.\nauthor\tString\tYes\tThe id of the author of the article.\nstate\tString\tYes\tWhether the article is published or is a draft.\ncreated_at\tTimestamp\tNo\tThe time when the article was created.\nupdated_at\tTimestamp\tNo\tThe time when the article was last updated.\nurl\tString\tNo\tThe URL of the article.\nArticle Statistics Object\nKey\tType\tWriteable?\tDescription\ntype\tString\tNo\tThe type of object - article_statistics.\nviews\tInteger\tNo\tThe number of total views the article has received.\nconversations\tInteger\tNo\tThe number of conversations started from the article.\nreactions\tInteger\tNo\tThe number of total reactions the article has received.\nhappy_reaction_percentage\tInteger\tNo\tThe percentage of happy reactions the article has received against other types of reaction.\nneutral_reaction_percentage\tInteger\tNo\tThe percentage of neutral reactions the article has received against other types of reaction.\nsad_reaction_percentage\tInteger\tNo\tThe percentage of sad reactions the article has received against other types of reaction.\nSupported HTML\n\nThe table below defines the subset of HTML accepted when creating or updating an Article. Over time we may add support for new HTML elements and attributes, since this will not constitute a breaking change, we advise any client code to support the full HTML specification when reading article content.\n\nRemoving element support, or otherwise changing the API in a way that causes previously supported HTML to become unsupported will be considered a breaking change.\n\nTag\tWhat does it do?\tAdditional Details\n<p>\tParagraph\tAll text must be placed within paragraph tags.\n<br>\tLine break\tSupported in-line.\n<hr>\tHorizontal rule\tNA\n<h1> <h2>\tHeading\tOnly these two header tags are supported. All others will be replaced with <h2>.\n<a>\tLink\tAn image can be placed in-between the link tags.\n<img>\tImage\tImages will be uploaded to Intercom and we'll use an Intercom link to display these. If these fail to upload then we'll hard fail and return 400 Bad Request.\n<ul> <ol> <li>\tList\tLists must contain at least one non-empty <li> element. <li> elements can contain plain text, or any other supported HTML tags, except <table>. If these criteria aren't met, then the article will hard fail and return 400 Bad request.\n<table>\tTable\tNeeds to have at least one row and one cell. Can contain any other supported HTML tags, except another <table> within. If these criteria aren't met then it will hard fail and return 400 Bad request.\n<iframe>\tVideo\tsrc must be for a supported video embed link. Only works for Youtube, Wistia, Vimeo, Loom, Vidyard or StreamIO.\n<pre> <code>\tPre-formatted code\t\n<b> <strong>\tBold\t\n<i> <em>\tItalic\t\nSupported CSS\nClass\tWhat does it do?\tWhere does it work?\nintercom-align-center\tCenter Alignment\tOn tag level: Headers, Paragraphs. On wrapping div: Images, Buttons.\nintercom-h2b-button\tButton\tOn tag level: Links\nUnsupported HTML\nTag\tWhat does it do?\tWhat do we do?\n<dl>\tDefinition List\tHard fail - 400 Bad Request\n<ul> or <ol>\tNested lists\tHard fail - 400 Bad Request\n<iframe>\tiFrame Unsupported video\tHard fail - 400 Bad Request\n<div> <span>\tContent division\tReplace with <p>\n<h3> to <h6>\tHeading\tReplace with <h2>\n<form>\tForm\tRemove from content\n<input> <textarea>\tInput\tRemove from content\n<script>\tJavascript Script\tRemove from content\n<head> <html> <footer> etc.\tAll other tags\tRemove from content Internals replaced with <p>"
  },
  {
    "title": "Scroll over all companies",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/companies/iterating-over-all-companies/",
    "html": "Scroll over all companies\n\nThe list all companies functionality does not work well for huge datasets, and can result in errors and performance problems when paging deeply. The Scroll API provides an efficient mechanism for iterating over all companies in a dataset.\n\nEach app can only have 1 scroll open at a time. You'll get an error message if you try to have more than one open per app.\nIf the scroll isn't used for 1 minute, it expires and calls with that scroll param will fail\nIf the end of the scroll is reached, \"companies\" will be empty and the scroll parameter will expire\n# Send a GET request to get the first page of companies\n$ curl \\\n'https://api.intercom.io/companies/scroll' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n# To get the next page use the scroll param returned in the response\n$ curl \\\n'https://api.intercom.io/companies/scroll?scroll_param=562bc29f-ea55-4823-aaaf-f3faadceaa59' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"company.list\",\n  \"companies\": [\n    {\n      \"type\": \"company\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ],\n  \"scroll_param\": \"25b649f7-4d33-4ef6-88f5-60e5b8244309\"\n}\n\n# You can use the scroll method to list all your companies\nintercom.companies.scroll.each { |company| puts company.name}\n# Alternatively you can use the scroll.next method to get 100 companies with each request\nresult = intercom.companies.scroll.next\nresult.scroll_param\n=> \"0730e341-63ef-44da-ab9c-9113f886326d\"\nresult = intercom.companies.scroll.next(\"0730e341-63ef-44da-ab9c-9113f886326d\");\n\nSCROLL PARAMETER\n\nYou can get the first page of companies by simply sending a GET request to the scroll endpoint. For subsequent requests you will need to use the scroll parameter from the response.\n\n❗️ Scroll network timeouts\n\nSince scroll is often used on large datasets network errors such as timeouts can be encountered. When this occurs you will need to restart your scroll query as it is not possible to continue from a specific point when using scroll.\n\nWhen this occurs you will see a HTTP 500 error with the following message:\n\"Request failed due to an internal network error. Please restart the scroll operation.\""
  },
  {
    "title": "Conversation Part Model",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/conversations/conversation-part-model/",
    "html": "Conversation Part Model\nExample Conversation Part Object\n{\n    \"type\": \"conversation_part\",\n    \"id\": \"4412\",\n    \"part_type\": \"comment\",\n    \"body\": \"<p>Hi Jane, it's all great thanks!</p>\",\n    \"created_at\": 1400857494,\n    \"updated_at\": 1400857494,\n    \"notified_at\": 1400857587,\n    \"assigned_to\": null,\n    \"author\": {\n      \"type\": \"user\",\n      \"id\": \"536e564f316c83104c000020\"\n    },\n    \"attachments\": []\n}\n\n{\n    \"type\":\"conversation_part\",\n    \"id\":\"1223445555\",\n    \"part_type\":\"comment\",\n    \"body\":\"We've removed this part of the conversation to comply with Twitter's terms and conditions. You can view the complete conversation in Intercom.\",\n    \"created_at\":1567693273,\n    \"updated_at\":1567693273,\n    \"notified_at\":1567693273,\n    \"assigned_to\":null,\n    \"author\":{\n      \"type\":\"user\",\n      \"id\":\"5310d8e7598c9a0b24000002\",\n      \"name\":\"\",\n      \"email\":\"\"\n    },\n    \"attachments\": []\n}\n\n\nA conversation part describes an element of the conversation.\n\nA conversation part has a html encoded body, an author, and may have an attachments list. Conversation parts have created, updated and notified timestamps. Each conversation part also has a part type - these types are described below.\n\nConversation Part Object\nAttribute\tType\tDescription\ntype\tstring\tAlways conversation_part.\nid\tstring\tThe id representing the conversation part.\npart_type\tstring\tThe type of conversation part.\nbody\tstring\tThe message body, which may contain HTML. For Twitter, this will show a generic message regarding why the body is obscured.\ncreated_at\ttimestamp\tThe time the conversation part was created.\nupdated_at\ttimestamp\tThe last time the conversation part was updated.\nnotified_at\ttimestamp\tThe time the user was notified with the conversation part.\nassigned_to\tstring\tThe id of the admin that was assigned the conversation by this conversation_part (null if there has been no change in assignment.)\nauthor\tstring\tThe type of individual that sent the message (user, admin or bot) and their related id. For Twitter, this will be blank.\nattachments\tList\tA list of attachments for the part.\nConversation Part Types\nType\tDescription\ncomment\tStandard reply from customer or admin to a conversation\nnote\tA note created by an admin on the conversation. A note will only be viewable as an admin\nnote_and_reopen\tAdd a note and reopen the conversations in the one action\nassignment\tAn assignment of the conversation to an admin, or Nobody\nopen\tIdentifies a conversation has been opened\nclose\tIdentifies a conversation has been closed\naway_mode_assignment\tConversation has been assigned due to the admin being in away mode\nparticipant_added\tA participant has been added to a group conversation\nparticipant_removed\tA participant has been removed from a group conversation\nconversation_rating_changed\tA conversation rating has been changed, not this can only occur before the rating has been submitted. Once it has been submitted it cannot be changed\nconversation_rating_remark_added\tA conversation remark has been added to the converation\nsnoozed\tA conversation has been snoozed\nunsnoozed\tA conversation has been unsnoozed\nassign_and_unsnooze\tAssign a conversation and unsnooze it in one action.\ntimer_unsnooze\tUnsnooze a conversation after a set time"
  },
  {
    "title": "App Total Count Model",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/counts/company-user-counts/",
    "html": "App Total Count Model\nApp Total Count Object\n\nThe total count object contains the summary of the following fields in your app -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count.hash'\ncompany\tobject\tContains the number of companies in your App\nsegment\tobject\tContains the number of segments in your App\ntag\tobject\tContains the number of tags in your App\nuser\tobject\tContains the number of users in your App\nlead\tobject\tContains the number of leads in your App\n\nThe count of tags and segments includes archived tags and segments.\n\n{\n    \"type\": \"count.hash\",\n    \"company\": {\n        \"count\": 55\n    },\n    \"user\": {\n        \"count\": 54944\n    },\n    \"lead\": {\n        \"count\": 17\n    },\n    \"tag\": {\n        \"count\": 1012\n    },\n    \"segment\": {\n        \"count\": 7\n    }\n}\n\n# App Counts\n$ curl 'https://api.intercom.io/counts' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# App Total Counts\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"count.hash\",\n    \"company\": {\n        \"count\": 55\n    },\n    \"user\": {\n        \"count\": 54944\n    },\n    \"lead\": {\n        \"count\": 17\n    },\n    \"tag\": {\n        \"count\": 1012\n    },\n    \"segment\": {\n        \"count\": 7\n    }\n}\n\nintercom.counts.for_app\n\n<?php\n// Global App Counts\n$intercom->counts->getCounts([]);\n?>\n\n// Global App Counts\nfinal Counts.Totals appTotals = Counts.appTotals();\nappTotals.getCompany().getValue();\nappTotals.getSegment().getValue();\nappTotals.getTag().getValue();\nappTotals.getUser().getValue();\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nGlobal App Counts\tNone\tNone"
  },
  {
    "title": "Encoding",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/common-structures/encoding/",
    "html": "Encoding\n\nData is encoded as defined by JSON in RFC4627. The default encoding for APIs is UTF-8. Certain characters, such as Emojji may be handled as surrogate unicode pairs (see section '2.5. Strings' of RFC4627).\n\nSome query parameters may need to be url encoded when sending - for example, the email parameter value used to query users should be encoded.\n\nHTML ENCODING\n\nIt should be noted that the following identifiers are encoded to protect from potential cross-site scripting attacks: 'name', 'user_id', 'company_id' and 'email'. As a result you may see these identifiers in their encoded format when you retrieve them via the API. \\nNote that the characters we encode are double quote, single quote, ampersand, less than and greater than symbols i.e \" ' & < >\n\nHTML Encoding example\nLet's say you have a company name like \\\"X&Y's\\\". \\nThen when you retrieve it from the API it will look like this:\\n\\\"X&amp;Y&#39;s\\\"\n"
  },
  {
    "title": "Company User/Segment/Tag Count Model",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/counts/company-tag-counts/",
    "html": "Company User/Segment/Tag Count Model\nCompany User/Segment/Tag Count Object\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\ncompany\tobject\tContains a field called segment containing segment counts\ncompany.segment\tarray\tContains a list of segment objects their name and their number of companies tagged\ncompany.tag\tarray\tContains a list of tag objects with their name and their number of companies tagged\ncompany.user\tarray\tContains an array of companies with their name and their number of users\ncurlcurlrubyphpjava\n# Company Tag Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=tag&per_page=5' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\n# Company Segment Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=segment' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\n# Company User Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=user' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\n# Company Tag Count\\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"count\\\",\\n    \\\"company\\\": {\\n        \\\"tag\\\": [\\n            {\\n                \\\"VIP\\\": 0\\n            },\\n            {\\n                \\\"UpMarket\\\": 0\\n            },\\n            {\\n                \\\"test\\\": 0\\n            },\\n            {\\n                \\\"new\\\": 0\\n            },\\n            {\\n                \\\"smb\\\": 0\\n            }\\n        ]\\n    },\\n    \\\"pages\\\": {\\n        \\\"pages\\\": {\\n            \\\"type\\\": \\\"pages\\\",\\n            \\\"next\\\": \\\"https://api.intercom.io/counts?type=company&count=tag&page=2&per_page=5\\\",\\n            \\\"page\\\": 1,\\n            \\\"per_page\\\": 5,\\n            \\\"total_pages\\\": 203\\n        }\\n    }\\n}\\n\\n# Company Segment Count\\nHTTP/1.1 200 OK\\n{\\n    \\\"type\\\": \\\"count\\\",\\n    \\\"company\\\": {\\n        \\\"segment\\\": [\\n            {\\n                \\\"Active\\\": 2\\n            },\\n            {\\n                \\\"New\\\": 0\\n            },\\n            {\\n                \\\"Slipping Away\\\": 0\\n            },\\n            {\\n                \\\"id=10\\\": 10\\n            }\\n        ]\\n    },\\n    \\\"pages\\\": {}\\n}\\n\\n# Company User Count\\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"count\\\",\\n  \\\"company\\\": {\\n    \\\"user\\\": [\\n      {\\n        \\\"Independents\\\": 7,\\n        \\\"remote_company_id\\\": \\\"6\\\"\\n      },\\n      {\\n        \\\"Alliance\\\": 1,\\n        \\\"remote_company_id\\\": \\\"7\\\"\\n      }\\n    ]\\n  },\\n  \\\"pages\\\": {}\\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nCompany Segment Count\tcompany\tsegment\nCompany Tag Count\tcompany\ttag\nCompany User Count\tcompany\tuser\nPAGINATION WITH COMPANY COUNTS\n\nCompany tag counts are returned via pagination, which means it defaults to 50 results per page unless you specify otherwise. e.g. \\n'https://api.intercom.io/counts?type=company&count=tag&per_page=10\\\"\\n\\nTo get the next page of results you need to make a GET request with the \"next\" RUL supplied in the initial response."
  },
  {
    "title": "Retrieve an article",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/articles/retrieve-an-article/",
    "html": "Retrieve an article\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/articles/<id> \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can fetch the details of a single article by making a GET request to https://api.intercom.io/articles/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the article which is given by Intercom.\nResponse\n\nThis will return an Article model."
  },
  {
    "title": "List all articles",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/articles/list-all-articles/",
    "html": "List all articles\nExample Request & Response (Single Language Help Center)\ncurlhttp\n$ curl https://api.intercom.io/articles \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can fetch a list of all articles by making a GET request to https://api.intercom.io/articles.\n\nResponse\nKey\tType\tDescription\ntype\tString\tThe type of object - list.\npages\tObject\tA Pages object with the information needed to paginate through Articles.\ntotal_count\tInteger\tA count of the total number of articles.\ndata\tArray\tAn array of Article Objects.\nHOW ARE THE ARTICLES SORTED AND ORDERED?\n\nArticles will be returned in descending order on the updated_at attribute. This means if you need to iterate through results then we'll show the most recently updated articles first."
  },
  {
    "title": "Delete an article",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/articles/delete-an-article/",
    "html": "Delete an article\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/articles/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can delete a single article by making a DELETE request to https://api.intercom.io/articles/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the article which is given by Intercom.\nResponse\nKey\tType\tDescription\nid\tString\tThe unique identifier for the article which you provided in the URL.\nobject\tString\tThe type of object which was deleted - article.\ndeleted\tBoolean\tWhether the article was deleted successfully or not."
  },
  {
    "title": "Error Objects",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/errors/error-objects/",
    "html": "Error Objects\nError List Object\n{\n  \"type\": \"error.list\",\n  \"errors\": [\n    {\n      \"code\": \"not_found\",\n      \"message\": \"No such user_id[314159]\",\n      \"field\": \"user_id\"\n    },\n    {\n      \"code\": \"not_found\",\n      \"message\": \"No such email[pi@example.org]\",\n      \"field\": \"email\"\n    }\n  ]\n}\n\n// the JavaScript client doesn't directly expose error data\n\n# the Ruby client doesn't directly expose error data\n\n<?php\n// the PHP client doesn't directly expose error data\n?>\n\ntry {\n  UserCollection uc = User.list();\n} catch(IntercomException  ie) {\n  Error e = ie.getFirstError();\n  log.error(\"{}:{}\", e.getCode(), e.getMessage());\n}\n\n\nThe API will return an Error List for a failed request, which will contain one or more Error objects.\n\nError List Attributes\n\nEach error has the following attributes\n\nField\tDescription\ntype\tThe type is error.list\nerrors\tAn array of one or more error objects\nError Object Attributes\n\nEach Error Object has the following attributes\n\nField\tDescription\ncode\tA string indicating the kind of error, used to further qualify the HTTP response code\nmessage\tOptional. Human readable description of the error\nfield\tOptional. Used to identify a particular field or query parameter that was in error."
  },
  {
    "title": "Object Model",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/common-structures/object-model/",
    "html": "Object Model\nCommon Fields and Metadata\n{\\n  \\\"type\\\": \\\"contacts\\\",\\n  \\\"id\\\": \\\"456456456456\\\",\\n  \\\"created_at\\\": 1392241887,\\n  \\\"custom_attributes\\\": {\\n    \\\"note\\\": \\\"some extra information\\\"\\n  }\\n}\n\nCommon Fields\n\nAPI objects have a type field indicating their object type. Each object in the API may be given an identifier, indicated via its id field, and will typically be addressable via a URI. Many objects will also have a created_at field indicating the object's creation date as a UTC Unix timestamp.\n\nDates and Timestamps\n\nAll temporal fields in the API are encoded as Unix timestamps and are by definition always treated as UTC. The most common time fields in the API are created_at and updated_at.\n\nParameter\tDescription\ncreated_at\tThe time the object was created. In most, but not all cases, this is the time the object was created according to the API server.\nupdated_at\tThe time the object was last updated according to the API server.\nOptional Fields\n\nUnpopulated optional data is returned as follows -\n\nNumber, String and Boolean types may be returned as having null values.\nArrays and Objects may be returned as empty ([] {})\n\nIn general clients should be able to handle null and empty fields.\n\nMetadata and Custom Attributes\n\nSome object types, such as Events, Users and Companies, have a metadata or custom_attributes field that allows clients to set custom-defined data about an object."
  },
  {
    "title": "Pagination & Sorting (Search)",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/common-structures/pagination-search/",
    "html": "Pagination & Sorting (Search)\n\nWhen you use any Search resource, we require you to make a POST request that will not accept the common query params of GET requests. Therefore, the structure here has slight variations to our cursor-based approach.\n\n📘\n\nThis currently only applies to Searching for Contacts and Searching for Conversations.\n\nPagination\nExample Request Body with Pagination for first page\n{\\n \\\"query\\\":  {\\n    \\\"field\\\": \\\"name\\\",\\n    \\\"operator\\\": \\\"=\\\",\\n    \\\"value\\\": \\\"alex\\\"\\n  },\\n  \\\"pagination\\\": {\\n    \\\"per_page\\\": 5,\\n  } \\n}\n\n\nYou can specify how many items per page you want to fetch.\n\nDEFAULT PAGINATION AMOUNT\n\nIf pagination is not provided, the request defaults to 50 items.\n\nExample Initial Pages Object\n{\\n  \\\"pages\\\": {\\n  \\\"type\\\": \\\"pages\\\",\\n  \\\"next\\\": {\\n    \\\"page\\\": 4,\\n    \\\"starting_after\\\": \\\"1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\\\\nIncfQLD3ouPkZlCwJ86F\\\\n\\\"\\n  },\\n  \\\"page\\\": 3,\\n  \\\"per_page\\\": 5,\\n  \\\"total_pages\\\": 10\\n  }\\n}\n\n\nIn order to iterate through pages, you must parse the query response. A query with multiple response pages will include a next key in the pages hash. When a next value is provided, the starting_after value must be sent back in a new request to iterate to the next page.\n\n🚧 Paginating through all results\n\nThis method of pagination is used to iterate through a result set until all results have been fetched, not to directly go to page X of the results. This is not possible.\n\nExample Request Body with Pagination for next page\n{\\n \\\"query\\\":  {\\n    \\\"field\\\": \\\"name\\\",\\n    \\\"operator\\\": \\\"=\\\",\\n    \\\"value\\\": \\\"alex\\\"\\n  },\\n  \\\"pagination\\\": {\\n    \\\"per_page\\\": 5,\\n    \\\"starting_after\\\": \\\"1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\\\\nIncfQLD3ouPkZlCwJ86F\\\\n\\\"\\n  } \\n}\\n\n\n\n🚧 Warning about search context state\n\nThe starting_after context is stateless. Consequently, if items are updated between 2 paginated queries, this can lead to duplicate or missed records.\n\nFor example, if a query is sorting results by number of sessions and an item is updated from 1 session to 2 sessions during the pagination, they may be listed on page 1 of the results, but also on page 2.\n\nSorting\nExample Request Body with Sort\n{\n \"query\":  {\n    \"field\": \"name\",\n    \"operator\": \"=\",\n    \"value\": \"alex\"\n  },\n  \"sort\": {\n    \"field\": \"name\",\n    \"order\": \"ascending\"\n  } \n}\n\n\nThe Search resources can also sort query results by using the following parameters within the sort object:\n\nParameter\tRequired?\tDescription\nfield\tYes\tAny searchable attribute (available on the Simple Query \"Allowed fields\").\norder\tNo\tEither \"ascending\" or \"descending\" - default to \"descending\" if none is provided.\nDEFAULT SORT ORDER\n\nIf no sort pattern is provided, the query will use the default sorting parameter \"last_request_at\" with a descending value (e.g. listing most recent active items first)."
  },
  {
    "title": "Pagination",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/common-structures/pagination/",
    "html": "Pagination\n\nThe majority of list resources in the API are paginated to allow clients to traverse data over multiple requests.\n\nTheir responses are likely to contain a pages object that hosts pagination links which a client can use to paginate through the data without having to construct a query. The link relations for the pages field are as follows.\n\nPages Object\nParameter\tDescription\nnext\tA link to the next page of results. A response that does not contain a next link does not have further data to fetch.\nprev\tA link to the previous page of results.\nfirst\tA link to the first page of results.\nlast\tA link to the last page of results.\nWHAT ABOUT FOR CONTACTS AND SEARCHES?\n\nWhen listing any Contact objects, we will instead use a cursor-based approach.\n\nOur Search resources will instead use a POST-based approach."
  },
  {
    "title": "Create a note for contact",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/notes/create-note-for-contact/",
    "html": "Create a note for contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/notes \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' -d\\n\\n{\\n  \\\"body\\\": \\\"Shiny\\\",\\n  \\\"admin_id\\\": \\\"12345\\\"\\n}\\n\n\nExample Errors\nhttphttp\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Resource Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can create a note on a single contact.\n\nRequest Path Parameter\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom.\nRequest Body Parameter\nParameter\tType\tRequired?\tDescription\nbody\tString\tYes\tThe text of the note.\nadmin_id\tString\tYes\tThe unique identifier for the admin which is given by Intercom.\nResponse\n\nThis will return a Note model for the note that was added to the contact."
  },
  {
    "title": "Pagination (Cursor)",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/common-structures/pagination-cursor/",
    "html": "Pagination (Cursor)\n\nWe're starting to adopt a cursor-based approach to pagination for certain list resources.\n\nThis currently only applies when listing Contacts.\n\nExample Initial Request\ncURL (Initial Request)\n$ curl https://api.intercom.io/contacts?per_page=5 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nInitial Request\n\nYou can initially specify how many items per_page you want to fetch.\n\nParameter\tType\tDescription\nper_page\tInteger\tThe number of items returned in a single response.\nDefault is 50.\nMax is 150.\nExample Initial Pages Object\nJSON\n{\\n  \\\"pages\\\": {\\n    \\\"type\\\": \\\"pages\\\",\\n    \\\"next\\\": {\\n      \\\"page\\\": 4,\\n      \\\"starting_after\\\": \\\"1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\\\\nIncfQLD3ouPkZlCwJ86F\\\\n\\\"\\n    },\\n    \\\"page\\\": 3,\\n    \\\"per_page\\\": 5,\\n    \\\"total_pages\\\": 10\\n   }\\n}\n\nResponse\n\nIn order to iterate through pages, you must parse the query response. A query with multiple response pages will include a next key in the pages object. When a next value is provided, the starting_after value must be sent back in a new request in order to iterate to the next page.\n\nParameter\tType\tDescription\nstarting_after\tString\tThe cursor used for pagination in order to fetch the next page of results.\n\n🚧 Paginating through all results\n\nThis method of pagination is used to iterate through a result set until all results have been fetched, not to directly go to page X of the results. This is not possible.\n\nExample Subsequent Requests\ncURL (Subsequent Requests)\n$ curl https://api.intercom.io/contacts?starting_after=\\\"1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\\\\nIncfQLD3ouPkZlCwJ86F\\\\n\\\" \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\n"
  },
  {
    "title": "Untag companies",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/tags/untag-companies/",
    "html": "Untag companies\nExample Request & Response\n$ curl https://api.intercom.io/tags \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d'\n{\n  \"name\": \"Independent\",\n  \"companies\": [\n    {\n      \"id\" : \"53427b7ecce5722303000003\",\n      \"untag\": true\n    }\n  ]\n}\n\nHTTP/1.1 200 Ok\n\n{\n  \"type\": \"tag\",\n  \"name\": \"Follow Up\",\n  \"id\": \"17513\"\n}\n\n\nYou can untag a single or a list of companies.\n\nRequest Body Parameters\nParameters\tType\tRequired\tDescription\nname\tString\tYes\tThe name of the tag which will be untagged from the.\ncompanies\tObject\tYes\tAn array of objects with the unique id or company_id of the company to be untagged, and the untag boolean set to true.\nResponse\n\nThis will return a Tag model for the tag that was unapplied to the given company."
  },
  {
    "title": "Identifiers and URLs",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/common-structures/identifiers-and-urls/",
    "html": "Identifiers and URLs\n\nAll objects in the API have an id field indicating their logical identifier.\n\nParameter\tDescription\nid\tA string that identifies the object within the API. The id field will not be larger than 128 characters (in SQL it corresponds to a varchar(128)).\n\nThese fields must always be treated as opaque strings - no guarantees are made about the internal structure of the id fields for an object.\n\nThe id field is always defined by the API server and is guaranteed to be unique relative to the type field - this means no two user objects will have the same id field, but a user and a company may have the same value for their id fields. . Some object types (such as Contact), also support client defined identifiers.\n\nThe company and user objects deserve special mention when it comes to identity for two reasons -\n\nThey allow you send your own external identifiers\nThe contact id field is in some cases, aliased to intercom_user_id. This is done to distinguish it from other identifiers in the API and to avoid confusion as to which object type an id denotes."
  },
  {
    "title": "Create a message",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/messages/admin-initiated-conversation/",
    "html": "Create a message\nExample Request & Response\n$ curl https://api.intercom.io/messages \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d\n\n{\n  \"message_type\": \"email\",\n  \"subject\": \"Hey\",\n  \"body\": \"Ponies, cute small horses or something more sinister?\",\n  \"template\": \"plain\",\n  \"from\": {\n    \"type\": \"admin\",\n    \"id\": \"394051\"\n  },\n  \"to\": {\n    \"type\": \"user\",\n    \"id\": \"536e564f316c83104c000020\"\n  }\n}\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"admin_message\",\n  \"id\": \"2001\",\n  \"created_at\": 1401916877,\n  \"message_type\": \"email\",\n  \"subject\" : \"Hey\",\n  \"body\" : \"Ponies, cute small horses or something more sinister?\",\n  \"template\": \"plain\",\n  \"owner\": {\n    \"email\": \"wash@serenity.io\",\n    \"id\": \"394051\",\n    \"name\": \"Wash\",\n    \"type\": \"admin\"\n  }\n}\n\nintercom.messages.create(\n  :message_type => 'email',\n  :subject  => 'This Land',\n  :body     => \"Har har har! Mine is an evil laugh!\",\n  :template => \"plain\", # or \"personal\",\n  :from => {\n    :type => \"admin\",\n    :id   => \"394051\"\n  },\n  :to => {\n    :type => \"user\",\n    :id => \"536e564f316c83104c000020\"\n  }\n)\n\n<?php\n$intercom->messages->create([\n    \"message_type\" => \"email\",\n    \"subject\" => \"Plato Quote\",\n    \"body\" => \"And what, Socrates, is the food of the soul?\",\n    \"from\" => [\n        \"type\" => \"admin\",\n        \"id\" => \"814860\"\n    ],\n    \"to\" => [\n        \"type\" => \"user\",\n        \"email\" => \"socrates@email.com\"\n    ]\n]);\n?>\n\nUser user = new User()\n  .setId(\"5310d8e8598c9a0b24000005\");\nAdmin admin = new Admin()\n  .setId(\"394051\");\nAdminMessage adminMessage = new AdminMessage()\n  .setAdmin(admin)\n  .setUser(user)\n  .setSubject(\"This Land\")\n  .setBody(\"Har har har! Mine is an evil laugh!\")\n  .setMessageType(\"email\")\n  .setTemplate(\"plain\"); // or personal\nConversation.create(adminMessage);\n\n\nYou can create a message that has been initiated by an admin. The conversation can be either an in-app message or an email.\n\nDELAY AFTER CONTACT CREATION\n\nThere can be a short delay between when a contact is created and when a contact becomes available to be messaged through the API. A 404 Not Found error will be returned in this case.\n\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tThe kind of message being created. Values: inapp or email\nsubject\tString\tYes, if message_type: email.\tThe title of the email.\nbody\tString\tYes\tThe content of the message. HTML and plaintext are supported.\ntemplate\tString\tYes, if message_type: email.\tThe style of the outgoing message. Possible values plain or personal.\nfrom\tObject\tYes\tSee From Object below for more.\nto\tObject\tYes\tSee To Object below for more.\nFrom Object\nAttribute\tType\tRequired?\tDescription\ntype\tString\tYes\tAlways admin.\nid\tString\tYes\tThe identifier for the admin which is given by Intercom.\nTo Object\nAttribute\tType\tRequired?\tDescription\ntype\tString\tYes\tThe role associated to the contact - user or lead.\nid\tString\tYes\tThe identifier for the contact which is given by Intercom.\nResponse\n\nThis will return the Message that has been created.\n\nRETRIEVING ASSOCIATED CONVERSATIONS\n\nAs this is a message, there will be no conversation present until the contact responds. Once they do, you will have to search for a contact's conversations with the id of the message."
  },
  {
    "title": "List all messages",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/messages/list-all-messages/",
    "html": "List all messages\n\nTo list all messages, you will need to use our Export API and download the data in CSV format. This API is only available in our Unstable API version."
  },
  {
    "title": "Detach a contact from a tag",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/tags/untag-contact/",
    "html": "Detach a contact from a tag\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<contact_id>/tags/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\n\nExample Errors\nhttphtml\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can untag a single contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\ncontact_id\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nid\tString\tYes\tThe unique identifier for the tag which is given by Intercom\nResponse\n\nThis will return a Tag model for the tag that was removed from the contact."
  },
  {
    "title": "Encoding",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/common-structures/encoding/",
    "html": "Encoding\n\nData is encoded as defined by JSON in RFC4627. The default encoding for APIs is UTF-8. Certain characters, such as Emojji may be handled as surrogate unicode pairs (see section '2.5. Strings' of RFC4627).\n\nSome query parameters may need to be url encoded when sending - for example, the email parameter value used to query users should be encoded.\n\nHTML ENCODING\n\nIt should be noted that the following identifiers are encoded to protect from potential cross-site scripting attacks: 'name', 'user_id', 'company_id' and 'email'. As a result you may see these identifiers in their encoded format when you retrieve them via the API. \\nNote that the characters we encode are double quote, single quote, ampersand, less than and greater than symbols i.e \" ' & < >\n\nHTML Encoding example\n\\\"X&Ys\\\" == \\\"X&amp;Y&#39;s\\\"\n"
  },
  {
    "title": "User Segment/Tag Count Model",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/counts/user-tag-counts/",
    "html": "User Segment/Tag Count Model\n\nThe count of tags and segments includes archived tags and segments.\n\nUser Segment/Tag Count Object\n\nCount Object includes count for users and leads.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nuser\tobject\tContains a field called segment containing segment counts\nuser.segment\tarray\tContains a list of segment counts\nuser.tag\tarray\tContains a list of tag counts\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"tag\": [\n        {\n          \"Independent\": 3\n        }\n    ]\n  }\n}\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"segment\": [\n      {\n        \"Active\": 1\n      },\n      {\n        \"New\": 0\n      },\n      {\n        \"VIP\": 0\n      },\n      {\n        \"Slipping Away\": 0\n      },\n      {\n        \"segment 1\": 1\n      }\n    ]\n  }\n}\n\n# User Tag Count\n$ curl 'https://api.intercom.io/counts?type=user&count=tag' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# User Segment Count\n$ curl 'https://api.intercom.io/counts?type=user&count=segment' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# User Tag Count\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"tag\": [\n        {\n          \"Independent\": 3\n        }\n    ]\n  }\n}\n\n# User Segment Count\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"segment\": [\n      {\n        \"Active\": 1\n      },\n      {\n        \"New\": 0\n      },\n      {\n        \"VIP\": 0\n      },\n      {\n        \"Slipping Away\": 0\n      },\n      {\n        \"segment 1\": 1\n      }\n    ]\n  }\n}\n\nintercom.counts.for_type(type: 'user', count: 'tag')\nintercom.counts.for_type(type: 'user', count: 'segment')\n\n<?php\n// User Tag Count\n$counts = $intercom->counts->getCounts([\"type\" => \"user\", \"count\" => \"tag\"]);\nprint_r($counts);\n\n// Company Segment Count\n$counts = $intercom->counts->getCounts([\"type\" => \"user\", \"count\" => \"segment\"]);\n?>\n\n// User Tag Count\nfinal List<Counts.CountItem> tags = Counts.userTags();\nfor (Counts.CountItem tag : tags) {\n  out.println(tag.getName() + \": \" + tag.getValue());\n}\n\n// User Segment Count\nfinal List<Counts.CountItem> segments = Counts.userSegments();\nfor (Counts.CountItem seg : segments) {\n  out.println(seg.getName() + \": \" + seg.getValue());\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nUser Segment Count\tuser\tsegment\nUser Tag Count\tuser\ttag"
  },
  {
    "title": "Compatibility",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/common-structures/compatibility/",
    "html": "Compatibility\nUnknown Field\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"external_id\\\" : \\\"456456\\\",\\n  \\\"email\\\" : \\\"j@example.org\\\",\\n  \\\"such_key\\\": \\\"so_value\\\"\\n}\n\nMust Ignore Interpretation\n{\\n  \\\"type\\\": \\\"contact\\\",\\n  \\\"external_id\\\" : \\\"456456\\\",\\n  \\\"email\\\" : \\\"j@example.org\\\"\\n}\n\n\nJSON objects in the API follow a must ignore processing model, where clients are expected to ignore data fields they don't understand.\n\nFor example if the client saw the JSON as shown in the example on the right ('Unknown Field') and did not understand the such_key field, it must pretend the field wasn't there and will process the object as if it looked liked the object shown in 'Must Ignore'.\n\nWhen fetching content, fields that are optional for API objects are indicated in the documentation - clients must not assume they will always be present. When submitting content, fields that are required to be sent by client are also indicated in the documentation - if these are not sent the API may reject the request.\n\nIn general the API may reject JSON where data is not valid or incomplete with a 422 Unprocessable Entity response and an error message explaining the issue. For example, an email message type may be rejected if it is not sent with a subject field."
  },
  {
    "title": "Update a data attribute",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/data-attributes/update-data-attributes/",
    "html": "Update a data attribute\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/data_attributes/163728 \\\\-X PUT \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept: application/json' \\\\-H 'Content-Type: application/json' -d{  \\\"description\\\": \\\"You are either great or bad\\\",  \\\"options\\\": [    {\\\"value\\\": \\\"great\\\"},    {\\\"value\\\": \\\"bad\\\"}  ]}\n\nExample Errors\nHTTP/1.1 404 NOT FOUND{  \"type\": \"error.list\",  \"request_id\": \"0006klvnje6ffng7ot80\",  \"errors\": [    {      \"code\": \"field_not_found\",      \"message\": \"We couldn't find that data attribute to update\"    }  ]}\n\nHTTP/1.1 422 UNPROCESSIBLE ENTITY{  \"type\": \"error.list\",  \"request_id\": \"0006klvnje6ffng7ot80\",  \"errors\": [    {      \"code\": \"data_invalid\",      \"message\": \"The Data Attribute you are trying to archive has a dependant object\"    }  ]}\n\nHTTP/1.1 400 BAD REQUEST{  \"type\": \"error.list\",  \"request_id\": \"0000rnvpf3m1f3nf4k40\",  \"errors\": [    {      \"code\": \"parameter_invalid\",      \"message\": \"You must have at least two options on a list type data attribute\"    }  ]}\n\n\nYou can update data attribute.\n\nRequest Body Parameters\nArgument\tType\tDescription\ndescription\tString\t(Optional) The readable description you see in the UI for the attribute.\noptions\tList\t(Optional) To change to or update list attributes. Provide a set of hashes with value as the key of the options you want to make.data_type must be string.\narchived\tBoolean\t(Optional) Whether the attribute is to be archived or not.\nUPDATING THE DATA TYPE IS NOT POSSIBLE\n\nIt is currently a dangerous action to execute changing a data attribute's type via the API. You will need to update the type via the UI instead.\n\nResponse\n\nThis will return a Data Attribute Model showing the details of your updated attribute."
  },
  {
    "title": "Attach a contact",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/tags/tag-contact/",
    "html": "Attach a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/tags \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' -d\\n\\n{\\n\\t\\\"id\\\": \\\"2084335\\\"\\n}\n\nExample Errors\nhttphtml\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can tag a single contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nRequest Body Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the tag which is given by Intercom\nResponse\n\nThis will return a Tag model for the tag that was added to the contact."
  },
  {
    "title": "Delete a tag",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/tags/delete-a-tag/",
    "html": "Delete a tag\nExample Delete Tag Request\n$ curl https://api.intercom.io/tags/17513 \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n# Not exposed in Ruby client\n\n<?php\n// Not exposed in PHP client\n?>\n\nTag.delete(tag);\n\n\nYou can delete a single tag.\n\nRequest Path Parameters\nParemeter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier of the tag.\nResponse\n\nThis will return a Tag Model of the tag you just deleted."
  },
  {
    "title": "Tag companies",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/tags/tag-companies/",
    "html": "Tag companies\nExample Request & Response\n$ curl https://api.intercom.io/tags \\\n-XPOST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d'\n{\n  \"name\": \"Independent\",\n  \"companies\": [\n    {\n      \"id\" : \"53427b7ecce5722303000003\"\n    }\n  ]\n}\n\nHTTP/1.1 200 Ok\n\n{\n  \"type\": \"tag\",\n  \"name\": \"Independent\",\n  \"id\": \"17513\"\n}\n\nintercom.tags.tag(name: 'Independent', users: [{ id: \"42ea2f1b93891f6a99000427\" }, { email: \"foo@bar.com\" }])\n\n<?php\n# Note that you can use either id, user_id or email to tag a user.\n# You only need to use one per user, e.g. the below will tag\n# three users if each identifier is for a different, unique user\n$intercom->tags->tag([\n    \"name\" => \"VIPs\",\n    \"users\" => [\n        [\"id\" => \"5977e20941abfc5aae4552d1\"],\n        [\"user_id\" => \"12345\"],\n        [\"email\" => \"camus@phil.com\"]\n    ]\n]);\n?>\n\nUser one = new User().setEmail(\"river@serenity.io\");\nUser two = new User().setEmail(\"simon@serenity.io\")\nList<User> users = Lists.newArrayList(one, two);\nTag.tag(tag, new UserCollection(users));\n\n\nYou can tag a single or a list of companies.\n\nRequest Body Parameters\nParameters\tType\tRequired\tDescription\nname\tString\tYes\tThe name of the tag, which will be created if not found.\ncompanies\tObject\tYes\tAn array of objects with the unique id or company_id of the company to be tagged.\nResponse\n\nThis will return a Tag Model for the tag that was applied to the given company."
  },
  {
    "title": "Detach a conversation",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/tags/detach-a-tag-from-a-conversation/",
    "html": "Detach a conversation\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/conversations/<id>/tags/<tag_id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' -d\\n{\\n   \\\"admin_id\\\": \\\"814860\\\"\\n}\\n\n\nExample Errors\nHTTP/1.1 404 NOT FOUND\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"9a3d0816-9707-4598-977e-c009ba630148\",\n  \"errors\": [\n    {\n      \"code\": \"not_found\",\n      \"message\": \"Contact Not Found\"\n    }\n  ]\n}\n\nHTTP/1.1 404 NOT FOUND\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"5f6b2623-f844-4914-8b8d-ac01acc62a76\",\n  \"errors\": [\n    {\n      \"code\": \"not_found\",\n      \"message\": \"Resource Not Found\"\n    }\n  ]\n}\n\nHTTP/1.1 404 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"5f6b2623-f844-4914-8b8d-ac01acc62a76\",\n  \"errors\": [\n    {\n      \"code\": \"parameter_not_found\",\n      \"message\": \"admin_id is a required parameter\"\n    }\n  ]\n}\n\n\nYou can untag a single conversation.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the conversation which is given by Intercom\ntag_id\tString\tYes\tThe unique identifier for the tag which is given by Intercom.\nRequest Body Parameter\nParameter\tType\tRequired\tDescription\nadmin_id\tString\tYes\tThe unique identifier for the admin (which is given by intercom) performing the untag action.\nResponse\n\nThis will return a Tag model for the tag that was removed from the conversation."
  },
  {
    "title": "Create or update a tag",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/tags/create-and-update-tags/",
    "html": "Create or update a tag\nExample Request & Response\n$ curl https://api.intercom.io/tags \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d'\n{\n  \"name\": \"Independent\"\n}'\n\nHTTP/1.1 200 Ok\n\n{\n  \"type\": \"tag\",\n  \"name\": \"Independent\",\n  \"id\": \"17513\"\n}\n\nintercom.tags.tag(name: 'Independent', users: [{ id: \"42ea2f1b93891f6a99000427\" }])\n\n<?php\n$intercom->tags->tag([\"name\" => \"php-tag\"]);\n?>\n\nTag t = new Tag().setName(\"Independent\");\nt = Tag.create(t);\n\n\nYou can create or update a tag.\n\nRequest Body Parameters\nAttribute\tRequired\tDescription\nname\tYes\tThe name of the tag, which will be created if not found, or the new name for the tag if this is an update request. Names are case insensitive.\nid\tOnly for update\tThe id of tag to updates.\nResponse\n\nThis will return a Tag Model of the tag you just created or updated."
  },
  {
    "title": "The data attribute model",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/data-attributes/data-attribute-model/",
    "html": "The data attribute model\nExample Data Attribute Object\n{  \\\"type\\\": \\\"data_attribute\\\",  \\\"model\\\": \\\"contact\\\",  \\\"name\\\": \\\"paid_subscriber\\\",  \\\"full_name\\\": \\\"custom_attributes.paid_subscriber\\\",   \\\"label\\\": \\\"paid_subscriber\\\",   \\\"description\\\": \\\"\\\",  \\\"data_type\\\": \\\"string\\\",   \\\"options\\\": [    \\\"pick_value_1\\\",    \\\"pick_value_2\\\"  ],  \\\"api_writable\\\": true,   \\\"ui_writable\\\": true,   \\\"custom\\\": true,   \\\"archived\\\": false,   \\\"admin_id\\\": \\\"1\\\",  \\\"created_at\\\": 1392734388,  \\\"updated_at\\\": 1392734388}\n\n\nData Attributes are a type of metadata used to describe your contact and company models. These include standard and custom attributes. By using the data attributes endpoint, you can get the global list of attributes for your workspace, as well as create and archive custom attributes.\n\nData Attribute Object\nKey\tType\tDescription\ntype\tstring\tValue is data_attribute\nmodel\tstring\tValue is contact for user/lead attributes, and company for company attributes.\nname\tstring\tName of the attributeExamples:email``region_name for region_name stored in location_data objectimage_url for image_url stored in avatar objectpaid_subscriber for CDA named paid_subscriber\nfull_name\tstring\tFull name of the attribute. Should match the name unless it's a nested attribute.Examples:email``location_data.region_name``avatar.image_url``custom_attributes.paid_subscriberWe can split full_name on . to access nested user object values.\nlabel\tstring\tReadable name of the attribute (i.e. name you see in the UI)\ndescription\tstring\tReadable description of the attribute\ndata_type\tstring\tType of data stored in the attribute.Possible values: string``integer``float``boolean``date\noptions\tlist\tList of predefined options for attribute value\napi_writable\tboolean\tCan this attribute be updated through API\nui_writable\tboolean\tCan this attribute be updated in the UI\ncustom\tboolean\tSet to true if this is a CDA\narchived\tboolean\tOnly applicable to CDAs\ncreated_at\ttimestamp\tThe time the CDA was created.Only applicable to CDAs.\nupdated_at\ttimestamp\tThe last time the CDA was updated.Only applicable to CDAs\nadmin_id\tstring\tTeammate who created the attribute.Only applicable to CDAs"
  },
  {
    "title": "Attach a conversation",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/tags/attach-a-tag-to-a-conversation/",
    "html": "Attach a conversation\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/conversations/<id>/tags \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' -d\\n\\n{\\n  \\\"id\\\": \\\"2084335\\\",\\n  \\\"admin_id\\\": \\\"123\\\"\\n}\\n\n\nExample Errors\nhttphtml\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Conversation Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can tag a single conversation.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the conversation which is given by Intercom\nRequest Body Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the tag which is given by Intercom\nadmin_id\tString\tYes\tThe unique identifier for the admin who is applying the tag.\nResponse\n\nThis will return a Tag model for the tag that was added to the contact."
  },
  {
    "title": "Webhooks",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/webhooks/webhooks/",
    "html": "Webhooks\nOverview\n\nWebhooks allow you to subscribe to real-time notifications of events happening in Intercom, a Contact created, an incoming Conversation received, or an Admin Away Mode updated.\n\nIf you're unfamiliar with Webhooks, head to pipedream's RequestBin blog to learn more.\n\nThe main concepts of Intercom Webhooks are subscriptions, topics and notifications.\n\nSubscriptions\n\nA Webhook Subscription is created within an App and is where you define the Topics you want to receive event Notifications on. A subscription can contain one or more topics. You will need to provide a URL where Intercom will send all notifications for your subscription.\n\nTopics\n\nA topic contains the events you will receive notifications on; for example, Conversation created or Contact deleted.\n\nA subscription will contain one or more topics. Topics are types of notifications that you want to be informed about.\n\nNotifications\n\nA notification is the event object delivered when an event is triggered, and notifications have data payloads that contain references to the Intercom objects associated with the event. Notifications for all topics will be sent to the URL you provided for your subscription.\n\nWebhooks FAQs\nDo Webhooks belong to my Workspace or my App?\n\nWebhooks are associated with an App, and you configure your Webhooks per App just like you configure your Access Tokens. When you configure a Webhook, you tell Intercom where you want Notifications sent for one or more Topics.\n\nIf I am developing Apps for other people, what do I need to do?\n\nYou will need to select the correct permissions on the Authorization page of your App and then subscribe to the relevant topics on the Webhooks page.\n\nCan I set up Subscriptions for Webhook Topics via the API?\n\nNo, you can only subscribe to Webhooks via Apps in your Developer Hub.\n\nI previously configured webhooks via the API. Can I still do that?\n\nIf you previously set up Workspace Webhooks via the API, these will continue to work, and Intercom will not delete or reconfigure them.\n\nWhat IP addresses does Intercom send Webhook Notifications from?\n\nThe IP addresses Intercom sends Webhook Notifications from are:\n\n34.231.68.152 34.197.76.213 35.171.78.91 35.169.138.21 52.70.27.159 52.44.63.161"
  },
  {
    "title": "Webhooks",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/webhooks/webhooks/",
    "html": "Webhooks\nOverview\n\nWebhooks allow you to subscribe to real-time notifications of events happening in Intercom, a Contact created, an incoming Conversation received, or an Admin Away Mode updated.\n\nIf you're unfamiliar with Webhooks, head to pipedream's RequestBin blog to learn more.\n\nThe main concepts of Intercom Webhooks are subscriptions, topics and notifications.\n\nSubscriptions\n\nA Webhook Subscription is created within an App and is where you define the Topics you want to receive event Notifications on. A subscription can contain one or more topics. You will need to provide a URL where Intercom will send all notifications for your subscription.\n\nTopics\n\nA topic contains the events you will receive notifications on; for example, Conversation created or Contact deleted.\n\nA subscription will contain one or more topics. Topics are types of notifications that you want to be informed about.\n\nNotifications\n\nA notification is the event object delivered when an event is triggered, and notifications have data payloads that contain references to the Intercom objects associated with the event. Notifications for all topics will be sent to the URL you provided for your subscription.\n\nWebhooks FAQs\nDo Webhooks belong to my Workspace or my App?\n\nWebhooks are associated with an App, and you configure your Webhooks per App just like you configure your Access Tokens. When you configure a Webhook, you tell Intercom where you want Notifications sent for one or more Topics.\n\nIf I am developing Apps for other people, what do I need to do?\n\nYou will need to select the correct permissions on the Authorization page of your App and then subscribe to the relevant topics on the Webhooks page.\n\nCan I set up Subscriptions for Webhook Topics via the API?\n\nNo, you can only subscribe to Webhooks via Apps in your Developer Hub.\n\nI previously configured webhooks via the API. Can I still do that?\n\nIf you previously set up Workspace Webhooks via the API, these will continue to work, and Intercom will not delete or reconfigure them.\n\nWhat IP addresses does Intercom send Webhook Notifications from?\n\nThe IP addresses Intercom sends Webhook Notifications from are:\n\nUSA 34.231.68.152 34.197.76.213 35.171.78.91 35.169.138.21 52.70.27.159 52.44.63.161\n\nEurope 54.217.125.63 54.246.173.113 54.216.9.3\n\nAustralia 52.63.36.185 3.104.68.152 52.64.2.165"
  },
  {
    "title": "Webhook notifications",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/webhooks/webhook-notifications/",
    "html": "Webhook notifications\n\nA Webhook notification is the object delivered when an event is triggered, and notifications have data payloads that contain references to the Intercom objects associated with the event. There may be instances when we pause, suspend or delay notifications.\n\nWhy are my Webhook topic notifications missing?\nPaused subscription notifications\n\nIf your endpoint URL responds with more than 1000 consecutive HTTP error codes in a 15-minute window, we pause your Webhook topic notifications for 15 minutes after which we start sending as normal again.\n\nSuspended subscriptions\n\nIf your endpoint URL responds with HTTP error codes for more than seven days, we suspend your Webhook subscription, and you will stop receiving any further notifications.\n\nIf we suspend your subscription, we display an error banner on the Webhooks page under the Configure menu of the relevant App in your Developer Hub.\n\nAfter resolving any issues with your server, you can resume suspended subscriptions by pressing Set live from the top right of the page.\n\nWe only suspend Webhook subscriptions for Private apps. Webhook subscriptions used in Public apps are never suspended.\n\nWhy are my Webhook topic notifications delayed?\nRate limiting\n\nWe will prioritise the first 150,000 events per minute of your Webhook topic notifications and then rate limit all further notifications with a lower priority.\n\nSlow topic notifications\n\nWe prioritise Webhook topic notifications for endpoint URLs that successfully respond within 500ms. If response times exceed 500ms, we deliver topic notifications with a lower priority.\n\nThrottling\n\nIf we receive an HTTP 429 (Too Many Requests) response from your endpoint URL, we throttle further notifications with a delay that starts at 1 minute and extends to 2 hours. We drop any throttled notifications if we do not receive a successful response within 2 hours.\n\nWhy are my Webhook topic notifications out of order?\n\nEach notification object has a timestamp created_at field. We do not offer any guarantee on the order of Webhook topic notifications.\n\nWhat happens to my Webhook topic notifications when Intercom is down?\n\nIf Intercom's System Status interrupts notification delivery, we will store them and resume sending once we restore the service. We will always prioritise the most recent notifications and process older delayed notifications with a lower priority.\n\nWhat volume of notifications should I expect?\n\nEvents in Intercom with the potential for generating a high volume of Webhook topic notifications are related to the Content Stat object and Contact object.\n\nFor example, the volume of Content Stat Webhook topic notifications is typically five times the size of the audience receiving the Outbound Message content; Chats, Emails, Mobile Push etc.\n\nConfigure your endpoint URL server to handle spikes in velocity and volume to minimise paused and suspended Webhook subscriptions or rate-limited and throttled Webhook topic notifications.\n\nWhy am I receiving duplicate notifications?\n\nIf we do not receive an HTTP 200 (OK) response within 5 seconds of sending a notification, we will resend the notification one more time.\n\nTo avoid this, we recommend responding with HTTP 200 (OK) immediately upon receipt and before you trigger any long-running tasks."
  },
  {
    "title": "Webhooks",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/webhooks/webhooks/",
    "html": "Webhooks\nOverview\n\nWebhooks are a powerful resource that you can use to automate your use cases and improve your productivity. You can find more about them through this link if you're unfamiliar.\n\nUnlike the API resources, which represent static data that you can create, update and retrieve as needed, webhooks represent dynamic resources. You can configure them to automatically notify you when a customer has taken a particular action, such as making a purchase or replying to a conversation.\n\nThe main concepts for webhooks are subscriptions, topics, and notifications.\n\nSubscriptions\n\nA subscription is where you select a topic you wanted to be notified about. Intercom will setup subscriptions for selected topics when that app is installed on a workspace.\n\nTopics\n\nA subscription will contain one or more topics. Topics are types of notifications that you want to be informed about.\n\nNotifications\n\nThe object delivered to a webhook is a notification. Notifications have payloads, which contain the API's existing JSON objects, such as user or conversations. You will need to provide a URL where Intercom will send these request.\n\nWebhooks FAQs\nDo webhooks belong to my workspace or my app?\n\nWebhooks are associated with an app. You configure your webhooks per app just like you configure your access tokens. When you configure a webhook you tell Intercom where you want notifications to be sent to for one or more webhook topics.\n\nWhere do I enable webhook notifications?\n\nYou don't enable webhooks, Intercom will enable them for you when you install an app on a workspace.\n\nIf I am developing apps for other people what do I need to do?\n\nYou will need to select the permissions on the Authorization page of your app and then subscribe to the relevant topics on the Webhooks page.\n\nCan I subscribe for webhook topics via the API?\n\nNo, you can only subscribe to webhooks now via your Developer Hub. This is to make it easier for people to setup webhooks. Previously people had to keep track of all their webhooks and know when to subscribe and unsubscribe from them as needed. Intercom does this for you now so it should be easier to configure.\n\nI previously configured webhooks via the API. Can I still do that?\n\nYes, anyone that has previously used webhooks can continue to work in the same way. Intercom will not delete your webhooks or reconfigure them in anyway. We hope that you will start using the new approach from now on since it is much easier to manage.\n\nIf I need to trust specific IP addresses to accept inbound webhook requests from Intercom, which are they?\n\nThese are as follows: 34.231.68.152, 34.197.76.213, 35.171.78.91, 35.169.138.21, 52.70.27.159, 52.44.63.161."
  },
  {
    "title": "Snooze a conversation",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/conversations/snooze-a-conversation/",
    "html": "Snooze a conversation\nExample Request & Response\ncurljson\n$ curl 'https://api.intercom.io/conversations/<id>/reply' \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d\\n\\n{\\n  \\\"message_type\\\":\\\"snoozed\\\",\\n  \\\"admin_id\\\": \\\"724860\\\",\\n  \\\"snoozed_until\\\":\\\"1501512795\\\"\\n}\n\n\nYou can snooze a conversation to reopen on a future date.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Body Parameters\n\nTo snooze a conversation:\n\nParameter\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tAlways snoozed.\nadmin_id\tString\tYes\tThe id of the admin which is performing the action.\nsnooze_until\tUNIX Timestamp\tYes\tThe time you want the conversation to reopen.\nResponse\n\nThis will return the Conversation which was snoozed."
  },
  {
    "title": "Compatibility",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/common-structures/compatibility/",
    "html": "Compatibility\nUnknown Field\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"external_id\\\" : \\\"456456\\\",\\n  \\\"email\\\" : \\\"j@example.org\\\",\\n  \\\"such_key\\\": \\\"so_value\\\"\\n}\n\nMust Ignore Interpretation\n{\\n  \\\"type\\\": \\\"contact\\\",\\n  \\\"external_id\\\" : \\\"456456\\\",\\n  \\\"email\\\" : \\\"j@example.org\\\"\\n}\n\n\nJSON objects in the API follow a must ignore processing model, where clients are expected to ignore data fields they don't understand.\n\nFor example if the client saw the JSON as shown in the example on the right ('Unknown Field') and did not understand the such_key field, it must pretend the field wasn't there and will process the object as if it looked liked the object shown in 'Must Ignore'.\n\nWhen fetching content, fields that are optional for API objects are indicated in the documentation - clients must not assume they will always be present. When submitting content, fields that are required to be sent by client are also indicated in the documentation - if these are not sent the API may reject the request.\n\nIn general the API may reject JSON where data is not valid or incomplete with a 422 Unprocessable Entity response and an error message explaining the issue. For example, an email message type may be rejected if it is not sent with a subject field."
  },
  {
    "title": "Leads",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/leads/leads/",
    "html": "Leads\n\nContacts (for Leads only) is no longer available as a resource. In order to see information and take action on leads, you should be using the Contacts API."
  },
  {
    "title": "Input Values",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/requestobjects/input-values/",
    "html": "Input Values\nDescription\n\nThe input_values object is a JSON hash containing key-value pairs. These key-value pairs represent the data that's been inputted by customers and teammates with a given component.\n\nThe key will be the component_id and the value will be the data that was inputted by this component.\n\nExample Object\ninput_values: { \"<component_id>\": \"<Value entered in component>\" }, //Can be more than one pair\n"
  },
  {
    "title": "Create a collection",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/help-center/create-a-collection/",
    "html": "Create a collection\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/collections \\\\-X POST \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json'-H 'Content-Type: application/json' -d{  \\\"name\\\": \\\"Collection 1\\\",  \\\"description\\\": \\\"English description\\\",  \\\"translated_content\\\": {    \\\"es\\\": {      \\\"name\\\": \\\"Colección 1\\\",      \\\"description\\\": \\\"Spanish description\\\"    }  }}\n\n\nYou can create a new collection by making a POST request to https://api.intercom.io/help_center/collections.\n\nRequest Body Parameters\nKey\tType\tRequired?\tDescription\nname\tString\tYes\tThe name of the collection. For multilingual collections, this will be the name of the default language's content.\ndescription\tString\tNo\tThe description of the collection. For multilingual collections, this will be the description of the default language's content.\ntranslated_content\tString\tNo\tA Group Translated Content Object whereby you can specify multiple multilingual collections to be created.\nResponse\n\nThis will return a Collection Model of the collection you just created."
  },
  {
    "title": "Detach a contact from a group conversation",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/conversations/deleting-from-group-conversations/",
    "html": "Detach a contact from a group conversation\nExample Request & Response\ncurlhttp\n$ curl 'https://api.intercom.io/conversations/<conversation_id>/customers/<contact_id>' \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d\\n\\n{\\n  \\\"admin_id\\\": \\\"781345\\\"\\n}\n\n\nRemoves a Contact from a group conversation.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nconversation_id\tString\tYes\tThe identifier for the conversation as given by Intercom.\ncontact_id\tString\tYes\tThe identifier for the contact as given by Intercom.\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\nadmin_id\tString\tYes\tThe id of the admin who is performing the action.\nResponse\n\nThis will return the Contact who was detached from the conversation."
  },
  {
    "title": "Snooze a conversation",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/conversations/snooze-a-conversation/",
    "html": "Snooze a conversation\nExample Request & Response\ncurljson\n$ curl 'https://api.intercom.io/conversations/<id>/reply' \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d\\n\\n{\\n  \\\"message_type\\\":\\\"snoozed\\\",\\n  \\\"admin_id\\\": \\\"724860\\\",\\n  \\\"snoozed_until\\\":\\\"1501512795\\\"\\n}\n\n\nYou can snooze a conversation to reopen on a future date.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Body Parameters\n\nTo snooze a conversation:\n\nParameter\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tAlways snoozed.\nadmin_id\tString\tYes\tThe id of the admin which is performing the action.\nsnoozed_until\tUNIX Timestamp\tYes\tThe time you want the conversation to reopen.\nResponse\n\nThis will return the Conversation which was snoozed."
  },
  {
    "title": "List all companies",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/companies/list-companies/",
    "html": "List all companies\nList companies\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/companies \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"company.list\\\",\\n  \\\"total_count\\\": 105,\\n  \\\"companies\\\": [\\n    {\\n      \\\"type\\\": \\\"company\\\",\\n      \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n       ...\\n     },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/companies?per_page=50&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 3\\n  }\\n}\\n\\n# NB: Full company objects are returned\n\n\nYou can list companies. The company list is sorted by the last_request_at field and by default is ordered descending, most recently requested first.\n\nNote that the API does not include companies who have no associated users in list responses.\n\nRequest Parameters\n\nYou can optionally request the result page size and which page to fetch as follows -\n\nParameter\tRequired\tDescription\npage\tno\twhat page of results to fetch defaults to first page.\nper_page\tno\thow many results per page defaults to 15.\norder\tno\tasc or desc. Return the companies in ascending or descending order. defaults to desc.\nRequest Query Parameters\nParameter\tRequired\tDescription\ntag_id\tone of\tThe id of the tag to filter by.\nsegment_id\tone of\tThe id of the segment to filter by.\nResponse\n\nThis will return a paginated list of Company Objects\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - list\ndata\tArray\tAn array containing Company Objects.\ntotal_count\tInteger\tThe total number of companies.\npages\tPagination Object\tThe information needed to paginate through companies\n\nWhen using the Companies endpoint and the pages object to iterate through the returned companies, there is a limit of 10,000 Companies that can be returned. If you need to list or iterate on more than 10,000 Companies, please use the Scroll API."
  },
  {
    "title": "List attached contacts",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/companies/list-company-contacts/",
    "html": "List attached contacts\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/companies/<id>/contacts \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nInvalid starting_after param\nHTTP/1.1 400 BAD REQUEST\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"000nbboasf1qqab6b910\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"client_error\\\",\\n      \\\"message\\\": \\\"Invalid starting_after param. Please try again using a starting_after value from a paginated response\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can fetch a list of all contacts that belong to a company.\n\nResponse\n\nThis will return a paginated list of Contact objects.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - list\ndata\tArray\tAn array containing Contact Objects\ntotal_count\tInteger\tThe total number of contacts\npages\tPagination Object\tThe information needed to paginate through contacts"
  },
  {
    "title": "List attached segments for companies",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/companies/list-attached-segments-1/",
    "html": "List attached segments for companies\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/companies/<id>/segments \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\ncompany_not_found\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Company Not Found\\\"\\n    }\\n  ]\\n}\\n}\\n\n\n\nYou can fetch a list of all segments that belong to a company.\n\nResponse\n\nThis will return a list of Segment objects.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - list\ndata\tArray\tAn array containing Segment Objects"
  },
  {
    "title": "Scroll over all companies",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/companies/iterating-over-all-companies/",
    "html": "Scroll over all companies\n\nThe list all companies functionality does not work well for huge datasets, and can result in errors and performance problems when paging deeply. The Scroll API provides an efficient mechanism for iterating over all companies in a dataset.\n\nEach app can only have 1 scroll open at a time. You'll get an error message if you try to have more than one open per app.\nIf the scroll isn't used for 1 minute, it expires and calls with that scroll param will fail\nIf the end of the scroll is reached, \"companies\" will be empty and the scroll parameter will expire\n# Send a GET request to get the first page of companies\n$ curl \\\n'https://api.intercom.io/companies/scroll' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n# To get the next page use the scroll param returned in the response\n$ curl \\\n'https://api.intercom.io/companies/scroll?scroll_param=562bc29f-ea55-4823-aaaf-f3faadceaa59' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"company.list\",\n  \"companies\": [\n    {\n      \"type\": \"company\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ],\n  \"scroll_param\": \"25b649f7-4d33-4ef6-88f5-60e5b8244309\"\n}\n\n# You can use the scroll method to list all your companies\nintercom.companies.scroll.each { |company| puts company.name}\n# Alternatively you can use the scroll.next method to get 100 companies with each request\nresult = intercom.companies.scroll.next\nresult.scroll_param\n=> \"0730e341-63ef-44da-ab9c-9113f886326d\"\nresult = intercom.companies.scroll.next(\"0730e341-63ef-44da-ab9c-9113f886326d\");\n\nSCROLL PARAMETER\n\nYou can get the first page of companies by simply sending a GET request to the scroll endpoint. For subsequent requests you will need to use the scroll parameter from the response.\n\n❗️ Scroll network timeouts\n\nSince scroll is often used on large datasets network errors such as timeouts can be encountered. When this occurs you will need to restart your scroll query as it is not possible to continue from a specific point when using scroll.\n\nWhen this occurs you will see a HTTP 500 error with the following message:\n\"Request failed due to an internal network error. Please restart the scroll operation.\""
  },
  {
    "title": "Input Values",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/requestobjects/input-values/",
    "html": "Input Values\nDescription\n\nThe input_values object is a JSON hash containing key-value pairs. These key-value pairs represent the data that's been inputted by customers and teammates with a given component.\n\nThe key will be the component_id and the value will be the data that was inputted by this component.\n\nExample Object\ninput_values: { \"<component_id>\": \"<Value entered in component>\" }, //Can be more than one pair\n"
  },
  {
    "title": "Detach a contact from a company",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/companies/detach-contact-from-company/",
    "html": "Detach a contact from a company\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<contact_id>/companies/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nhttphtml\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can detach a company from a single contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\ncontact_id\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nid\tString\tYes\tThe unique identifier for the company which is given by Intercom\nResponse\n\nThis will return a Company model for the company that was just detached from the contact."
  },
  {
    "title": "Delete a company",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/companies/delete-a-company/",
    "html": "Delete a company\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/companies/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nCompany not found\nHTTP/1.1 404 FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Company Not Found\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can delete a single company.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the company which is given by Intercom\nResponse\n\nThis will return an object with details on the deleted company.\n\nAttribute\tType\tDescription\nid\tString\tThe unique identifier for the company which is given by Intercom\nobject\tString\tThe type of object - company\ndeleted\tBoolean\tWhether the company has been deleted - true"
  },
  {
    "title": "Create or update a company",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/companies/create-or-update-company/",
    "html": "Create or update a company\nExample Request & Response\n$ curl https://api.intercom.io/companies \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type:application/json' -d '\n{\n  \"name\": \"Blue Sun\",\n  \"plan\": \"Paid\",\n  \"company_id\": \"6\",\n  \"remote_created_at\": 1394531169,\n  \"size\": 750,\n  \"website\": \"http://www.example.com\",\n  \"industry\": \"Manufacturing\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"team_mates\": 0,\n    \"monthly_spend\": 155.98\n  }\n}'\n\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"company\",\n    \"company_id\": \"6\",\n    \"id\": \"57e0120926806ceca3c13ba8\",\n    \"app_id\": \"pi3243fa\",\n    \"name\": \"Blue Sun\",\n    \"remote_created_at\": 1394531169,\n    \"created_at\": 1474302473,\n    \"updated_at\": 1475659931,\n    \"last_request_at\": 1473419085,\n    \"monthly_spend\": 49,\n    \"session_count\": 0,\n    \"user_count\": 0,\n    \"tags\": {\n        \"type\": \"tag.list\",\n        \"tags\": []\n    },\n    \"segments\": {\n        \"type\": \"segment.list\",\n        \"segments\": [\n            {\n                \"type\": \"segment\",\n                \"id\": \"56cc69cc8618d37b45000009\"\n            }\n        ]\n    },\n    \"plan\": {\n        \"type\": \"plan\",\n        \"id\": \"108609\",\n        \"name\": \"Paid\"\n    },\n    \"custom_attributes\": {\n        \"paid_subscriber\": true,\n        \"team_mates\": 0,\n        \"referral_source\": \"Google\",\n        \"founded\": \"20th Century\",\n        \"monthly_spend\": 155.98,\n        \"remove\": true\n    }\n}\n\nintercom.companies.create(:company_id => 6, :name => \"Blue Sun\", :plan => \"Paid\")\n\n<?php\n$intercom->companies->create([\n    \"name\" => \"Academy\",\n    \"id\" => \"10\"\n])\n?>\n\nimport static io.intercom.api.CustomAttribute.*;\n\nCompany company = new Company()\n  .setName(\"Blue Sun\")\n  .setCompanyID(\"1\")\n  .setPlan(new Company.Plan(\"premium\"))\n  .addCustomAttribute(newIntegerAttribute(\"items\", 246))\n  .addCustomAttribute(CustomAttribute.newStringAttribute(\"bar\", \"fruity\"));\n\ncompany = Company.create(company);\n\ncompany.setName(\"Blue Sun Corporation\");\nCompany.update(company);\n\n\nYou can create or update a company.\n\nCOMPANIES WITH NO USERS\n\nCompanies will be only visible in Intercom when there is at least one associated user.\n\nCompanies are looked up via company_id in a POST request, if not found via company_id, the new company will be created, if found, that company will be updated.\n\nRequest Body Parameters\nArgument\tType\tDescription\nremote_created_at\ttimestamp\tThe time the company was created by you.\ncompany_id\tstring\tThe company id you have defined for the company.\nCan't be updated.\nname\tstring\tThe name of the company.\nmonthly_spend\tnumber\tHow much revenue the company generates for your business. Note that this will truncate floats. i.e. it only allow for whole integers, 155.98 will be truncated to 155. Note that this has an upper limit of 2**31-1 or 2147483647..\nplan\tstring\tThe name of the plan you have associated with the company.\nsize\tnumber\tThe number of employees in this company.\nwebsite\tstring\tThe URL for this company's website. Please note that the value specified here is not validated. Accepts any string.\nindustry\tstring\tThe industry that this company operates in.\ncustom_attributes\tobject\tA hash of key/value pairs containing any other data about the company you want Intercom to store..\nResponse\n\nThis will return the Company model that has been created or updated."
  },
  {
    "title": "The company model",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/companies/company-model/",
    "html": "The company model\nExample Company Object\n{\\n  \\\"type\\\": \\\"company\\\",\\n  \\\"id\\\": \\\"531ee472cce572a6ec000006\\\",\\n  \\\"name\\\": \\\"Blue Sun\\\",\\n  \\\"plan\\\": {\\n        \\\"type\\\": \\\"plan\\\",\\n        \\\"id\\\": \\\"269315\\\",\\n        \\\"name\\\": \\\"pro\\\"\\n    },\\n  \\\"company_id\\\": \\\"6\\\",\\n  \\\"remote_created_at\\\": 1394531169,\\n  \\\"created_at\\\": 1394533506,\\n  \\\"updated_at\\\": 1396874658,\\n  \\\"size\\\": 85,\\n  \\\"website\\\": \\\"http://www.example.com\\\",\\n  \\\"industry\\\": \\\"Manufacturing\\\",\\n  \\\"monthly_spend\\\": 49,\\n  \\\"session_count\\\": 26,\\n  \\\"user_count\\\": 10,\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"team_mates\\\": 0\\n  }\\n}\n\n\nCompanies allow you to represent organizations using your product. Each company will have its own description and be associated with contacts. You can fetch, create, update and list companies.\n\nCompanies will not appear within Intercom until users have been added or associated with a company.\n\nCompany object\nAttribute\tType\tDescription\ntype\tString\tValue is 'company'.\nid\tString\tThe Intercom defined id representing the company.\ncreated_at\tDate (UNIX timestamp)\tThe time the company was added to Intercom.\nremote_created_at\tDate (UNIX timestamp)\tThe time the company was created by you.\nupdated_at\tDate (UNIX timestamp)\tThe last time the company was updated.\nlast_request_at\tDate (UNIX timestamp)\tThe time the company last recorded making a request.\ncompany_id\tString\tThe company id you have defined for the company.\nname\tString\tThe name of the company.\ncustom_attributes\tObject\tThe custom attributes you have set on the company.\nsession_count\tInteger\tHow many sessions the company has recorded.\nmonthly_spend\tInteger\tHow much revenue the company generates for your business.\nuser_count\tInteger\tThe number of users in the company.\nplan\tObject\tThe name of the plan you have associated with the company.\nsize\tInteger\tThe number of employees in the company.\nwebsite\tString\tThe URL for the company website.\nindustry\tString\tThe industry that the company operates in.\nPlan object\nAttribute\tType\tDescription\ntype\tstring\tWill always be of type 'plan'\nid\tstring\tThe plan ID\nname\tstring\tThe name of the plan, note that this is the only field that can be set via the API."
  },
  {
    "title": "The team model",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/teams/teams-model/",
    "html": "The team model\nExample Team Object\n{\\n    \\\"type\\\": \\\"team\\\",\\n    \\\"id\\\": \\\"814865\\\",\\n    \\\"name\\\": \\\"Example Team\\\",\\n    \\\"admin_ids\\\": [\\n        493881\\n    ]\\n}\n\n\nTeams are groups of admins in Intercom.\n\nTeam Object\nKey\tType\tDescription\ntype\tstring\tValue is team.\nid\tstring\tThe id of the team\nname\tstring\tThe name of the team\nadmin_ids\tlist\tThe list of admin id's that are a part of the team"
  },
  {
    "title": "Input Values",
    "url": "https://developers.intercom.com/docs/references/canvas-kit/requestobjects/input-values/",
    "html": "Input Values\nDescription\n\nThe input_values object is a JSON hash containing key-value pairs. These key-value pairs represent the data that's been inputted by customers and teammates with a given component.\n\nThe key will be the component_id and the value will be the data that was inputted by this component.\n\nExample Object\ninput_values: { \"<component_id>\": \"<Value entered in component>\" }, //Can be more than one pair\n"
  },
  {
    "title": "Create or Update Tag Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Models/create_or_update_tag_request/",
    "html": "You can create or update an existing tag."
  },
  {
    "title": "Contact Subscription Types",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Models/contact_subscription_types/",
    "html": "An object containing Subscription Types meta data about the SubscriptionTypes that a contact has."
  },
  {
    "title": "The note model",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/notes/note-model/",
    "html": "The note model\nExample Note Object\n{\\n  \\\"type\\\": \\\"note\\\",\\n  \\\"id\\\": \\\"16\\\",\\n  \\\"created_at\\\": 1389913941,\\n  \\\"body\\\": \\\"<p>Text for my note</p>\\\",\\n  \\\"author\\\": {\\n    \\\"type\\\": \\\"admin\\\",\\n    \\\"id\\\": \\\"21\\\",\\n    \\\"name\\\": \\\"Jayne Cobb\\\",\\n    \\\"email\\\": \\\"jayne@serenity.io\\\",\\n    \\\"companies\\\": []\\n  },\\n  \\\"user\\\": {\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5310d8e8598c9a0b24000005\\\"\\n  }\\n}\n\n\nNotes allow you to annotate and comment on your contacts.\n\nCOMPANIES AND CONVERSATIONS\n\nCurrently not possible to create notes for companies. Reach out if you want to submit a feature request, we take these into account.\\n\\nConversations notes are created via the Reply a conversations API.\n\nNote Object\nKey\tType\tDescription\ntype\tString\tvalue is 'note'\nid\tString\tThe id representing the note\ncreated_at\tTimestamp\tThe time the note was created\nuser\tObject\tThe user the note was created about\nbody\tString\tThe body text of the note.\nauthor\tObject\tOptional. Represents the Admin that created the note"
  },
  {
    "title": "View a Company",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/companies/view-a-company/",
    "html": "View a Company\nExample View Request and Response\ncurlcurlrubyphpjava\n$ curl \\\\\\n-s https://api.intercom.io/companies?company_id=141 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H \\\"Accept:application/json\\\" \\\\\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"company\\\",\\n  \\\"id\\\": \\\"531ee472cce572a6ec000006\\\",\\n  \\\"name\\\": \\\"Blue Sun\\\",\\n  \\\"plan\\\": {\\n    \\\"type\\\":\\\"plan\\\",\\n    \\\"id\\\":\\\"1\\\",\\n    \\\"name\\\":\\\"Paid\\\"\\n  },\\n  \\\"company_id\\\": \\\"141\\\",\\n  \\\"remote_created_at\\\": 1394531169,\\n  \\\"created_at\\\": 1394533506,\\n  \\\"updated_at\\\": 1396874658,\\n  \\\"last_request_at\\\": 1396874658,\\n  \\\"monthly_spend\\\": 49,\\n  \\\"session_count\\\": 26,\\n  \\\"user_count\\\": 10,\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"team_mates\\\": 0\\n  }\\n}\n\n\nEach company has its own URL -\n\nhttps://api.intercom.io/companies/{id}\n\nWhere {id} is the value of the company's id field. This URL is the company's canonical address in the API.\n\nRequest Parameters\nParameter\tRequired\tDescription\nname\tno\tThe name of the company\ncompany_id\tno\tThe company_id you have given to the company\n\nA company can also be fetched by its name using a name or company_id parameter in the url, whose values are the ones you have defined for that company -\n\nhttps://api.intercom.io/companies?name={name}\nhttps://api.intercom.io/companies?company_id={company_id}\n\nThe name parameter value should be url encoded when sending, as company names are allowed to have values that either need to be encoded as character data (e.g., whitespace) or are reserved characters (e.g., ':')."
  },
  {
    "title": "User or Lead Initiated Conversation",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/conversations/user-or-contact-initiated-conversation/",
    "html": "User or Lead Initiated Conversation\nUser Initiated Message\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/messages \\\\\\n-XPOST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d'\\n{\\n  \\\"from\\\": {\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"536e564f316c83104c000020\\\"\\n  },\\n  \\\"body\\\": \\\"Hey\\\"\\n}'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"user_message\\\",\\n  \\\"id\\\": \\\"2001\\\",\\n  \\\"created_at\\\": 1401917202,\\n  \\\"body\\\" : \\\"Hey, is the new thing in stock?\\\",\\n  \\\"message_type\\\": \\\"inapp\\\"\\n}\n\n\nYou can create a new user or lead initiated message by submitting a POST to https://api.intercom.io/messages along with a JSON message.\n\nThe sending user or lead is identified by their user_id, email or id values in the from field, along with a type field value of user or contact.\n\nYou can also send a message from a visitor by specifying their user_id or id value in the from field, along with a type field value of contact. This visitor will be automatically converted to a lead once the message is sent.\n\nThe message_type for a user initiated message is always treated as a inapp and will appear as a conversation inside Intercom. The email message type is not currently supported for a user initiated message.\n\nUser initiated messages can not be sent to specific admins, and as such, do not use the to field.\n\nAttributes\nAttribute\tType\tDescription\nbody\tstring\tThe content of the message. Plaintext only, HTML is not supported.\nfrom\tobject\tA user or lead object containing the user's id or user_id (or email if lead). The type field must have a value of user or contact.\nReturns\n\nThe created message object."
  },
  {
    "title": "Unsnoozing a conversation",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/conversations/unsnoozing-a-conversation/",
    "html": "Unsnoozing a conversation\nUnsnooze a conversation\n$ curl 'https://api.intercom.io/conversations/11055118659/reply' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"admin_id\": \"814860\",\n  \"message_type\":\"open\"\n}'\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"11055118659\",\n    \"created_at\": 1501496012,\n    \"updated_at\": 1501508752,\n    \"waiting_since\": 1501498931,\n    \"snoozed_until\": null,\n    \"conversation_message\": {\n        \"type\": \"conversation_message\",\n        \"id\": \"55951247\",\n        \"subject\": \"\",\n        \"body\": \"<p>Hi \\ud83d\\ude00 We hope you enjoy the example app. To get started just copy and paste some code into the JS editor. Let us know if you think this is useful? <br></p>\",\n        \"author\": {\n            \"type\": \"admin\",\n            \"id\": \"724865\"\n        },\n        \"attachments\": [],\n        \"url\": null\n    },\n    \"user\": {\n        \"type\": \"lead\",\n        \"id\": \"597f02cb22f4bb37597e0b7d\"\n    },\n    \"customers\": [\n        {\n            \"type\": \"lead\",\n            \"id\": \"597f02cb22f4bb37597e0b7d\"\n        },\n        {\n            \"type\": \"user\",\n            \"id\": \"58ff3f670f14ab4f1aa83750\"\n        }\n    ],\n    \"assignee\": {\n        \"type\": \"admin\",\n        \"id\": \"724860\"\n    },\n    \"conversation_parts\": {\n        \"type\": \"conversation_part.list\",\n        \"conversation_parts\": [\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712337945\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>test convo 1</p>\",\n                \"created_at\": 1501496025,\n                \"updated_at\": 1501496025,\n                \"notified_at\": 1501496025,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"user\",\n                    \"id\": \"597f02cb22f4bb37597e0b7d\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712338024\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>TestApp typically replies in a few hours. Don\\u2019t miss their reply.</p>\",\n                \"created_at\": 1501496028,\n                \"updated_at\": 1501496028,\n                \"notified_at\": 1501496028,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"bot\",\n                    \"id\": \"815309\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712338089\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p></p><p>Get notified by email</p>\",\n                \"created_at\": 1501496030,\n                \"updated_at\": 1501496030,\n                \"notified_at\": 1501496031,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"bot\",\n                    \"id\": \"815309\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712344562\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>group test two</p>\",\n                \"created_at\": 1501496290,\n                \"updated_at\": 1501496290,\n                \"notified_at\": 1501496291,\n                \"assigned_to\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712383990\",\n                \"part_type\": \"participant_added\",\n                \"body\": null,\n                \"created_at\": 1501497831,\n                \"updated_at\": 1501497831,\n                \"notified_at\": 1501497832,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712411349\",\n                \"part_type\": \"participant_added\",\n                \"body\": null,\n                \"created_at\": 1501498885,\n                \"updated_at\": 1501498885,\n                \"notified_at\": 1501498885,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712412506\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>group test</p>\",\n                \"created_at\": 1501498931,\n                \"updated_at\": 1501498931,\n                \"notified_at\": 1501498932,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"user\",\n                    \"id\": \"597f02cb22f4bb37597e0b7d\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712425169\",\n                \"part_type\": \"participant_removed\",\n                \"body\": null,\n                \"created_at\": 1501499414,\n                \"updated_at\": 1501499414,\n                \"notified_at\": 1501499414,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712728293\",\n                \"part_type\": \"snoozed\",\n                \"body\": null,\n                \"created_at\": 1501508752,\n                \"updated_at\": 1501508752,\n                \"notified_at\": 1501508752,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            }\n        ],\n        \"total_count\": 9\n    },\n    \"open\": true,\n    \"state\": \"snoozed\",\n    \"read\": false,\n    \"tags\": {\n        \"type\": \"tag.list\",\n        \"tags\": []\n    }\n}\n\nArguments\nArgument\tRequired\tDescription\nadmin_id\tYes\tOnly admins can snooze a conversation so you need to provide the admin_id\nmessage_type\tYes\tMust be open to re-open or 'unsnooze' the conversation"
  },
  {
    "title": "Snoozing a conversation",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/conversations/snoozing-a-conversation/",
    "html": "Snoozing a conversation\nSnooze a conversation\n$ curl 'https://api.intercom.io/conversations/11055118659/reply' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"admin_id\": \"724860\",\n  \"message_type\":\"snoozed\",\n  \"snoozed_until\":\"1501512795\"\n}'\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"11055118659\",\n    \"created_at\": 1501496012,\n    \"updated_at\": 1501508752,\n    \"waiting_since\": 1501498931,\n    \"snoozed_until\": null,\n    \"conversation_message\": {\n        \"type\": \"conversation_message\",\n        \"id\": \"55951247\",\n        \"subject\": \"\",\n        \"body\": \"<p>Hi \\ud83d\\ude00 We hope you enjoy the example app. To get started just copy and paste some code into the JS editor. Let us know if you think this is useful? <br></p>\",\n        \"author\": {\n            \"type\": \"admin\",\n            \"id\": \"724865\"\n        },\n        \"attachments\": [],\n        \"url\": null\n    },\n    \"user\": {\n        \"type\": \"lead\",\n        \"id\": \"597f02cb22f4bb37597e0b7d\"\n    },\n    \"customers\": [\n        {\n            \"type\": \"lead\",\n            \"id\": \"597f02cb22f4bb37597e0b7d\"\n        },\n        {\n            \"type\": \"user\",\n            \"id\": \"58ff3f670f14ab4f1aa83750\"\n        }\n    ],\n    \"assignee\": {\n        \"type\": \"admin\",\n        \"id\": \"724860\"\n    },\n    \"conversation_parts\": {\n        \"type\": \"conversation_part.list\",\n        \"conversation_parts\": [\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712337945\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>test convo 1</p>\",\n                \"created_at\": 1501496025,\n                \"updated_at\": 1501496025,\n                \"notified_at\": 1501496025,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"user\",\n                    \"id\": \"597f02cb22f4bb37597e0b7d\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712338024\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>TestApp typically replies in a few hours. Don\\u2019t miss their reply.</p>\",\n                \"created_at\": 1501496028,\n                \"updated_at\": 1501496028,\n                \"notified_at\": 1501496028,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"bot\",\n                    \"id\": \"815309\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712338089\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p></p><p>Get notified by email</p>\",\n                \"created_at\": 1501496030,\n                \"updated_at\": 1501496030,\n                \"notified_at\": 1501496031,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"bot\",\n                    \"id\": \"815309\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712344562\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>group test two</p>\",\n                \"created_at\": 1501496290,\n                \"updated_at\": 1501496290,\n                \"notified_at\": 1501496291,\n                \"assigned_to\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712383990\",\n                \"part_type\": \"participant_added\",\n                \"body\": null,\n                \"created_at\": 1501497831,\n                \"updated_at\": 1501497831,\n                \"notified_at\": 1501497832,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712411349\",\n                \"part_type\": \"participant_added\",\n                \"body\": null,\n                \"created_at\": 1501498885,\n                \"updated_at\": 1501498885,\n                \"notified_at\": 1501498885,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712412506\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>group test</p>\",\n                \"created_at\": 1501498931,\n                \"updated_at\": 1501498931,\n                \"notified_at\": 1501498932,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"user\",\n                    \"id\": \"597f02cb22f4bb37597e0b7d\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712425169\",\n                \"part_type\": \"participant_removed\",\n                \"body\": null,\n                \"created_at\": 1501499414,\n                \"updated_at\": 1501499414,\n                \"notified_at\": 1501499414,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712728293\",\n                \"part_type\": \"snoozed\",\n                \"body\": null,\n                \"created_at\": 1501508752,\n                \"updated_at\": 1501508752,\n                \"notified_at\": 1501508752,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            }\n        ],\n        \"total_count\": 9\n    },\n    \"open\": true,\n    \"state\": \"snoozed\",\n    \"read\": false,\n    \"tags\": {\n        \"type\": \"tag.list\",\n        \"tags\": []\n    }\n}\n\n\nCustomers can snooze a conversation via a POST method to https://api.intercom.io/conversations/{convo_id}/reply/, which accepts a JSON object identifying the time you want the conversation snoozed until.\n\nArguments\nArgument\tRequired\tDescription\nadmin_id\tYes\tOnly admins can snooze a conversation so you need to provide the admin_id\nmessage_type\tYes\tMust be snoozed\nsnoozed_until\tYes\tThe time in Unix time (i.e. seconds) you want the conversation to reopen"
  },
  {
    "title": "Run assignment rules on a conversation",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/conversations/run-conversation-assignment-rules/",
    "html": "Run assignment rules on a conversation\n\nYou can set up assignment rules to assign conversations to the correct team or teammate.\n\nThis usually happens upon a new, user initiated conversation coming in. This API call allows you to trigger the assignment rules when a conversation is unassigned - whether that's during a conversation, or when a user responds to an admin initiated conversation.\n\nREQUIRED PRODUCT\n\nAssignment Rules are only available with Inbox Pro. You can upgrade here.\n\nAssign based on assignment rules\ncurlhttp\ncurl 'https://api.intercom.io/conversations/{convo_id}/run_assignment_rules'\\n-X POST \\n-H 'Authorization: Bearer <Acess Token>=' \\n-H 'Accept: application/json' \\n-H 'Content-Type: application/json'\n"
  },
  {
    "title": "Replying to Users Last Conversation",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/conversations/replying-to-users-last-conversation/",
    "html": "Replying to Users Last Conversation\n\nInstead of specifying a conversation id when replying, you can also reply to the most recent conversation for a user at https://api.intercom.io/conversations/last/reply:\n\nReplying to the Users Most Recent Conversation\n# Send a reply from admin 1234 to a user's last conversation\n$ curl https://api.intercom.io/conversations/last/reply \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"intercom_user_id\": \"536e564f316c83104c000020\",\n  \"body\": \"Let me know if you have any more questions!\",\n  \"type\": \"admin\",\n  \"admin_id\": \"1234\",\n  \"message_type\": \"comment\"\n}'\n\n<?php\n\n$intercom->conversations->replyToLastConversation([\n    \"intercom_user_id\" => \"5977303470ab497b1babb9ef\",\n    \"body\" => \"I am the wisest man alive, for I know one thing, and that is that I know nothing.\",\n    \"type\" => \"user\",\n    \"message_type\" => \"comment\"\n]);\n?>\n"
  },
  {
    "title": "Marking a Conversation as Read",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/conversations/marking-a-conversation-as-read/",
    "html": "Marking a Conversation as Read\n\nYou can mark a conversation within Intercom as read.\n\nMark a Conversation as Read\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/conversations/147 \\\\\\n-X PUT \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d'\\n{\\n  \\\"read\\\": true\\n}'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"conversation\\\",\\n  \\\"id\\\": \\\"147\\\",\\n  \\\"created_at\\\": 1400850973,\\n  \\\"updated_at\\\": 1400857494,\\n  \\\"read\\\": true\\n  # ...\\n}\\n\\n# NB: Full Conversation Object returned\n"
  },
  {
    "title": "List Conversations",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/conversations/list-conversations/",
    "html": "List Conversations\nList Open Conversations for a Particular Admin\ncurlcurlrubyphpjava\n$ curl \\\\\\n\\\"https://api.intercom.io/conversations?type=admin&admin_id=25&open=true\\\" \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"conversation.list\\\",\\n  \\\"conversations\\\": [\\n    {\\n      \\\"assignee\\\": {\\n        \\\"id\\\": null,\\n        \\\"type\\\": \\\"nobody_admin\\\"\\n       },\\n       \\\"conversation_message\\\": {\\n         \\\"attachments\\\": [],\\n         \\\"author\\\": {\\n           \\\"id\\\": \\\"814865\\\",\\n           \\\"type\\\": \\\"admin\\\"\\n         },\\n       \\\"body\\\": \\\"<p>Hi \\\\ud83d\\\\ude00 We hope you enjoy the example app. To get started just copy and paste some code into the JS editor. Let us know if you think this is useful? <br></p>\\\",\\n       \\\"delivered_as\\\": \\\"automated\\\",\\n       \\\"id\\\": \\\"55951247\\\",\\n       \\\"subject\\\": \\\"\\\",\\n       \\\"type\\\": \\\"conversation\\\",\\n       \\\"url\\\": null\\n     },\\n     \\\"created_at\\\": 1543370554,\\n     \\\"customer_first_reply\\\": {\\n       \\\"created_at\\\": 1543370575,\\n       \\\"type\\\": \\\"conversation\\\",\\n       \\\"url\\\": \\\"https://s.codepen.io/boomerang/iFrameKey-fd6a7a17-5f52-3b6d-c3f6-8acc206fd174/index.html\\\"\\n     },\\n     \\\"customers\\\": [\\n       {\\n         \\\"id\\\": \\\"5bfdf73a1e1f0a940ef89995\\\",\\n         \\\"type\\\": \\\"lead\\\"\\n       }\\n     ],\\n     \\\"id\\\": \\\"19774381531\\\",\\n     \\\"open\\\": true,\\n     \\\"read\\\": true,\\n     \\\"sent_at\\\": 1543370554,\\n     \\\"snoozed_until\\\": null,\\n     \\\"state\\\": \\\"open\\\",\\n     \\\"tags\\\": {\\n       \\\"type\\\": \\\"tag.list\\\",\\n       \\\"tags\\\": [\\n         {\\n            \\\"type\\\": \\\"tag\\\",\\n            \\\"id\\\": \\\"1\\\",\\n            \\\"name\\\": \\\"a tag\\\",\\n            \\\"applied_at\\\": 1542820819,\\n            \\\"applied_by\\\": {\\n              \\\"type\\\": \\\"admin\\\",\\n              \\\"id\\\": \\\"54\\\"\\n            }\\n          },\\n          {\\n            \\\"type\\\": \\\"tag\\\",\\n            \\\"id\\\": \\\"1\\\",\\n            \\\"name\\\": \\\"a tag\\\",\\n            \\\"applied_at\\\": 1542969954,\\n            \\\"applied_by\\\": {\\n              \\\"type\\\": \\\"admin\\\",\\n              \\\"id\\\": \\\"54\\\"\\n            }\\n          }\\n        ]\\n      },\\n      \\\"type\\\": \\\"conversation\\\",\\n      \\\"updated_at\\\": 1543370587,\\n      \\\"user\\\": {\\n        \\\"id\\\": \\\"5bfdf73a1e1f0a940ef89995\\\",\\n        \\\"type\\\": \\\"lead\\\"\\n      },\\n      \\\"waiting_since\\\": 1543370575\\n    }\\n  ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/conversations?per_page=20&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 20,\\n    \\\"total_pages\\\": 77,\\n    \\\"type\\\": \\\"pages\\\"\\n  }\\n}\n\n\nConversation lists do not contain conversation_parts for brevity. The part list for an individual conversation can be fetched when retrieving the conversation itself.\n\nAll Conversations\n\nTo fetch a list of all conversations send a GET request to https://api.intercom.io/conversations with no parameters. A Conversation List object is returned.\n\nConversations can be sorted with the following parameters:\n\nParameter\tRequired\tDescription\norder\tno\tasc or desc. Return the conversations in ascending or descending order. defaults to desc unless an incorrect value is used i.e. not asc or desc. In these cases we do not throw an error and return the list in asc order.\nsort\tno\twhat field to sort the results by. Valid values: created_at, updated_at, waiting_since. defaults to updated_at.\nWHERE'D MY CONVERSATIONS GO?\n\nWhen sorting by waiting_since, not all conversations are returned. If a teammate was the last person to reply, or the conversation is closed then those conversations will not show up on this list. This is to ensure you have an easy way of identifying and prioritizing those customers who have been waiting longest.\n\nORDERING AND SORTING WITH FILTERS\n\nIt should be noted that the format for ordering and sorting is different when listing conversations for customers and admins as opposed to listing all conversations (i.e. without any filters). When you are using filters such as admin/customers 'order' refers to the fields you want to order the list by and 'sort' refers to whether you want it sorted asc or desc. The reverse is true when listing conversation without any filtering\n\nConversations by Admin\n\nYou can send the following parameters to view a single Admin's conversations -\n\nParameter\tRequired\tDescription\ntype\tyes\tThe type of entity to query for. Value must be admin for admin queries.\nadmin_id\tyes\tThe id for the Admin whose conversations to retrieve. To retrieve all unassigned conversations, set the id to be 'nobody'.\nopen\tno\tBoolean, when true fetches just open conversations, when false just closed conversations\ndisplay_as\tno\tSet to plaintext to retrieve conversation messages in plain text\npages\tno\tOptional. A pagination object, which may be empty, indicating no further conversations to fetch.\norder\tno\twhat field to sort the results by. Valid values: created_at, updated_at, waiting_since. defaults to updated_at.\nsort\tno\tasc or desc. Return the conversations in ascending or descending order. defaults to desc.\nConversations by Customers\n\nYou can send the following parameters to view a single Customer's conversations -\n\nParameter\tRequired\tDescription\ntype\tyes\tThe type of entity to query for. Value must be user.\nintercom_user_id\tone of\tThe id of the User whose conversations to retrieve\nuser_id\tone of\tYour user_id for the user\nemail\tone of\tYour email for the user\nunread\tno\tBoolean, when true fetches just unread conversations\ndisplay_as\tno\tSet to plaintext to retrieve conversation messages in plain text\npages\tno\tOptional. A pagination object, which may be empty, indicating no further conversations to fetch.\norder\tno\twhat field to sort the results by. Valid values: created_at, updated_at. defaults to updated_at.\nsort\tno\tasc or desc. Return the conversations in ascending or descending order. defaults to desc.\nLISTING LEADS USING TYPE 'USER'\n\nIf you want to list lead conversations you will need to set the type to 'user' and use the 'intercom_user_id' as the identifier. It will not work with 'user_id' or type contact for example.\n\nWhen querying the conversations for a particular User, we carry out message matching for that User and your existing Auto Messages, at most once per 15 minutes.\n\nReturns\n\nA Conversation List object is returned with an array of Conversation objects. These will include a list of tags as Tag objects, with two additional attributes:\n\nAttribute\tType\tDescription\napplied_at\tUNIX Timestamp\tThe date and time when the tag was applied to the conversation.\napplied_by\tObject\tContains the id of the admin that applied the tag."
  },
  {
    "title": "Get a Single Conversation",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/conversations/get-a-single-conversation/",
    "html": "Get a Single Conversation\nGet a Single Conversation\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/conversations/147 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\n\n\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"assignee\\\": {\\n        \\\"id\\\": \\\"814860\\\",\\n        \\\"type\\\": \\\"admin\\\"\\n    },\\n    \\\"conversation_message\\\": {\\n        \\\"attachments\\\": [],\\n        \\\"author\\\": {\\n            \\\"id\\\": \\\"5bc8f7421ae2d96695c18a\\\",\\n            \\\"type\\\": \\\"lead\\\"\\n        },\\n        \\\"body\\\": \\\"<p>Hi</p>\\\",\\n        \\\"delivered_as\\\": \\\"customer_initiated\\\",\\n        \\\"id\\\": \\\"269650473\\\",\\n        \\\"subject\\\": \\\"\\\",\\n        \\\"type\\\": \\\"conversation\\\",\\n        \\\"url\\\": \\\"https://intercom-survey-app.glitch.me/\\\"\\n    },\\n    \\\"conversation_parts\\\": {\\n        \\\"conversation_parts\\\": [\\n            {\\n                \\\"assigned_to\\\": null,\\n                \\\"attachments\\\": [],\\n                \\\"author\\\": {\\n                    \\\"id\\\": \\\"815309\\\",\\n                    \\\"type\\\": \\\"bot\\\"\\n                },\\n                \\\"body\\\": \\\"<p>Test_App typically replies in a few hours.</p>\\\",\\n                \\\"created_at\\\": 1539897200,\\n                \\\"external_id\\\": null,\\n                \\\"id\\\": \\\"2202737122\\\",\\n                \\\"notified_at\\\": 1539897200,\\n                \\\"part_type\\\": \\\"comment\\\",\\n                \\\"type\\\": \\\"conversation_part\\\",\\n                \\\"updated_at\\\": 1539897200\\n            },\\n          #List of conversation parts...\\n        ],\\n        \\\"total_count\\\": 25,\\n        \\\"type\\\": \\\"conversation_part.list\\\"\\n    },\\n    \\\"conversation_rating\\\": {\\n        \\\"created_at\\\": null,\\n        \\\"customer\\\": {\\n            \\\"id\\\": null,\\n            \\\"type\\\": null\\n        },\\n        \\\"rating\\\": null,\\n        \\\"remark\\\": null,\\n        \\\"teammate\\\": {\\n            \\\"id\\\": null,\\n            \\\"type\\\": null\\n        }\\n    },\\n    \\\"created_at\\\": 1539897198,\\n    \\\"customer_first_reply\\\": {\\n        \\\"created_at\\\": 1539897198,\\n        \\\"type\\\": \\\"conversation\\\",\\n        \\\"url\\\": \\\"https://intercom-survey-app.glitch.me/\\\"\\n    },\\n    \\\"customers\\\": [\\n        {\\n            \\\"id\\\": \\\"5bc8f7ae2d96695c18a\\\",\\n            \\\"type\\\": \\\"lead\\\"\\n        }\\n    ],\\n    \\\"id\\\": \\\"1911149811\\\",\\n    \\\"open\\\": true,\\n    \\\"read\\\": true,\\n    \\\"sent_at\\\": 1539897198,\\n    \\\"snoozed_until\\\": null,\\n    \\\"state\\\": \\\"open\\\",\\n    \\\"tags\\\": {\\n      \\\"type\\\": \\\"tag.list\\\",\\n      \\\"tags\\\": [\\n        {\\n          \\\"type\\\": \\\"tag\\\",\\n          \\\"id\\\": \\\"1\\\",\\n          \\\"name\\\": \\\"a tag\\\",\\n          \\\"applied_at\\\": 1542820819,\\n          \\\"applied_by\\\": {\\n            \\\"type\\\": \\\"admin\\\",\\n            \\\"id\\\": \\\"54\\\"\\n          }\\n        },\\n        {\\n          \\\"type\\\": \\\"tag\\\",\\n          \\\"id\\\": \\\"1\\\",\\n          \\\"name\\\": \\\"a tag\\\",\\n          \\\"applied_at\\\": 1542969954,\\n          \\\"applied_by\\\": {\\n            \\\"type\\\": \\\"admin\\\",\\n            \\\"id\\\": \\\"54\\\"\\n          }\\n        }\\n      ]\\n    },\\n    \\\"type\\\": \\\"conversation\\\",\\n    \\\"updated_at\\\": 1540393270,\\n    \\\"user\\\": {\\n        \\\"id\\\": \\\"5bc8f7421ffae2d96695c18a\\\",\\n        \\\"type\\\": \\\"lead\\\"\\n    },\\n    \\\"waiting_since\\\": 64654125776\\n}\n\nParameters\n\nSpecify the id of the conversation you wish to retrieve using the URL https://api.intercom.io/conversations/{id} URL structure where {id} is the id field of the conversation.\n\nParameter\tRequired\tDescription\ndisplay_as\tno\tSet to plaintext to retrieve conversation messages in plain text\nReturns\n\nA full Conversation object. This will include a list of tags as Tag objects, with two additional attributes:\n\nAttribute\tType\tDescription\napplied_at\tUNIX Timestamp\tThe date and time when the tag was applied to the conversation.\napplied_by\tObject\tContains the id of the admin that applied the tag.\n\nParts in the conversation_parts object are ordered by with the most recently created parts appearing at the end of the list.\n\nThe maximum number of conversation parts that can be returned via the API is 500. If you have more than that we will return the 500 most recent conversation parts."
  },
  {
    "title": "Deleting from group conversations",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/conversations/deleting-from-group-conversations/",
    "html": "Deleting from group conversations\nDeleting a customer from a group conversation\nCUSTOMERS\n\nNote that customers refers to both users and leads.\n\n$ curl 'https://api.intercom.io/conversations/11055118659/customers/58c1c72246a0aa9ef45a098e' \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"admin_id\": \"781345\"\n}'\n\nHTTP/1.1 200 OK\n\n{\"customers\":[\n  {\"type\":\"user\",\"id\":\"597f02cb22f4bb37597e0b7d\"}]\n}x§\n\n\nCustomers can be removed from a conversation via a DELETE method to https://api.intercom.io/conversations/{convo_id}/customers/{id}, which accepts a JSON object describing the customer.\n\nArguments\nArgument\tRequired\tDescription\nadmin_id\tYes\tYou must provide the ID of a valid admin to remove a customer to the conversation"
  },
  {
    "title": "Conversations",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/conversations/conversations/",
    "html": "Conversations\n\nConversation are how you can communicate with users in Intercom.\n\nTo start a conversation you and your users can send messages. The API supports two ways to start a conversation -\n\nFrom a user to you, called a 'user initiated' conversation.\nFrom a team member to a single user called an 'admin initiated' conversation.\n\nThe API does not currently support sending admin initiated messages to multiple users, creating auto messages or sending from teams, but we'd be interested in hearing your usecases - please contact team@intercom.io.\n\nOnce a message has been sent the conversation can begin! Users and Admins can reply to any conversation via the API - see the section \"Replying to a Conversation\" for details.\n\n🚧\n\nThe Conversations API is only available to Apps with a trial or an active subscription.\n\nNOTE\n\nThere may be a short delay between user creation and a user becoming available for messaging through the API. A 404 will be returned in this case, and you should retry the request after a delay.\n\nNOTE\n\nIf you try to send an email to a user who has unsubscribed, we will return a 403 and the message \"This user is unsubscribed from emails\"."
  },
  {
    "title": "Conversation Model",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/conversations/conversation-model/",
    "html": "Conversation Model\nExample Conversation Object\n{\n    \"assignee\": {\n        \"id\": \"814860\",\n        \"type\": \"admin\"\n    },\n    \"conversation_message\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"conversation_parts\": {\n        \"conversation_parts\": [\n            {\n                \"assigned_to\": null,\n                \"attachments\": [],\n                \"author\": {\n                    \"id\": \"815309\",\n                    \"type\": \"bot\"\n                },\n                \"body\": \"<p>Test_App typically replies in a few hours.</p>\",\n                \"created_at\": 1539897200,\n                \"external_id\": null,\n                \"id\": \"2202737122\",\n                \"notified_at\": 1539897200,\n                \"part_type\": \"comment\",\n                \"type\": \"conversation_part\",\n                \"updated_at\": 1539897200\n            },\n          #List of conversation parts...\n        ],\n        \"total_count\": 25,\n        \"type\": \"conversation_part.list\"\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"customer\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null\n        }\n    },\n    \"created_at\": 1539897198,\n    \"customer_first_reply\": {\n        \"created_at\": 1539897198,\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"customers\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"id\": \"1911149811\",\n    \"open\": true,\n    \"read\": true,\n    \"sent_at\": 1539897198,\n    \"snoozed_until\": null,\n    \"state\": \"open\",\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\"\n    },\n    \"type\": \"conversation\",\n    \"updated_at\": 1540393270,\n    \"user\": {\n        \"id\": \"5bc8f7421ffae2d96695c18a\",\n        \"type\": \"lead\"\n    },\n    \"waiting_since\": 64654125776\n}\n\n{\n   \"type\":\"conversation\",\n   \"id\":\"1122334455\",\n   \"created_at\":1567693209,\n   \"updated_at\":1568367881,\n   \"waiting_since\":1568367881,\n   \"snoozed_until\":null,\n   \"assignee\":{\n      \"type\":\"admin\",\n      \"id\":\"1223334\"\n   },\n   \"open\":true,\n   \"state\":\"open\",\n   \"read\":true,\n   \"tags\":{\n      \"type\":\"tag.list\",\n      \"tags\":[\n\n      ]\n   },\n   \"conversation_rating\":{\n      \"rating\":null,\n      \"remark\":null,\n      \"created_at\":null,\n      \"customer\":{\n         \"type\":null,\n         \"id\":null\n      },\n      \"teammate\":{\n         \"type\":null,\n         \"id\":null\n      }\n   },\n   \"conversation_parts\":{\n      \"type\":\"conversation_part.list\",\n      \"conversation_parts\":[\n         {\n            \"type\":\"conversation_part\",\n            \"id\":\"1223445555\",\n            \"part_type\":\"comment\",\n            \"body\":\"We've removed this part of the conversation to comply with Twitter's terms and conditions. You can view the complete conversation in Intercom.\",\n            \"created_at\":1567693273,\n            \"updated_at\":1567693273,\n            \"notified_at\":1567693273,\n            \"assigned_to\":null,\n             \"author\":{\n               \"type\":\"user\",\n               \"id\":\"5310d8e7598c9a0b24000002\",\n               \"name\":\"\",\n               \"email\":\"\"\n            },\n            \"attachments\":[\n\n            ],\n            \"external_id\":null\n         },\n      ],\n      \"total_count\":1\n   },\n   \"customer_first_reply\":{\n      \"created_at\":1567693209,\n      \"type\":\"twitter\",\n      \"url\":\"\"\n   },\n   \"conversation_message\":{\n      \"type\":\"twitter\",\n      \"id\":\"409820079\",\n      \"delivered_as\":\"customer_initiated\",\n      \"subject\":\"We've removed this part of the conversation to comply with Twitter's terms and conditions. You can view the complete conversation in Intercom.\",\n      \"body\":\"We've removed this part of the conversation to comply with Twitter's terms and conditions. You can view the complete conversation in Intercom.\",\n      \"author\":{\n         \"type\":\"user\",\n         \"id\":\"5310d8e7598c9a0b24000002\",\n         \"name\":\"\",\n         \"email\":\"\"\n      },\n      \"attachments\":[\n\n      ],\n      \"url\":\"\"\n   },\n   \"customers\":[\n      {\n         \"type\":\"user\",\n         \"id\":\"5310d8e7598c9a0b24000002\"\n      }\n   ],\n   \"user\":{\n      \"type\":\"user\",\n      \"id\":\"5310d8e7598c9a0b24000002\"\n   }\n}\n\n\nA conversation lets you track and describe communications with your users. Each conversation contains the message that initiated the conversation, the user involved, the admin assigned to the conversation and a list of parts describing the conversation thread. The open or closed status of the conversation is also provided.\n\nConversation Object\nAttribute\tType\tDescription\ntype\tstring\tAlways conversation.\nid\tstring\tThe id representing the conversation.\ncreated_at\ttimestamp\tThe time the conversation was created.\nupdated_at\ttimestamp\tThe last time the conversation was updated.\nwaiting_since\ttimestamp\tThe last time a customer responded to an admin. In other words, the time a customer started waiting for a response. Set to null if last reply is from an admin.\nsnoozed_until\ttimestamp\tIf set this is the time in the future when this conversation will be marked as open. i.e. it will be in a snoozed state until this time.\nconversation_message\tMessage\tThe message that started the conversation rendered for presentation.\nuser\tUser\tThe user the conversation concerns.\ncustomers\tList of customers objects\tThe list of customers (users or leads) involved in this conversation. This will only contain one customer unless more were added via the group conversation feature.\ncustomer_first_reply\tObject\tAn object containing information on the first users message. For a user initiated message this will represent the users original message.\nassignee\tAdmin\tThe admin the conversation is currently assigned to. Note nobody_admin indicates the conversation is assigned to Nobody.\nconversation_parts\tObject\tA conversation part object with a list of conversation parts.\nopen\tBoolean\tIndicates whether a conversation is open (true) or closed (false).\nstate\tString\tCan be set to \"open\", \"closed\" or \"snoozed\".\nread\tBoolean\tIndicates whether a conversation has been read.\ntags\tList\tA list of tags associated with the conversation.\ntotal_count\tInteger\tThe number of conversation parts in this conversation.\nconversation_rating\tobject\tA conversation rating object which contains information on the rating and/or remark added by a customer and the admin assigned to the conversation.\nMessage Object\nAttribute\tType\tDescription\ntype\tstring\tThis includes conversation, push, facebook, twitter and email\nid\tstring\tThe id representing the message.\ndelivered_as\tstring\tHow was the message delivered by Intercom. The types of delivery are customer_initiated, automated, campaigns_initiated, admin_initiated, and operator_initiated.\nsubject\tstring\tOptional. The message subject. For Twitter, this will show a generic message regarding why the subject is obscured.\nbody\tstring\tThe message body, which may contain HTML. For Twitter, this will show a generic message regarding why the body is obscured.\nauthor\tAdmin\tThe type of individual that sent the message (user, lead, admin or team) and their related id. For Twitter, this will be blank.\nattachments\tList\tA list of attachments for the part.\nurl\tstring\tThe URL the User started a conversation on. (Note this will not be populated in some cases, e.g. for custom bots.)\nNOTE\n\nPlease note that URLs for User uploaded images & files have a 30 minute expiration. Once the expiration has passed, the link will no longer be valid and result in a 404. This means that if a URL is copied, and then reused elsewhere, it will continue to work until the expiry threshold. A new URL can be generated by fetching the conversation data again.\n\nCustomers object\nAttribute\tType\tDescription\ntype\tString\tThis can be either a user or a lead.\nid\tString\tThe ID for the user or lead.\nCustomer First reply object\n\t\t\nType\tString\tOver which channel did the first reply occur. Options include conversation, push, facebook, twitter and email .\nURL\tString\tThe URL where the first reply originated from For Twitter and Email replies, this will be blank.\nCreated_at\tTimestamp\tThe time the users messages was created. This is in unix timestamp format\nCUSTOMER_FIRST_REPLY SET TO NULL\n\nIf a user has not replied to an Intercom initiated message (e.g. auto messages, admin initiated messages, campaigns) then the customer_first_reply attribute will be null"
  },
  {
    "title": "Update a section",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/help-center/update-a-section/",
    "html": "Update a section\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/sections/<id> \\\\\\n-X PUT \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\\n\\n{\\n  \\\"name\\\": \\\"New title\\\",\\n  \\\"translated_content\\\": {\\n    \\\"type\\\": \\\"group_translated_content\\\",\\n    \\\"es\\\": {\\n      \\\"type\\\": \\\"group_content\\\",\\n      \\\"name\\\": \\\"Nuevo título\\\"\\n    }\\n  }\\n}\n\n\nYou can update the details of a single section by making a PUT request to https://api.intercom.io/help_center/sections/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the section which is given by Intercom.\nRequest Body Parameters\nAttribute\tType\tRequired?\tDescription\nname\tString\tNo\tThe name of the section.\nFor multilingual collections, this will be the name of the default language's content.\nparent_id\tString\tNo\tThe id for the collection this section will be within.\ntranslated_content\tObject\tNo\tA Group Translated Content Object whereby you can specify multiple multilingual collections to be created.\nResponse\n\nThis will return a Section object of the section you just updated."
  },
  {
    "title": "Conversation Part Model",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/conversations/conversation-part-model/",
    "html": "Conversation Part Model\nExample Conversation Part Object\n{\n    \"type\": \"conversation_part\",\n    \"id\": \"4412\",\n    \"part_type\": \"comment\",\n    \"body\": \"<p>Hi Jane, it's all great thanks!</p>\",\n    \"created_at\": 1400857494,\n    \"updated_at\": 1400857494,\n    \"notified_at\": 1400857587,\n    \"assigned_to\": null,\n    \"author\": {\n      \"type\": \"user\",\n      \"id\": \"536e564f316c83104c000020\"\n    },\n    \"attachments\": []\n}\n\n{\n    \"type\":\"conversation_part\",\n    \"id\":\"1223445555\",\n    \"part_type\":\"comment\",\n    \"body\":\"We've removed this part of the conversation to comply with Twitter's terms and conditions. You can view the complete conversation in Intercom.\",\n    \"created_at\":1567693273,\n    \"updated_at\":1567693273,\n    \"notified_at\":1567693273,\n    \"assigned_to\":null,\n    \"author\":{\n      \"type\":\"user\",\n      \"id\":\"5310d8e7598c9a0b24000002\",\n      \"name\":\"\",\n      \"email\":\"\"\n    },\n    \"attachments\": []\n}\n\n\nA conversation part describes an element of the conversation.\n\nA conversation part has a html encoded body, an author, and may have an attachments list. Conversation parts have created, updated and notified timestamps. Each conversation part also has a part type - these types are described below.\n\nConversation Part Object\nAttribute\tType\tDescription\ntype\tstring\tAlways conversation_part.\nid\tstring\tThe id representing the conversation part.\npart_type\tstring\tThe type of conversation part.\nbody\tstring\tThe message body, which may contain HTML. For Twitter, this will show a generic message regarding why the body is obscured.\ncreated_at\ttimestamp\tThe time the conversation part was created.\nupdated_at\ttimestamp\tThe last time the conversation part was updated.\nnotified_at\ttimestamp\tThe time the user was notified with the conversation part.\nassigned_to\tstring\tThe id of the admin that was assigned the conversation by this conversation_part (null if there has been no change in assignment.)\nauthor\tstring\tThe type of individual that sent the message (user, admin or bot) and their related id. For Twitter, this will be blank.\nattachments\tList\tA list of attachments for the part.\nConversation Part Types\nType\tDescription\ncomment\tStandard reply from customer or admin to a conversation\nnote\tA note created by an admin on the conversation. A note will only be viewable as an admin\nnote_and_reopen\tAdd a note and reopen the conversations in the one action\nassignment\tAn assignment of the conversation to an admin, or Nobody\nopen\tIdentifies a conversation has been opened\nclose\tIdentifies a conversation has been closed\naway_mode_assignment\tConversation has been assigned due to the admin being in away mode\nparticipant_added\tA participant has been added to a group conversation\nparticipant_removed\tA participant has been removed from a group conversation\nconversation_rating_changed\tA conversation rating has been changed, not this can only occur before the rating has been submitted. Once it has been submitted it cannot be changed\nconversation_rating_remark_added\tA conversation remark has been added to the converation\nsnoozed\tA conversation has been snoozed\nunsnoozed\tA conversation has been unsnoozed\nassign_and_unsnooze\tAssign a conversation and unsnooze it in one action.\ntimer_unsnooze\tUnsnooze a conversation after a set time"
  },
  {
    "title": "Retrieve the exported data",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/exports-content-stats/downloading-the-data/",
    "html": "Retrieve the exported data\n\nWhen a job has a status of complete, and thus a filled download_url, you can download your data by hitting that provided URL, formatted like so: https://api.intercom.io/download/content/data/xyz1234.\n\nYour exported message data will be streamed continuously back down to you in a gzipped CSV format.\n\nOCTET HEADER REQUIRED\n\nYou will have to specify the header Accept: application/octet-stream when hitting this endpoint.\n\nExample Request\ncurlcurl\ncurl https://api.intercom.io/download/content/data/xyz1234 \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/octet-stream'\\n\n\ncurl --compressed https://api.intercom.io/download/messages/data/xyz1234 \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/octet-stream'\n\nExample Errors\nhttphttp\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"errors\\\": [\\n      {\\n        \\\"code\\\": \\\"not_found\\\",\\n        \\\"message\\\": \\\"The requested resource does not exist.\\\"\\n      }\\n  ]\\n}\\n\n\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"errors\\\": [\\n      {\\n        \\\"code\\\": \\\"not_found\\\",\\n        \\\"message\\\": \\\"Object not found.\\\"\\n      }\\n  ]\\n}\\n\n\nResponse\n\nThis will return a gzipped folder containing multiple CSVs, one for each message statistic that you will need to unzip. If a statistic has no records then it will not be included in the zipped file.\n\nreceipts_YYYYMMDD_hhmmss.csv\nField\tType\tDescription\nuser_id\tstring\tThe user_id of the user who was sent the message.\nuser_external_id\tstring\tThe external_user_id of the user who was sent the message\ncompany_id\tstring\tThe company ID of the user in relation to the message that was sent. Will return -1 if no company is present.\nemail\tstring\tThe users email who was sent the message.\nname\tstring\tThe full name of the user receiving the message\nruleset_id\tstring\tThe id of the message.\ncontent_id\tstring\tThe specific content that was received. In an A/B test each version has its own Content ID.\ncontent_type\tstring\tEmail, Chat, Post etc.\ncontent_title\tstring\tThe title of the content you see in your Intercom workspace.\nruleset_version_id\tstring\tAs you edit content we record new versions. This ID can help you determine which version of a piece of content that was received.\nreceipt_id\tstring\tID for this receipt. Will be included with any related stats in other files to identify this specific delivery of a message.\nreceived_at\ttimestamp\tTimestamp for when the receipt was recorded.\nseries_id\tstring\tThe id of the series that this content is part of. Will return -1 if not part of a series.\nseries_title\tstring\tThe title of the series that this content is part of.\nnode_id\tstring\tThe id of the series node that this ruleset is associated with. Each block in a series has a corresponding node_id.\nfirst_reply\ttimestamp\tThe first time a user replied to this message if the content was able to receive replies.\nfirst_completion\ttimestamp\tThe first time a user completed this message if the content was able to be completed e.g. Tours, Surveys.\nfirst_series_completion\ttimestamp\tThe first time the series this message was a part of was completed by the user.\nfirst_series_disengagement\ttimestamp\tThe first time the series this message was a part of was disengaged by the user.\nfirst_series_exit\ttimestamp\tThe first time the series this message was a part of was exited by the user.\nfirst_goal_success\ttimestamp\tThe first time the user met this messages associated goal if one exists.\nfirst_open\ttimestamp\tThe first time the user opened this message.\nfirst_click\ttimestamp\tThe first time the series the user clicked on a link within this message.\nfirst_dismisall\ttimestamp\tThe first time the series the user dismissed this message.\nfirst_unsubscribe\ttimestamp\tThe first time the user unsubscribed from this message.\nfirst_hard_bounce\ttimestamp\tThe first time this message hard bounced for this user\nclick_YYYYMMDD_hhmmss.csv\n\nA click is recorded whenever a user, lead or visitor clicks a link in a piece of content. Here a link could be a regular text link, a button or an image that links somewhere.\n\nLink this file with the receipts file to track and analyze multiple clicks within the same message.\n\nField\tType\tDescription\nreceipt_id\tstring\tID of the receipt linked to this stat\nclicked_at\ttimestamp\tTimestamp for when the link, image or button was clicked."
  },
  {
    "title": "Closing or reopening a conversation",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/conversations/closing-a-conversation/",
    "html": "Closing or reopening a conversation\n\nYou can close or reopen a conversation with or without a reply, via a POST method to https://api.intercom.io/conversations/{convo_id}/reply/, which accepts a JSON object identifying whether you want to close or reopen.\n\nArgument\tRequired\tDescription\ntype\tyes\tMust be admin\nmessage_type\tyes\tMust be open or close\nadmin_id\tyes\tID of the admin the close or open will be attributed to\nClosing a Conversation Without Reply\ncurl https://api.intercom.io/conversations/xxx/reply\n-X POST\n-H 'Authorization:Bearer <Your access token>'\n-H 'Accept:application/json'\n-H 'Content-Type:application/json'\n-d '{ \"admin_id\": CLOSING_ADMIN_ID, \"message_type\": \"close\", \"type\": \"admin\"}'\n\n<?php\n\n$intercom->conversations->replyToConversation(\"10957850396\", [\n    \"type\" => \"admin\",\n    \"admin_id\" => \"814860\",\n    \"message_type\" => \"close\"\n]);\n?>\n\nClosing a Conversation With Reply\ncurl https://api.intercom.io/conversations/xxx/reply\n-X POST\n-H 'Authorization:Bearer <Your access token>'\n-H 'Accept:application/json'\n-H 'Content-Type:application/json'\n-d '{ \"body\":\"closing this convo\", \"admin_id\": CLOSING_ADMIN_ID, \"message_type\": \"close\", \"type\": \"admin\"}'\n\n<?php\n\n$convo = $intercom->conversations->replyToConversation(\"10957850396\", [\n    \"body\" => \"The beginning is the most important part of the work, but this is the end ... of the conversation!\",\n    \"type\" => \"admin\",\n    \"admin_id\" => \"814860\",\n    \"message_type\" => \"close\"\n]);\n?>\n"
  },
  {
    "title": "Company User/Segment/Tag Count Model",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/counts/company-tag-counts/",
    "html": "Company User/Segment/Tag Count Model\nCompany User/Segment/Tag Count Object\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\ncompany\tobject\tContains a field called segment containing segment counts\ncompany.segment\tarray\tContains a list of segment objects their name and their number of companies tagged\ncompany.tag\tarray\tContains a list of tag objects with their name and their number of companies tagged\ncompany.user\tarray\tContains an array of companies with their name and their number of users\ncurlcurlrubyphpjava\n# Company Tag Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=tag&per_page=5' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\n# Company Segment Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=segment' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\n# Company User Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=user' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\n# Company Tag Count\\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"count\\\",\\n    \\\"company\\\": {\\n        \\\"tag\\\": [\\n            {\\n                \\\"VIP\\\": 0\\n            },\\n            {\\n                \\\"UpMarket\\\": 0\\n            },\\n            {\\n                \\\"test\\\": 0\\n            },\\n            {\\n                \\\"new\\\": 0\\n            },\\n            {\\n                \\\"smb\\\": 0\\n            }\\n        ]\\n    },\\n    \\\"pages\\\": {\\n        \\\"pages\\\": {\\n            \\\"type\\\": \\\"pages\\\",\\n            \\\"next\\\": \\\"https://api.intercom.io/counts?type=company&count=tag&page=2&per_page=5\\\",\\n            \\\"page\\\": 1,\\n            \\\"per_page\\\": 5,\\n            \\\"total_pages\\\": 203\\n        }\\n    }\\n}\\n\\n# Company Segment Count\\nHTTP/1.1 200 OK\\n{\\n    \\\"type\\\": \\\"count\\\",\\n    \\\"company\\\": {\\n        \\\"segment\\\": [\\n            {\\n                \\\"Active\\\": 2\\n            },\\n            {\\n                \\\"New\\\": 0\\n            },\\n            {\\n                \\\"Slipping Away\\\": 0\\n            },\\n            {\\n                \\\"id=10\\\": 10\\n            }\\n        ]\\n    },\\n    \\\"pages\\\": {}\\n}\\n\\n# Company User Count\\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"count\\\",\\n  \\\"company\\\": {\\n    \\\"user\\\": [\\n      {\\n        \\\"Independents\\\": 7,\\n        \\\"remote_company_id\\\": \\\"6\\\"\\n      },\\n      {\\n        \\\"Alliance\\\": 1,\\n        \\\"remote_company_id\\\": \\\"7\\\"\\n      }\\n    ]\\n  },\\n  \\\"pages\\\": {}\\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nCompany Segment Count\tcompany\tsegment\nCompany Tag Count\tcompany\ttag\nCompany User Count\tcompany\tuser\n\n🚧 Pagination with company counts\n\nCompany tag counts are returned via pagination, which means it defaults to 50 results per page unless you specify otherwise. e.g. 'https://api.intercom.io/counts?type=company&count=tag&per_page=10\"\n\nTo get the next page of results you need to make a GET request with the \"next\" RUL supplied in the initial response."
  },
  {
    "title": "Creating an export job",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/exports-content-stats/creating-an-export-job/",
    "html": "Creating an export job\n\nTo create your export job, you need to send a POST request to the export endpoint https://api.intercom.io/export/content/data.\n\nThe only parameters you need to provide are the range of dates that you want exported.\n\nParameter\tRequired?\tDescription\ncreated_at_after\tYes\tThe start date that you request data for. It must be formatted as a unix timestamp.\ncreated_at_before\tYes\tThe end date that you request data for. It must be formatted as a unix timestamp.\n\n🚧 Limit of one active job\n\nYou can only have one active job per workspace. You will receive a HTTP status code of 429 with the message Exceeded rate limit of 1 pending message data export jobs if you attempt to create a second concurrent job.\n\n❗️ Updated_at not included\n\nIt should be noted that the timeframe only includes messages sent during the time period and not messages that were only updated during this period. For example, if a message was updated yesterday but sent two days ago, you would need to set the created_at_after date before the message was sent to include that in your retrieval job.\n\nDATE RANGES ARE INCLUSIVE\n\nRequesting data for 2018-06-01 until 2018-06-30 will get all data for those days including those specified - e.g. 2018-06-01 00:00:00 until 2018-06-30 23:59:99.\n\nExample Request\ncURL\ncurl https://api.intercom.io/export/content/data \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"created_at_after\\\": 1527811200,\\n  \\\"created_at_before\\\": 1530316800\\n}'\n\nExample Response\nHTTP\nHTTP/1.1 200 OK\\n{\\n  \\\"job_identifier\\\":\\\"v5xsp8c19ji0s82\\\",\\n  \\\"status\\\":\\\"pending\\\",\\n  \\\"download_expires_at\\\": \\\"\\\",\\n  \\\"download_url\\\": \\\"\\\",\\n}\n\nExample Errors\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n      {\n        \"code\": \"bad_request\",\n        \"message\": \"created_at_after is greater than created_at_before\"\n      }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n      {\n        \"code\": \"bad_request\",\n        \"message\": \"'created_at_before' is a required parameter\"\n      }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n      {\n        \"code\": \"bad_request\",\n        \"message\": \"bad 'random_param' parameter\"\n      }\n  ]\n}\n\nReturns\n\nSee Export Job Model"
  },
  {
    "title": "Update a data attribute",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/data-attributes/update-data-attributes/",
    "html": "Update a data attribute\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/data_attributes/163728 \\\\\\n-X PUT \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d\\n\\n{\\n  \\\"description\\\": \\\"You are either great or bad\\\",\\n  \\\"options\\\": [\\n    {\\\"value\\\": \\\"great\\\"},\\n    {\\\"value\\\": \\\"bad\\\"}\\n  ]\\n}\n\nExample Errors\nHTTP/1.1 404 NOT FOUND\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"0006klvnje6ffng7ot80\",\n  \"errors\": [\n    {\n      \"code\": \"field_not_found\",\n      \"message\": \"We couldn't find that data attribute to update\"\n    }\n  ]\n}\n\nHTTP/1.1 422 UNPROCESSIBLE ENTITY\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"0006klvnje6ffng7ot80\",\n  \"errors\": [\n    {\n      \"code\": \"data_invalid\",\n      \"message\": \"The Data Attribute you are trying to archive has a dependant object\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"0000rnvpf3m1f3nf4k40\",\n  \"errors\": [\n    {\n      \"code\": \"parameter_invalid\",\n      \"message\": \"You must have at least two options on a list type data attribute\"\n    }\n  ]\n}\n\n\nYou can update data attribute.\n\nRequest Body Parameters\nArgument\tType\tDescription\ndescription\tString\t(Optional) The readable description you see in the UI for the attribute.\noptions\tList\t(Optional) To change to or update list attributes.\nProvide a set of hashes with value as the key of the options you want to make.\ndata_type must be string.\narchived\tBoolean\t(Optional) Whether the attribute is to be archived or not.\n\n🚧 Updating the data type is not possible\n\nIt is currently a dangerous action to execute changing a data attribute's type via the API. You will need to update the type via the UI instead.\n\nResponse\n\nThis will return a Data Attribute Model showing the details of your updated attribute."
  },
  {
    "title": "Conversation Rating Model",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/conversations/conversation-rating-model/",
    "html": "Conversation Rating Model\nExample Conversation Part Object\n    \\\"conversation_rating\\\": {\\n        \\\"rating\\\": null,\\n        \\\"remark\\\": null,\\n        \\\"created_at\\\": null,\\n        \\\"customer\\\": {\\n            \\\"type\\\": null,\\n            \\\"id\\\": null\\n        },\\n        \\\"teammate\\\": {\\n            \\\"type\\\": null,\\n            \\\"id\\\": null\\n        }\\n    }\n\n\nA conversation rating contains information relating to a customer's satisfaction with their interaction with your team. For more info on conversation ratings please see here\n\nConversation Rating Object\nAttribute\tType\tDescription\nrating\tinteger\tThe rating, between 1 and 5, for the conversation\nremark\tstring\tAn optional field to add a remark to correspond to the number rating\ncreated_at\ttimestamp\tThe time the rating was requested in the conversation being rated\ncustomer\tobject\tAn object containing the ID and type of the customer (e.g. it could be a user or lead)\nteammate\tobject\tAn object containing the ID and type of the Intercom teammate associated with the conversation when it was rated\nCustomer Object\nAttribute\tType\tDescription\ntype\tstring\tA conversation can be rated by either a user or a lead. This will default to null when there is no rating on a conversation.\nid\tstring\tThe Intercom ID of the customer rating the conversation. This defaults to null.\nTeammate Object\nAttribute\tType\tDescription\ntype\tstring\tCurrently this will always be of type admin. It will be null by default if the conversation has not been rated\nid\tstring\tThis is the ID of the teammate being rated. This will default to null."
  },
  {
    "title": "Input Values",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/requestobjects/input-values/",
    "html": "Input Values\nDescription\n\nThe input_values object is a JSON hash containing key-value pairs. These key-value pairs represent the data that's been inputted by customers and teammates with a given component.\n\nThe key will be the component_id and the value will be the data that was inputted by this component.\n\nExample Object\ninput_values: { \"<component_id>\": \"<Value entered in component>\" }, //Can be more than one pair\n"
  },
  {
    "title": "Admin Initiated Conversation",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/conversations/admin-initiated-conversation/",
    "html": "Admin Initiated Conversation\nEmail From Admin\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/messages \\\\\\n-XPOST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d'\\n{\\n  \\\"message_type\\\": \\\"email\\\",\\n  \\\"subject\\\": \\\"Hey\\\",\\n  \\\"body\\\": \\\"Ponies, cute small horses or something more sinister?\\\",\\n  \\\"template\\\": \\\"plain\\\",\\n  \\\"from\\\": {\\n    \\\"type\\\": \\\"admin\\\",\\n    \\\"id\\\": \\\"394051\\\"\\n  },\\n  \\\"to\\\": {\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"536e564f316c83104c000020\\\"\\n  }\\n}'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"admin_message\\\",\\n  \\\"id\\\": \\\"2001\\\",\\n  \\\"created_at\\\": 1401916877,\\n  \\\"message_type\\\": \\\"email\\\",\\n  \\\"subject\\\" : \\\"Hey\\\",\\n  \\\"body\\\" : \\\"Ponies, cute small horses or something more sinister?\\\",\\n  \\\"template\\\": \\\"plain\\\",\\n  \\\"owner\\\": {\\n    \\\"email\\\": \\\"wash@serenity.io\\\",\\n    \\\"id\\\": \\\"394051\\\",\\n    \\\"name\\\": \\\"Wash\\\",\\n    \\\"type\\\": \\\"admin\\\"\\n  }\\n}\n\n\nYou can create a new admin initiated message by submitting a POST to https://api.intercom.io/messages along with JSON message.\n\nAn admin initiated message can be delivered to a user as an In-App conversation or as an Email. The message_type field is used to determine which, with a value of either inapp or email. For admin initiated In-App messages, they will not trigger push notifications.\n\nReceiving Users are identified by a user_id, id, or email field in the to object.\n\nReceiving Contacts are identified by a user_id or id field in the to object.\n\nThe type field for the to object is then set to either contact or user.\n\nThe subject field is only used for email type messages and will not be used for inapp message types.\n\nA sending admin must be added using the from field, along with a type field value of admin and the corresponding Intercom id for that admin. The admin's Intercom id value may be obtained from the List Admins resource.\n\nCONVERSATION V MESSAGE\n\nNote that since creating an admin-initiated conversation hits the /messages endpoint, the response contains a message object rather than a conversation object. As a result you will not see the conversation ID in the returned message object. You may, however, retrieve the customers's conversations and iterate over them looking for the message_id value.\n\nAttributes\nAttribute\tType\tDescription\nmessage_type\tstring\tThe kind of message being created. Values: inapp or email\nsubject\tstring\tOptional unless message_type is email. The title of the email.\nbody\tstring\tThe content of the message. HTML or plaintext.\ntemplate\tstring\tThe style of the outgoing message. Only valid for email messages. Possible values plain or personal.\nfrom\tobject\tRequired. An admin object containing the admin's id. The type field must have a value of admin.\nto\tobject\tRequired. A user object containing the user's id, email or user_id. The type field must have a value of user or of contact.\nReturns\n\nThe created message object.\n\nIf the from type was supplied with an admin's details, the owner field in the response will represent the admin in question."
  },
  {
    "title": "Adding to group conversations as customer",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/conversations/adding-to-group-conversations-as-customer/",
    "html": "Adding to group conversations as customer\nAdding a customer to a group conversation as customer\n$ curl 'https://api.intercom.io/conversations/11055118659/customers' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"intercom_user_id\": \"55c1c78946b0aa9ef45b09ff\",\n  \"customer\":{\n    \"intercom_user_id\": \"58c1c78946a0aa9ef45b098a\"\n  }\n}'\n\nHTTP/1.1 200 OK\n\n{\"customers\":[\n  {\"type\":\"user\",\"id\":\"597f02cb22f4bb37597e0b7d\"}, \n  {\"type\":\"lead\",\"id\":\"58ff3f670f14ab4f1aa83750\"}]\n}\n\n\nCustomers can also be added by other customer that's already part of the conversation.\n\nArguments\nArgument\tRequired\tDescription\nintercom_user_id\tone of\tThe Intercom defined id representing the user (in the URL)\nuser_id\tone of\tThe user id you have defined for the user (or auto defined in the case of leads)\nemail\tone of\tThe email you have defined for the user\ncustomer\tYes\tJSON object describing the customer that you want to add to the conversation."
  },
  {
    "title": "List all collections",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/help-center/list-all-collections/",
    "html": "List all collections\nExample Request & Response (Single Language Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/collections \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can fetch a list of all collections by making a GET request to https://api.intercom.io/help_center/collections.\n\nResponse\nKey\tType\tDescription\ntype\tString\tThe type of object - list.\npages\tObject\tA Pages object with the information needed to paginate through collections.\ntotal_count\tInteger\tA count of the total number of collections.\ndata\tArray\tAn array of Collection objects.\nHOW ARE THE COLLECTIONS SORTED AND ORDERED?\n\nCollections will be returned in descending order on the updated_at attribute. This means if you need to iterate through results then we'll show the most recently updated collections first."
  },
  {
    "title": "Create a contact",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/contacts/create-contact/",
    "html": "Create a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts \\\\-X POST \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json'-H 'Content-Type: application/json' -d{\\t\\\"role\\\": \\\"user\\\",\\t\\\"external_id\\\": \\\"25\\\",\\t\\\"email\\\": \\\"wash@serenity.io\\\",\\t\\\"phone\\\": \\\"+1123456789\\\",\\t\\\"name\\\": \\\"Hoban Washburn\\\",\\t\\\"avatar\\\": \\\"https://example.org/128Wash.jpg\\\",\\t\\\"last_seen_at\\\": 1571069751,\\t\\\"signed_up_at\\\": 1571069751,\\t\\\"owner_id\\\": 127,\\t\\\"unsubscribed_from_emails\\\": false,\\t\\\"custom_attributes\\\": {\\t\\t\\\"paid_subscriber\\\": true,\\t\\t\\\"monthly_spend\\\": 155.5,\\t\\t\\\"team_mates\\\": 1\\t}}\n\nExample Errors\nhttphttp\nHTTP/1.1 409 CONFLICT{  \\\"type\\\": \\\"error.list\\\",  \\\"request_id\\\": \\\"80ec9d92-99ff-4da9-9a0e-c0ab7c42f7e7\\\",  \\\"errors\\\": [    {      \\\"code\\\": \\\"conflict\\\",      \\\"message\\\": \\\"A contact matching those details already exists with id=5da6f18e3d7cf967e4582d05\\\"    }  ]}\n\nHTTP/1.1 400 BAD REQUEST{  \\\"type\\\": \\\"error.list\\\",  \\\"request_id\\\": \\\"00043csj9iva7pl9mmmg\\\",  \\\"errors\\\": [    {      \\\"code\\\": \\\"parameter_invalid\\\",      \\\"message\\\": \\\"The owner specified is not a member of the workspace\\\"    }  ]}\n\n\nYou can create a new contact (ie. user or lead).\n\nRequest Body Parameters\nAttribute\tType\tRequired\tDescription\nrole\tString\tYes\tThe role of the contact. Accepted values are user or lead.\nexternal_id\tString\tYes - if role is user and email is blank\tA unique identifier for the contact which is given to Intercom\nemail\tString\tYes - if role is user and external_id is blank\tThe contacts email\nphone\tString\tNo\tThe contacts phone\nname\tString\tNo\tThe contacts name\navatar\tString\tNo\tAn image URL containing the avatar of a contact\nsigned_up_at\tTimestamp\tNo\tThe time specified for when a contact signed up\nlast_seen_at\tTimestamp\tNo\tThe time when the contact was last seen (either where the Intercom Messenger was installed or when specified manually)\nowner_id\tInteger\tNo\tThe id of an admin that has been assigned account ownership of the contact\nunsubscribed_from_emails\tBoolean\tNo\tWhether the contact is unsubscribed from emails\ncustom_attributes\tObject\tNo\tThe custom attributes which are set for the contact\nCREATING NEW CUSTOM DATA ATTRIBUTES\n\nYou can only write to custom data attributes that already exist on the workspace. If you need to create new attributes to write to, you should Create Data Attributes through the data Attributes API.\n\nResponse\n\nThis will return a Contact model of the contact you just created."
  },
  {
    "title": "Sheets Action",
    "url": "https://developers.intercom.com/docs/references/canvas-kit/actioncomponents/sheets-action/",
    "html": "Sheets Action\n\nA sheet action opens the link you give within the Messenger as an embedded iframe.\n\nMore on how Sheets work is in our Canvas Kit documentation.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsheet\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which hosts your sheet.\nExample Object\naction: {\n  type: \"sheet\",\n  url:  \"http://example.com\"\n}\n"
  },
  {
    "title": "Admin Conversations Count Model",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/counts/admin-conversations/",
    "html": "Admin Conversations Count Model\nAdmin Conversation Count Object\n\nThe admin conversation count supplies per Admin counts\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nconversation\tobject\tContains counts related to admins\nconversation.admin\tarray\tContains an array of objects detailing each Admin\nconversation.admin.open\tnumber\tContains the number of open conversations for the Admin\nconversation.admin.closed\tnumber\tContains the number of closed conversations for the Admin\nconversation.admin.id\tstring\tContains the Admin id\nconversation.admin.name\tstring\tContains the Admin name\n{\n  \"type\": \"count\",\n  \"conversation\": {\n    \"admin\": [\n      {\n        \"id\": \"1\",\n        \"name\": \"Wash\",\n        \"open\": 0,\n        \"closed\": 1\n      },\n      {\n        \"id\": \"2\",\n        \"name\": \"Jayne\",\n        \"open\": 0,\n        \"closed\": 0\n      }\n    ]\n  }\n}\n\n# Conversation Admin Counts\n$ curl 'https://api.intercom.io/counts?type=conversation&count=admin' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# Conversation Admin Counts\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"conversation\": {\n    \"admin\": [\n      {\n        \"id\": \"1\",\n        \"name\": \"Wash\",\n        \"open\": 0,\n        \"closed\": 1\n      },\n      {\n        \"id\": \"2\",\n        \"name\": \"Jayne\",\n        \"open\": 0,\n        \"closed\": 0\n      }\n    ]\n  }\n}\n\nintercom.counts.for_type(type: 'conversation', count: 'admin')\n\n<?php\n// Conversation Admin Count\n$counts = $intercom->counts->getCounts([\"type\" => \"conversation\", \"count\" => \"admin\"]);\nprint_r($counts);\n?>\n\n// Conversation Admin Count\nfinal Counts.Conversation counts = Counts.conversationAdmins();\nList<Admin> admins = counts.getAdmins();\nfor (Admin admin : admins) {\n    out.println(\n      admin.getName() + \": \" +\n      admin.getClosed() + \", \" +\n      admin.getOpen());\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nConversation Admin Count\tconversation\tadmin"
  },
  {
    "title": "Compatibility",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/common-structures/compatibility/",
    "html": "Compatibility\nUnknown Field\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"user_id\\\" : \\\"456456\\\",\\n  \\\"email\\\" : \\\"j@example.org\\\",\\n  \\\"such_key\\\": \\\"so_value\\\"\\n}\n\nMust Ignore Interpretation\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"user_id\\\" : \\\"456456\\\",\\n  \\\"email\\\" : \\\"j@example.org\\\"\\n}\n\n\nJSON objects in the API follow a must ignore processing model, where clients are expected to ignore data fields they don't understand.\n\nFor example if the client saw the JSON as shown in the example on the right ('Unknown Field') and did not understand the such_key field (and who can blame it?), it must pretend the field wasn't there and will process the object as if it looked liked the object shown in 'Must Ignore'.\n\nWhen fetching content, fields that are optional for API objects are indicated in the documentation - clients must not assume they will always be present. When submitting content, fields that are required to be sent by client are also indicated in the documentation - if these are not sent the API may reject the request.\n\nIn general the API may reject JSON where data is not valid or incomplete with a 422 Unprocessable Entity response and an error message explaining the issue. For example, an email message type may be rejected if it is not sent with a subject field."
  },
  {
    "title": "Admin Conversations Count Model",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/counts/admin-conversations/",
    "html": "Admin Conversations Count Model\nAdmin Conversation Count Object\n\nThe admin conversation count supplies per Admin counts\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nconversation\tobject\tContains counts related to admins\nconversation.admin\tarray\tContains and array of objects detailing each Admin\nconversation.admin.open\tnumber\tContains the number of open conversations for the Admin\nconversation.admin.closed\tnumber\tContains the number of closed conversations for the Admin\nconversation.admin.id\tstring\tContains the Admin id\nconversation.admin.name\tstring\tContains the Admin name\n{\n  \"type\": \"count\",\n  \"conversation\": {\n    \"admin\": [\n      {\n        \"id\": \"1\",\n        \"name\": \"Wash\",\n        \"open\": 0,\n        \"closed\": 1\n      },\n      {\n        \"id\": \"2\",\n        \"name\": \"Jayne\",\n        \"open\": 0,\n        \"closed\": 0\n      }\n    ]\n  }\n}\n\n# Conversation Admin Counts\n$ curl 'https://api.intercom.io/counts?type=conversation&count=admin' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# Conversation Admin Counts\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"conversation\": {\n    \"admin\": [\n      {\n        \"id\": \"1\",\n        \"name\": \"Wash\",\n        \"open\": 0,\n        \"closed\": 1\n      },\n      {\n        \"id\": \"2\",\n        \"name\": \"Jayne\",\n        \"open\": 0,\n        \"closed\": 0\n      }\n    ]\n  }\n}\n\nintercom.counts.for_type(type: 'conversation', count: 'admin')\n\n<?php\n// Conversation Admin Count\n$counts = $intercom->counts->getCounts([\"type\" => \"conversation\", \"count\" => \"admin\"]);\nprint_r($counts);\n?>\n\n// Conversation Admin Count\nfinal Counts.Conversation counts = Counts.conversationAdmins();\nList<Admin> admins = counts.getAdmins();\nfor (Admin admin : admins) {\n    out.println(\n      admin.getName() + \": \" +\n      admin.getClosed() + \", \" +\n      admin.getOpen());\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nConversation Admin Count\tconversation\tadmin"
  },
  {
    "title": "Compatibility",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/common-structures/compatibility/",
    "html": "Compatibility\nUnknown Field\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"external_id\\\" : \\\"456456\\\",\\n  \\\"email\\\" : \\\"j@example.org\\\",\\n  \\\"such_key\\\": \\\"so_value\\\"\\n}\n\nMust Ignore Interpretation\n{\\n  \\\"type\\\": \\\"contact\\\",\\n  \\\"external_id\\\" : \\\"456456\\\",\\n  \\\"email\\\" : \\\"j@example.org\\\"\\n}\n\n\nJSON objects in the API follow a must ignore processing model, where clients are expected to ignore data fields they don't understand.\n\nFor example if the client saw the JSON as shown in the example on the right ('Unknown Field') and did not understand the such_key field, it must pretend the field wasn't there and will process the object as if it looked liked the object shown in 'Must Ignore'.\n\nWhen fetching content, fields that are optional for API objects are indicated in the documentation - clients must not assume they will always be present. When submitting content, fields that are required to be sent by client are also indicated in the documentation - if these are not sent the API may reject the request.\n\nIn general the API may reject JSON where data is not valid or incomplete with a 422 Unprocessable Entity response and an error message explaining the issue. For example, an email message type may be rejected if it is not sent with a subject field."
  },
  {
    "title": "View a Team",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/teams/view-a-team/",
    "html": "View a Team\nRetrieve a single team\n$ curl https://api.intercom.io/teams/2744328 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"admin_ids\": [\n        646303,\n        814860\n    ],\n    \"id\": \"2744328\",\n    \"name\": \"the_a_team\",\n    \"type\": \"team\"\n}\n\n\nEach admin object has its own URL, where the {id} is the value of the teams id field:\n\nhttps://api.intercom.io/teams/{id}"
  },
  {
    "title": "Segment Model",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/segments/segment-model/",
    "html": "Segment Model\nExample Object\n{\\n  \\\"type\\\": \\\"segment\\\",\\n  \\\"id\\\": \\\"53203e244cba153d39000062\\\",\\n  \\\"name\\\": \\\"New\\\",\\n  \\\"created_at\\\": 1394621988,\\n  \\\"updated_at\\\": 1394622004\\n}\n\nSegment Object\n\nA segment has a name and an id field along with created_at and updated_at timestamps. It can optionally include a count of the items in the segment when view or listing user segments.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is segment'\nid\tstring\tThe id representing the segment\nname\tstring\tThe name of the segment\ncreated_at\ttimestamp\tThe time the segment was created\nupdated_at\ttimestamp\tThe time the segment was updated\nperson_type\tstring\tType of the record: user or lead.\ncount\tinteger\tThe number of items in the user segment. It's returned when include_count=true is included in the request."
  },
  {
    "title": "Tag or Untag Users, Companies & Leads (Contacts)",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/tags/tag-or-untag-users-companies-leads-contacts/",
    "html": "Tag or Untag Users, Companies & Leads (Contacts)\nExample Tag Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/tags \\\\\\n-XPOST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d'\\n{\\n  \\\"name\\\": \\\"Independent\\\",\\n  \\\"users\\\": [\\n    {\\n      \\\"id\\\" : \\\"53427b7ecce5722303000003\\\"\\n    },\\n    {\\n      \\\"user_id\\\" : \\\"22\\\"\\n    },\\n    {\\n      \\\"email\\\" : \\\"a@b.com\\\"\\n    }\\n  ]\\n}\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"tag\\\",\\n  \\\"name\\\": \\\"Independent\\\",\\n  \\\"id\\\": \\\"17513\\\"\\n}\n\n\nYou can also tag users, companies, or leads (contacts) using a POST to https://api.intercom.io/tags. This lets you assign a tag to multiple users or companies at once. If the tag does not already exist it will be created for you.\n\nUsers can be tagged by supplying a users array. The array contains objects identifying users by their id, email or user_id fields.\n\nCompanies can be tagged by sending a companies array. The array contains objects identifying companies by their idor company_id fields.\n\nContacts/Leads can be tagged by supplying a users array. The array contains objects identifying leads by their id fields.\n\nCompanies and user tag directives cannot be mixed in the same request - a request will not process both company and user arrays.\n\nWe recommend tagging no more than 50 users at a time as larger amounts could result in a timeout.\n\nExample Untag Request\n\n$ curl https://api.intercom.io/tags \\\n-XPOST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d'\n{\n  \"name\": \"Independent\",\n  \"users\": [\n    {\n      \"id\" : \"53427b7ecce5722303000003\",\n      \"untag\": true\n    },\n    {\n      \"user_id\" : \"22\"\n    }\n  ]\n}\n\nintercom.tags.untag(name: 'blue', users: [{ id: \"42ea2f1b93891f6a99000427\" }])\n\n<?php\n$intercom->tagUsers(array(\n  \"name\" => \"Independent\",\n  \"users\" => array(\n    array(\"user_id\" => \"22\", \"untag\" => true)\n  )\n));\n?>\n\nUser user = new User()\n  .setEmail(\"simon@serenity.io\")\n  .untag();\nList<User> users = Lists.newArrayList(user);\nTag.tag(tag, new UserCollection(users));\n\nHTTP/1.1 200 Ok\n\n{\n  \"type\": \"tag\",\n  \"name\": \"Follow Up\",\n  \"id\": \"17513\"\n}\n\n\nTo untag a company or user, each user or company object sent in the tagging request can be submitted with an untag field whose value is set to true.\n\nObjects submitted with an untag field can be mixed with other objects being tagged. This allows tag and untag operations to be performed in a single request.\n\nThe default behaviour if untag is not suppled is to tag the object. Setting the untagvalue to false is the same as requesting the object be tagged.\n\nAttributes\nAttribute\tRequired\tDescription\nname\trequired\tThe name of the tag, which will be created if not found.\nusers\toptional\tAn array of objects identifying users.\ncompanies\toptional\tAn array of objects identifying companies.\nReturns\n\nThe tag object containing its name and id fields."
  },
  {
    "title": "Admin Conversations Count Model",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/counts/admin-conversations/",
    "html": "Admin Conversations Count Model\nAdmin Conversation Count Object\n\nThe admin conversation count supplies per Admin counts\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nconversation\tobject\tContains counts related to admins\nconversation.admin\tarray\tContains and array of objects detailing each Admin\nconversation.admin.open\tnumber\tContains the number of open conversations for the Admin\nconversation.admin.closed\tnumber\tContains the number of closed conversations for the Admin\nconversation.admin.id\tstring\tContains the Admin id\nconversation.admin.name\tstring\tContains the Admin name\n{\n  \"type\": \"count\",\n  \"conversation\": {\n    \"admin\": [\n      {\n        \"id\": \"1\",\n        \"name\": \"Wash\",\n        \"open\": 0,\n        \"closed\": 1\n      },\n      {\n        \"id\": \"2\",\n        \"name\": \"Jayne\",\n        \"open\": 0,\n        \"closed\": 0\n      }\n    ]\n  }\n}\n\n# Conversation Admin Counts\n$ curl 'https://api.intercom.io/counts?type=conversation&count=admin' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# Conversation Admin Counts\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"conversation\": {\n    \"admin\": [\n      {\n        \"id\": \"1\",\n        \"name\": \"Wash\",\n        \"open\": 0,\n        \"closed\": 1\n      },\n      {\n        \"id\": \"2\",\n        \"name\": \"Jayne\",\n        \"open\": 0,\n        \"closed\": 0\n      }\n    ]\n  }\n}\n\nintercom.counts.for_type(type: 'conversation', count: 'admin')\n\n<?php\n// Conversation Admin Count\n$counts = $intercom->counts->getCounts([\"type\" => \"conversation\", \"count\" => \"admin\"]);\nprint_r($counts);\n?>\n\n// Conversation Admin Count\nfinal Counts.Conversation counts = Counts.conversationAdmins();\nList<Admin> admins = counts.getAdmins();\nfor (Admin admin : admins) {\n    out.println(\n      admin.getName() + \": \" +\n      admin.getClosed() + \", \" +\n      admin.getOpen());\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nConversation Admin Count\tconversation\tadmin"
  },
  {
    "title": "Tag Model",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/tags/tag-model/",
    "html": "Tag Model\nExample Object\n{\\n  \\\"id\\\": \\\"17513\\\",\\n  \\\"name\\\": \\\"independent\\\",\\n  \\\"type\\\": \\\"tag\\\"\\n}\n\nTag Object\n\nA tag has a name and an id field. Once created the id field cannot be changed, but the name field can be updated later to allow tag renaming.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'tag'\nid\tstring\tThe id of the tag\nname\tstring\tThe name of the tag"
  },
  {
    "title": "User or Lead Initiated Conversation",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/conversations/user-or-contact-initiated-conversation/",
    "html": "User or Lead Initiated Conversation\nUser Initiated Message\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/messages \\\\\\n-XPOST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d'\\n{\\n  \\\"from\\\": {\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"536e564f316c83104c000020\\\"\\n  },\\n  \\\"body\\\": \\\"Hey\\\"\\n}'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"user_message\\\",\\n  \\\"id\\\": \\\"2001\\\",\\n  \\\"created_at\\\": 1401917202,\\n  \\\"body\\\" : \\\"Hey, is the new thing in stock?\\\",\\n  \\\"message_type\\\": \\\"inapp\\\"\\n}\n\n\nYou can create a new user or lead initiated message by submitting a POST to https://api.intercom.io/messages along with a JSON message.\n\nThe sending user or lead is identified by their user_id, email or id values in the from field, along with a type field value of user or contact.\n\nYou can also send a message from a visitor by specifying their user_id or id value in the from field, along with a type field value of contact. This visitor will be automatically converted to a lead once the message is sent.\n\nThe message_type for a user initiated message is always treated as a inapp and will appear as a conversation inside Intercom. The email message type is not currently supported for a user initiated message.\n\nUser initiated messages can not be sent to specific admins, and as such, do not use the to field.\n\nAttributes\nAttribute\tType\tDescription\nbody\tstring\tThe content of the message. Plaintext only, HTML is not supported.\nfrom\tobject\tA user or lead object containing the user's id or user_id (or email if lead). The type field must have a value of user or contact.\nReturns\n\nThe created message object."
  },
  {
    "title": "Unsnoozing a conversation",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/conversations/unsnoozing-a-conversation/",
    "html": "Unsnoozing a conversation\nUnsnooze a conversation\n$ curl 'https://api.intercom.io/conversations/11055118659/reply' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"admin_id\": \"814860\",\n  \"message_type\":\"open\"\n}'\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"11055118659\",\n    \"created_at\": 1501496012,\n    \"updated_at\": 1501508752,\n    \"waiting_since\": 1501498931,\n    \"snoozed_until\": null,\n    \"conversation_message\": {\n        \"type\": \"conversation_message\",\n        \"id\": \"55951247\",\n        \"subject\": \"\",\n        \"body\": \"<p>Hi \\ud83d\\ude00 We hope you enjoy the example app. To get started just copy and paste some code into the JS editor. Let us know if you think this is useful? <br></p>\",\n        \"author\": {\n            \"type\": \"admin\",\n            \"id\": \"724865\"\n        },\n        \"attachments\": [],\n        \"url\": null\n    },\n    \"user\": {\n        \"type\": \"lead\",\n        \"id\": \"597f02cb22f4bb37597e0b7d\"\n    },\n    \"customers\": [\n        {\n            \"type\": \"lead\",\n            \"id\": \"597f02cb22f4bb37597e0b7d\"\n        },\n        {\n            \"type\": \"user\",\n            \"id\": \"58ff3f670f14ab4f1aa83750\"\n        }\n    ],\n    \"assignee\": {\n        \"type\": \"admin\",\n        \"id\": \"724860\"\n    },\n    \"conversation_parts\": {\n        \"type\": \"conversation_part.list\",\n        \"conversation_parts\": [\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712337945\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>test convo 1</p>\",\n                \"created_at\": 1501496025,\n                \"updated_at\": 1501496025,\n                \"notified_at\": 1501496025,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"user\",\n                    \"id\": \"597f02cb22f4bb37597e0b7d\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712338024\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>TestApp typically replies in a few hours. Don\\u2019t miss their reply.</p>\",\n                \"created_at\": 1501496028,\n                \"updated_at\": 1501496028,\n                \"notified_at\": 1501496028,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"bot\",\n                    \"id\": \"815309\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712338089\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p></p><p>Get notified by email</p>\",\n                \"created_at\": 1501496030,\n                \"updated_at\": 1501496030,\n                \"notified_at\": 1501496031,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"bot\",\n                    \"id\": \"815309\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712344562\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>group test two</p>\",\n                \"created_at\": 1501496290,\n                \"updated_at\": 1501496290,\n                \"notified_at\": 1501496291,\n                \"assigned_to\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712383990\",\n                \"part_type\": \"participant_added\",\n                \"body\": null,\n                \"created_at\": 1501497831,\n                \"updated_at\": 1501497831,\n                \"notified_at\": 1501497832,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712411349\",\n                \"part_type\": \"participant_added\",\n                \"body\": null,\n                \"created_at\": 1501498885,\n                \"updated_at\": 1501498885,\n                \"notified_at\": 1501498885,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712412506\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>group test</p>\",\n                \"created_at\": 1501498931,\n                \"updated_at\": 1501498931,\n                \"notified_at\": 1501498932,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"user\",\n                    \"id\": \"597f02cb22f4bb37597e0b7d\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712425169\",\n                \"part_type\": \"participant_removed\",\n                \"body\": null,\n                \"created_at\": 1501499414,\n                \"updated_at\": 1501499414,\n                \"notified_at\": 1501499414,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712728293\",\n                \"part_type\": \"snoozed\",\n                \"body\": null,\n                \"created_at\": 1501508752,\n                \"updated_at\": 1501508752,\n                \"notified_at\": 1501508752,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            }\n        ],\n        \"total_count\": 9\n    },\n    \"open\": true,\n    \"state\": \"snoozed\",\n    \"read\": false,\n    \"tags\": {\n        \"type\": \"tag.list\",\n        \"tags\": []\n    }\n}\n\nArguments\nArgument\tRequired\tDescription\nadmin_id\tYes\tOnly admins can snooze a conversation so you need to provide the admin_id\nmessage_type\tYes\tMust be open to re-open or 'unsnooze' the conversation"
  },
  {
    "title": "List Company Users",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/companies/list-company-users/",
    "html": "List Company Users\nExample ID Request\n$ curl https://api.intercom.io/companies/5310dabd598c9a0a7e000005/users \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nintercom.companies.users(company.id)\n\nMap<String, String> params params = Maps.newHashMap();\nparams.put(\"company_id\", \"6\");\nUserCollection users = Company.listUsers(params);\n\nExample Company ID Request\n$ curl https://api.intercom.io/companies?company_id=22&type=user \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"user.list\",\n  \"total_count\": 10,\n  \"users\": [\n    {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ]\n}\n\n# NB: Full User objects are returned\n\nintercom.companies.users(company.company_id)\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"company_id\", \"1\");\nCompany company = Company.find(map);\n\n\nThe users belonging to a company can be listed by sending a GET request to https://api.intercom.io/companies/{id}/users, where {id} is the value of the company's id field.\n\nTo query for a company's users using the company id value you have assigned to the company, send a GET request to https://api.intercom.io/companies, using the parameter {company_id} with value of the company id, and a type field with a value of users.\n\nRequest Parameters\nParameter\tRequired\tDescription\ncompany_id\tyes\tYour company id for the company.\ntype\tyes\tThe value must be user\nReturns\n\nA pageable list of users and leads. Response objects contain type set to user and contact respectively. See the section \"List Users\" and \"List Leads\" for details of the JSON response."
  },
  {
    "title": "View a Company",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/companies/view-a-company/",
    "html": "View a Company\nExample View Request and Response\n$ curl \\\n-s https://api.intercom.io/companies?company_id=141 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Accept:application/json\" \\\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"company\",\n  \"id\": \"531ee472cce572a6ec000006\",\n  \"name\": \"Blue Sun\",\n  \"plan\": {\n    \"type\":\"plan\",\n    \"id\":\"1\",\n    \"name\":\"Paid\"\n  },\n  \"company_id\": \"141\",\n  \"remote_created_at\": 1394531169,\n  \"created_at\": 1394533506,\n  \"updated_at\": 1396874658,\n  \"last_request_at\": 1396874658,\n  \"monthly_spend\": 49,\n  \"session_count\": 26,\n  \"user_count\": 10,\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"team_mates\": 0\n  }\n}\n\nintercom.companies.find(:id => \"41e66f0313708347cb0000d0\")\n\n<?php\n# Using the name of the company\n$intercom->companies->getCompanies(['name' => 'OneAmerica']);\n\n# Via company_id\n$intercom->companies->getCompanies(['company_id' => '10']);\n\n?>\n\nString id = \"541a144b201ebf2ec5000001\";\nCompany company = Company.find(id);\n\n\nEach company has its own URL -\n\nhttps://api.intercom.io/companies/{id}\n\nWhere {id} is the value of the company's id field. This URL is the company's canonical address in the API.\n\nRequest Parameters\nParameter\tRequired\tDescription\nname\tno\tThe name of the company\ncompany_id\tno\tThe company_id you have given to the company\n\nA company can also be fetched by its name using a name or company_id parameter in the url, whose values are the ones you have defined for that company -\n\nhttps://api.intercom.io/companies?name={name}\nhttps://api.intercom.io/companies?company_id={company_id}\n\nThe name parameter value should be url encoded when sending, as company names are allowed to have values that either need to be encoded as character data (e.g., whitespace) or are reserved characters (e.g., ':')."
  },
  {
    "title": "Snoozing a conversation",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/conversations/snoozing-a-conversation/",
    "html": "Snoozing a conversation\nSnooze a conversation\n$ curl 'https://api.intercom.io/conversations/11055118659/reply' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"admin_id\": \"724860\",\n  \"message_type\":\"snoozed\",\n  \"snoozed_until\":\"1501512795\"\n}'\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"11055118659\",\n    \"created_at\": 1501496012,\n    \"updated_at\": 1501508752,\n    \"waiting_since\": 1501498931,\n    \"snoozed_until\": null,\n    \"conversation_message\": {\n        \"type\": \"conversation_message\",\n        \"id\": \"55951247\",\n        \"subject\": \"\",\n        \"body\": \"<p>Hi \\ud83d\\ude00 We hope you enjoy the example app. To get started just copy and paste some code into the JS editor. Let us know if you think this is useful? <br></p>\",\n        \"author\": {\n            \"type\": \"admin\",\n            \"id\": \"724865\"\n        },\n        \"attachments\": [],\n        \"url\": null\n    },\n    \"user\": {\n        \"type\": \"lead\",\n        \"id\": \"597f02cb22f4bb37597e0b7d\"\n    },\n    \"customers\": [\n        {\n            \"type\": \"lead\",\n            \"id\": \"597f02cb22f4bb37597e0b7d\"\n        },\n        {\n            \"type\": \"user\",\n            \"id\": \"58ff3f670f14ab4f1aa83750\"\n        }\n    ],\n    \"assignee\": {\n        \"type\": \"admin\",\n        \"id\": \"724860\"\n    },\n    \"conversation_parts\": {\n        \"type\": \"conversation_part.list\",\n        \"conversation_parts\": [\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712337945\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>test convo 1</p>\",\n                \"created_at\": 1501496025,\n                \"updated_at\": 1501496025,\n                \"notified_at\": 1501496025,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"user\",\n                    \"id\": \"597f02cb22f4bb37597e0b7d\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712338024\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>TestApp typically replies in a few hours. Don\\u2019t miss their reply.</p>\",\n                \"created_at\": 1501496028,\n                \"updated_at\": 1501496028,\n                \"notified_at\": 1501496028,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"bot\",\n                    \"id\": \"815309\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712338089\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p></p><p>Get notified by email</p>\",\n                \"created_at\": 1501496030,\n                \"updated_at\": 1501496030,\n                \"notified_at\": 1501496031,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"bot\",\n                    \"id\": \"815309\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712344562\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>group test two</p>\",\n                \"created_at\": 1501496290,\n                \"updated_at\": 1501496290,\n                \"notified_at\": 1501496291,\n                \"assigned_to\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712383990\",\n                \"part_type\": \"participant_added\",\n                \"body\": null,\n                \"created_at\": 1501497831,\n                \"updated_at\": 1501497831,\n                \"notified_at\": 1501497832,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712411349\",\n                \"part_type\": \"participant_added\",\n                \"body\": null,\n                \"created_at\": 1501498885,\n                \"updated_at\": 1501498885,\n                \"notified_at\": 1501498885,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712412506\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>group test</p>\",\n                \"created_at\": 1501498931,\n                \"updated_at\": 1501498931,\n                \"notified_at\": 1501498932,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"user\",\n                    \"id\": \"597f02cb22f4bb37597e0b7d\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712425169\",\n                \"part_type\": \"participant_removed\",\n                \"body\": null,\n                \"created_at\": 1501499414,\n                \"updated_at\": 1501499414,\n                \"notified_at\": 1501499414,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712728293\",\n                \"part_type\": \"snoozed\",\n                \"body\": null,\n                \"created_at\": 1501508752,\n                \"updated_at\": 1501508752,\n                \"notified_at\": 1501508752,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            }\n        ],\n        \"total_count\": 9\n    },\n    \"open\": true,\n    \"state\": \"snoozed\",\n    \"read\": false,\n    \"tags\": {\n        \"type\": \"tag.list\",\n        \"tags\": []\n    }\n}\n\n\nCustomers can snooze a conversation via a POST method to https://api.intercom.io/conversations/{convo_id}/reply/, which accepts a JSON object identifying the time you want the conversation snoozed until.\n\nArguments\nArgument\tRequired\tDescription\nadmin_id\tYes\tOnly admins can snooze a conversation so you need to provide the admin_id\nmessage_type\tYes\tMust be snoozed\nsnooze_until\tYes\tThe time in Unix time (i.e. seconds) you want the conversation to reopen"
  },
  {
    "title": "Run assignment rules on a conversation",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/conversations/run-conversation-assignment-rules/",
    "html": "Run assignment rules on a conversation\n\nYou can set up assignment rules to assign conversations to the correct team or teammate.\n\nThis usually happens upon a new, user initiated conversation coming in. This API call allows you to trigger the assignment rules when a conversation is unassigned - whether that's during a conversation, or when a user responds to an admin initiated conversation.\n\nNOTE\n\nThis endpoint will reopen and reassign a closed conversation, even if it has been previously assigned.\n\nREQUIRED PRODUCT\n\nAssignment Rules are only available with Inbox Pro. You can upgrade here.\n\nAssign based on assignment rules\ncurlhttp\ncurl 'https://api.intercom.io/conversations/{convo_id}/run_assignment_rules'\\n-X POST \\n-H 'Authorization: Bearer <Acess Token>=' \\n-H 'Accept: application/json' \\n-H 'Content-Type: application/json'\n"
  },
  {
    "title": "Update a contact",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/contacts/update-contact/",
    "html": "Update a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id> \\\\-X PUT \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json'-H 'Content-Type: application/json' -d{\\t\\\"role\\\": \\\"user\\\",\\t\\\"external_id\\\": \\\"25\\\",\\t\\\"email\\\": \\\"wash@serenity.io\\\",\\t\\\"phone\\\": \\\"+1123456789\\\",\\t\\\"name\\\": \\\"Hoban Washburn\\\",\\t\\\"avatar\\\": \\\"https://example.org/128Wash.jpg\\\",\\t\\\"last_seen_at\\\": 1571069751,\\t\\\"signed_up_at\\\": 1571069751,\\t\\\"owner_id\\\": 127,\\t\\\"unsubscribed_from_emails\\\": false,\\t\\\"custom_attributes\\\": {\\t\\t\\\"paid_subscriber\\\": true,\\t\\t\\\"monthly_spend\\\": 155.5,\\t\\t\\\"team_mates\\\": 1\\t}}\n\nExample Errors\nHTTP/1.1 404 FOUND\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"9a3d0816-9707-4598-977e-c009ba630148\",\n  \"errors\": [\n    {\n      \"code\": \"not_found\",\n      \"message\": \"Contact Not Found\"\n    }\n  ]\n}\n\nHTTP/1.1 409 CONFLICT\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"80ec9d92-99ff-4da9-9a0e-c0ab7c42f7e7\",\n  \"errors\": [\n    {\n      \"code\": \"conflict\",\n      \"message\": \"A contact matching those details already exists with id=5da6f18e3d7cf967e4582d05\"\n    }\n  ]\n}\n\nHTTP/1.1 400 UNPROCESSABLE ENTITY\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"00043csj9iva7pl9mmmg\",\n  \"errors\": [\n    {\n      \"code\": \"client_error\",\n      \"message\": \"Contact with user role can't be converted to a lead\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"00043csj9iva7pl9mmmg\",\n  \"errors\": [\n    {\n      \"code\": \"parameter_invalid\",\n      \"message\": \"The owner specified is not a member of the workspace\"\n    }\n  ]\n}\n\n\nYou can update an existing contact (ie. user or lead).\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nRequest Body Parameters\nAttribute\tType\tRequired?\tDescription\nrole\tString\tYes\tThe role of the contact. Accepted values are user or lead (only if lead already).\nexternal_id\tString\tYes - if role is user and email is blank\tA unique identifier for the contact which is given to Intercom.\nemail\tString\tYes - if role is lead, or if role is user and external_id is blank\tThe contacts email.\nphone\tString\tNo\tThe contacts phone.\nname\tString\tNo\tThe contacts name.\navatar\tString\tNo\tAn image URL containing the avatar of a contact.\nsigned_up_at\tDate (UNIX timestamp)\tNo\tThe time specified for when a contact signed up.\nlast_seen_at\tDate (UNIX timestamp)\tNo\tThe time when the contact was last seen (either where the Intercom Messenger was installed or when specified manually).\nowner_id\tInteger\tNo\tThe id of an admin that has been assigned account ownership of the contact.\nunsubscribed_from_emails\tBoolean\tNo\tWhether the contact is unsubscribed from emails.\ncustom_attributes\tObject\tNo\tThe custom attributes which are set for the contact.\nCREATING NEW CUSTOM DATA ATTRIBUTES\n\nYou can only write to custom data attributes that already exist on the workspace. If you need to create new attributes to write to, you should Create Data Attributes through the data Attributes API.\n\nResponse\n\nThis will return a Contact model of the contact you just update."
  },
  {
    "title": "Replying to Users Last Conversation",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/conversations/replying-to-users-last-conversation/",
    "html": "Replying to Users Last Conversation\n\nInstead of specifying a conversation id when replying, you can also reply to the most recent conversation for a user at https://api.intercom.io/conversations/last/reply:\n\nReplying to the Users Most Recent Conversation\n# Send a reply from admin 1234 to a user's last conversation\n$ curl https://api.intercom.io/conversations/last/reply \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"intercom_user_id\": \"536e564f316c83104c000020\",\n  \"body\": \"Let me know if you have any more questions!\",\n  \"type\": \"admin\",\n  \"admin_id\": \"1234\",\n  \"message_type\": \"comment\"\n}'\n\n<?php\n\n$intercom->conversations->replyToLastConversation([\n    \"intercom_user_id\" => \"5977303470ab497b1babb9ef\",\n    \"body\" => \"I am the wisest man alive, for I know one thing, and that is that I know nothing.\",\n    \"type\" => \"user\",\n    \"message_type\" => \"comment\"\n]);\n?>\n"
  },
  {
    "title": "Remove tag from a contact",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Contacts/detachTagFromContact/",
    "html": "You can remove tag from a specific contact. This will return a tag object for the tag that was removed from the contact."
  },
  {
    "title": "Add tag to a contact",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Contacts/attachTagToContact/",
    "html": "You can tag a specific contact. This will return a tag object for the tag that was added to the contact."
  },
  {
    "title": "Update a conversation",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/conversations/update-a-conversation/",
    "html": "Update a conversation\nExample Request & Response\n$ curl https://api.intercom.io/conversations/<id> \\\n-X PUT \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d\n\n{\n  \"read\": true\n}\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"1911149811\",\n    \"created_at\": 1539897198,\n    \"updated_at\": 1540393270,\n    \"source\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"contacts\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"teammates\": [\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    ],\n    \"assignee\": {\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    },\n    \"open\": true,\n    \"state\": \"open\",\n    \"read\": true,\n    \"waiting_since\": 64654125776\n    \"snoozed_until\": null,\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\",\n    },\n    \"first_contact_reply\": {\n    \t\"created_at\": 1539897198\n    \t\"type\": \"conversation\",\n    \t\"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"priority\": \"not_priority\",\n    \"sla_applied\": {\n    \t\"sla_name\": \"VIP customer <5m\",\n      \"sla_status\": \"missed\",\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"contact\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null,\n            \"name\": null,\n            \"email\": null\n        }\n    },\n    \"statistics\": {\n      \"time_to_assignment\": 2310,\n      \"time_to_admin_reply\": 2408,\n      \"time_to_first_close\": 4915 ,\n      \"time_to_last_close\": 5125,\n      \"median_time_to_reply\": 321,\n      \"first_contacat_reply_at\": 1539897200,\n      \"first_assignment_at\": 1539897200,\n      \"first_admin_reply_at\": 1539897200,\n      \"first_close_at\": 1539897200,\n      \"last_assignment_at\": 1539897200,\n      \"last_assignment_admin_reply_at\": 1539897200,\n      \"last_contact_reply_at\": 1539897200,\n      \"last_admin_reply_at\": 1539897200,\n      \"last_close_at\": 1539897200,\n      \"last_closed_by\": {\n      \t\"type\": \"admin\",\n        \"id\": \"325432652\",\n        \"name\": \"Tom Smith\",\n        \"email\": \"tom@example.com\"\n      },\n      \"count_reopens\": 3,\n      \"count_assignments\": 2,\n      \"count_conversation_parts\": 67\n    },   \n}\n\nconversation.read = true\nintercom.conversations.save(conversation)\n\n<?php\n$intercom->conversations->markConversationAsRead(\"10957850396\");\n?>\n\nAdmin admin = new Admin().setId(\"1\");\nAdminReply adminReply = new AdminReply(admin);\nadminReply.setMessageType(\"close\");\nConversation.reply(\"66\", adminReply);\n\n\nYou can update an existing conversation.\n\nIf you want to update a conversation with either a reply (or actions such as assign, unassign, open, close or snooze) then take a look at their own sections respectively as they currently require different endpoints and parameters.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\nread\tBoolean\tYes\tMark a conversation as read within Intercom.\nResponse\n\nThis will return the Conversation that has been updated.+"
  },
  {
    "title": "Snooze a conversation",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/conversations/snooze-a-conversation/",
    "html": "Snooze a conversation\nExample Request & Response\ncurlcurl\n$ curl 'https://api.intercom.io/conversations/<id>/reply' \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d\\n\\n{\\n  \\\"message_type\\\":\\\"snoozed\\\",\\n  \\\"admin_id\\\": \\\"724860\\\",\\n  \\\"snoozed_until\\\":\\\"1501512795\\\"\\n}\n\n{\\n    \\\"type\\\": \\\"conversation\\\",\\n    \\\"id\\\": \\\"1911149811\\\",\\n    \\\"created_at\\\": 1539897198,\\n    \\\"updated_at\\\": 1540393270,\\n    \\\"source\\\": {\\n        \\\"attachments\\\": [],\\n        \\\"author\\\": {\\n            \\\"id\\\": \\\"5bc8f7421ae2d96695c18a\\\",\\n            \\\"type\\\": \\\"lead\\\"\\n        },\\n        \\\"body\\\": \\\"<p>Hi</p>\\\",\\n        \\\"delivered_as\\\": \\\"customer_initiated\\\",\\n        \\\"id\\\": \\\"269650473\\\",\\n        \\\"subject\\\": \\\"\\\",\\n        \\\"type\\\": \\\"conversation\\\",\\n        \\\"url\\\": \\\"https://intercom-survey-app.glitch.me/\\\"\\n    },\\n    \\\"contacts\\\": [\\n        {\\n            \\\"id\\\": \\\"5bc8f7ae2d96695c18a\\\",\\n            \\\"type\\\": \\\"lead\\\"\\n        }\\n    ],\\n    \\\"teammates\\\": [\\n        {\\n            \\\"id\\\": \\\"814860\\\",\\n            \\\"type\\\": \\\"admin\\\",\\n          \\t\\\"name\\\": \\\"Mark Strong\\\",\\n          \\t\\\"email\\\": \\\"mk@acmeinc.org\\\"\\n        }\\n    ],\\n    \\\"assignee\\\": {\\n        {\\n            \\\"id\\\": \\\"814860\\\",\\n            \\\"type\\\": \\\"admin\\\",\\n          \\t\\\"name\\\": \\\"Mark Strong\\\",\\n          \\t\\\"email\\\": \\\"mk@acmeinc.org\\\"\\n        }\\n    },\\n    \\\"open\\\": true,\\n    \\\"state\\\": \\\"open\\\",\\n    \\\"read\\\": true,\\n    \\\"waiting_since\\\": 64654125776\\n    \\\"snoozed_until\\\": null,\\n    \\\"tags\\\": {\\n        \\\"tags\\\": [],\\n        \\\"type\\\": \\\"tag.list\\\",\\n    },\\n    \\\"first_contact_reply\\\": {\\n    \\t\\\"created_at\\\": 1539897198\\n    \\t\\\"type\\\": \\\"conversation\\\",\\n    \\t\\\"url\\\": \\\"https://intercom-survey-app.glitch.me/\\\"\\n    },\\n    \\\"priority\\\": \\\"not_priority\\\",\\n    \\\"sla_applied\\\": {\\n    \\t\\\"sla_name\\\": \\\"VIP customer <5m\\\",\\n      \\\"sla_status\\\": \\\"missed\\\",\\n    },\\n    \\\"conversation_rating\\\": {\\n        \\\"created_at\\\": null,\\n        \\\"contact\\\": {\\n            \\\"id\\\": null,\\n            \\\"type\\\": null\\n        },\\n        \\\"rating\\\": null,\\n        \\\"remark\\\": null,\\n        \\\"teammate\\\": {\\n            \\\"id\\\": null,\\n            \\\"type\\\": null,\\n            \\\"name\\\": null,\\n            \\\"email\\\": null\\n        }\\n    },\\n    \\\"statistics\\\": {\\n      \\\"time_to_assignment\\\": 2310,\\n      \\\"time_to_admin_reply\\\": 2408,\\n      \\\"time_to_first_close\\\": 4915 ,\\n      \\\"time_to_last_close\\\": 5125,\\n      \\\"median_time_to_reply\\\": 321,\\n      \\\"first_contacat_reply_at\\\": 1539897200,\\n      \\\"first_assignment_at\\\": 1539897200,\\n      \\\"first_admin_reply_at\\\": 1539897200,\\n      \\\"first_close_at\\\": 1539897200,\\n      \\\"last_assignment_at\\\": 1539897200,\\n      \\\"last_assignment_admin_reply_at\\\": 1539897200,\\n      \\\"last_contact_reply_at\\\": 1539897200,\\n      \\\"last_admin_reply_at\\\": 1539897200,\\n      \\\"last_close_at\\\": 1539897200,\\n      \\\"last_closed_by\\\": {\\n      \\t\\\"type\\\": \\\"admin\\\",\\n        \\\"id\\\": \\\"325432652\\\",\\n        \\\"name\\\": \\\"Tom Smith\\\",\\n        \\\"email\\\": \\\"tom@example.com\\\"\\n      },\\n      \\\"count_reopens\\\": 3,\\n      \\\"count_assignments\\\": 2,\\n      \\\"count_conversation_parts\\\": 67\\n    },   \\n}\n\n\nYou can snooze a conversation to reopen on a future date.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Body Parameters\n\nTo snooze a conversation:\n\nParameter\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tAlways snoozed.\nadmin_id\tString\tYes\tThe id of the admin which is performing the action.\nsnooze_until\tUNIX Timestamp\tYes\tThe time you want the conversation to reopen.\nResponse\n\nThis will return the Conversation which was snoozed."
  },
  {
    "title": "Marking a Conversation as Read",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/conversations/marking-a-conversation-as-read/",
    "html": "Marking a Conversation as Read\n\nYou can mark a conversation within Intercom as read.\n\nMark a Conversation as Read\n$ curl https://api.intercom.io/conversations/147 \\\n-X PUT \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"read\": true\n}'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"conversation\",\n  \"id\": \"147\",\n  \"created_at\": 1400850973,\n  \"updated_at\": 1400857494,\n  \"read\": true\n  # ...\n}\n\n# NB: Full Conversation Object returned\n\nconversation.read = true\nintercom.conversations.save(conversation)\n\n<?php\n$intercom->conversations->markConversationAsRead(\"10957850396\");\n?>\n\nAdmin admin = new Admin().setId(\"1\");\nAdminReply adminReply = new AdminReply(admin);\nadminReply.setMessageType(\"close\");\nConversation.reply(\"66\", adminReply);\n"
  },
  {
    "title": "List tags attached to a contact",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Contacts/listTagsForAContact/",
    "html": "You can fetch a list of all tags that are attached to a specific contact."
  },
  {
    "title": "List all data events",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Data-Events/lisDataEvents/",
    "html": "🚧\n\nPlease note that you can only 'list' events that are less than 90 days old. Event counts and summaries will still include your events older than 90 days but you cannot 'list' these events individually if they are older than 90 days\n\nThe events belonging to a customer can be listed by sending a GET request to https://api.intercom.io/events with a user or lead identifier along with a type parameter. The identifier parameter can be one of user_id, email or intercom_user_id. The type parameter value must be user.\n\nhttps://api.intercom.io/events?type=user&user_id={user_id}\nhttps://api.intercom.io/events?type=user&email={email}\nhttps://api.intercom.io/events?type=user&intercom_user_id={id} (this call can be used to list leads)\n\nThe email parameter value should be url encoded when sending.\n\nYou can optionally define the result page size as well with the per_page parameter."
  },
  {
    "title": "Remove subscription from a contact",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Contacts/detachSubscriptionTypeToContact/",
    "html": "You can remove a specific subscription from a contact. This will return a subscription type model for the subscription type that was removed from the contact."
  },
  {
    "title": "Visitor",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/visitor/",
    "html": "Visitors are useful for representing anonymous people that have not yet been identified. They usually represent website visitors. Visitors are not visible in Intercom platform. The Visitors resource provides methods to fetch, update, convert and delete."
  },
  {
    "title": "Update Ticket Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/update_ticket_request/",
    "html": "You can update a Ticket"
  },
  {
    "title": "Update Conversation Request",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/update_conversation_request/",
    "html": "Payload of the request to update a conversation"
  },
  {
    "title": "Update Data Attribute Request",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/update_data_attribute_request/",
    "html": "Whether the attribute is to be archived or not."
  },
  {
    "title": "Update Article Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/update_article_request/",
    "html": "You can Update an Article"
  },
  {
    "title": "Update Section Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/update_section_request/",
    "html": "You can update a Section"
  },
  {
    "title": "Ticket Type Attribute",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/ticket_type_attribute/",
    "html": "Ticket type attribute, used to define each data field to be captured in a ticket."
  },
  {
    "title": "Ticket Attributes",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/ticket_request_custom_attributes/",
    "html": "The attributes set on the ticket. When setting the default title and description attributes, the attribute keys that should be used are _default_title_ and _default_description_. When setting ticket type attributes of the list attribute type, the key should be the attribute name and the value of the attribute should be the list item id, obtainable by listing the ticket type. For example, if the ticket type has an attribute called priority of type list, the key should be priority and the value of the attribute should be the guid of the list item (e.g. de1825a0-0164-4070-8ca6-13e22462fa7e)."
  },
  {
    "title": "Ticket part author",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/ticket_part_author/",
    "html": "The author that wrote or triggered the part. Can be a bot, admin, team or user."
  },
  {
    "title": "Tag Company Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/tag_company_request/",
    "html": "You can tag a single company or a list of companies."
  },
  {
    "title": "Segment List",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/segment_list/",
    "html": "This will return a list of Segment Objects. The result may also have a pages object if the response is paginated."
  },
  {
    "title": "Error",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/error/",
    "html": "The API will return an Error List for a failed request, which will contain one or more Error objects."
  },
  {
    "title": "Open Conversation Request",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/open_conversation_request/",
    "html": "Payload of the request to open a conversation"
  },
  {
    "title": "Deleted Company Object",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/deleted_company_object/",
    "html": "Response returned when an object is deleted"
  },
  {
    "title": "Reference",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/reference/",
    "html": "reference to another object"
  },
  {
    "title": "Create Ticket Type Attribute Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/create_ticket_type_attribute_request/",
    "html": "You can create a Ticket Type Attribute"
  },
  {
    "title": "Create Ticket Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/create_ticket_request/",
    "html": "You can create a Ticket"
  },
  {
    "title": "Create Section Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/create_section_request/",
    "html": "You can create a Section"
  },
  {
    "title": "Create Message Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/create_message_request/",
    "html": "You can create a message"
  },
  {
    "title": "Create Phone Switch Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/create_phone_switch_request/",
    "html": "You can create an phone switch"
  },
  {
    "title": "Conversation statistics",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/conversation_statistics/",
    "html": "A Statistics object containing all information required for reporting, with timestamps and calculated metrics."
  },
  {
    "title": "Convert Visitor Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/convert_visitor_request/",
    "html": "You can merge a Visitor to a Contact of role type lead or user."
  },
  {
    "title": "Conversation source",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/conversation_source/",
    "html": "The Conversation Part that originated this conversation, which can be Contact, Admin, Campaign, Automated or Operator initiated."
  },
  {
    "title": "Contact Tags",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/contact_tags/",
    "html": "An object containing tags meta data about the tags that a contact has. Up to 10 will be displayed here. Use the url to get more."
  },
  {
    "title": "Companies",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/company_list/",
    "html": "This will return a list of companies for the App."
  },
  {
    "title": "Conversation Parts",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/conversation_parts/",
    "html": "A list of Conversation Part objects for each part message in the conversation. This is only returned when Retrieving a Conversation, and ignored when Listing all Conversations. There is a limit of 500 parts."
  },
  {
    "title": "Close Conversation Request",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/close_conversation_request/",
    "html": "Payload of the request to close a conversation"
  },
  {
    "title": "Reply to a conversation",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/conversations/reply-to-a-conversation/",
    "html": "Reply to a conversation\nExample Request & Response (Contact Reply)\n$ curl 'https://api.intercom.io/conversations/{id/last}/reply' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d \n\n{\n  \"message_type\": \"comment\",\n  \"type\": \"user\",\n  \"intercom_user_id\": \"536e564f316c83104c000020\",\n  \"body\": \"Thanks again :)\"\n}\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"1911149811\",\n    \"created_at\": 1539897198,\n    \"updated_at\": 1540393270,\n    \"source\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"contacts\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"teammates\": [\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    ],\n    \"admin_assignee_id\": \"814860\",\n    \"team_assignee_id\": null,\n    \"custom_attributes\": {\n      \"issue_type\": \"Billing\",\n      \"priority\": \"High\"\n    },\n    \"topics\": {\n       \"type\": \"topic.list\",\n       \"topics\": [\n           {\n              \"type\": \"topic\"\n              \"name\": \"Example Topic 1\",\n              \"id\": 839\n           }\n       ],\n       \"total_count\": 1\n    },\n    \"open\": true,\n    \"state\": \"open\",\n    \"read\": true,\n    \"waiting_since\": 64654125776\n    \"snoozed_until\": null,\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\",\n    },\n    \"first_contact_reply\": {\n    \t\"created_at\": 1539897198\n    \t\"type\": \"conversation\",\n    \t\"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"priority\": \"not_priority\",\n    \"sla_applied\": {\n    \t\"sla_name\": \"VIP customer <5m\",\n      \"sla_status\": \"missed\",\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"contact\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null,\n            \"name\": null,\n            \"email\": null\n        }\n    },\n    \"statistics\": {\n      \"time_to_assignment\": 2310,\n      \"time_to_admin_reply\": 2408,\n      \"time_to_first_close\": 4915 ,\n      \"time_to_last_close\": 5125,\n      \"median_time_to_reply\": 321,\n      \"first_contacat_reply_at\": 1539897200,\n      \"first_assignment_at\": 1539897200,\n      \"first_admin_reply_at\": 1539897200,\n      \"first_close_at\": 1539897200,\n      \"last_assignment_at\": 1539897200,\n      \"last_assignment_admin_reply_at\": 1539897200,\n      \"last_contact_reply_at\": 1539897200,\n      \"last_admin_reply_at\": 1539897200,\n      \"last_close_at\": 1539897200,\n      \"last_closed_by\": {\n      \t\"type\": \"admin\",\n        \"id\": \"325432652\",\n        \"name\": \"Tom Smith\",\n        \"email\": \"tom@example.com\"\n      },\n      \"count_reopens\": 3,\n      \"count_assignments\": 2,\n      \"count_conversation_parts\": 67\n    },  \n}\n\n#Reply without attachment\nintercom.conversations.reply(:id => conversation.id, :type => 'user', \n  :email => 'bob@example.com', :message_type => 'comment', :body => 'foo')\n\n#Reply with attachment\nintercom.conversations.reply(:id => conversation.id, :type => 'user', \n  :email => 'bob@example.com', :message_type => 'comment', \n  :body => 'foo', :attachment_urls => [\"http://www.example.com/attachment.jpg\"])\n\n<?php\n//Reply without attachment\n$intercom->conversations->replyToConversation(\"10957850396\", [\n    \"intercom_user_id\" => \"5977303470ab497b1babb9ef\",\n    \"body\" => \"Thinking: the talking of the soul with itself\",\n    \"type\" => \"user\",\n    \"message_type\" => \"comment\"\n]);\n\n\n//Reply with attachment\n$intercom->conversations->replyToConversation(\"10957850396\", [\n  \"intercom_user_id\" => \"5977303470ab497b1babb9ef\",\n  \"body\" => \"Thinking: the talking of the soul with itself\",\n  \"type\" => \"user\",\n  \"message_type\" => \"comment\",\n  \"attachment_urls\" => [\"http://www.example.com/attachment.jpg\"]\n]);\n?>\n\nUser user = new User().setId(\"5310d8e8598c9a0b24000005\");\nUserReply userReply = new UserReply(user);\nuserReply.setBody(\"Mighty fine shindig\");\n\nConversation.reply(\"66\", userReply);\n\nAdmin admin = new Admin().setId(\"1\");\nAdminReply adminReply = new AdminReply(admin);\nadminReply.setBody(\"These apples are healthsome\");\n\nConversation.reply(\"66\", adminReply);\n\nExample Request & Response (Admin Reply - Note)\ncurltext\n$ curl 'https://api.intercom.io/conversations/{id/last}/reply' \\\\\\n-X POST \\\\\\n-H 'Authorization: Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d\\n\\n{\\n  \\\"message_type\\\": \\\"note\\\",\\n  \\\"type\\\": \\\"admin\\\",\\n  \\\"admin_id\\\": \\\"814860\\\",\\n  \\\"body\\\": \\\"<html> <body>  <h2>An Unordered HTML List</h2>  <ul>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ul>    <h2>An Ordered HTML List</h2>  <ol>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ol>   </body> </html>\\\"\\n}\n\n\nYou can reply to a conversation with a message from an admin or on behalf of a contact, or with a note for admins.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes, if not last\tThe identifier for the conversation as given by Intercom.\nlast\tString\tYes, if no id\tYou can also reply to the most recent conversation on a workspace by specifying last as the string.\nRequest Body Parameters\n\nFor a reply sent on behalf a contact:\n\nParameter\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tAlways comment.\ntype\tString\tYes\tAlways user.\nbody\tString\tYes\tThe text body of the comment.\nintercom_user_id\tString\tYes, if no user_id or email\tThe identifier for the contact as given by Intercom.\nuser_id\tString\tYes, if no intercom_user_id or email\tThe external_id you have defined for the contact.\nemail\tString\tYes, if no intercom_user_id or user_id\tThe email you have defined for the user.\nattachment_urls\tArray of Strings\tNo\tA list of image URLs that will be added as attachments. You can include up to 5 URLs.\n\nFor a reply sent on behalf of an admin:\n\nArgument\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tAccepts comment or note.\ntype\tString\tYes\tAlways admin.\nadmin_id\tString\tYes\tThe id of the admin who is authoring the comment.\nbody\tString\tYes\tThe text body of the reply. Notes accept some HTML formatting.\nattachment_urls\tArray of Strings\tNo\tA list of URLs of files that will be added as attachments. You can include up to 5 attachments.\nResponse\n\nThis will return the Conversation which was replied to."
  },
  {
    "title": "multiple_filter_search_request",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Models/multiple_filter_search_request/",
    "html": "An operator to allow boolean inspection between multiple fields."
  },
  {
    "title": "Visitor",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Models/visitor/",
    "html": "Visitors are useful for representing anonymous people that have not yet been identified. They usually represent website visitors. Visitors are not visible in Intercom platform. The Visitors resource provides methods to fetch, update, convert and delete."
  },
  {
    "title": "Update a data attribute",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/data-attributes/update-data-attributes/",
    "html": "Update a data attribute\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/data_attributes/163728 \\\\-X PUT \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept: application/json' \\\\-H 'Content-Type: application/json' -d{  \\\"description\\\": \\\"You are either great or bad\\\",  \\\"options\\\": [    {\\\"value\\\": \\\"great\\\"},    {\\\"value\\\": \\\"bad\\\"}  ]}\n\nExample Errors\nHTTP/1.1 404 NOT FOUND{  \"type\": \"error.list\",  \"request_id\": \"0006klvnje6ffng7ot80\",  \"errors\": [    {      \"code\": \"field_not_found\",      \"message\": \"We couldn't find that data attribute to update\"    }  ]}\n\nHTTP/1.1 422 UNPROCESSIBLE ENTITY{  \"type\": \"error.list\",  \"request_id\": \"0006klvnje6ffng7ot80\",  \"errors\": [    {      \"code\": \"data_invalid\",      \"message\": \"The Data Attribute you are trying to archive has a dependant object\"    }  ]}\n\nHTTP/1.1 400 BAD REQUEST{  \"type\": \"error.list\",  \"request_id\": \"0000rnvpf3m1f3nf4k40\",  \"errors\": [    {      \"code\": \"parameter_invalid\",      \"message\": \"You must have at least two options on a list type data attribute\"    }  ]}\n\n\nYou can update data attribute.\n\nRequest Body Parameters\nArgument\tType\tDescription\ndescription\tString\t(Optional) The readable description you see in the UI for the attribute.\noptions\tList\t(Optional) To change to or update list attributes. Provide a set of hashes with value as the key of the options you want to make.data_type must be string.\narchived\tBoolean\t(Optional) Whether the attribute is to be archived or not.\nUPDATING THE DATA TYPE IS NOT POSSIBLE\n\nIt is currently a dangerous action to execute changing a data attribute's type via the API. You will need to update the type via the UI instead.\n\nResponse\n\nThis will return a Data Attribute Model showing the details of your updated attribute."
  },
  {
    "title": "Closing or reopening a conversation",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/conversations/closing-a-conversation/",
    "html": "Closing or reopening a conversation\n\nYou can close or reopen a conversation with or without a reply, via a POST method to https://api.intercom.io/conversations/{convo_id}/reply/, which accepts a JSON object identifying whether you want to close or reopen.\n\nArgument\tRequired\tDescription\ntype\tyes\tMust be admin\nmessage_type\tyes\tMust be open or close\nadmin_id\tyes\tID of the admin the close or open will be attributed to\nClosing a Conversation Without Reply\ncurl https://api.intercom.io/conversations/xxx/reply\n-X POST\n-H 'Authorization:Bearer <Your access token>'\n-H 'Accept:application/json'\n-H 'Content-Type:application/json'\n-d '{ \"admin_id\": CLOSING_ADMIN_ID, \"message_type\": \"close\", \"type\": \"admin\"}'\n\n<?php\n\n$intercom->conversations->replyToConversation(\"10957850396\", [\n    \"type\" => \"admin\",\n    \"admin_id\" => \"814860\",\n    \"message_type\" => \"close\"\n]);\n?>\n\nClosing a Conversation With Reply\ncurl https://api.intercom.io/conversations/xxx/reply\n-X POST\n-H 'Authorization:Bearer <Your access token>'\n-H 'Accept:application/json'\n-H 'Content-Type:application/json'\n-d '{ \"body\":\"closing this convo\", \"admin_id\": CLOSING_ADMIN_ID, \"message_type\": \"close\", \"type\": \"admin\"}'\n\n<?php\n\n$convo = $intercom->conversations->replyToConversation(\"10957850396\", [\n    \"body\" => \"The beginning is the most important part of the work, but this is the end ... of the conversation!\",\n    \"type\" => \"admin\",\n    \"admin_id\" => \"814860\",\n    \"message_type\" => \"close\"\n]);\n?>\n"
  },
  {
    "title": "Conversation Rating Model",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/conversations/conversation-rating-model/",
    "html": "Conversation Rating Model\nExample Conversation Part Object\n    \\\"conversation_rating\\\": {\\n        \\\"rating\\\": null,\\n        \\\"remark\\\": null,\\n        \\\"created_at\\\": null,\\n        \\\"customer\\\": {\\n            \\\"type\\\": null,\\n            \\\"id\\\": null\\n        },\\n        \\\"teammate\\\": {\\n            \\\"type\\\": null,\\n            \\\"id\\\": null\\n        }\\n    }\n\n\nA conversation rating contains information relating to a customer's satisfaction with their interaction with your team. For more info on conversation ratings please see here\n\nConversation Rating Object\nAttribute\tType\tDescription\nrating\tinteger\tThe rating, between 1 and 5, for the conversation\nremark\tstring\tAn optional field to add a remark to correspond to the number rating\ncreated_at\ttimestamp\tThe time the rating was requested in the conversation being rated\ncustomer\tobject\tAn object containing the ID and type of the customer (e.g. it could be a user or lead)\nteammate\tobject\tAn object containing the ID and type of the Intercom teammate associated with the conversation when it was rated\nCustomer Object\nAttribute\tType\tDescription\ntype\tstring\tA conversation can be rated by either a user or a lead. This will default to null when there is no rating on a conversation.\nid\tstring\tThe Intercom ID of the customer rating the conversation. This defaults to null.\nTeammate Object\nAttribute\tType\tDescription\ntype\tstring\tCurrently this will always be of type admin. It will be null by default if the conversation has not been rated\nid\tstring\tThis is the ID of the teammate being rated. This will default to null."
  },
  {
    "title": "Tag companies",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/tags/tag-companies/",
    "html": "Tag companies\nExample Request & Response\n$ curl https://api.intercom.io/tags \\\n-XPOST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d'\n{\n  \"name\": \"Independent\",\n  \"companies\": [\n    {\n      \"id\" : \"53427b7ecce5722303000003\"\n    }\n  ]\n}\n\nHTTP/1.1 200 Ok\n\n{\n  \"type\": \"tag\",\n  \"name\": \"Independent\",\n  \"id\": \"17513\"\n}\n\nintercom.tags.tag(name: 'Independent', users: [{ id: \"42ea2f1b93891f6a99000427\" }, { email: \"foo@bar.com\" }])\n\n<?php\n# Note that you can use either id, user_id or email to tag a user.\n# You only need to use one per user, e.g. the below will tag\n# three users if each identifier is for a different, unique user\n$intercom->tags->tag([\n    \"name\" => \"VIPs\",\n    \"users\" => [\n        [\"id\" => \"5977e20941abfc5aae4552d1\"],\n        [\"user_id\" => \"12345\"],\n        [\"email\" => \"camus@phil.com\"]\n    ]\n]);\n?>\n\nUser one = new User().setEmail(\"river@serenity.io\");\nUser two = new User().setEmail(\"simon@serenity.io\")\nList<User> users = Lists.newArrayList(one, two);\nTag.tag(tag, new UserCollection(users));\n\n\nYou can tag a single or a list of companies.\n\nRequest Body Parameters\nParameters\tType\tRequired\tDescription\nname\tString\tYes\tThe name of the tag, which will be created if not found.\ncompanies\tObject\tYes\tAn array of objects with the unique id or company_id of the company to be tagged.\nResponse\n\nThis will return a Tag Model for the tag that was applied to the given company.### Response\n\nThis will return a Tag Model for the tag that was applied to the given company."
  },
  {
    "title": "single_filter_search_request",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Models/single_filter_search_request/",
    "html": "The Intercom defined id representing the company."
  },
  {
    "title": "Adding to group conversations as customer",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/conversations/adding-to-group-conversations-as-customer/",
    "html": "Adding to group conversations as customer\nAdding a customer to a group conversation as customer\n$ curl 'https://api.intercom.io/conversations/11055118659/customers' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"intercom_user_id\": \"55c1c78946b0aa9ef45b09ff\",\n  \"customer\":{\n    \"intercom_user_id\": \"58c1c78946a0aa9ef45b098a\"\n  }\n}'\n\nHTTP/1.1 200 OK\n\n{\"customers\":[\n  {\"type\":\"user\",\"id\":\"597f02cb22f4bb37597e0b7d\"}, \n  {\"type\":\"lead\",\"id\":\"58ff3f670f14ab4f1aa83750\"}]\n}\n\n\nCustomers can also be added by other customer that's already part of the conversation.\n\nArguments\nArgument\tRequired\tDescription\nintercom_user_id\tone of\tThe Intercom defined id representing the user (in the URL)\nuser_id\tone of\tThe user id you have defined for the user (or auto defined in the case of leads)\nemail\tone of\tThe email you have defined for the user\ncustomer\tYes\tJSON object describing the customer that you want to add to the conversation."
  },
  {
    "title": "Deleting from group conversations",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/conversations/deleting-from-group-conversations/",
    "html": "Deleting from group conversations\nDeleting a customer from a group conversation\nCUSTOMERS\n\nNote that customers refers to both users and leads.\n\n$ curl 'https://api.intercom.io/conversations/11055118659/customers/58c1c72246a0aa9ef45a098e' \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"admin_id\": \"781345\"\n}'\n\nHTTP/1.1 200 OK\n\n{\"customers\":[\n  {\"type\":\"user\",\"id\":\"597f02cb22f4bb37597e0b7d\"}]\n}x§\n\n\nCustomers can be removed from a conversation via a DELETE method to https://api.intercom.io/conversations/{convo_id}/customers/{id}, which accepts a JSON object describing the customer.\n\nArguments\nArgument\tRequired\tDescription\nadmin_id\tYes\tYou must provide the ID of a valid admin to remove a customer to the conversation"
  },
  {
    "title": "Create a data attribute",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Data-Attributes/createDataAttribute/",
    "html": "You can create a data attributes for a contact or a company."
  },
  {
    "title": "Update Data Attribute Request",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Models/update_data_attribute_request/",
    "html": "Whether the attribute is to be archived or not."
  },
  {
    "title": "Update Visitor Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Models/update_visitor_request/",
    "html": "Update an existing visitor."
  },
  {
    "title": "Retrieve an admin",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/admins/view-an-admin/",
    "html": "Retrieve an admin\nExample Request & Response\n$ curl https://api.intercom.io/admins/493881 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"type\": \"admin\",\n    \"id\": \"493881\",\n    \"name\": \"Hoban Washburne\",\n    \"email\": \"wash@serenity.io\",\n    \"away_mode_enabled\": false,\n    \"away_mode_reassign\": false,\n    \"team_ids\": [\n        814865\n    ]\n}\n\n<?php\n$admin = $intercom->admins->getAdmin(\"493881\");\n?>\n\nErrors for admins without inbox seats\n{\n    \"type\": \"error.list\",\n    \"request_id\": \"0002miv9og586ig3aln0\",\n    \"errors\": [\n        {\n            \"code\": \"action_forbidden\",\n            \"message\": \"This admin does not have Inbox access permissions\"\n        }\n    ]\n}\n\n\nYou can fetch the details of a single admin.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier of a given admin\nResponse\n\nThis will return an Admin object."
  },
  {
    "title": "Detach a conversation",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/tags/detach-a-tag-from-a-conversation/",
    "html": "Detach a conversation\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/conversations/<id>/tags/<tag_id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' -d\\n{\\n   \\\"admin_id\\\": \\\"814860\\\"\\n}\n\nExample Errors\nHTTP/1.1 404 NOT FOUND\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"9a3d0816-9707-4598-977e-c009ba630148\",\n  \"errors\": [\n    {\n      \"code\": \"not_found\",\n      \"message\": \"Contact Not Found\"\n    }\n  ]\n}\n\nHTTP/1.1 404 NOT FOUND\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"5f6b2623-f844-4914-8b8d-ac01acc62a76\",\n  \"errors\": [\n    {\n      \"code\": \"not_found\",\n      \"message\": \"Resource Not Found\"\n    }\n  ]\n}\n\nHTTP/1.1 404 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"5f6b2623-f844-4914-8b8d-ac01acc62a76\",\n  \"errors\": [\n    {\n      \"code\": \"parameter_not_found\",\n      \"message\": \"admin_id is a required parameter\"\n    }\n  ]\n}\n\n\nYou can untag a single conversation.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the conversation which is given by Intercom\ntag_id\tString\tYes\tThe unique identifier for the tag which is given by Intercom.\nRequest Body Parameter\nParameter\tType\tRequired\tDescription\nadmin_id\tString\tYes\tThe unique identifier for the admin (which is given by intercom) performing the untag action.\nResponse\n\nThis will return a Tag model for the tag that was removed from the conversation."
  },
  {
    "title": "List all admins",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/admins/list-admins/",
    "html": "List all admins\nExample Request & Response\n$ curl https://api.intercom.io/admins \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n{\n    \"type\": \"admin.list\",\n    \"admins\": [\n        {\n        \t\t\"type\": \"admin\",\n            \"id\": \"493881\",\n      \t\t\t\"name\": \"Hoban Washburne\",\n      \t\t\t\"email\": \"wash@serenity.io\"\n            \"away_mode_enabled\": false,\n            \"away_mode_reassign\": false,\n            \"team_ids\": [\n                814865\n            ]\n        },\n        {\n            \"type\": \"admin\",\n            \"email\": \"mal@serenity.io\",\n            \"id\": \"646303\",\n            \"name\": \"Malcolm Reynolds \",\n            \"away_mode_enabled\": true,\n            \"away_mode_reassign\": false,\n            \"team_ids\": [\n                814865\n            ]\n        },\n        {\n            \"type\": \"admin\",\n            \"email\": \"jayne@serenity.io\",\n            \"id\": \"1195856\",\n            \"name\": \"Jayne Cobb \",\n            \"away_mode_enabled\": false,\n            \"away_mode_reassign\": false,\n            \"team_ids\": [\n                814865\n            ]\n        },\n        {\n            \"type\": \"team\",\n            \"email\": null,\n            \"id\": \"814865\",\n            \"name\": \"SerenityTeam\",\n            \"away_mode_enabled\": false,\n            \"away_mode_reassign\": false,\n            \"admin_ids\": [\n                493881,\n                646303,\n                1195856\n            ]\n        }\n    ]\n}\n\nintercom.admins.all.each { ... }\n\n<?php\n$admins= $intercom->admins->getAdmins();\nforeach ($admins->admins as $admin) {\n    print_r($admin->id);\n}?>\n\nAdminCollection admins = Admin.list();\n// get first page...\nList<Admin> pageItems = admins.getPageItems();\n// ...or iterate over pages\nwhile (admins.hasNext()) {\n    System.out.println(admins.next().getName());\n}\n\n\nYou can fetch a list of admins for a given workspace.\n\nResponse\n\nThis will return a list of Admin Objects for a given workspace.\n\nAdmin List\nAttribute\tType\tDescription\ntype\tstring\tValue is 'admin.list'\nadmins\tarray\tA list of admin objects"
  },
  {
    "title": "Deleting from group conversations",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/conversations/deleting-from-group-conversations/",
    "html": "Deleting from group conversations\nDeleting a customer from a group conversation\nCUSTOMERS\n\nNote that customers refers to both users and leads.\n\n$ curl 'https://api.intercom.io/conversations/11055118659/customers/58c1c72246a0aa9ef45a098e' \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"admin_id\": \"781345\"\n}'\n\nHTTP/1.1 200 OK\n\n{\"customers\":[\n  {\"type\":\"user\",\"id\":\"597f02cb22f4bb37597e0b7d\"}]\n}x§\n\n\nCustomers can be removed from a conversation via a DELETE method to https://api.intercom.io/conversations/{convo_id}/customers/{id}, which accepts a JSON object describing the customer.\n\nArguments\nArgument\tRequired\tDescription\nadmin_id\tYes\tYou must provide the ID of a valid admin to remove a customer to the conversation"
  },
  {
    "title": "Get a Single Conversation",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/conversations/get-a-single-conversation/",
    "html": "Get a Single Conversation\nGet a Single Conversation\n$ curl https://api.intercom.io/conversations/147 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"147\",\n    \"created_at\": 1400850973,\n    \"updated_at\": 1400857494,\n    \"conversation_message\": {\n      \"type\": \"conversation_message\",\n      \"subject\": \"\",\n      \"body\": \"<p>Hi Alice,</p>\\n\\n<p>We noticed you using our Product, do you have any questions?</p> \\n<p>- Jane</p>\",\n      \"author\": {\n        \"type\": \"admin\",\n        \"id\": \"25\"\n      },\n      \"attachments\": [\n        {\n          \"name\": \"signature\",\n          \"url\": \"http://someurl.com/signature.jpg\"\n        }\n      ]\n    },\n    \"user\": {\n      \"type\": \"user\",\n      \"id\": \"536e564f316c83104c000020\"\n    },\n    \"assignee\": {\n      \"type\": \"admin\",\n      \"id\": \"25\"\n    },\n    \"open\": true,\n    \"read\": true,\n    \"conversation_parts\": {\n      \"type\": \"conversation_part.list\",\n      \"conversation_parts\": [\n        //... List of conversation parts\n      ]\n    },\n    \"tags\": { \"type\": 'tag.list', \"tags\": [] } }\n}\n\nintercom.conversations.find(:id => '147')\n\n<?php\n$intercom->conversations->getConversation(\"10957850396\");\n?>\n\nConversation conversation = Conversation.find(\"147\");\n\nConversationMessage message =\n  conversation.getConversationMessage();\n\nConversationPartCollection parts =\n  conversation.getConversationPartCollection();\n\nList<ConversationPart> list = parts.getPageItems();\n\nfor (ConversationPart part : list) {\n  String partType = part.getPartType();\n  Author author = part.getAuthor();\n  String body = part.getBody();\n}\n\nConversationPart recent =\n  conversation.getMostRecentConversationPart();\n\nAdmin assignee =\n  conversation.getAssignee();\n\nUser user =\n  conversation.getUser();\n\nParameters\n\nSpecify the id of the conversation you wish to retrieve using the URL https://api.intercom.io/conversations/{id} URL structure where {id} is the id field of the conversation.\n\nParameter\tRequired\tDescription\ndisplay_as\tno\tSet to plaintext to retrieve conversation messages in plain text\nReturns\n\nA full Conversation object including Tags, with Conversation Parts.\n\nParts in the conversation_parts object are ordered by with the most recently created parts appearing at the end of the list.\n\nThe maximum number of conversation parts that can be returned via the API is 500. If you have more than that we will return the 500 most recent conversation parts."
  },
  {
    "title": "Update a conversation",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/conversations/update-a-conversation/",
    "html": "Update a conversation\nExample Request & Response\n$ curl https://api.intercom.io/conversations/<id> \\\n-X PUT \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d\n\n{\n  \"read\": true\n}\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"1911149811\",\n    \"created_at\": 1539897198,\n    \"updated_at\": 1540393270,\n    \"source\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"contacts\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"teammates\": [\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    ],\n    \"assignee\": {\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    },\n    \"open\": true,\n    \"state\": \"open\",\n    \"read\": true,\n    \"waiting_since\": 64654125776\n    \"snoozed_until\": null,\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\",\n    },\n    \"first_contact_reply\": {\n    \t\"created_at\": 1539897198\n    \t\"type\": \"conversation\",\n    \t\"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"priority\": \"not_priority\",\n    \"sla_applied\": {\n    \t\"sla_name\": \"VIP customer <5m\",\n      \"sla_status\": \"missed\",\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"contact\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null,\n            \"name\": null,\n            \"email\": null\n        }\n    },\n    \"statistics\": {\n      \"time_to_assignment\": 2310,\n      \"time_to_admin_reply\": 2408,\n      \"time_to_first_close\": 4915 ,\n      \"time_to_last_close\": 5125,\n      \"median_time_to_reply\": 321,\n      \"first_contacat_reply_at\": 1539897200,\n      \"first_assignment_at\": 1539897200,\n      \"first_admin_reply_at\": 1539897200,\n      \"first_close_at\": 1539897200,\n      \"last_assignment_at\": 1539897200,\n      \"last_assignment_admin_reply_at\": 1539897200,\n      \"last_contact_reply_at\": 1539897200,\n      \"last_admin_reply_at\": 1539897200,\n      \"last_close_at\": 1539897200,\n      \"last_closed_by\": {\n      \t\"type\": \"admin\",\n        \"id\": \"325432652\",\n        \"name\": \"Tom Smith\",\n        \"email\": \"tom@example.com\"\n      },\n      \"count_reopens\": 3,\n      \"count_assignments\": 2,\n      \"count_conversation_parts\": 67\n    },   \n}\n\nconversation.read = true\nintercom.conversations.save(conversation)\n\n<?php\n$intercom->conversations->markConversationAsRead(\"10957850396\");\n?>\n\nAdmin admin = new Admin().setId(\"1\");\nAdminReply adminReply = new AdminReply(admin);\nadminReply.setMessageType(\"close\");\nConversation.reply(\"66\", adminReply);\n\n\nYou can update an existing conversation.\n\nIf you want to update a conversation with either a reply (or actions such as assign, unassign, open, close or snooze) then take a look at their own sections respectively as they currently require different endpoints and parameters.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\nread\tBoolean\tYes\tMark a conversation as read within Intercom.\nResponse\n\nThis will return the Conversation that has been updated.+"
  },
  {
    "title": "Retrieve a conversation",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/conversations/retrieve-a-conversation/",
    "html": "Retrieve a conversation\nExample Request & Response\n$ curl https://api.intercom.io/conversations/<id> \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"1911149811\",\n    \"created_at\": 1539897198,\n    \"updated_at\": 1540393270,\n    \"source\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\",\n        \"redacted\": false\n    },\n    \"contacts\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"teammates\": [\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    ],\n    \"assignee\": {\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    },\n    \"open\": true,\n    \"state\": \"open\",\n    \"read\": true,\n    \"waiting_since\": 64654125776\n    \"snoozed_until\": null,\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\",\n    },\n    \"first_contact_reply\": {\n    \t\"created_at\": 1539897198\n    \t\"type\": \"conversation\",\n    \t\"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"priority\": \"not_priority\",\n    \"sla_applied\": {\n    \t\"sla_name\": \"VIP customer <5m\",\n      \"sla_status\": \"missed\",\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"contact\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null,\n            \"name\": null,\n            \"email\": null\n        }\n    },\n    \"statistics\": {\n      \"time_to_assignment\": 2310,\n      \"time_to_admin_reply\": 2408,\n      \"time_to_first_close\": 4915 ,\n      \"time_to_last_close\": 5125,\n      \"median_time_to_reply\": 321,\n      \"first_contacat_reply_at\": 1539897200,\n      \"first_assignment_at\": 1539897200,\n      \"first_admin_reply_at\": 1539897200,\n      \"first_close_at\": 1539897200,\n      \"last_assignment_at\": 1539897200,\n      \"last_assignment_admin_reply_at\": 1539897200,\n      \"last_contact_reply_at\": 1539897200,\n      \"last_admin_reply_at\": 1539897200,\n      \"last_close_at\": 1539897200,\n      \"last_closed_by\": {\n      \t\"type\": \"admin\",\n        \"id\": \"325432652\",\n        \"name\": \"Tom Smith\",\n        \"email\": \"tom@example.com\"\n      },\n      \"count_reopens\": 3,\n      \"count_assignments\": 2,\n      \"count_conversation_parts\": 67\n    },\n    \"conversation_parts\": {\n        \"conversation_parts\": [\n            {\n                \"assigned_to\": null,\n                \"attachments\": [],\n                \"author\": {\n                    \"id\": \"815309\",\n                    \"type\": \"bot\"\n                },\n                \"body\": \"<p>Test_App typically replies in a few hours.</p>\",\n                \"created_at\": 1539897200,\n                \"external_id\": null,\n                \"id\": \"2202737122\",\n                \"notified_at\": 1539897200,\n                \"part_type\": \"comment\",\n                \"type\": \"conversation_part\",\n                \"updated_at\": 1539897200,\n                \"redacted\": false\n            },\n          #List of conversation parts...\n        ],\n        \"total_count\": 67,\n        \"type\": \"conversation_part.list\"\n    }    \n}\n\nintercom.conversations.find(:id => '147')\n\n<?php\n$intercom->conversations->getConversation(\"10957850396\");\n?>\n\nConversation conversation = Conversation.find(\"147\");\n\nConversationMessage message =\n  conversation.getConversationMessage();\n\nConversationPartCollection parts =\n  conversation.getConversationPartCollection();\n\nList<ConversationPart> list = parts.getPageItems();\n\nfor (ConversationPart part : list) {\n  String partType = part.getPartType();\n  Author author = part.getAuthor();\n  String body = part.getBody();\n}\n\nConversationPart recent =\n  conversation.getMostRecentConversationPart();\n\nAdmin assignee =\n  conversation.getAssignee();\n\nUser user =\n  conversation.getUser();\n\n\nYou can fetch the details of a single conversation.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Query Parameters\nParameter\tType\tRequired?\tDescription\ndisplay_as\tString\tNo\tSet to plaintext to retrieve conversation messages in plain text.\nResponse\n\nThis will return a single Conversation model with all its conversation parts.\n\nHARD LIMIT OF 500 PARTS\n\nThe maximum number of conversation parts that can be returned via the API is 500. If you have more than that we will return the 500 most recent conversation parts."
  },
  {
    "title": "Set admin away mode",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/admins/set-admin-away-mode/",
    "html": "Set admin away mode\n\nSet away mode\nIf you want to set an admin in away mode you can do this via a PUT request. You can also choose whether you want conversation replies to be automatically reassigned to your default inbox if you like. For more about away mode please see here.\n\nAttribute\tType\tDescription\nid\tstring\tThe id of the admin you want to set away mode or re-assign conversations.\naway_mode_enabled\tboolean\tSet to 'true' to change the status of the admin to away.\naway_mode_reassign\tboolean\tSet to 'true' to assign any new conversation replies to your default inbox.\ncurltext\n$ curl https://api.intercom.io/admins/814860/away \\\\\\n-X PUT \\\\\\n-H 'Authorization: Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'  \\\\\\n-H 'Content-Type: application/json' \\\\\\n-d \\t'\\n{\\n  \\\"away_mode_enabled\\\": true,\\n  \\\"away_mode_reassign\\\": false\\n\\n}'\n"
  },
  {
    "title": "Open a conversation",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/conversations/open-a-conversation/",
    "html": "Open a conversation\nExample Request & Response\ncurltext\n$ curl 'https://api.intercom.io/conversations/<id>/parts' \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d\\n\\n{\\n  \\\"message_type\\\":\\\"open\\\",\\n  \\\"admin_id\\\": \\\"724860\\\"\\n}\n\n\nYou can open a conversation which is snoozed or closed.\n\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tAlways open.\nadmin_id\tString\tYes\tThe id of the admin which is performing the action.\nResponse\n\nThis will return the Conversation which was opened."
  },
  {
    "title": "List Conversations",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/conversations/list-conversations/",
    "html": "List Conversations\nList Open Conversations for a Particular Admin\n$ curl \\\n\"https://api.intercom.io/conversations?type=admin&admin_id=25&open=true\" \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"conversation.list\",\n    \"pages\": {\n        \"type\": \"pages\",\n        \"next\": \"https://api.intercom.io/conversations?per_page=20&page=2\",\n        \"page\": 1,\n        \"per_page\": 20,\n        \"total_pages\": 40\n    },\n    \"conversations\": [\n        {\n            \"type\": \"conversation\",\n            \"id\": \"13257844375\",\n            \"created_at\": 1507709579,\n            \"updated_at\": 1507709579,\n            \"waiting_since\": 1507709579,\n            \"snoozed_until\": null,\n            \"user\": {\n                \"type\": \"user\",\n                \"id\": \"5813655e889f1c9e64a1155b\"\n            },\n            \"customers\": [\n                {\n                    \"type\": \"user\",\n                    \"id\": \"5813655e889f1c9e64a1155b\"\n                }\n            ],\n            \"assignee\": {\n                \"type\": \"nobody_admin\",\n                \"id\": null\n            },\n            \"conversation_message\": {\n                \"type\": \"conversation_message\",\n                \"id\": \"139303349\",\n                \"subject\": \"\",\n                \"body\": \"<p>test msg</p>\",\n                \"author\": {\n                    \"type\": \"user\",\n                    \"id\": \"5813655e889f1c9e64a1155b\"\n                },\n                \"attachments\": [],\n                \"url\": \"https://test.com/index.html\"\n            },\n            \"open\": true,\n            \"state\": \"open\",\n            \"read\": true\n        },\n\t      ...\n\t      ...\n    ]\n}\n\nintercom.conversations.find_all(:type => 'admin', :id => 25, :open => true)\n\n<?php\n$intercom->conversations->getConversations([\n    \"type\" => \"admin\",\n    \"admin_id\" => \"891290\",\n    \"open\" => false\n]);\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"type\", \"admin\");\nparams.put(\"admin_id\", \"1\");\nConversationCollection conversations = Conversation.list(params);\nwhile (conversations.hasNext()) {\n  Conversation conversation = conversations.next();\n}\n\n\nConversation lists do not contain a conversation_parts or tags Object, for brevity. The part list for an individual conversation can be fetched when retrieving the conversation itself.\n\nAll Conversations\n\nTo fetch a list of all conversations send a GET request to https://api.intercom.io/conversations with no parameters. A Conversation List object is returned.\n\nConversations can be sorted with the following parameters:\n\nParameter\tRequired\tDescription\norder\tno\tasc or desc. Return the conversations in ascending or descending order. defaults to desc unless an incorrect value is used i.e. not asc or desc. In these cases we do not throw an error and return the list in asc order.\nsort\tno\twhat field to sort the results by. Valid values: created_at, updated_at, waiting_since. defaults to updated_at.\nWHERE'D MY CONVERSATIONS GO?\n\nWhen sorting by waiting_since, not all conversations are returned. If a teammate was the last person to reply, or the conversation is closed then those conversations will not show up on this list. This is to ensure you have an easy way of identifying and prioritizing those customers who have been waiting longest.\n\nORDERING AND SORTING WITH FILTERS\n\nIt should be noted that the format for ordering and sorting is different when listing conversations for customers and admins as opposed to listing all conversations (i.e. without any filters). When you are using filters such as admin/customers 'order' refers to the fields you want to order the list by and 'sort' refers to whether you want it sorted asc or desc. The reverse is true when listing conversation without any filtering\n\nConversations by Admin\n\nYou can send the following parameters to view a single Admin's conversations -\n\nParameter\tRequired\tDescription\ntype\tyes\tThe type of entity to query for. Value must be admin for admin queries.\nadmin_id\tyes\tThe id for the Admin whose conversations to retrieve. To retrieve all unassigned conversations, set the id to be 'nobody'.\nopen\tno\tBoolean, when true fetches just open conversations, when false just closed conversations\ndisplay_as\tno\tSet to plaintext to retrieve conversation messages in plain text\npages\tno\tOptional. A pagination object, which may be empty, indicating no further conversations to fetch.\norder\tno\twhat field to sort the results by. Valid values: created_at, updated_at, waiting_since. defaults to updated_at.\nsort\tno\tasc or desc. Return the conversations in ascending or descending order. defaults to desc.\nConversations by Customers\n\nYou can send the following parameters to view a single Customer's conversations -\n\nParameter\tRequired\tDescription\ntype\tyes\tThe type of entity to query for. Value must be user.\nintercom_user_id\tone of\tThe id of the User whose conversations to retrieve\nuser_id\tone of\tYour user_id for the user\nemail\tone of\tYour email for the user\nunread\tno\tBoolean, when true fetches just unread conversations\ndisplay_as\tno\tSet to plaintext to retrieve conversation messages in plain text\npages\tno\tOptional. A pagination object, which may be empty, indicating no further conversations to fetch.\norder\tno\twhat field to sort the results by. Valid values: created_at, updated_at. defaults to updated_at.\nsort\tno\tasc or desc. Return the conversations in ascending or descending order. defaults to desc.\nLISTING LEADS USING TYPE 'USER'\n\nIf you want to list lead conversations you will need to set the type to 'user' and use the 'intercom_user_id' as the identifier. It will not work with 'user_id' or type contact for example.\n\nWhen querying the conversations for a particular User, we carry out message matching for that User and your existing Auto Messages, at most once per 15 minutes."
  },
  {
    "title": "Conversations",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/conversations/conversations/",
    "html": "Conversations\n\nConversation are how you can communicate with users in Intercom.\n\nTo start a conversation you and your users can send messages. The API supports two ways to start a conversation -\n\nFrom a user to you, called a 'user initiated' conversation.\nFrom a team member to a single user called an 'admin initiated' conversation.\n\nThe API does not currently support sending admin initiated messages to multiple users, creating auto messages or sending from teams, but we'd be interested in hearing your usecases - please contact team@intercom.io.\n\nOnce a message has been sent the conversation can begin! Users and Admins can reply to any conversation via the API - see the section \"Replying to a Conversation\" for details.\n\n🚧\n\nThe Conversations API is only available to Apps with a trial or an active subscription.\n\nNOTE\n\nThere may be a short delay between user creation and a user becoming available for messaging through the API. A 404 will be returned in this case, and you should retry the request after a delay.\n\nNOTE\n\nIf you try to send an email to a user who has unsubscribed, we will return a 403 and the message \"This user is unsubscribed from emails\"."
  },
  {
    "title": "Retrieve a segment",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/segments/view-a-segment/",
    "html": "Retrieve a segment\nExample Request & Response\n$ curl https://api.intercom.io/segments/53203e244cba153d39000062 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"segment\",\n  \"id\": \"53203e244cba153d39000062\",\n  \"name\": \"New\",\n  \"created_at\": 1394621988,\n  \"updated_at\": 1394622004\n}\n\nintercom.segments.find(:id => '1234')\n\nSegment segment = Segment.find(\"1234\");\n\n\nYou can fetch the details of a single segment.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identified of a given segment.\nRequest Query Parameters\nParameter\tType\tRequired?\tDescription\ninclude_count\tBoolean\tNo\tIncludes the count of contacts that belong to a given segment.\nResponse\n\nThis will return a Segment Model."
  },
  {
    "title": "Detach a contact from a tag",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/tags/untag-contact/",
    "html": "Detach a contact from a tag\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<contact_id>/tags/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\n\nExample Errors\nhttphtml\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can untag a single contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\ncontact_id\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nid\tString\tYes\tThe unique identifier for the tag which is given by Intercom\nResponse\n\nThis will return a Tag model for the tag that was removed from the contact."
  },
  {
    "title": "Open a conversation",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/conversations/open-a-conversation/",
    "html": "Open a conversation\nExample Request & Response\ncurlcurl\n$ curl 'https://api.intercom.io/conversations/<id>/parts' \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d\\n\\n{\\n  \\\"message_type\\\":\\\"open\\\",\\n  \\\"admin_id\\\": \\\"724860\\\"\\n}\n\n{\\n    \\\"type\\\": \\\"conversation\\\",\\n    \\\"id\\\": \\\"1911149811\\\",\\n    \\\"created_at\\\": 1539897198,\\n    \\\"updated_at\\\": 1540393270,\\n    \\\"source\\\": {\\n        \\\"attachments\\\": [],\\n        \\\"author\\\": {\\n            \\\"id\\\": \\\"5bc8f7421ae2d96695c18a\\\",\\n            \\\"type\\\": \\\"lead\\\"\\n        },\\n        \\\"body\\\": \\\"<p>Hi</p>\\\",\\n        \\\"delivered_as\\\": \\\"customer_initiated\\\",\\n        \\\"id\\\": \\\"269650473\\\",\\n        \\\"subject\\\": \\\"\\\",\\n        \\\"type\\\": \\\"conversation\\\",\\n        \\\"url\\\": \\\"https://intercom-survey-app.glitch.me/\\\"\\n    },\\n    \\\"contacts\\\": [\\n        {\\n            \\\"id\\\": \\\"5bc8f7ae2d96695c18a\\\",\\n            \\\"type\\\": \\\"lead\\\"\\n        }\\n    ],\\n    \\\"teammates\\\": [\\n        {\\n            \\\"id\\\": \\\"814860\\\",\\n            \\\"type\\\": \\\"admin\\\",\\n          \\t\\\"name\\\": \\\"Mark Strong\\\",\\n          \\t\\\"email\\\": \\\"mk@acmeinc.org\\\"\\n        }\\n    ],\\n    \\\"assignee\\\": {\\n        {\\n            \\\"id\\\": \\\"814860\\\",\\n            \\\"type\\\": \\\"admin\\\",\\n          \\t\\\"name\\\": \\\"Mark Strong\\\",\\n          \\t\\\"email\\\": \\\"mk@acmeinc.org\\\"\\n        }\\n    },\\n    \\\"open\\\": true,\\n    \\\"state\\\": \\\"open\\\",\\n    \\\"read\\\": true,\\n    \\\"waiting_since\\\": 64654125776\\n    \\\"snoozed_until\\\": null,\\n    \\\"tags\\\": {\\n        \\\"tags\\\": [],\\n        \\\"type\\\": \\\"tag.list\\\",\\n    },\\n    \\\"first_contact_reply\\\": {\\n    \\t\\\"created_at\\\": 1539897198\\n    \\t\\\"type\\\": \\\"conversation\\\",\\n    \\t\\\"url\\\": \\\"https://intercom-survey-app.glitch.me/\\\"\\n    },\\n    \\\"priority\\\": \\\"not_priority\\\",\\n    \\\"sla_applied\\\": {\\n    \\t\\\"sla_name\\\": \\\"VIP customer <5m\\\",\\n      \\\"sla_status\\\": \\\"missed\\\",\\n    },\\n    \\\"conversation_rating\\\": {\\n        \\\"created_at\\\": null,\\n        \\\"contact\\\": {\\n            \\\"id\\\": null,\\n            \\\"type\\\": null\\n        },\\n        \\\"rating\\\": null,\\n        \\\"remark\\\": null,\\n        \\\"teammate\\\": {\\n            \\\"id\\\": null,\\n            \\\"type\\\": null,\\n            \\\"name\\\": null,\\n            \\\"email\\\": null\\n        }\\n    },\\n    \\\"statistics\\\": {\\n      \\\"time_to_assignment\\\": 2310,\\n      \\\"time_to_admin_reply\\\": 2408,\\n      \\\"time_to_first_close\\\": 4915 ,\\n      \\\"time_to_last_close\\\": 5125,\\n      \\\"median_time_to_reply\\\": 321,\\n      \\\"first_contacat_reply_at\\\": 1539897200,\\n      \\\"first_assignment_at\\\": 1539897200,\\n      \\\"first_admin_reply_at\\\": 1539897200,\\n      \\\"first_close_at\\\": 1539897200,\\n      \\\"last_assignment_at\\\": 1539897200,\\n      \\\"last_assignment_admin_reply_at\\\": 1539897200,\\n      \\\"last_contact_reply_at\\\": 1539897200,\\n      \\\"last_admin_reply_at\\\": 1539897200,\\n      \\\"last_close_at\\\": 1539897200,\\n      \\\"last_closed_by\\\": {\\n      \\t\\\"type\\\": \\\"admin\\\",\\n        \\\"id\\\": \\\"325432652\\\",\\n        \\\"name\\\": \\\"Tom Smith\\\",\\n        \\\"email\\\": \\\"tom@example.com\\\"\\n      },\\n      \\\"count_reopens\\\": 3,\\n      \\\"count_assignments\\\": 2,\\n      \\\"count_conversation_parts\\\": 67\\n    },   \\n}\n\n\nYou can open a conversation which is snoozed or closed.\n\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tAlways open.\nadmin_id\tString\tYes\tThe id of the admin which is performing the action.\nResponse\n\nThis will return the Conversation which was opened."
  },
  {
    "title": "Conversations",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/conversations/conversations/",
    "html": "Conversations\n\nConversation are how you can communicate with users in Intercom.\n\nTo start a conversation you and your users can send messages. The API supports two ways to start a conversation -\n\nFrom a user to you, called a 'user initiated' conversation.\nFrom a team member to a single user called an 'admin initiated' conversation.\n\nThe API does not currently support sending admin initiated messages to multiple users, creating auto messages or sending from teams, but we'd be interested in hearing your usecases - please contact team@intercom.io.\n\nOnce a message has been sent the conversation can begin! Users and Admins can reply to any conversation via the API - see the section \"Replying to a Conversation\" for details.\n\n🚧\n\nThe Conversations API is only available to Apps with a trial or an active subscription.\n\nNOTE\n\nThere may be a short delay between user creation and a user becoming available for messaging through the API. A 404 will be returned in this case, and you should retry the request after a delay.\n\nNOTE\n\nIf you try to send an email to a user who has unsubscribed, we will return a 403 and the message \"This user is unsubscribed from emails\"."
  },
  {
    "title": "Conversation Rating Model",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/conversations/conversation-rating-model/",
    "html": "Conversation Rating Model\nExample Conversation Part Object\n\"conversation_rating\": {\n        \"rating\": null,\n        \"remark\": null,\n        \"created_at\": null,\n        \"customer\": {\n            \"type\": null,\n            \"id\": null\n        },\n        \"teammate\": {\n            \"type\": null,\n            \"id\": null\n        }\n    }\n\n\nA conversation rating contains information relating to a customer's satisfaction with their interaction with your team. For more info on conversation ratings please see here\n\nConversation Rating Object\nAttribute\tType\tDescription\nrating\tinteger\tThe rating, between 1 and 5, for the conversation\nremark\tstring\tAn optional field to add a remark to correspond to the number rating\ncreated_at\ttimestamp\tThe time the rating was requested in the conversation being rated\ncustomer\tobject\tAn object containing the ID and type of the customer (e.g. it could be a user or lead)\nteammate\tobject\tAn object containing the ID and type of the Intercom teammate associated with the conversation when it was rated\nCustomer Object\nAttribute\tType\tDescription\ntype\tstring\tA conversation can be rated by either a user or a lead. This will default to null when there is no rating on a conversation.\nid\tstring\tThe Intercom ID of the customer rating the conversation. This defaults to null.\nTeammate Object\nAttribute\tType\tDescription\ntype\tstring\tCurrently this will always be of type admin. It will be null by default if the conversation has not been rated\nid\tstring\tThis is the ID of the teammate being rated. This will default to null."
  },
  {
    "title": "View a User",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/users/view-a-user/",
    "html": "View a User\nExample ID Request\n$ curl \\\n-s https://api.intercom.io/users/5714dd359a3fd47136000001 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"user\",\n    \"id\": \"5714dd359a3fd47136000001\",\n    \"user_id\": \"25\",\n    \"anonymous\": false,\n    \"email\": \"wash@serenity.io\",\n    \"phone\": \"555671243\",\n    \"name\": \"Hoban Washburne\",\n    \"pseudonym\": null,\n  ...\n}\n# NB: Full User objects are returned\n\nintercom.users.find(:id => \"5714dd359a3fd47136000001\")\n\n<?php\n\n$user = $intercom->users->getUser(\"596f35f744c4c5f0cd30c8ef\");\nprint_r($user->id);\n?>\n\nExample User ID Request\n$ curl \\\n-s https://api.intercom.io/users?user_id=25 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nintercom.users.find(:user_id => \"128\")\n\n<?php\n\n$user = $intercom->users->getUser(\"\", [\"user_id\" => \"111\"]);\nprint_r($user->id);\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"user_id\", \"1\");\nUser user = User.find(params);\n\nExample Email Request\n$ curl \\\n-s https://api.intercom.io/users?email=wash%40serenity.io \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nintercom.users.find(:email => \"bob@example.com\")\n\n<?php\n\n$user = $intercom->users->getUser(\"\", [\"email\" => \"plato@phil.com\"]);\nprint_r($user->id);\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"email\", \"malcolm@serenity.io\");\nUser user = User.find(params);\n\n\nEach user object has its own URL\n\nhttps://api.intercom.io/users/{id}\n\nWhere {id} is the value of the user's id field. This URL is the user's canonical address in the API.\n\nRequest Parameters\nParameter\tRequired\tDescription\nuser_id\tno\tThe user id you have defined for the user\nemail\tno\tThe email you have defined for the user\n\nA user can also be fetched using a user_id or email parameter in the url, whose values are the company's user_id or email fields -\n\nhttps://api.intercom.io/users?user_id={user_id}\nhttps://api.intercom.io/users?email={email}\n\nThe email parameter value should be url encoded when sending.\n\nReturns\n\nA user object.\n\nNote: When fetching users using an email or user_id parameter only the ones of type 'user' will be returned. However, it is possible to view a person of type 'contact' (lead) when viewing using their canonical address in the API, namely their id field."
  },
  {
    "title": "Adding to group conversations as admin",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/conversations/adding-to-group-conversations-as-admin/",
    "html": "Adding to group conversations as admin\nAdding a customer to a group conversation\nCUSTOMERS\n\nNote that customers refers to both users and leads.\n\n$ curl 'https://api.intercom.io/conversations/11055118659/customers' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"admin_id\": \"781236\",\n  \"customer\":{\n    \"intercom_user_id\": \"58c1c78946a0aa9ef45b098a\"\n  }\n}'\n\nHTTP/1.1 200 OK\n\n{\"customers\":[\n  {\"type\":\"user\",\"id\":\"597f02cb22f4bb37597e0b7d\"}, \n  {\"type\":\"lead\",\"id\":\"58ff3f670f14ab4f1aa83750\"}]\n}\n\n\nCustomers can be added to a conversation via a POST method to https://api.intercom.io/conversations/{convo_id}/customers/, which accepts a JSON object describing the customer.\n\nArguments\nArgument\tRequired\tDescription\nadmin_id\tYes\tYou must provide the ID of a valid admin to add a customer to the conversation\ncustomer\tYes\tJSON object describing the customer that you want to add to the conversation.\n\nCustomer object\n\nArgument\tRequired\tDescription\nintercom_user_id\tone of\tThe Intercom defined id representing the user (in the URL)\nuser_id\tone of\tThe user id you have defined for the user (or auto defined in the case of leads)\nemail\tone of\tThe email you have defined for the user\nNOTE ABOUT CUSTOMERS WITHOUT AN EMAIL\n\nIf you try to add a customer via intercom_user_id or user_id which does not have an email you will receive an error. Alternatively, If you add a customer via the email parameter and there is no user/lead in the system for that customer then we will create a new lead."
  },
  {
    "title": "The conversation model",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/conversations/conversation-model/",
    "html": "The conversation model\nExample Conversation Object\n{\n    \"type\": \"conversation\",\n    \"id\": \"1911149811\",\n    \"created_at\": 1539897198,\n    \"updated_at\": 1540393270,\n    \"source\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\",\n        \"redacted\": false\n    },\n    \"contacts\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"teammates\": [\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\"\n        }\n    ],\n    \"assignee\": {\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    },\n    \"open\": true,\n    \"state\": \"open\",\n    \"read\": true,\n    \"waiting_since\": 64654125776\n    \"snoozed_until\": null,\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\",\n    },\n    \"first_contact_reply\": {\n    \t\"created_at\": 1539897198\n    \t\"type\": \"conversation\",\n    \t\"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"priority\": \"not_priority\",\n    \"sla_applied\": {\n    \t\"sla_name\": \"VIP customer <5m\",\n      \"sla_status\": \"missed\",\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"contact\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null\n        }\n    },\n    \"statistics\": {\n      \"time_to_assignment\": 2310,\n      \"time_to_admin_reply\": 2408,\n      \"time_to_first_close\": 4915 ,\n      \"time_to_last_close\": 5125,\n      \"median_time_to_reply\": 321,\n      \"first_contact_reply_at\": 1539897200,\n      \"first_assignment_at\": 1539897200,\n      \"first_admin_reply_at\": 1539897200,\n      \"first_close_at\": 1539897200,\n      \"last_assignment_at\": 1539897200,\n      \"last_assignment_admin_reply_at\": 1539897200,\n      \"last_contact_reply_at\": 1539897200,\n      \"last_admin_reply_at\": 1539897200,\n      \"last_close_at\": 1539897200,\n      \"last_closed_by\": {\n      \t\"type\": \"admin\",\n        \"id\": \"325432652\",\n        \"name\": \"Tom Smith\",\n        \"email\": \"tom@example.com\"\n      },\n      \"count_reopens\": 3,\n      \"count_assignments\": 2,\n      \"count_conversation_parts\": 67\n    },\n    \"conversation_parts\": {\n        \"conversation_parts\": [\n            {\n                \"assigned_to\": null,\n                \"attachments\": [],\n                \"author\": {\n                    \"id\": \"815309\",\n                    \"type\": \"bot\"\n                },\n                \"body\": \"<p>Test_App typically replies in a few hours.</p>\",\n                \"created_at\": 1539897200,\n                \"external_id\": null,\n                \"id\": \"2202737122\",\n                \"notified_at\": 1539897200,\n                \"part_type\": \"comment\",\n                \"type\": \"conversation_part\",\n                \"updated_at\": 1539897200,\n                \"redacted\": false\n            },\n          #List of conversation parts...\n        ],\n        \"total_count\": 67,\n        \"type\": \"conversation_part.list\"\n    }    \n}\n\n{\n   \"type\":\"conversation\",\n   \"id\":\"1122334455\",\n   \"created_at\":1567693209,\n   \"updated_at\":1568367881,\n   \"waiting_since\":1568367881,\n   \"snoozed_until\":null,\n   \"admin_assignee_id\": \"814860\",\n   \"team_assignee_id\": null,\n   \"open\":true,\n   \"state\":\"open\",\n   \"read\":true,\n   \"tags\":{\n      \"type\":\"tag.list\",\n      \"tags\":[\n\n      ]\n   },\n   \"conversation_rating\":{\n      \"rating\":null,\n      \"remark\":null,\n      \"created_at\":null,\n      \"customer\":{\n         \"type\":null,\n         \"id\":null\n      },\n      \"teammate\":{\n         \"type\":null,\n         \"id\":null\n      }\n   },\n   \"conversation_parts\":{\n      \"type\":\"conversation_part.list\",\n      \"conversation_parts\":[\n         {\n            \"type\":\"conversation_part\",\n            \"id\":\"1223445555\",\n            \"part_type\":\"comment\",\n            \"body\":\"We've removed this part of the conversation to comply with Twitter's terms and conditions. You can view the complete conversation in Intercom.\",\n            \"created_at\":1567693273,\n            \"updated_at\":1567693273,\n            \"notified_at\":1567693273,\n            \"assigned_to\":null,\n             \"author\":{\n               \"type\":\"user\",\n               \"id\":\"5310d8e7598c9a0b24000002\",\n               \"name\":\"\",\n               \"email\":\"\"\n            },\n            \"attachments\": [],\n            \"external_id\":null\n         },\n      ],\n      \"total_count\":1\n   },\n   \"customer_first_reply\":{\n      \"created_at\":1567693209,\n      \"type\":\"twitter\",\n      \"url\":\"\"\n   },\n   \"conversation_message\":{\n      \"type\":\"twitter\",\n      \"id\":\"409820079\",\n      \"delivered_as\":\"customer_initiated\",\n      \"subject\":\"We've removed this part of the conversation to comply with Twitter's terms and conditions. You can view the complete conversation in Intercom.\",\n      \"body\":\"We've removed this part of the conversation to comply with Twitter's terms and conditions. You can view the complete conversation in Intercom.\",\n      \"author\":{\n         \"type\":\"user\",\n         \"id\":\"5310d8e7598c9a0b24000002\",\n         \"name\":\"\",\n         \"email\":\"\"\n      },\n      \"attachments\":[\n\n      ],\n      \"url\":\"\"\n   },\n   \"customers\":[\n      {\n         \"type\":\"user\",\n         \"id\":\"5310d8e7598c9a0b24000002\"\n      }\n   ],\n   \"user\":{\n      \"type\":\"user\",\n      \"id\":\"5310d8e7598c9a0b24000002\"\n   }\n}\n\n\nConversations are how you can communicate with users in Intercom. They are created when a contact replies to an outbound message, or when one admin directly sends a message to a single contact.\n\nConversation Object\nKey\tType\tDescription\ntype\tString\tAlways conversation.\nid\tString\tThe id representing the conversation.\ncreated_at\tTimestamp\tThe time the conversation was created.\nupdated_at\tTimestamp\tThe last time the conversation was updated.\nsource\tObject\tThe Conversation Part that originated this conversation, which can be Contact, Admin, Campaign, Automated or Operator initiated.\ncontacts\tList\tThe list of contacts (users or leads) involved in this conversation. This will only contain one customer unless more were added via the group conversation feature.\nteammates\tList\tThe list of teammates who participated in the conversation (wrote at least one conversation part).\nassignee\tObject\tThe admin or team assigned to the conversation. If it's unassigned then it will return null.\nopen\tBoolean\tIndicates whether a conversation is open (true) or closed (false).\nstate\tString\tCan be set to \"open\", \"closed\" or \"snoozed\".\nread\tBoolean\tIndicates whether a conversation has been read.\nwaiting_since\tTimestamp\tThe last time a Contact responded to an Admin. In other words, the time a customer started waiting for a response. Set to null if last reply is from an Admin.\nsnoozed_until\tTimestamp\tIf set this is the time in the future when this conversation will be marked as open. i.e. it will be in a snoozed state until this time.\ntags\tList\tA list of tags objects associated with the conversation.\nfirst_contact_reply\tObject\tAn object containing information on the first users message. For a contact initiated message this will represent the users original message.\npriority\tString\tIf marked as priority, it will return priority or else not_priority.\nsla_applied\tObject\tThe SLA Applied object contains the details for which SLA has been applied to this conversation.\nconversation_rating\tObject\tThe Conversation Rating object which contains information on the rating and/or remark added by a Contact and the Admin assigned to the conversation.\nstatistics\tObject\tA Statistics object containing all information required for reporting, with timestamps and calculated metrics.\nconversation_parts\tList\tA list of Conversation Part objects for each part message in the conversation. This is only returned when Retrieving a Conversation, and ignored when Listing all Conversations. There is a limit of 500 parts.\nSource object\nAttribute\tType\tDescription\ntype\tString\tThis includes conversation, push, facebook, twitter and email.\nid\tString\tThe id representing the message.\ndelivered_as\tString\tOptional. The message subject. For Twitter, this will show a generic message regarding why\nsubject\tString\tOptional. The message subject. For Twitter, this will show a generic message regarding why the subject is obscured.\nbody\tString\tThe message body, which may contain HTML. For Twitter, this will show a generic message regarding why the body is obscured.\nauthor\tObject\tThe object who initiated the conversation, which can be a Contact, Admin or Team. Bots and campaigns send messages on behalf of Admins or Teams. For Twitter, this will be blank.\nattachments\tList\tA list of attachments for the part.\nurl\tString\tThe URL where the conversation was started. For Twitter, Email, and Bots, this will be blank.\nredacted\tBoolean\tWhether or not the source message has been redacted. Only applicable for contact initiated messages.\nNOTE\n\nPlease note that URLs for User uploaded images & files have a 30 minute expiration. Once the expiration has passed, the link will no longer be valid and result in a 404. This means that if a URL is copied, and then reused elsewhere, it will continue to work until the expiry threshold. A new URL can be generated by fetching the conversation data again.\n\nContact Object\nAttribute\tType\tDescription\ntype\tString\tThis can be either a user or a lead.\nid\tString\tThe ID for the user or lead.\nTeammate Object\nAttribute\tType\tDescription\ntype\tString\tCurrently this will always be of type admin. Conversations not rated will return null.\nid\tString\tThe ID of the Admin.\nFirst Contact Reply Object\nAttribute\tType\tDescription\ntype\tString\tOver which channel did the first reply occur. Options include conversation, push, facebook, twitter and email.\nurl\tString\tThe URL where the first reply originated from.\nFor Twitter and Email replies, this will be blank.\ncreated_at\tTimestamp\tThe time the users messages was created. This is in unix timestamp format.\nConversation Rating Object\nAttribute\tType\tDescription\nrating\tInteger\tThe rating, between 1 and 5, for the conversation.\nremark\tString\tAn optional field to add a remark to correspond to the number rating.\ncreated_at\tTimestamp\tThe time the rating was requested in the conversation being rated.\ncontact\tObject\tAn object containing the ID and type of the Contact.\nteammate\tObject\tAn object containing the ID and type of the Intercom teammate associated with the conversation when it was rated.\nSLA Object\nAttribute\tType\tDescription\nsla_name\tString\tThe name of the SLA as given by the teammate when it was created.\nsla_status\tString\tOne of \"hit\", \"missed\", or \"cancelled\".\nStatistics Object\nAttribute\tType\tDescription\ntime_to_assignment\tInteger\tDuration until last assignment before first admin reply. In seconds.\ntime_to_admin_reply\tInteger\tDuration until first admin reply. Subtracts out of business hours. In seconds.\ntime_to_first_close\tInteger\tDuration until conversation was closed first time. Subtracts out of business hours. In seconds.\ntime_to_last_close\tInteger\tDuration until conversation was closed last time. Subtracts out of business hours. In seconds.\nmedian_time_to_reply\tInteger\tMedian based on all admin replies after a contact reply. Subtracts out of business hours. In seconds.\nfirst_contact_reply_at\tTimestamp\tTime of first text conversation part from a contact.\nfirst_assignment_at\tTimestamp\tTime of first assignment after first_contact_reply_at.\nfirst_admin_reply_at\tTimestamp\tTime of first admin reply after first_contact_reply_at.\nfirst_close_at\tTimestamp\tTime of first close after first_contact_reply_at.\nlast_assignment_at\tTimestamp\tTime of last assignment after first_contact_reply_at.\nlast_assignment_admin_reply_at\tTimestamp\tTime of first admin reply since most recent assignment.\nlast_contact_reply_at\tTimestamp\tTime of the last conversation part from a contact.\nlast_admin_reply_at\tTimestamp\tTime of the last conversation part from an admin.\nlast_close_at\tTimestamp\tTime of the last conversation close.\nlast_closed_by\tObject\tThe last admin who closed the conversation. Returns a reference to an Admin object.\ncount_reopens\tInteger\tNumber of reopens after first_contact_reply_at.\ncount_assignments\tInteger\tNumber of assignments after first_contact_reply_at.\ncount_conversations_parts\tInteger\tTotal number of conversation parts.\nConversation Part Object\n\n🚧\n\nConversation Parts are not returned when listing or searching for all conversations, only when retrieving a single conversation. There is also a limit of 500 parts.\n\nAttribute\tType\tDescription\ntype\tString\tAlways conversation_part.\nid\tString\tThe id representing the conversation part.\npart_type\tString\tThe type of conversation part.\nbody\tString\tThe message body, which may contain HTML.\nFor Twitter, this will show a generic message regarding why the body is obscured.\ncreated_at\tTimestamp\tThe time the conversation part was created.\nupdated_at\tTimestamp\tThe last time the conversation part was updated.\nnotified_at\tTimestamp\tThe time the user was notified with the conversation part.\nassigned_to\tString\tThe id of the admin that was assigned the conversation by this conversation_part (null if there has been no change in assignment.)\nauthor\tString\tThe type of individual that sent the message (user, admin or bot) and their related id.\nFor Twitter, this will be blank.\nattachments\tList\tA list of attachments for the part.\nredacted\tBoolean\tWhether or not a conversation part has been redacted.\nConversation Part Types\nType\tDescription\ncomment\tStandard reply from customer or admin to a conversation.\nnote\tA note created by an admin on the conversation. A note will only be viewable as an admin.\nnote_and_reopen\tAdd a note and reopen the conversations in the one action.\nassignment\tAn assignment of the conversation to an admin, or Nobody.\nopen\tIdentifies a conversation has been opened.\nclose\tIdentifies a conversation has been closed.\naway_mode_assignment\tConversation has been assigned due to the admin being in away mode.\nparticipant_added\tA participant has been added to a group conversation.\nparticipant_removed\tA participant has been removed from a group conversation.\nconversation_rating_changed\tA conversation rating has been changed, not this can only occur before the rating has been submitted. Once it has been submitted it cannot be changed.\nconversation_rating_remark_added\tA conversation remark has been added to the conversation.\nsnoozed\tA conversation has been snoozed.\nunsnoozed\tA conversation has been unsnoozed.\nassign_and_unsnooze\tAssign a conversation and unsnooze it in one action..\ntimer_unsnooze\tUnsnooze a conversation after a set time."
  },
  {
    "title": "List all conversations",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/conversations/list-conversations/",
    "html": "List all conversations\nExample Request & Response\n$ curl \\\"https://api.intercom.io/conversations?order=desc&sort=updated_at\" \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"conversation.list\",\n  \"conversations\": [\n    {\n    \"type\": \"conversation\",\n    \"id\": \"1911149811\",\n    \"created_at\": 1539897198,\n    \"updated_at\": 1540393270,\n    \"source\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"contacts\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"teammates\": [\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    ],\n    \"assignee\": {\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    },\n    \"open\": true,\n    \"state\": \"open\",\n    \"read\": true,\n    \"waiting_since\": 64654125776\n    \"snoozed_until\": null,\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\",\n    },\n    \"first_contact_reply\": {\n    \t\"created_at\": 1539897198\n    \t\"type\": \"conversation\",\n    \t\"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"priority\": \"not_priority\",\n    \"sla_applied\": {\n    \t\"sla_name\": \"VIP customer <5m\",\n      \"sla_status\": \"missed\",\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"contact\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null,\n            \"name\": null,\n            \"email\": null\n        }\n    },\n    \"statistics\": {\n      \"time_to_assignment\": 2310,\n      \"time_to_admin_reply\": 2408,\n      \"time_to_first_close\": 4915 ,\n      \"time_to_last_close\": 5125,\n      \"median_time_to_reply\": 321,\n      \"first_contacat_reply_at\": 1539897200,\n      \"first_assignment_at\": 1539897200,\n      \"first_admin_reply_at\": 1539897200,\n      \"first_close_at\": 1539897200,\n      \"last_assignment_at\": 1539897200,\n      \"last_assignment_admin_reply_at\": 1539897200,\n      \"last_contact_reply_at\": 1539897200,\n      \"last_admin_reply_at\": 1539897200,\n      \"last_close_at\": 1539897200,\n      \"last_closed_by\": {\n      \t\"type\": \"admin\",\n        \"id\": \"325432652\",\n        \"name\": \"Tom Smith\",\n        \"email\": \"tom@example.com\"\n      },\n      \"count_reopens\": 3,\n      \"count_assignments\": 2,\n      \"count_conversation_parts\": 67\n    }, \n    \n    # list of conversaionts\n\n  ],\n  \"pages\": {\n    \"next\": \"https://api.intercom.io/conversations?per_page=20&page=2\",\n    \"page\": 1,\n    \"per_page\": 20,\n    \"total_pages\": 77,\n    \"type\": \"pages\"\n  }\n}\n\nintercom.conversations.find_all(:type => 'admin', :id => 25, :open => true)\n\n<?php\n$intercom->conversations->getConversations([\n    \"type\" => \"admin\",\n    \"admin_id\" => \"891290\",\n    \"open\" => false\n]);\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"type\", \"admin\");\nparams.put(\"admin_id\", \"1\");\nConversationCollection conversations = Conversation.list(params);\nwhile (conversations.hasNext()) {\n  Conversation conversation = conversations.next();\n}\n\n\nYou can fetch a list of all conversations.\n\nRequest Query Parameters\nParameter\tType\tRequired?\tDescription\norder\tString\tNo\tReturn the conversations in ascending (asc) or descending (desc) order. Defaults to desc. If you provide an invalid value, we default to asc.\nsort\tString\tNo\tReturn the conversation sorted by their created_at, updated_at, or waiting_since timestamp values. Defaults to updated_at.\nCONVERSATIONS NOT SHOWING WITH WAITING_SINCE SORTING\n\nIf a teammate was the last person to reply, or the conversation is closed, then those conversations will not show up on this list. This is to ensure you have an easy way of identifying and prioritizing those customers who have been waiting longest.\n\nResponse\n\nA paginated list of Conversations is returned, without the conversation_parts object.\n\nRETRIEVING CONVERSATION PARTS\n\nYou must retrieve a single conversation using the conversation's id to return a conversation with the conversation_part array and objects included."
  },
  {
    "title": "Detach a contact from a group conversation",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/conversations/deleting-from-group-conversations/",
    "html": "Detach a contact from a group conversation\nExample Request & Response\ncurlhttp\n$ curl 'https://api.intercom.io/conversations/<conversation_id>/customers/<contact_id>' \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d\\n\\n{\\n  \\\"admin_id\\\": \\\"781345\\\"\\n}\n\n\nRemoves a Contact from a group conversation.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nconversation_id\tString\tYes\tThe identifier for the conversation as given by Intercom.\ncontact_id\tString\tYes\tThe identifier for the contact as given by Intercom.\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\nadmin_id\tString\tYes\tThe id of the admin who is performing the action.\nResponse\n\nThis will return the Contact who was detached from the conversation."
  },
  {
    "title": "Create a conversation",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/conversations/create-a-conversation/",
    "html": "Create a conversation\nExample Request & Response\n$ curl https://api.intercom.io/conversations \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d\n\n{\n  \"from\": {\n    \"type\": \"user\",\n    \"id\": \"536e564f316c83104c000020\"\n  },\n  \"body\": \"Hey\"\n}\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"user_message\",\n  \"id\": \"2001\",\n  \"created_at\": 1401917202,\n  \"body\" : \"Hey, is the new thing in stock?\",\n  \"message_type\": \"inapp\"\n}\n\nintercom.messages.create(\n  :from => {\n    :type => \"user\",\n    :id => \"536e564f316c83104c000020\"\n  },\n  :body => \"Hey\"\n)\n\n<?php\n$intercom->messages->create([\n    \"message_type\" => \"inapp\",\n    \"body\" => \"Surely, I said, knowledge is the food of the soul\",\n    \"from\" => [\n        \"type\" => \"user\",\n        \"id\" => \"5989303470da497b1babb9ef\"\n    ]\n]);\n?>\n\nUserMessage userMessage = new UserMessage()\n  .setBody(\"Hey! Is there, is there a reward?\")\n  .setUser(user);\nConversation.create(userMessage);\n\n\nYou can create a conversation that has been initiated by a contact (ie. user or lead). The conversation can be an in-app message only.\n\nSENDING FOR VISTITORS\n\nYou can also send a message from a visitor by specifying their user_id or id value in the from field, along with a type field value of contact. This visitor will be automatically converted to a contact with a lead role once the conversation is created.\n\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\nfrom\tObject\tYes\tSee Form Object below for more.\nbody\tString\tYes\tThe content of the message. HTML is not supported.\nFrom Object\nAttribute\tType\tRequired?\tDescription\ntype\tString\tYes\tThe role associated to the contact - user or lead.\nid\tString\tYes\tThe identifier for the contact which is given by Intercom.\nResponse\n\nThis will return the Message model that has been created."
  },
  {
    "title": "Close a conversation",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/conversations/close-a-conversation/",
    "html": "Close a conversation\nExample Request & Response\ncurlcurl\n$ curl https://api.intercom.io/conversations/<id>/parts\\n-X POST\\n-H 'Authorization:Bearer <Your access token>'\\n-H 'Accept:application/json'\\n-H 'Content-Type:application/json' -d\\n\\n{ \\n  \\\"message_type\\\": \\\"close\\\",\\n  \\\"type\\\": \\\"admin\\\",\\n  \\\"admin_id\\\": 5784329,\\n  \\\"body\\\": \\\"Closed conversation because of X.\\\"\\n}\n\n{\\n    \\\"type\\\": \\\"conversation\\\",\\n    \\\"id\\\": \\\"1911149811\\\",\\n    \\\"created_at\\\": 1539897198,\\n    \\\"updated_at\\\": 1540393270,\\n    \\\"source\\\": {\\n        \\\"attachments\\\": [],\\n        \\\"author\\\": {\\n            \\\"id\\\": \\\"5bc8f7421ae2d96695c18a\\\",\\n            \\\"type\\\": \\\"lead\\\"\\n        },\\n        \\\"body\\\": \\\"<p>Hi</p>\\\",\\n        \\\"delivered_as\\\": \\\"customer_initiated\\\",\\n        \\\"id\\\": \\\"269650473\\\",\\n        \\\"subject\\\": \\\"\\\",\\n        \\\"type\\\": \\\"conversation\\\",\\n        \\\"url\\\": \\\"https://intercom-survey-app.glitch.me/\\\"\\n    },\\n    \\\"contacts\\\": [\\n        {\\n            \\\"id\\\": \\\"5bc8f7ae2d96695c18a\\\",\\n            \\\"type\\\": \\\"lead\\\"\\n        }\\n    ],\\n    \\\"teammates\\\": [\\n        {\\n            \\\"id\\\": \\\"814860\\\",\\n            \\\"type\\\": \\\"admin\\\",\\n          \\t\\\"name\\\": \\\"Mark Strong\\\",\\n          \\t\\\"email\\\": \\\"mk@acmeinc.org\\\"\\n        }\\n    ],\\n    \\\"assignee\\\": {\\n        {\\n            \\\"id\\\": \\\"814860\\\",\\n            \\\"type\\\": \\\"admin\\\",\\n          \\t\\\"name\\\": \\\"Mark Strong\\\",\\n          \\t\\\"email\\\": \\\"mk@acmeinc.org\\\"\\n        }\\n    },\\n    \\\"open\\\": true,\\n    \\\"state\\\": \\\"open\\\",\\n    \\\"read\\\": true,\\n    \\\"waiting_since\\\": 64654125776\\n    \\\"snoozed_until\\\": null,\\n    \\\"tags\\\": {\\n        \\\"tags\\\": [],\\n        \\\"type\\\": \\\"tag.list\\\",\\n    },\\n    \\\"first_contact_reply\\\": {\\n    \\t\\\"created_at\\\": 1539897198\\n    \\t\\\"type\\\": \\\"conversation\\\",\\n    \\t\\\"url\\\": \\\"https://intercom-survey-app.glitch.me/\\\"\\n    },\\n    \\\"priority\\\": \\\"not_priority\\\",\\n    \\\"sla_applied\\\": {\\n    \\t\\\"sla_name\\\": \\\"VIP customer <5m\\\",\\n      \\\"sla_status\\\": \\\"missed\\\",\\n    },\\n    \\\"conversation_rating\\\": {\\n        \\\"created_at\\\": null,\\n        \\\"contact\\\": {\\n            \\\"id\\\": null,\\n            \\\"type\\\": null\\n        },\\n        \\\"rating\\\": null,\\n        \\\"remark\\\": null,\\n        \\\"teammate\\\": {\\n            \\\"id\\\": null,\\n            \\\"type\\\": null,\\n            \\\"name\\\": null,\\n            \\\"email\\\": null\\n        }\\n    },\\n    \\\"statistics\\\": {\\n      \\\"time_to_assignment\\\": 2310,\\n      \\\"time_to_admin_reply\\\": 2408,\\n      \\\"time_to_first_close\\\": 4915 ,\\n      \\\"time_to_last_close\\\": 5125,\\n      \\\"median_time_to_reply\\\": 321,\\n      \\\"first_contacat_reply_at\\\": 1539897200,\\n      \\\"first_assignment_at\\\": 1539897200,\\n      \\\"first_admin_reply_at\\\": 1539897200,\\n      \\\"first_close_at\\\": 1539897200,\\n      \\\"last_assignment_at\\\": 1539897200,\\n      \\\"last_assignment_admin_reply_at\\\": 1539897200,\\n      \\\"last_contact_reply_at\\\": 1539897200,\\n      \\\"last_admin_reply_at\\\": 1539897200,\\n      \\\"last_close_at\\\": 1539897200,\\n      \\\"last_closed_by\\\": {\\n      \\t\\\"type\\\": \\\"admin\\\",\\n        \\\"id\\\": \\\"325432652\\\",\\n        \\\"name\\\": \\\"Tom Smith\\\",\\n        \\\"email\\\": \\\"tom@example.com\\\"\\n      },\\n      \\\"count_reopens\\\": 3,\\n      \\\"count_assignments\\\": 2,\\n      \\\"count_conversation_parts\\\": 67\\n    },   \\n}\n\n\nYou can close a conversation.\n\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Body Parameters\nParameter\tType\tRequired?\tDescripton\nmessage_type\tString\tYes\tAlways close.\ntype\tString\tYes\tAlways admin.\nadmin_id\tString\tYes\tThe id of the admin who is performing the action.\nbody\tString\tNo\tOptionally you can leave a message in the conversation to provide additional context to the user and other teammates.\nResponse\n\nThis will return the Conversation that has been closed."
  },
  {
    "title": "Assign a conversation",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/conversations/assign-a-conversation/",
    "html": "Assign a conversation\nExample Request & Response (Assigning to Admin)\ncurlcurl\n$ curl https://api.intercom.io/conversations/{id}/parts \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d\\n\\n{\\n  \\\"type\\\": \\\"admin\\\",\\n  \\\"admin_id\\\": \\\"814860\\\",\\n  \\\"assignee_id\\\": \\\"530165\\\",\\n  \\\"message_type\\\": \\\"assignment\\\",\\n  \\\"body\\\": \\\"Reassigning for X reason.\\\"\\n}\n\n{\\n    \\\"type\\\": \\\"conversation\\\",\\n    \\\"id\\\": \\\"1911149811\\\",\\n    \\\"created_at\\\": 1539897198,\\n    \\\"updated_at\\\": 1540393270,\\n    \\\"source\\\": {\\n        \\\"attachments\\\": [],\\n        \\\"author\\\": {\\n            \\\"id\\\": \\\"5bc8f7421ae2d96695c18a\\\",\\n            \\\"type\\\": \\\"lead\\\"\\n        },\\n        \\\"body\\\": \\\"<p>Hi</p>\\\",\\n        \\\"delivered_as\\\": \\\"customer_initiated\\\",\\n        \\\"id\\\": \\\"269650473\\\",\\n        \\\"subject\\\": \\\"\\\",\\n        \\\"type\\\": \\\"conversation\\\",\\n        \\\"url\\\": \\\"https://intercom-survey-app.glitch.me/\\\"\\n    },\\n    \\\"contacts\\\": [\\n        {\\n            \\\"id\\\": \\\"5bc8f7ae2d96695c18a\\\",\\n            \\\"type\\\": \\\"lead\\\"\\n        }\\n    ],\\n    \\\"teammates\\\": [\\n        {\\n            \\\"id\\\": \\\"814860\\\",\\n            \\\"type\\\": \\\"admin\\\",\\n          \\t\\\"name\\\": \\\"Mark Strong\\\",\\n          \\t\\\"email\\\": \\\"mk@acmeinc.org\\\"\\n        }\\n    ],\\n   \\\"assignee\\\": {\\n        {\\n            \\\"id\\\": \\\"814860\\\",\\n            \\\"type\\\": \\\"admin\\\",\\n          \\t\\\"name\\\": \\\"Mark Strong\\\",\\n          \\t\\\"email\\\": \\\"mk@acmeinc.org\\\"\\n        }\\n    },\\n    \\\"open\\\": true,\\n    \\\"state\\\": \\\"open\\\",\\n    \\\"read\\\": true,\\n    \\\"waiting_since\\\": 64654125776\\n    \\\"snoozed_until\\\": null,\\n    \\\"tags\\\": {\\n        \\\"tags\\\": [],\\n        \\\"type\\\": \\\"tag.list\\\",\\n    },\\n    \\\"first_contact_reply\\\": {\\n    \\t\\\"created_at\\\": 1539897198\\n    \\t\\\"type\\\": \\\"conversation\\\",\\n    \\t\\\"url\\\": \\\"https://intercom-survey-app.glitch.me/\\\"\\n    },\\n    \\\"priority\\\": \\\"not_priority\\\",\\n    \\\"sla_applied\\\": {\\n    \\t\\\"sla_name\\\": \\\"VIP customer <5m\\\",\\n      \\\"sla_status\\\": \\\"missed\\\",\\n    },\\n    \\\"conversation_rating\\\": {\\n        \\\"created_at\\\": null,\\n        \\\"contact\\\": {\\n            \\\"id\\\": null,\\n            \\\"type\\\": null\\n        },\\n        \\\"rating\\\": null,\\n        \\\"remark\\\": null,\\n        \\\"teammate\\\": {\\n            \\\"id\\\": null,\\n            \\\"type\\\": null,\\n            \\\"name\\\": null,\\n            \\\"email\\\": null\\n        }\\n    },\\n    \\\"statistics\\\": {\\n      \\\"time_to_assignment\\\": 2310,\\n      \\\"time_to_admin_reply\\\": 2408,\\n      \\\"time_to_first_close\\\": 4915 ,\\n      \\\"time_to_last_close\\\": 5125,\\n      \\\"median_time_to_reply\\\": 321,\\n      \\\"first_contacat_reply_at\\\": 1539897200,\\n      \\\"first_assignment_at\\\": 1539897200,\\n      \\\"first_admin_reply_at\\\": 1539897200,\\n      \\\"first_close_at\\\": 1539897200,\\n      \\\"last_assignment_at\\\": 1539897200,\\n      \\\"last_assignment_admin_reply_at\\\": 1539897200,\\n      \\\"last_contact_reply_at\\\": 1539897200,\\n      \\\"last_admin_reply_at\\\": 1539897200,\\n      \\\"last_close_at\\\": 1539897200,\\n      \\\"last_closed_by\\\": {\\n      \\t\\\"type\\\": \\\"admin\\\",\\n        \\\"id\\\": \\\"325432652\\\",\\n        \\\"name\\\": \\\"Tom Smith\\\",\\n        \\\"email\\\": \\\"tom@example.com\\\"\\n      },\\n      \\\"count_reopens\\\": 3,\\n      \\\"count_assignments\\\": 2,\\n      \\\"count_conversation_parts\\\": 67\\n    },   \\n}\n\nExample Request & Response (Auto Assignment)\ncurlcurl\n$ curl 'https://api.intercom.io/conversations/{id}/run_assignment_rules'\\n-X POST \\n-H 'Authorization: Bearer <Your access token>' \\n-H 'Accept: application/json' \\n-H 'Content-Type: application/json'\\n\n\n{\\n    \\\"type\\\": \\\"conversation\\\",\\n    \\\"id\\\": \\\"1911149811\\\",\\n    \\\"created_at\\\": 1539897198,\\n    \\\"updated_at\\\": 1540393270,\\n    \\\"source\\\": {\\n        \\\"attachments\\\": [],\\n        \\\"author\\\": {\\n            \\\"id\\\": \\\"5bc8f7421ae2d96695c18a\\\",\\n            \\\"type\\\": \\\"lead\\\"\\n        },\\n        \\\"body\\\": \\\"<p>Hi</p>\\\",\\n        \\\"delivered_as\\\": \\\"customer_initiated\\\",\\n        \\\"id\\\": \\\"269650473\\\",\\n        \\\"subject\\\": \\\"\\\",\\n        \\\"type\\\": \\\"conversation\\\",\\n        \\\"url\\\": \\\"https://intercom-survey-app.glitch.me/\\\"\\n    },\\n    \\\"contacts\\\": [\\n        {\\n            \\\"id\\\": \\\"5bc8f7ae2d96695c18a\\\",\\n            \\\"type\\\": \\\"lead\\\"\\n        }\\n    ],\\n    \\\"teammates\\\": [\\n        {\\n            \\\"id\\\": \\\"814860\\\",\\n            \\\"type\\\": \\\"admin\\\",\\n          \\t\\\"name\\\": \\\"Mark Strong\\\",\\n          \\t\\\"email\\\": \\\"mk@acmeinc.org\\\"\\n        }\\n    ],\\n    \\\"assignee\\\": {\\n        {\\n            \\\"id\\\": \\\"814860\\\",\\n            \\\"type\\\": \\\"admin\\\",\\n          \\t\\\"name\\\": \\\"Mark Strong\\\",\\n          \\t\\\"email\\\": \\\"mk@acmeinc.org\\\"\\n        }\\n    },\\n    \\\"open\\\": true,\\n    \\\"state\\\": \\\"open\\\",\\n    \\\"read\\\": true,\\n    \\\"waiting_since\\\": 64654125776\\n    \\\"snoozed_until\\\": null,\\n    \\\"tags\\\": {\\n        \\\"tags\\\": [],\\n        \\\"type\\\": \\\"tag.list\\\",\\n    },\\n    \\\"first_contact_reply\\\": {\\n    \\t\\\"created_at\\\": 1539897198\\n    \\t\\\"type\\\": \\\"conversation\\\",\\n    \\t\\\"url\\\": \\\"https://intercom-survey-app.glitch.me/\\\"\\n    },\\n    \\\"priority\\\": \\\"not_priority\\\",\\n    \\\"sla_applied\\\": {\\n    \\t\\\"sla_name\\\": \\\"VIP customer <5m\\\",\\n      \\\"sla_status\\\": \\\"missed\\\",\\n    },\\n    \\\"conversation_rating\\\": {\\n        \\\"created_at\\\": null,\\n        \\\"contact\\\": {\\n            \\\"id\\\": null,\\n            \\\"type\\\": null\\n        },\\n        \\\"rating\\\": null,\\n        \\\"remark\\\": null,\\n        \\\"teammate\\\": {\\n            \\\"id\\\": null,\\n            \\\"type\\\": null,\\n            \\\"name\\\": null,\\n            \\\"email\\\": null\\n        }\\n    },\\n    \\\"statistics\\\": {\\n      \\\"time_to_assignment\\\": 2310,\\n      \\\"time_to_admin_reply\\\": 2408,\\n      \\\"time_to_first_close\\\": 4915 ,\\n      \\\"time_to_last_close\\\": 5125,\\n      \\\"median_time_to_reply\\\": 321,\\n      \\\"first_contacat_reply_at\\\": 1539897200,\\n      \\\"first_assignment_at\\\": 1539897200,\\n      \\\"first_admin_reply_at\\\": 1539897200,\\n      \\\"first_close_at\\\": 1539897200,\\n      \\\"last_assignment_at\\\": 1539897200,\\n      \\\"last_assignment_admin_reply_at\\\": 1539897200,\\n      \\\"last_contact_reply_at\\\": 1539897200,\\n      \\\"last_admin_reply_at\\\": 1539897200,\\n      \\\"last_close_at\\\": 1539897200,\\n      \\\"last_closed_by\\\": {\\n      \\t\\\"type\\\": \\\"admin\\\",\\n        \\\"id\\\": \\\"325432652\\\",\\n        \\\"name\\\": \\\"Tom Smith\\\",\\n        \\\"email\\\": \\\"tom@example.com\\\"\\n      },\\n      \\\"count_reopens\\\": 3,\\n      \\\"count_assignments\\\": 2,\\n      \\\"count_conversation_parts\\\": 67\\n    },    \\n}\n\n\nYou can assign a conversation to an admin or team. You can also let it be automatically assigned following assignment rules.\n\nRequest Path Parameters\nParameter\tRequired?\tDescription\nid\tYes\tThe identifier for the conversation as given by Intercom.\nrun_assignment_rules\tNo\tRuns through all assignment rules created in the Intercom Inbox product for a given workspace.\nRequest Body Parameters\n\nNo body parameters are required when auto assigning conversations using the {id}/run_assignment_rules path parameter.\n\nArgument\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tAlways assignment.\ntype\tString\tYes\tAccepts admin or team.\nadmin_id\tString\tYes\tThe id of the admin who is performing the action.\nassignee_id\tString\tYes\tThe id of the admin or team which will be assigned the conversation. Set this to 0 if you want to assign it to no-one (ie. Unassigned).\nbody\tString\tNo\tOptionally you can leave a note in the conversation for additional context to other teammates.\nResponse\n\nThis will return the Conversation that has been assigned."
  },
  {
    "title": "Closing or reopening a conversation",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/conversations/closing-a-conversation/",
    "html": "Closing or reopening a conversation\n\nYou can close or reopen a conversation with or without a reply, via a POST method to https://api.intercom.io/conversations/{convo_id}/reply/, which accepts a JSON object identifying whether you want to close or reopen.\n\nArgument\tRequired\tDescription\ntype\tyes\tMust be admin\nmessage_type\tyes\tMust be open or close\nadmin_id\tyes\tID of the admin the close or open will be attributed to\nClosing a Conversation Without Reply\ncurl https://api.intercom.io/conversations/xxx/reply\n-X POST\n-H 'Authorization:Bearer <Your access token>'\n-H 'Accept:application/json'\n-H 'Content-Type:application/json'\n-d '{ \"admin_id\": CLOSING_ADMIN_ID, \"message_type\": \"close\", \"type\": \"admin\"}'\n\n<?php\n\n$intercom->conversations->replyToConversation(\"10957850396\", [\n    \"type\" => \"admin\",\n    \"admin_id\" => \"814860\",\n    \"message_type\" => \"close\"\n]);\n?>\n\nClosing a Conversation With Reply\ncurl https://api.intercom.io/conversations/xxx/reply\n-X POST\n-H 'Authorization:Bearer <Your access token>'\n-H 'Accept:application/json'\n-H 'Content-Type:application/json'\n-d '{ \"body\":\"closing this convo\", \"admin_id\": CLOSING_ADMIN_ID, \"message_type\": \"close\", \"type\": \"admin\"}'\n\n<?php\n\n$convo = $intercom->conversations->replyToConversation(\"10957850396\", [\n    \"body\" => \"The beginning is the most important part of the work, but this is the end ... of the conversation!\",\n    \"type\" => \"admin\",\n    \"admin_id\" => \"814860\",\n    \"message_type\" => \"close\"\n]);\n?>\n"
  },
  {
    "title": "Single-Select",
    "url": "https://developers.intercom.com/docs/references/1.3/canvas-kit/interactivecomponents/single-select/",
    "html": "Single-Select\n\nA single-select component is used to capture a choice from up to 10 options that you provide. You can submit the value of the select option by:\n\nAdding an action to the single-select component\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the single-select component used as the key and the id from the chosen option as the value.\n\nSingle-Select Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tsingle-select\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of options.Can provide 2 to 10.\nlabel\tAny string\tNo\tThe text shown above the options.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOptions Parameters\nParameter\tPossible Values\tRequired\tDescription\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "Compatibility",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/common-structures/compatibility/",
    "html": "Compatibility\nUnknown Field\n{\n  \"type\": \"user\",\n  \"user_id\" : \"456456\",\n  \"email\" : \"j@example.org\",\n  \"such_key\": \"so_value\"\n}\n\nMust Ignore Interpretation\n{\n  \"type\": \"user\",\n  \"user_id\" : \"456456\",\n  \"email\" : \"j@example.org\"\n}\n\n\nJSON objects in the API follow a must ignore processing model, where clients are expected to ignore data fields they don't understand.\n\nFor example if the client saw the JSON as shown in the example on the right ('Unknown Field')\nand did not understand the such_key field (and who can blame it?), it must pretend the field wasn't there and will process the object as if it looked liked the object shown in 'Must Ignore'.\n\nWhen fetching content, fields that are optional for API objects are indicated in the documentation - clients must not assume they will always be present. When submitting content, fields that are required to be sent by client are also indicated in the documentation - if these are not sent the API may reject the request.\n\nIn general the API may reject JSON where data is not valid or incomplete with a 422 Unprocessable Entity response and an error message explaining the issue. For example, an email message type may be rejected if it is not sent with a subject field."
  },
  {
    "title": "Contact",
    "url": "https://developers.intercom.com/docs/references/canvas-kit/requestobjects/contact/",
    "html": "Contact\nDescription\n\nThe contact object provides information on the Intercom contact. You can see more about this on the Contacts Model page of our API Reference.\n\nExample Object\n{\n  \"type\": \"contact\",\n  \"id\": \"5ba682d23d7cf92bef87bfd4\",\n  \"workspace_id\": \"ecahpwf5\",\n  \"external_id\": \"25\",\n  \"role\": \"user\",\n  \"email\": \"wash@serenity.io\",\n  \"phone\": \"+1123456789\",\n  \"name\": \"Hoban Washburn\",\n  \"avatar\": \"https://example.org/128Wash.jpg\",\n  \"owner_id\": 127,\n  \"social_profiles\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"social_profile\",\n        \"name\": \"Twitter\",\n        \"url\": \"http://twitter.com/th1sland\"\n      }\n    ]\n  },\n  \"has_hard_bounced\": false,\n  \"marked_email_as_spam\": false,\n  \"unsubscribed_from_emails\": false,\n  \"created_at\": 1571672154,\n  \"updated_at\": 1571672158,\n  \"signed_up_at\": 1571069751,\n  \"last_seen_at\": 1571069751,\n  \"last_replied_at\": 1571672158,\n  \"last_contacted_at\": 1571672158,\n  \"last_email_opened_at\": 1571673478,\n  \"last_email_clicked_at\": 1571676789,\n  \"language_override\": null,\n  \"browser\": \"chrome\",\n  \"browser_version\": \"77.0.3865.90\",\n  \"browser_language\": \"en\",\n  \"os\": \"OS X 10.14.6\",\n  \"location\": {\n    \"type\": \"location\",\n    \"country\": \"Ireland\",\n    \"region\": \"Dublin\",\n    \"city\": \"Dublin\"\n  },\n  \"android_app_name\": null,\n  \"android_app_version\": null,\n  \"android_device\": null,\n  \"android_os_version\": null,\n  \"android_sdk_version\": null,\n  \"android_last_seen_at\": null,\n  \"ios_app_name\": null,\n  \"ios_app_version\": null,\n  \"ios_device\": null,\n  \"ios_os_version\": null,\n  \"ios_sdk_version\": null,\n  \"ios_last_seen_at\": null,\n  \"custom_attributes\": {\n    \"paid_subscriber\": true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 1\n  },\n  \"tags\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"tag\",\n        \"id\": \"2\",\n        \"url\": \"/tags/2\"\n      },\n      {\n        \"type\": \"tag\",\n        \"id\": \"4\",\n        \"url\": \"/tags/4\"\n      },\n      {\n        \"type\": \"tag\",\n        \"id\": \"5\",\n        \"url\": \"/tags/5\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/tags\",\n    \"total_count\": 3,\n    \"has_more\": false\n  },\n  \"notes\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"note\",\n        \"id\": \"20114858\",\n        \"url\": \"/notes/20114858\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/notes\",\n    \"total_count\": 1,\n    \"has_more\": false\n  },\n  \"companies\": {\n    \"type\": \"list\",\n    \"data\": [\n      {\n        \"type\": \"company\",\n        \"id\": \"5ba686093d7cf93552a3dc99\",\n        \"url\": \"/companies/5ba686093d7cf93552a3dc99\"\n        \n      },\n      {\n        \"type\": \"company\",\n        \"id\": \"5cee64a03d7cf90c51b36f19\",\n        \"url\": \"/companies/5cee64a03d7cf90c51b36f19\"\n      },\n      {\n        \"type\": \"company\",\n        \"id\": \"5d7668883d7cf944dbc5c791\",\n        \"url\": \"/companies/5d7668883d7cf944dbc5c791\"\n      }\n    ],\n    \"url\": \"/contacts/5ba682d23d7cf92bef87bfd4/companies\",\n    \"total_count\": 3,\n    \"has_more\": false\n  }\n}\n"
  },
  {
    "title": "Context",
    "url": "https://developers.intercom.com/docs/references/canvas-kit/requestobjects/context/",
    "html": "Context\nDescription\n\nThe context object provides additional details on where the app has been added (or is currently being used), what page the app is being used on, and information on the Messenger settings. This is in order for you give a fully customised experience based on the customers use case.\n\nIf the location is conversation then you will also be given a conversation_id. If you need to use details about the conversation, then you have to use the conversation_id to make a call to our Conversations API and retrieve the conversation object.\n\nAttributes\nKey\tType\tLocation\tDescription\nconversation_id\tinteger\tConversation\tThe id of the conversation where the app is added or being used.\nlocation\tstring\tConversation, Messenger Home, Message, Operator\tWhere the app is added or the action took place. Can be either 'conversation', 'home', 'message', or 'operator'.\nlocale\tstring\tConversation, Messenger Home, Message, Operator\tThe default end-user language of the Messenger. Use to localise Messenger App content.\nmessenger_action_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers action colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nmessenger_background_colour\tstring\tConversation, Messenger Home, Message, Operator\tThe messengers background colour. Use in Sheets and Icons to make a Messenger App experience feel part of the host Messenger.\nreferrer\tstring\tConversation, Messenger Home, Message, Operator\tThe current page URL where the app is being used.\nExample Objects\n{\n  conversation_id: 4294967297,\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n\n{\n  locale: \"en\", \n  location: \"conversation\",\n  messenger_action_color: \"#333333\",\n  messenger_background_color: \"#333333\",\n  referrer: \"https://intercom.com/\"\n}\n"
  },
  {
    "title": "Admin",
    "url": "https://developers.intercom.com/docs/references/canvas-kit/requestobjects/admin/",
    "html": "Admin\nDescription\n\nThe admin object provides information on the Intercom teammate. You can see more about this on the Admin Model page of our API Reference.\n\nExample Object\n{\n  admin: {\n    type: \"admin\",\n    id: \"814860\",\n    name: \"IntercomTest\",\n    email: \"theadmin@example.com\",\n    job_title: \"Existentialist\",\n    away_mode_enabled: false,\n    away_mode_reassign: false,\n    avatar: {\n      image_url: \"https://static.site.test.icon\"\n    },\n    team_ids: [\n      814865\n    ]\n  }\n}\n"
  },
  {
    "title": "List",
    "url": "https://developers.intercom.com/docs/references/1.3/canvas-kit/interactivecomponents/list/",
    "html": "List\n\nA list component renders a list of items which you provide in an array. You can make each list item take an action by adding the relevant action object to the item:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nList Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tlist\tYes\tThe type of component you are rendering.\nitems\tArray (see below)\tYes\tThe items that will be rendered in the list.\ndisabled\ttrue``false\tNo\tStyles all list items and prevents the action.Default is false.\nItem Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\titem\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the item.\ntitle\tAny string\tYes\tThe text shown as the title for the item.\nsubtitle\tAny string\tNo\tThe text shown underneath the item's title.\ntertiary_text\tAny string\tNo\tThe text shown next to the subtitle, separates by a bullet.\nimage\tA valid HTTPS URL\tNo\tAn image that will be displayed to the left of the item.\nimage_width\tAny integer\tYes (if image provided)\tThe exact width of the image in pixels.\nimage_height\tAny integer\tYes (if image provided)\tThe exact height of the image in pixels.\nrounded_image\ttrue``false\tNo\tRounds the corners of the image.Default is false.\ndisabled\ttrue``false\tNo\tThe defined state of the inputted value to render a specific style.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nPreview"
  },
  {
    "title": "Webhooks",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/webhooks/webhooks/",
    "html": "Webhooks\nOverview\n\nWebhooks are a powerful resource that you can use to automate your use cases and improve your productivity. You can find more about them through this link if you're unfamiliar.\n\nUnlike the API resources, which represent static data that you can create, update and retrieve as needed, webhooks represent dynamic resources. You can configure them to automatically notify you when a customer has taken a particular action, such as making a purchase or replying to a conversation.\n\nThe main concepts for webhooks are subscriptions, topics, and notifications.\n\nSubscriptions\n\nA subscription is where you select a topic you wanted to be notified about. Intercom will setup subscriptions for selected topics when that app is installed on a workspace.\n\nTopics\n\nA subscription will contain one or more topics. Topics are types of notifications that you want to be informed about.\n\nNotifications\n\nThe object delivered to a webhook is a notification. Notifications have payloads, which contain the API's existing JSON objects, such as user or conversations. You will need to provide a URL where Intercom will send these request.\n\nWebhooks FAQs\nDo webhooks belong to my workspace or my app?\n\nWebhooks are associated with an app. You configure your webhooks per app just like you configure your access tokens. When you configure a webhook you tell Intercom where you want notifications to be sent to for one or more webhook topics.\n\nWhere do I enable webhook notifications?\n\nYou don't enable webhooks, Intercom will enable them for you when you install an app on a workspace.\n\nIf I am developing apps for other people what do I need to do?\n\nYou will need to select the permissions on the Authorization page of your app and then subscribe to the relevant topics on the Webhooks page.\n\nCan I subscribe for webhook topics via the API?\n\nNo, you can only subscribe to webhooks now via your Developer Hub. This is to make it easier for people to setup webhooks. Previously people had to keep track of all their webhooks and know when to subscribe and unsubscribe from them as needed. Intercom does this for you now so it should be easier to configure.\n\nI previously configured webhooks via the API. Can I still do that?\n\nYes, anyone that has previously used webhooks can continue to work in the same way. Intercom will not delete your webhooks or reconfigure them in anyway. We hope that you will start using the new approach from now on since it is much easier to manage.\n\nIf I need to trust specific IP addresses to accept inbound webhook requests from Intercom, which are they?\n\nThese are as follows: 34.231.68.152, 34.197.76.213, 35.171.78.91, 35.169.138.21, 52.70.27.159, 52.44.63.161."
  },
  {
    "title": "Description",
    "url": "https://developers.intercom.com/docs/references/1.3/canvas-kit/requestobjects/admin/",
    "html": "Admin\n\nDescription\n\nThe admin object provides information on the Intercom teammate. You can see more about this on the Admin Model page of our API Reference.\n\nExample Object\n{\n  admin: {\n    type: \"admin\",\n    id: \"814860\",\n    name: \"IntercomTest\",\n    email: \"theadmin@example.com\",\n    job_title: \"Existentialist\",\n    away_mode_enabled: false,\n    away_mode_reassign: false,\n    avatar: {\n      image_url: \"https://static.site.test.icon\"\n    },\n    team_ids: [\n      814865\n    ]\n  }\n}\n"
  },
  {
    "title": "URL Action",
    "url": "https://developers.intercom.com/docs/references/1.3/canvas-kit/actioncomponents/url-action/",
    "html": "URL Action\n\nA URL action opens a given link in a new browser tab. You must encode all the non-ASCII characters in the URL. For JS, use encodeURIComponent. For Ruby, use URI.escape.\n\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\turl\tYes\tThe type of action you are attaching to a component.\nurl\tA valid HTTPS URL\tYes\tThe link which will open in a new tab.\nExample Object\naction: {\n  \"type\": \"url\",\n  \"url\":  \"https://www.example.com\"\n}\n"
  },
  {
    "title": "Input",
    "url": "https://developers.intercom.com/docs/references/1.3/canvas-kit/interactivecomponents/input/",
    "html": "Input\n\nAn input component is used to capture text input from the end user. You can submit the value of the input by:\n\nAdding an action to the input component (which will render an inline button)\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tinput\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the input.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nsave_state\tunsaved``saved``failed\tNo\tStyles the input.Default is unsaved.Prevent action with saved.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.Will be overriden if save_state is saved."
  },
  {
    "title": "Dropdown",
    "url": "https://developers.intercom.com/docs/references/1.3/canvas-kit/interactivecomponents/dropdown/",
    "html": "Dropdown\n\nA dropdown component is used to capture a choice from up to 10 options that you provide. You can submit the value of the select option by:\n\nUsing a button component (which will submit all interactive components in the canvas)\n\nWhen a submit action takes place, the results are given in a hash with the id from the dropdown component used as the key and the id from the chosen option as the value.\n\nDropdown Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\tdropdown\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\noptions\tArray (See Below)\tYes\tThe list of options.Can provide 2 to 10.\nlabel\tAny string\tNo\tThe text shown above the dropdown.\nvalue\tThe id of an option\tNo\tThe option that is selected by default.\nsave_state\tunsaved``saved``failed\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\ndisabled\tfalse``true\tNo\tStyles all options and prevents the action.Default is false.Will be overriden if save_state is saved.\naction\tAction Object\tNo\tThis can be a Submit Action, URL Action, or Sheets Action.\nOption Parameters\nParameter\tPossible Values\tRequired\tFunction\ntype\toption\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the option.\ntext\tAny string\tYes\tThe text shown within this option.\ndisabled\tfalse``true\tNo\tStyles the option and prevents the action.Default is false."
  },
  {
    "title": "View a Company",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/companies/view-a-company/",
    "html": "View a Company\nExample View Request and Response\ncurlcurlrubyphpjava\n$ curl \\\\\\n-s https://api.intercom.io/companies?company_id=141 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H \\\"Accept:application/json\\\" \\\\\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"company\\\",\\n  \\\"id\\\": \\\"531ee472cce572a6ec000006\\\",\\n  \\\"name\\\": \\\"Blue Sun\\\",\\n  \\\"plan\\\": {\\n    \\\"type\\\":\\\"plan\\\",\\n    \\\"id\\\":\\\"1\\\",\\n    \\\"name\\\":\\\"Paid\\\"\\n  },\\n  \\\"company_id\\\": \\\"141\\\",\\n  \\\"remote_created_at\\\": 1394531169,\\n  \\\"created_at\\\": 1394533506,\\n  \\\"updated_at\\\": 1396874658,\\n  \\\"last_request_at\\\": 1396874658,\\n  \\\"monthly_spend\\\": 49,\\n  \\\"session_count\\\": 26,\\n  \\\"user_count\\\": 10,\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"team_mates\\\": 0\\n  }\\n}\n\n\nEach company has its own URL -\n\nhttps://api.intercom.io/companies/{id}\n\nWhere {id} is the value of the company's id field. This URL is the company's canonical address in the API.\n\nRequest Parameters\nParameter\tRequired\tDescription\nname\tno\tThe name of the company\ncompany_id\tno\tThe company_id you have given to the company\n\nA company can also be fetched by its name using a name or company_id parameter in the url, whose values are the ones you have defined for that company -\n\nhttps://api.intercom.io/companies?name={name}\nhttps://api.intercom.io/companies?company_id={company_id}\n\nThe name parameter value should be url encoded when sending, as company names are allowed to have values that either need to be encoded as character data (e.g., whitespace) or are reserved characters (e.g., ':')."
  },
  {
    "title": "User or Lead Initiated Conversation",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/conversations/user-or-contact-initiated-conversation/",
    "html": "User or Lead Initiated Conversation\nUser Initiated Message\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/messages \\\\\\n-XPOST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d'\\n{\\n  \\\"from\\\": {\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"536e564f316c83104c000020\\\"\\n  },\\n  \\\"body\\\": \\\"Hey\\\"\\n}'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"user_message\\\",\\n  \\\"id\\\": \\\"2001\\\",\\n  \\\"created_at\\\": 1401917202,\\n  \\\"body\\\" : \\\"Hey, is the new thing in stock?\\\",\\n  \\\"message_type\\\": \\\"inapp\\\"\\n}\n\n\nYou can create a new user or lead initiated message by submitting a POST to https://api.intercom.io/messages along with a JSON message.\n\nThe sending user or lead is identified by their user_id, email or id values in the from field, along with a type field value of user or contact.\n\nYou can also send a message from a visitor by specifying their user_id or id value in the from field, along with a type field value of contact. This visitor will be automatically converted to a lead once the message is sent.\n\nThe message_type for a user initiated message is always treated as a inapp and will appear as a conversation inside Intercom. The email message type is not currently supported for a user initiated message.\n\nUser initiated messages can not be sent to specific admins, and as such, do not use the to field.\n\nAttributes\nAttribute\tType\tDescription\nbody\tstring\tThe content of the message. Plaintext only, HTML is not supported.\nfrom\tobject\tA user or lead object containing the user's id or user_id (or email if lead). The type field must have a value of user or contact.\nReturns\n\nThe created message object."
  },
  {
    "title": "Button",
    "url": "https://developers.intercom.com/docs/references/1.3/canvas-kit/interactivecomponents/button/",
    "html": "Button\n\nA button component is used to take an action by clicking a button. This can either:\n\nTrigger a submit request to be sent Inbox Messenger\nOpen a link in a new page Inbox Messenger\nOpen a sheet Messenger\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tbutton\tYes\tThe type of component you are rendering.\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tYes\tThe text that will be rendered inside the button.\naction\tAction Object\tYes\tThis can be a Submit Action, URL Action, or Sheets Action.\nstyle\tprimary``secondary``link\tNo\tStyles the button.Default is primary.\ndisabled\tfalse``true\tNo\tStyles the button and prevents the action.Default is false."
  },
  {
    "title": "Unsnoozing a conversation",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/conversations/unsnoozing-a-conversation/",
    "html": "Unsnoozing a conversation\nUnsnooze a conversation\n$ curl 'https://api.intercom.io/conversations/11055118659/reply' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"admin_id\": \"814860\",\n  \"message_type\":\"open\"\n}'\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"11055118659\",\n    \"created_at\": 1501496012,\n    \"updated_at\": 1501508752,\n    \"waiting_since\": 1501498931,\n    \"snoozed_until\": null,\n    \"conversation_message\": {\n        \"type\": \"conversation_message\",\n        \"id\": \"55951247\",\n        \"subject\": \"\",\n        \"body\": \"<p>Hi \\ud83d\\ude00 We hope you enjoy the example app. To get started just copy and paste some code into the JS editor. Let us know if you think this is useful? <br></p>\",\n        \"author\": {\n            \"type\": \"admin\",\n            \"id\": \"724865\"\n        },\n        \"attachments\": [],\n        \"url\": null\n    },\n    \"user\": {\n        \"type\": \"lead\",\n        \"id\": \"597f02cb22f4bb37597e0b7d\"\n    },\n    \"customers\": [\n        {\n            \"type\": \"lead\",\n            \"id\": \"597f02cb22f4bb37597e0b7d\"\n        },\n        {\n            \"type\": \"user\",\n            \"id\": \"58ff3f670f14ab4f1aa83750\"\n        }\n    ],\n    \"assignee\": {\n        \"type\": \"admin\",\n        \"id\": \"724860\"\n    },\n    \"conversation_parts\": {\n        \"type\": \"conversation_part.list\",\n        \"conversation_parts\": [\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712337945\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>test convo 1</p>\",\n                \"created_at\": 1501496025,\n                \"updated_at\": 1501496025,\n                \"notified_at\": 1501496025,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"user\",\n                    \"id\": \"597f02cb22f4bb37597e0b7d\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712338024\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>TestApp typically replies in a few hours. Don\\u2019t miss their reply.</p>\",\n                \"created_at\": 1501496028,\n                \"updated_at\": 1501496028,\n                \"notified_at\": 1501496028,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"bot\",\n                    \"id\": \"815309\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712338089\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p></p><p>Get notified by email</p>\",\n                \"created_at\": 1501496030,\n                \"updated_at\": 1501496030,\n                \"notified_at\": 1501496031,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"bot\",\n                    \"id\": \"815309\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712344562\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>group test two</p>\",\n                \"created_at\": 1501496290,\n                \"updated_at\": 1501496290,\n                \"notified_at\": 1501496291,\n                \"assigned_to\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712383990\",\n                \"part_type\": \"participant_added\",\n                \"body\": null,\n                \"created_at\": 1501497831,\n                \"updated_at\": 1501497831,\n                \"notified_at\": 1501497832,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712411349\",\n                \"part_type\": \"participant_added\",\n                \"body\": null,\n                \"created_at\": 1501498885,\n                \"updated_at\": 1501498885,\n                \"notified_at\": 1501498885,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712412506\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>group test</p>\",\n                \"created_at\": 1501498931,\n                \"updated_at\": 1501498931,\n                \"notified_at\": 1501498932,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"user\",\n                    \"id\": \"597f02cb22f4bb37597e0b7d\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712425169\",\n                \"part_type\": \"participant_removed\",\n                \"body\": null,\n                \"created_at\": 1501499414,\n                \"updated_at\": 1501499414,\n                \"notified_at\": 1501499414,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712728293\",\n                \"part_type\": \"snoozed\",\n                \"body\": null,\n                \"created_at\": 1501508752,\n                \"updated_at\": 1501508752,\n                \"notified_at\": 1501508752,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            }\n        ],\n        \"total_count\": 9\n    },\n    \"open\": true,\n    \"state\": \"snoozed\",\n    \"read\": false,\n    \"tags\": {\n        \"type\": \"tag.list\",\n        \"tags\": []\n    }\n}\n\nArguments\nArgument\tRequired\tDescription\nadmin_id\tYes\tOnly admins can snooze a conversation so you need to provide the admin_id\nmessage_type\tYes\tMust be open to re-open or 'unsnooze' the conversation"
  },
  {
    "title": "Snoozing a conversation",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/conversations/snoozing-a-conversation/",
    "html": "Snoozing a conversation\nSnooze a conversation\n$ curl 'https://api.intercom.io/conversations/11055118659/reply' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"admin_id\": \"724860\",\n  \"message_type\":\"snoozed\",\n  \"snoozed_until\":\"1501512795\"\n}'\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"11055118659\",\n    \"created_at\": 1501496012,\n    \"updated_at\": 1501508752,\n    \"waiting_since\": 1501498931,\n    \"snoozed_until\": null,\n    \"conversation_message\": {\n        \"type\": \"conversation_message\",\n        \"id\": \"55951247\",\n        \"subject\": \"\",\n        \"body\": \"<p>Hi \\ud83d\\ude00 We hope you enjoy the example app. To get started just copy and paste some code into the JS editor. Let us know if you think this is useful? <br></p>\",\n        \"author\": {\n            \"type\": \"admin\",\n            \"id\": \"724865\"\n        },\n        \"attachments\": [],\n        \"url\": null\n    },\n    \"user\": {\n        \"type\": \"lead\",\n        \"id\": \"597f02cb22f4bb37597e0b7d\"\n    },\n    \"customers\": [\n        {\n            \"type\": \"lead\",\n            \"id\": \"597f02cb22f4bb37597e0b7d\"\n        },\n        {\n            \"type\": \"user\",\n            \"id\": \"58ff3f670f14ab4f1aa83750\"\n        }\n    ],\n    \"assignee\": {\n        \"type\": \"admin\",\n        \"id\": \"724860\"\n    },\n    \"conversation_parts\": {\n        \"type\": \"conversation_part.list\",\n        \"conversation_parts\": [\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712337945\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>test convo 1</p>\",\n                \"created_at\": 1501496025,\n                \"updated_at\": 1501496025,\n                \"notified_at\": 1501496025,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"user\",\n                    \"id\": \"597f02cb22f4bb37597e0b7d\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712338024\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>TestApp typically replies in a few hours. Don\\u2019t miss their reply.</p>\",\n                \"created_at\": 1501496028,\n                \"updated_at\": 1501496028,\n                \"notified_at\": 1501496028,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"bot\",\n                    \"id\": \"815309\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712338089\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p></p><p>Get notified by email</p>\",\n                \"created_at\": 1501496030,\n                \"updated_at\": 1501496030,\n                \"notified_at\": 1501496031,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"bot\",\n                    \"id\": \"815309\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712344562\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>group test two</p>\",\n                \"created_at\": 1501496290,\n                \"updated_at\": 1501496290,\n                \"notified_at\": 1501496291,\n                \"assigned_to\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712383990\",\n                \"part_type\": \"participant_added\",\n                \"body\": null,\n                \"created_at\": 1501497831,\n                \"updated_at\": 1501497831,\n                \"notified_at\": 1501497832,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712411349\",\n                \"part_type\": \"participant_added\",\n                \"body\": null,\n                \"created_at\": 1501498885,\n                \"updated_at\": 1501498885,\n                \"notified_at\": 1501498885,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712412506\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>group test</p>\",\n                \"created_at\": 1501498931,\n                \"updated_at\": 1501498931,\n                \"notified_at\": 1501498932,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"user\",\n                    \"id\": \"597f02cb22f4bb37597e0b7d\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712425169\",\n                \"part_type\": \"participant_removed\",\n                \"body\": null,\n                \"created_at\": 1501499414,\n                \"updated_at\": 1501499414,\n                \"notified_at\": 1501499414,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712728293\",\n                \"part_type\": \"snoozed\",\n                \"body\": null,\n                \"created_at\": 1501508752,\n                \"updated_at\": 1501508752,\n                \"notified_at\": 1501508752,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            }\n        ],\n        \"total_count\": 9\n    },\n    \"open\": true,\n    \"state\": \"snoozed\",\n    \"read\": false,\n    \"tags\": {\n        \"type\": \"tag.list\",\n        \"tags\": []\n    }\n}\n\n\nCustomers can snooze a conversation via a POST method to https://api.intercom.io/conversations/{convo_id}/reply/, which accepts a JSON object identifying the time you want the conversation snoozed until.\n\nArguments\nArgument\tRequired\tDescription\nadmin_id\tYes\tOnly admins can snooze a conversation so you need to provide the admin_id\nmessage_type\tYes\tMust be snoozed\nsnooze_until\tYes\tThe time in Unix time (i.e. seconds) you want the conversation to reopen"
  },
  {
    "title": "Run assignment rules on a conversation",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/conversations/run-conversation-assignment-rules/",
    "html": "Run assignment rules on a conversation\n\nYou can set up assignment rules to assign conversations to the correct team or teammate.\n\nThis usually happens upon a new, user initiated conversation coming in. This API call allows you to trigger the assignment rules when a conversation is unassigned - whether that's during a conversation, or when a user responds to an admin initiated conversation.\n\nREQUIRED PRODUCT\n\nAssignment Rules are only available with Inbox Pro. You can upgrade here.\n\nAssign based on assignment rules\ncurlhttp\ncurl 'https://api.intercom.io/conversations/{convo_id}/run_assignment_rules'\\n-X POST \\n-H 'Authorization: Bearer <Acess Token>=' \\n-H 'Accept: application/json' \\n-H 'Content-Type: application/json'\n"
  },
  {
    "title": "Replying to Users Last Conversation",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/conversations/replying-to-users-last-conversation/",
    "html": "Replying to Users Last Conversation\n\nInstead of specifying a conversation id when replying, you can also reply to the most recent conversation for a user at https://api.intercom.io/conversations/last/reply:\n\nReplying to the Users Most Recent Conversation\n# Send a reply from admin 1234 to a user's last conversation\n$ curl https://api.intercom.io/conversations/last/reply \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"intercom_user_id\": \"536e564f316c83104c000020\",\n  \"body\": \"Let me know if you have any more questions!\",\n  \"type\": \"admin\",\n  \"admin_id\": \"1234\",\n  \"message_type\": \"comment\"\n}'\n\n<?php\n\n$intercom->conversations->replyToLastConversation([\n    \"intercom_user_id\" => \"5977303470ab497b1babb9ef\",\n    \"body\" => \"I am the wisest man alive, for I know one thing, and that is that I know nothing.\",\n    \"type\" => \"user\",\n    \"message_type\" => \"comment\"\n]);\n?>\n"
  },
  {
    "title": "Marking a Conversation as Read",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/conversations/marking-a-conversation-as-read/",
    "html": "Marking a Conversation as Read\n\nYou can mark a conversation within Intercom as read.\n\nMark a Conversation as Read\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/conversations/147 \\\\\\n-X PUT \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d'\\n{\\n  \\\"read\\\": true\\n}'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"conversation\\\",\\n  \\\"id\\\": \\\"147\\\",\\n  \\\"created_at\\\": 1400850973,\\n  \\\"updated_at\\\": 1400857494,\\n  \\\"read\\\": true\\n  # ...\\n}\\n\\n# NB: Full Conversation Object returned\n"
  },
  {
    "title": "List Conversations",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/conversations/list-conversations/",
    "html": "List Conversations\nList Open Conversations for a Particular Admin\ncurlcurlrubyphpjava\n$ curl \\\\\\n\\\"https://api.intercom.io/conversations?type=admin&admin_id=25&open=true\\\" \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"conversation.list\\\",\\n  \\\"conversations\\\": [\\n    {\\n      \\\"assignee\\\": {\\n        \\\"id\\\": null,\\n        \\\"type\\\": \\\"nobody_admin\\\"\\n       },\\n       \\\"conversation_message\\\": {\\n         \\\"attachments\\\": [],\\n         \\\"author\\\": {\\n           \\\"id\\\": \\\"814865\\\",\\n           \\\"type\\\": \\\"admin\\\"\\n         },\\n       \\\"body\\\": \\\"<p>Hi \\\\ud83d\\\\ude00 We hope you enjoy the example app. To get started just copy and paste some code into the JS editor. Let us know if you think this is useful? <br></p>\\\",\\n       \\\"delivered_as\\\": \\\"automated\\\",\\n       \\\"id\\\": \\\"55951247\\\",\\n       \\\"subject\\\": \\\"\\\",\\n       \\\"type\\\": \\\"conversation\\\",\\n       \\\"url\\\": null\\n     },\\n     \\\"created_at\\\": 1543370554,\\n     \\\"customer_first_reply\\\": {\\n       \\\"created_at\\\": 1543370575,\\n       \\\"type\\\": \\\"conversation\\\",\\n       \\\"url\\\": \\\"https://s.codepen.io/boomerang/iFrameKey-fd6a7a17-5f52-3b6d-c3f6-8acc206fd174/index.html\\\"\\n     },\\n     \\\"customers\\\": [\\n       {\\n         \\\"id\\\": \\\"5bfdf73a1e1f0a940ef89995\\\",\\n         \\\"type\\\": \\\"lead\\\"\\n       }\\n     ],\\n     \\\"id\\\": \\\"19774381531\\\",\\n     \\\"open\\\": true,\\n     \\\"read\\\": true,\\n     \\\"sent_at\\\": 1543370554,\\n     \\\"snoozed_until\\\": null,\\n     \\\"state\\\": \\\"open\\\",\\n     \\\"tags\\\": {\\n       \\\"type\\\": \\\"tag.list\\\",\\n       \\\"tags\\\": [\\n         {\\n            \\\"type\\\": \\\"tag\\\",\\n            \\\"id\\\": \\\"1\\\",\\n            \\\"name\\\": \\\"a tag\\\",\\n            \\\"applied_at\\\": 1542820819,\\n            \\\"applied_by\\\": {\\n              \\\"type\\\": \\\"admin\\\",\\n              \\\"id\\\": \\\"54\\\"\\n            }\\n          },\\n          {\\n            \\\"type\\\": \\\"tag\\\",\\n            \\\"id\\\": \\\"1\\\",\\n            \\\"name\\\": \\\"a tag\\\",\\n            \\\"applied_at\\\": 1542969954,\\n            \\\"applied_by\\\": {\\n              \\\"type\\\": \\\"admin\\\",\\n              \\\"id\\\": \\\"54\\\"\\n            }\\n          }\\n        ]\\n      },\\n      \\\"type\\\": \\\"conversation\\\",\\n      \\\"updated_at\\\": 1543370587,\\n      \\\"user\\\": {\\n        \\\"id\\\": \\\"5bfdf73a1e1f0a940ef89995\\\",\\n        \\\"type\\\": \\\"lead\\\"\\n      },\\n      \\\"waiting_since\\\": 1543370575\\n    }\\n  ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/conversations?per_page=20&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 20,\\n    \\\"total_pages\\\": 77,\\n    \\\"type\\\": \\\"pages\\\"\\n  }\\n}\n\n\nConversation lists do not contain conversation_parts or conversation_rating for brevity. The part list for an individual conversation can be fetched when retrieving the conversation itself.\n\nAll Conversations\n\nTo fetch a list of all conversations send a GET request to https://api.intercom.io/conversations with no parameters. A Conversation List object is returned.\n\nConversations can be sorted with the following parameters:\n\nParameter\tRequired\tDescription\norder\tno\tasc or desc. Return the conversations in ascending or descending order. defaults to desc unless an incorrect value is used i.e. not asc or desc. In these cases we do not throw an error and return the list in asc order.\nsort\tno\twhat field to sort the results by. Valid values: created_at, updated_at, waiting_since. defaults to updated_at.\nWHERE'D MY CONVERSATIONS GO?\n\nWhen sorting by waiting_since, not all conversations are returned. If a teammate was the last person to reply, or the conversation is closed then those conversations will not show up on this list. This is to ensure you have an easy way of identifying and prioritizing those customers who have been waiting longest.\n\nORDERING AND SORTING WITH FILTERS\n\nIt should be noted that the format for ordering and sorting is different when listing conversations for customers and admins as opposed to listing all conversations (i.e. without any filters). When you are using filters such as admin/customers 'order' refers to the fields you want to order the list by and 'sort' refers to whether you want it sorted asc or desc. The reverse is true when listing conversation without any filtering\n\nConversations by Admin\n\nYou can send the following parameters to view a single Admin's conversations -\n\nParameter\tRequired\tDescription\ntype\tyes\tThe type of entity to query for. Value must be admin for admin queries.\nadmin_id\tyes\tThe id for the Admin whose conversations to retrieve. To retrieve all unassigned conversations, set the id to be 'nobody'.\nopen\tno\tBoolean, when true fetches just open conversations, when false just closed conversations\ndisplay_as\tno\tSet to plaintext to retrieve conversation messages in plain text\npages\tno\tOptional. A pagination object, which may be empty, indicating no further conversations to fetch.\norder\tno\twhat field to sort the results by. Valid values: created_at, updated_at, waiting_since. defaults to updated_at.\nsort\tno\tasc or desc. Return the conversations in ascending or descending order. defaults to desc.\nConversations by Customers\n\nYou can send the following parameters to view a single Customer's conversations -\n\nParameter\tRequired\tDescription\ntype\tyes\tThe type of entity to query for. Value must be user.\nintercom_user_id\tone of\tThe id of the User whose conversations to retrieve\nuser_id\tone of\tYour user_id for the user\nemail\tone of\tYour email for the user\nunread\tno\tBoolean, when true fetches just unread conversations\ndisplay_as\tno\tSet to plaintext to retrieve conversation messages in plain text\npages\tno\tOptional. A pagination object, which may be empty, indicating no further conversations to fetch.\norder\tno\twhat field to sort the results by. Valid values: created_at, updated_at. defaults to updated_at.\nsort\tno\tasc or desc. Return the conversations in ascending or descending order. defaults to desc.\nLISTING LEADS USING TYPE 'USER'\n\nIf you want to list lead conversations you will need to set the type to 'user' and use the 'intercom_user_id' as the identifier. It will not work with 'user_id' or type contact for example.\n\nWhen querying the conversations for a particular User, we carry out message matching for that User and your existing Auto Messages, at most once per 15 minutes.\n\nReturns\n\nA Conversation List object is returned with an array of Conversation objects. These will include a list of tags as Tag objects, with two additional attributes:\n\nAttribute\tType\tDescription\napplied_at\tUNIX Timestamp\tThe date and time when the tag was applied to the conversation.\napplied_by\tObject\tContains the id of the admin that applied the tag."
  },
  {
    "title": "Get a Single Conversation",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/conversations/get-a-single-conversation/",
    "html": "Get a Single Conversation\nGet a Single Conversation\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/conversations/147 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\n\n\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"assignee\\\": {\\n        \\\"id\\\": \\\"814860\\\",\\n        \\\"type\\\": \\\"admin\\\"\\n    },\\n    \\\"conversation_message\\\": {\\n        \\\"attachments\\\": [],\\n        \\\"author\\\": {\\n            \\\"id\\\": \\\"5bc8f7421ae2d96695c18a\\\",\\n            \\\"type\\\": \\\"lead\\\"\\n        },\\n        \\\"body\\\": \\\"<p>Hi</p>\\\",\\n        \\\"delivered_as\\\": \\\"customer_initiated\\\",\\n        \\\"id\\\": \\\"269650473\\\",\\n        \\\"subject\\\": \\\"\\\",\\n        \\\"type\\\": \\\"conversation\\\",\\n        \\\"url\\\": \\\"https://intercom-survey-app.glitch.me/\\\"\\n    },\\n    \\\"conversation_parts\\\": {\\n        \\\"conversation_parts\\\": [\\n            {\\n                \\\"assigned_to\\\": null,\\n                \\\"attachments\\\": [],\\n                \\\"author\\\": {\\n                    \\\"id\\\": \\\"815309\\\",\\n                    \\\"type\\\": \\\"bot\\\"\\n                },\\n                \\\"body\\\": \\\"<p>Test_App typically replies in a few hours.</p>\\\",\\n                \\\"created_at\\\": 1539897200,\\n                \\\"external_id\\\": null,\\n                \\\"id\\\": \\\"2202737122\\\",\\n                \\\"notified_at\\\": 1539897200,\\n                \\\"part_type\\\": \\\"comment\\\",\\n                \\\"type\\\": \\\"conversation_part\\\",\\n                \\\"updated_at\\\": 1539897200\\n            },\\n          #List of conversation parts...\\n        ],\\n        \\\"total_count\\\": 25,\\n        \\\"type\\\": \\\"conversation_part.list\\\"\\n    },\\n    \\\"conversation_rating\\\": {\\n        \\\"created_at\\\": null,\\n        \\\"customer\\\": {\\n            \\\"id\\\": null,\\n            \\\"type\\\": null\\n        },\\n        \\\"rating\\\": null,\\n        \\\"remark\\\": null,\\n        \\\"teammate\\\": {\\n            \\\"id\\\": null,\\n            \\\"type\\\": null\\n        }\\n    },\\n    \\\"created_at\\\": 1539897198,\\n    \\\"customer_first_reply\\\": {\\n        \\\"created_at\\\": 1539897198,\\n        \\\"type\\\": \\\"conversation\\\",\\n        \\\"url\\\": \\\"https://intercom-survey-app.glitch.me/\\\"\\n    },\\n    \\\"customers\\\": [\\n        {\\n            \\\"id\\\": \\\"5bc8f7ae2d96695c18a\\\",\\n            \\\"type\\\": \\\"lead\\\"\\n        }\\n    ],\\n    \\\"id\\\": \\\"1911149811\\\",\\n    \\\"open\\\": true,\\n    \\\"read\\\": true,\\n    \\\"sent_at\\\": 1539897198,\\n    \\\"snoozed_until\\\": null,\\n    \\\"state\\\": \\\"open\\\",\\n    \\\"tags\\\": {\\n      \\\"type\\\": \\\"tag.list\\\",\\n      \\\"tags\\\": [\\n        {\\n          \\\"type\\\": \\\"tag\\\",\\n          \\\"id\\\": \\\"1\\\",\\n          \\\"name\\\": \\\"a tag\\\",\\n          \\\"applied_at\\\": 1542820819,\\n          \\\"applied_by\\\": {\\n            \\\"type\\\": \\\"admin\\\",\\n            \\\"id\\\": \\\"54\\\"\\n          }\\n        },\\n        {\\n          \\\"type\\\": \\\"tag\\\",\\n          \\\"id\\\": \\\"1\\\",\\n          \\\"name\\\": \\\"a tag\\\",\\n          \\\"applied_at\\\": 1542969954,\\n          \\\"applied_by\\\": {\\n            \\\"type\\\": \\\"admin\\\",\\n            \\\"id\\\": \\\"54\\\"\\n          }\\n        }\\n      ]\\n    },\\n    \\\"type\\\": \\\"conversation\\\",\\n    \\\"updated_at\\\": 1540393270,\\n    \\\"user\\\": {\\n        \\\"id\\\": \\\"5bc8f7421ffae2d96695c18a\\\",\\n        \\\"type\\\": \\\"lead\\\"\\n    },\\n    \\\"waiting_since\\\": 64654125776\\n}\n\nParameters\n\nSpecify the id of the conversation you wish to retrieve using the URL https://api.intercom.io/conversations/{id} URL structure where {id} is the id field of the conversation.\n\nParameter\tRequired\tDescription\ndisplay_as\tno\tSet to plaintext to retrieve conversation messages in plain text\nReturns\n\nA full Conversation object. This will include a list of tags as Tag objects, with two additional attributes:\n\nAttribute\tType\tDescription\napplied_at\tUNIX Timestamp\tThe date and time when the tag was applied to the conversation.\napplied_by\tObject\tContains the id of the admin that applied the tag.\n\nParts in the conversation_parts object are ordered by with the most recently created parts appearing at the end of the list.\n\nThe maximum number of conversation parts that can be returned via the API is 500. If you have more than that we will return the 500 most recent conversation parts."
  },
  {
    "title": "Deleting from group conversations",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/conversations/deleting-from-group-conversations/",
    "html": "Deleting from group conversations\nDeleting a customer from a group conversation\nCUSTOMERS\n\nNote that customers refers to both users and leads.\n\n$ curl 'https://api.intercom.io/conversations/11055118659/customers/58c1c72246a0aa9ef45a098e' \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"admin_id\": \"781345\"\n}'\n\nHTTP/1.1 200 OK\n\n{\"customers\":[\n  {\"type\":\"user\",\"id\":\"597f02cb22f4bb37597e0b7d\"}]\n}x§\n\n\nCustomers can be removed from a conversation via a DELETE method to https://api.intercom.io/conversations/{convo_id}/customers/{id}, which accepts a JSON object describing the customer.\n\nArguments\nArgument\tRequired\tDescription\nadmin_id\tYes\tYou must provide the ID of a valid admin to remove a customer to the conversation"
  },
  {
    "title": "Conversations",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/conversations/conversations/",
    "html": "Conversations\n\nConversation are how you can communicate with users in Intercom.\n\nTo start a conversation you and your users can send messages. The API supports two ways to start a conversation -\n\nFrom a user to you, called a 'user initiated' conversation.\nFrom a team member to a single user called an 'admin initiated' conversation.\n\nThe API does not currently support sending admin initiated messages to multiple users, creating auto messages or sending from teams, but we'd be interested in hearing your usecases - please contact team@intercom.io.\n\nOnce a message has been sent the conversation can begin! Users and Admins can reply to any conversation via the API - see the section \"Replying to a Conversation\" for details.\n\n🚧\n\nThe Conversations API is only available to Apps with a trial or an active subscription.\n\nNOTE\n\nThere may be a short delay between user creation and a user becoming available for messaging through the API. A 404 will be returned in this case, and you should retry the request after a delay.\n\nNOTE\n\nIf you try to send an email to a user who has unsubscribed, we will return a 403 and the message \"This user is unsubscribed from emails\"."
  },
  {
    "title": "Conversation Rating Model",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/conversations/conversation-rating-model/",
    "html": "Conversation Rating Model\nExample Conversation Part Object\n    \\\"conversation_rating\\\": {\\n        \\\"rating\\\": null,\\n        \\\"remark\\\": null,\\n        \\\"created_at\\\": null,\\n        \\\"customer\\\": {\\n            \\\"type\\\": null,\\n            \\\"id\\\": null\\n        },\\n        \\\"teammate\\\": {\\n            \\\"type\\\": null,\\n            \\\"id\\\": null\\n        }\\n    }\n\n\nA conversation rating contains information relating to a customer's satisfaction with their interaction with your team. For more info on conversation ratings please see here\n\nConversation Rating Object\nAttribute\tType\tDescription\nrating\tinteger\tThe rating, between 1 and 5, for the conversation\nremark\tstring\tAn optional field to add a remark to correspond to the number rating\ncreated_at\ttimestamp\tThe time the rating was requested in the conversation being rated\ncustomer\tobject\tAn object containing the ID and type of the customer (e.g. it could be a user or lead)\nteammate\tobject\tAn object containing the ID and type of the Intercom teammate associated with the conversation when it was rated\nCustomer Object\nAttribute\tType\tDescription\ntype\tstring\tA conversation can be rated by either a user or a lead. This will default to null when there is no rating on a conversation.\nid\tstring\tThe Intercom ID of the customer rating the conversation. This defaults to null.\nTeammate Object\nAttribute\tType\tDescription\ntype\tstring\tCurrently this will always be of type admin. It will be null by default if the conversation has not been rated\nid\tstring\tThis is the ID of the teammate being rated. This will default to null."
  },
  {
    "title": "Conversation Model",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/conversations/conversation-model/",
    "html": "Conversation Model\nExample Conversation Object\n{\n    \"assignee\": {\n        \"id\": \"814860\",\n        \"type\": \"admin\"\n    },\n    \"conversation_message\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"conversation_parts\": {\n        \"conversation_parts\": [\n            {\n                \"assigned_to\": null,\n                \"attachments\": [],\n                \"author\": {\n                    \"id\": \"815309\",\n                    \"type\": \"bot\"\n                },\n                \"body\": \"<p>Test_App typically replies in a few hours.</p>\",\n                \"created_at\": 1539897200,\n                \"external_id\": null,\n                \"id\": \"2202737122\",\n                \"notified_at\": 1539897200,\n                \"part_type\": \"comment\",\n                \"type\": \"conversation_part\",\n                \"updated_at\": 1539897200\n            },\n          #List of conversation parts...\n        ],\n        \"total_count\": 25,\n        \"type\": \"conversation_part.list\"\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"customer\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null\n        }\n    },\n    \"created_at\": 1539897198,\n    \"customer_first_reply\": {\n        \"created_at\": 1539897198,\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"customers\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"id\": \"1911149811\",\n    \"open\": true,\n    \"read\": true,\n    \"sent_at\": 1539897198,\n    \"snoozed_until\": null,\n    \"state\": \"open\",\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\"\n    },\n    \"type\": \"conversation\",\n    \"updated_at\": 1540393270,\n    \"user\": {\n        \"id\": \"5bc8f7421ffae2d96695c18a\",\n        \"type\": \"lead\"\n    },\n    \"waiting_since\": 64654125776\n}\n\n{\n   \"type\":\"conversation\",\n   \"id\":\"1122334455\",\n   \"created_at\":1567693209,\n   \"updated_at\":1568367881,\n   \"waiting_since\":1568367881,\n   \"snoozed_until\":null,\n   \"assignee\":{\n      \"type\":\"admin\",\n      \"id\":\"1223334\"\n   },\n   \"open\":true,\n   \"state\":\"open\",\n   \"read\":true,\n   \"tags\":{\n      \"type\":\"tag.list\",\n      \"tags\":[\n\n      ]\n   },\n   \"conversation_rating\":{\n      \"rating\":null,\n      \"remark\":null,\n      \"created_at\":null,\n      \"customer\":{\n         \"type\":null,\n         \"id\":null\n      },\n      \"teammate\":{\n         \"type\":null,\n         \"id\":null\n      }\n   },\n   \"conversation_parts\":{\n      \"type\":\"conversation_part.list\",\n      \"conversation_parts\":[\n         {\n            \"type\":\"conversation_part\",\n            \"id\":\"1223445555\",\n            \"part_type\":\"comment\",\n            \"body\":\"We've removed this part of the conversation to comply with Twitter's terms and conditions. You can view the complete conversation in Intercom.\",\n            \"created_at\":1567693273,\n            \"updated_at\":1567693273,\n            \"notified_at\":1567693273,\n            \"assigned_to\":null,\n             \"author\":{\n               \"type\":\"user\",\n               \"id\":\"5310d8e7598c9a0b24000002\",\n               \"name\":\"\",\n               \"email\":\"\"\n            },\n            \"attachments\":[\n\n            ],\n            \"external_id\":null\n         },\n      ],\n      \"total_count\":1\n   },\n   \"customer_first_reply\":{\n      \"created_at\":1567693209,\n      \"type\":\"twitter\",\n      \"url\":\"\"\n   },\n   \"conversation_message\":{\n      \"type\":\"twitter\",\n      \"id\":\"409820079\",\n      \"delivered_as\":\"customer_initiated\",\n      \"subject\":\"We've removed this part of the conversation to comply with Twitter's terms and conditions. You can view the complete conversation in Intercom.\",\n      \"body\":\"We've removed this part of the conversation to comply with Twitter's terms and conditions. You can view the complete conversation in Intercom.\",\n      \"author\":{\n         \"type\":\"user\",\n         \"id\":\"5310d8e7598c9a0b24000002\",\n         \"name\":\"\",\n         \"email\":\"\"\n      },\n      \"attachments\":[\n\n      ],\n      \"url\":\"\"\n   },\n   \"customers\":[\n      {\n         \"type\":\"user\",\n         \"id\":\"5310d8e7598c9a0b24000002\"\n      }\n   ],\n   \"user\":{\n      \"type\":\"user\",\n      \"id\":\"5310d8e7598c9a0b24000002\"\n   }\n}\n\n\nA conversation lets you track and describe communications with your users. Each conversation contains the message that initiated the conversation, the user involved, the admin assigned to the conversation and a list of parts describing the conversation thread. The open or closed status of the conversation is also provided.\n\nConversation Object\nAttribute\tType\tDescription\ntype\tstring\tAlways conversation.\nid\tstring\tThe id representing the conversation.\ncreated_at\ttimestamp\tThe time the conversation was created.\nupdated_at\ttimestamp\tThe last time the conversation was updated.\nwaiting_since\ttimestamp\tThe last time a customer responded to an admin. In other words, the time a customer started waiting for a response. Set to null if last reply is from an admin.\nsnoozed_until\ttimestamp\tIf set this is the time in the future when this conversation will be marked as open. i.e. it will be in a snoozed state until this time.\nconversation_message\tMessage\tThe message that started the conversation rendered for presentation.\nuser\tSingle Customers object\tThe user the conversation concerns.\ncustomers\tList of Customers object\tThe list of customers (users or leads) involved in this conversation. This will only contain one customer unless more were added via the group conversation feature.\ncustomer_first_reply\tObject\tAn object containing information on the first users message. For a user initiated message this will represent the users original message.\nassignee\tAdmin\tThe admin the conversation is currently assigned to. Note nobody_admin indicates the conversation is assigned to Nobody.\nconversation_parts\tObject\tA conversation part object with a list of conversation parts.\nopen\tBoolean\tIndicates whether a conversation is open (true) or closed (false). Snoozed conversations count as open.\nstate\tString\tCan be set to \"open\", \"closed\" or \"snoozed\".\nread\tBoolean\tIndicates whether a conversation has been read.\ntags\tList\tA list of tags associated with the conversation.\ntotal_count\tInteger\tThe number of conversation parts in this conversation.\nconversation_rating\tobject\tA conversation rating object which contains information on the rating and/or remark added by a customer and the admin assigned to the conversation.\nMessage Object\nAttribute\tType\tDescription\ntype\tstring\tThis includes conversation, push, facebook, twitter and email.\nid\tstring\tThe id representing the message.\ndelivered_as\tstring\tHow was the message delivered by Intercom. The types of delivery are customer_initiated, automated, campaigns_initiated, admin_initiated, and operator_initiated.\nsubject\tstring\tOptional. The message subject. For Twitter, this will show a generic message regarding why the subject is obscured.\nbody\tstring\tThe message body, which may contain HTML. For Twitter, this will show a generic message regarding why the body is obscured.\nauthor\tobject\tThe type of individual that sent the message (user, lead, admin or team) and their related id. For Twitter, this will be blank.\nattachments\tlist\tA list of attachments for the part.\nurl\tstring\tThe URL where the conversation was started. For Twitter, Email, and Bots, this will be blank.\nNOTE\n\nPlease note that URLs for User uploaded images & files have a 30 minute expiration. Once the expiration has passed, the link will no longer be valid and result in a 404. This means that if a URL is copied, and then reused elsewhere, it will continue to work until the expiry threshold. A new URL can be generated by fetching the conversation data again.\n\nCustomers object\nAttribute\tType\tDescription\ntype\tString\tThis can be either a user or a lead.\nid\tString\tThe ID for the user or lead.\nCustomer First reply object\nAttribute\tType\tDescription\ntype\tString\tOver which channel did the first reply occur. Options include conversation, push, facebook, twitter and email .\nurl\tString\tThe URL where the first reply originated from. For Twitter and Email replies, this will be blank.\ncreated_at\tTimestamp\tThe time the users messages was created. This is in unix timestamp format.\nCUSTOMER_FIRST_REPLY SET TO NULL\n\nIf a user has not replied to an Intercom initiated message (e.g. auto messages, admin initiated messages, campaigns) then the customer_first_reply attribute will be null"
  },
  {
    "title": "Compatibility",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/common-structures/compatibility/",
    "html": "Compatibility\nUnknown Field\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"user_id\\\" : \\\"456456\\\",\\n  \\\"email\\\" : \\\"j@example.org\\\",\\n  \\\"such_key\\\": \\\"so_value\\\"\\n}\n\nMust Ignore Interpretation\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"user_id\\\" : \\\"456456\\\",\\n  \\\"email\\\" : \\\"j@example.org\\\"\\n}\n\n\nJSON objects in the API follow a must ignore processing model, where clients are expected to ignore data fields they don't understand.\n\nFor example if the client saw the JSON as shown in the example on the right ('Unknown Field') and did not understand the such_key field (and who can blame it?), it must pretend the field wasn't there and will process the object as if it looked liked the object shown in 'Must Ignore'.\n\nWhen fetching content, fields that are optional for API objects are indicated in the documentation - clients must not assume they will always be present. When submitting content, fields that are required to be sent by client are also indicated in the documentation - if these are not sent the API may reject the request.\n\nIn general the API may reject JSON where data is not valid or incomplete with a 422 Unprocessable Entity response and an error message explaining the issue. For example, an email message type may be rejected if it is not sent with a subject field."
  },
  {
    "title": "Admin Initiated Conversation",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/conversations/admin-initiated-conversation/",
    "html": "Admin Initiated Conversation\nEmail From Admin\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/messages \\\\\\n-XPOST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d'\\n{\\n  \\\"message_type\\\": \\\"email\\\",\\n  \\\"subject\\\": \\\"Hey\\\",\\n  \\\"body\\\": \\\"Ponies, cute small horses or something more sinister?\\\",\\n  \\\"template\\\": \\\"plain\\\",\\n  \\\"from\\\": {\\n    \\\"type\\\": \\\"admin\\\",\\n    \\\"id\\\": \\\"394051\\\"\\n  },\\n  \\\"to\\\": {\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"536e564f316c83104c000020\\\"\\n  }\\n}'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"admin_message\\\",\\n  \\\"id\\\": \\\"2001\\\",\\n  \\\"created_at\\\": 1401916877,\\n  \\\"message_type\\\": \\\"email\\\",\\n  \\\"subject\\\" : \\\"Hey\\\",\\n  \\\"body\\\" : \\\"Ponies, cute small horses or something more sinister?\\\",\\n  \\\"template\\\": \\\"plain\\\",\\n  \\\"owner\\\": {\\n    \\\"email\\\": \\\"wash@serenity.io\\\",\\n    \\\"id\\\": \\\"394051\\\",\\n    \\\"name\\\": \\\"Wash\\\",\\n    \\\"type\\\": \\\"admin\\\"\\n  }\\n}\n\n\nYou can create a new admin initiated message by submitting a POST to https://api.intercom.io/messages along with JSON message.\n\nAn admin initiated message can be delivered to a user as an In-App conversation or as an Email. The message_type field is used to determine which, with a value of either inapp or email. For admin initiated In-App messages, they will not trigger push notifications.\n\nReceiving Users are identified by a user_id, id, or email field in the to object.\n\nReceiving Contacts are identified by a user_id or id field in the to object.\n\nThe type field for the to object is then set to either contact or user.\n\nThe subject field is only used for email type messages and will not be used for inapp message types.\n\nA sending admin must be added using the from field, along with a type field value of admin and the corresponding Intercom id for that admin. The admin's Intercom id value may be obtained from the List Admins resource.\n\nCONVERSATION V MESSAGE\n\nNote that since creating an admin-initiated conversation hits the /messages endpoint, the response contains a message object rather than a conversation object. As a result you will not see the conversation ID in the returned message object. You may, however, retrieve the customers's conversations and iterate over them looking for the message_id value.\n\nAttributes\nAttribute\tType\tDescription\nmessage_type\tstring\tThe kind of message being created. Values: inapp or email\nsubject\tstring\tOptional unless message_type is email. The title of the email.\nbody\tstring\tThe content of the message. HTML or plaintext.\ntemplate\tstring\tThe style of the outgoing message. Only valid for email messages. Possible values plain or personal.\nfrom\tobject\tRequired. An admin object containing the admin's id. The type field must have a value of admin.\nto\tobject\tRequired. A user object containing the user's id, email or user_id. The type field must have a value of user or of contact.\nReturns\n\nThe created message object.\n\nIf the from type was supplied with an admin's details, the owner field in the response will represent the admin in question."
  },
  {
    "title": "Closing or reopening a conversation",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/conversations/closing-a-conversation/",
    "html": "Closing or reopening a conversation\n\nYou can close or reopen a conversation with or without a reply, via a POST method to https://api.intercom.io/conversations/{convo_id}/reply/, which accepts a JSON object identifying whether you want to close or reopen.\n\nArgument\tRequired\tDescription\ntype\tyes\tMust be admin\nmessage_type\tyes\tMust be open or close\nadmin_id\tyes\tID of the admin the close or open will be attributed to\n\nClosing a Conversation Without Reply\n\ncurl https://api.intercom.io/conversations/xxx/reply\n-X POST\n-H 'Authorization:Bearer <Your access token>'\n-H 'Accept:application/json'\n-H 'Content-Type:application/json'\n-d '{ \"admin_id\": CLOSING_ADMIN_ID, \"message_type\": \"close\", \"type\": \"admin\"}'\n\n<?php\n\n$intercom->conversations->replyToConversation(\"10957850396\", [\n    \"type\" => \"admin\",\n    \"admin_id\" => \"814860\",\n    \"message_type\" => \"close\"\n]);\n?>\n\nClosing a Conversation With Reply\ncurl https://api.intercom.io/conversations/xxx/reply\n-X POST\n-H 'Authorization:Bearer <Your access token>'\n-H 'Accept:application/json'\n-H 'Content-Type:application/json'\n-d '{ \"body\":\"closing this convo\", \"admin_id\": CLOSING_ADMIN_ID, \"message_type\": \"close\", \"type\": \"admin\"}'\n\n<?php\n\n$convo = $intercom->conversations->replyToConversation(\"10957850396\", [\n    \"body\" => \"The beginning is the most important part of the work, but this is the end ... of the conversation!\",\n    \"type\" => \"admin\",\n    \"admin_id\" => \"814860\",\n    \"message_type\" => \"close\"\n]);\n?>\n"
  },
  {
    "title": "Assigning a Conversation to Unassigned",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/conversations/assigning-a-conversation-to-unassigned/",
    "html": "Assigning a Conversation to Unassigned\n\nYou can assign a conversation to be unassigned when you reply to a conversation. You should do this if you do not want the conversation to remain in your own inbox. This will allow other people pick up the conversation when the user replies to it\n\nAssign to Unassigned\n#Assign converstion to unassigned\ncurl https://api.intercom.io/conversations/6167678340/reply \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"body\": \"Reassigning to no-one!\",\n  \"type\": \"admin\",\n  \"admin_id\": \"1234\",\n  \"assignee_id\": \"0\",\n  \"message_type\": \"assignment\"\n}'\n\n#Assign converstion to unassigned  \nintercom.conversations.reply({\n  :id => '10289052666', \n  :type => 'admin',\n  :admin_id => \"1234\",\n  :assignee_id => 0,\n  :message_type => 'assignment', \n  :body => 'reassigning to no-one!'\n})\n\n<?php\n$intercom->conversations->replyToConversation(\"10957850396\", [\n    \"intercom_user_id\" => \"5977303470ab497b1babb9ef\",\n    \"body\" => \"Reassigning to no-one, i.e. unassigned\", // appears as note\n    \"type\" => \"admin\",\n    \"admin_id\" => \"814860\",\n    \"message_type\" => \"assignment\",\n    \"assignee_id\" => \"0\" \n]);\n?>\n\nAssigning a conversation to another teammate\n\nYou can also assign a conversation to another admin. Just use the admin ID of the person you want to assign the conversation to instead of '0'. You POST body should look something like this:\n\nAssign to a teammate\n{\\n  \\\"body\\\": \\\"Reassigning to someone else\\\",\\n  \\\"type\\\": \\\"admin\\\",\\n  \\\"admin_id\\\": \\\"814860\\\",\\n  \\\"assignee_id\\\": \\\"530165\\\",\\n  \\\"message_type\\\": \\\"assignment\\\"\\n}\n\nASSIGN TO A TEAM\n\nRemember you can also assign a conversation to a team. Just replace the admin ID with the team ID"
  },
  {
    "title": "User Segment/Tag Count Model",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/counts/user-tag-counts/",
    "html": "User Segment/Tag Count Model\n\nThe count of tags and segments includes archived tags and segments.\n\nUser Segment/Tag Count Object\n\nCount Object includes count for users and leads.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nuser\tobject\tContains a field called segment containing segment counts\nuser.segment\tarray\tContains a list of segment counts\nuser.tag\tarray\tContains a list of tag counts\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"tag\": [\n        {\n          \"Independent\": 3\n        }\n    ]\n  }\n}\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"segment\": [\n      {\n        \"Active\": 1\n      },\n      {\n        \"New\": 0\n      },\n      {\n        \"VIP\": 0\n      },\n      {\n        \"Slipping Away\": 0\n      },\n      {\n        \"segment 1\": 1\n      }\n    ]\n  }\n}\n\n# User Tag Count\n$ curl 'https://api.intercom.io/counts?type=user&count=tag' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# User Segment Count\n$ curl 'https://api.intercom.io/counts?type=user&count=segment' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# User Tag Count\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"tag\": [\n        {\n          \"Independent\": 3\n        }\n    ]\n  }\n}\n\n# User Segment Count\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"segment\": [\n      {\n        \"Active\": 1\n      },\n      {\n        \"New\": 0\n      },\n      {\n        \"VIP\": 0\n      },\n      {\n        \"Slipping Away\": 0\n      },\n      {\n        \"segment 1\": 1\n      }\n    ]\n  }\n}\n\nintercom.counts.for_type(type: 'user', count: 'tag')\nintercom.counts.for_type(type: 'user', count: 'segment')\n\n<?php\n// User Tag Count\n$counts = $intercom->counts->getCounts([\"type\" => \"user\", \"count\" => \"tag\"]);\nprint_r($counts);\n\n// Company Segment Count\n$counts = $intercom->counts->getCounts([\"type\" => \"user\", \"count\" => \"segment\"]);\n?>\n\n// User Tag Count\nfinal List<Counts.CountItem> tags = Counts.userTags();\nfor (Counts.CountItem tag : tags) {\n  out.println(tag.getName() + \": \" + tag.getValue());\n}\n\n// User Segment Count\nfinal List<Counts.CountItem> segments = Counts.userSegments();\nfor (Counts.CountItem seg : segments) {\n  out.println(seg.getName() + \": \" + seg.getValue());\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nUser Segment Count\tuser\tsegment\nUser Tag Count\tuser\ttag"
  },
  {
    "title": "List attached contacts",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/companies/list-company-contacts/",
    "html": "List attached contacts\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/companies/<id>/contacts \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nInvalid starting_after param\nHTTP/1.1 400 BAD REQUEST\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"000nbboasf1qqab6b910\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"client_error\\\",\\n      \\\"message\\\": \\\"Invalid starting_after param. Please try again using a starting_after value from a paginated response\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can fetch a list of all contacts that belong to a company.\n\nResponse\n\nThis will return a paginated list of Contact objects.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - list\ndata\tArray\tAn array containing Contact Objects\ntotal_count\tInteger\tThe total number of contacts\npages\tPagination Object\tThe information needed to paginate through contacts"
  },
  {
    "title": "Adding to group conversations as customer",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/conversations/adding-to-group-conversations-as-customer/",
    "html": "Adding to group conversations as customer\nAdding a customer to a group conversation as customer\n$ curl 'https://api.intercom.io/conversations/11055118659/customers' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"intercom_user_id\": \"55c1c78946b0aa9ef45b09ff\",\n  \"customer\":{\n    \"intercom_user_id\": \"58c1c78946a0aa9ef45b098a\"\n  }\n}'\n\nHTTP/1.1 200 OK\n\n{\"customers\":[\n  {\"type\":\"user\",\"id\":\"597f02cb22f4bb37597e0b7d\"}, \n  {\"type\":\"lead\",\"id\":\"58ff3f670f14ab4f1aa83750\"}]\n}\n\n\nCustomers can also be added by other customer that's already part of the conversation.\n\nArguments\nArgument\tRequired\tDescription\nintercom_user_id\tone of\tThe Intercom defined id representing the user (in the URL)\nuser_id\tone of\tThe user id you have defined for the user (or auto defined in the case of leads)\nemail\tone of\tThe email you have defined for the user\ncustomer\tYes\tJSON object describing the customer that you want to add to the conversation."
  },
  {
    "title": "List all companies",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/companies/list-companies/",
    "html": "List all companies\nList companies\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/companies \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"company.list\\\",\\n  \\\"total_count\\\": 105,\\n  \\\"companies\\\": [\\n    {\\n      \\\"type\\\": \\\"company\\\",\\n      \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n       ...\\n     },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/companies?per_page=50&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 3\\n  }\\n}\\n\\n# NB: Full company objects are returned\n\n\nYou can list companies. The company list is sorted by the last_request_at field and by default is ordered descending, most recently requested first.\n\nNote that the API does not include companies who have no associated users in list responses.\n\nRequest Parameters\n\nYou can optionally request the result page size and which page to fetch as follows -\n\nParameter\tRequired\tDescription\npage\tno\twhat page of results to fetch defaults to first page.\nper_page\tno\thow many results per page defaults to 15.\norder\tno\tasc or desc. Return the companies in ascending or descending order. defaults to desc.\nRequest Query Parameters\nParameter\tRequired\tDescription\ntag_id\tone of\tThe id of the tag to filter by.\nsegment_id\tone of\tThe id of the segment to filter by.\nResponse\n\nThis will return a paginated list of Company Objects\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - list\ndata\tArray\tAn array containing Company Objects.\ntotal_count\tInteger\tThe total number of companies.\npages\tPagination Object\tThe information needed to paginate through companies\n\nWhen using the Companies endpoint and the pages object to iterate through the returned companies, there is a limit of 10,000 Companies that can be returned. If you need to list or iterate on more than 10,000 Companies, please use the Scroll API."
  },
  {
    "title": "Compatibility",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/common-structures/compatibility/",
    "html": "Compatibility\nUnknown Field\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"user_id\\\" : \\\"456456\\\",\\n  \\\"email\\\" : \\\"j@example.org\\\",\\n  \\\"such_key\\\": \\\"so_value\\\"\\n}\n\nMust Ignore Interpretation\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"user_id\\\" : \\\"456456\\\",\\n  \\\"email\\\" : \\\"j@example.org\\\"\\n}\n\n\nJSON objects in the API follow a must ignore processing model, where clients are expected to ignore data fields they don't understand.\n\nFor example if the client saw the JSON as shown in the example on the right ('Unknown Field') and did not understand the such_key field (and who can blame it?), it must pretend the field wasn't there and will process the object as if it looked liked the object shown in 'Must Ignore'.\n\nWhen fetching content, fields that are optional for API objects are indicated in the documentation - clients must not assume they will always be present. When submitting content, fields that are required to be sent by client are also indicated in the documentation - if these are not sent the API may reject the request.\n\nIn general the API may reject JSON where data is not valid or incomplete with a 422 Unprocessable Entity response and an error message explaining the issue. For example, an email message type may be rejected if it is not sent with a subject field."
  },
  {
    "title": "List attached segments for companies",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/companies/list-attached-segments-1/",
    "html": "List attached segments for companies\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/companies/<id>/segments \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\ncompany_not_found\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Company Not Found\\\"\\n    }\\n  ]\\n}\\n}\\n\n\n\nYou can fetch a list of all segments that belong to a company.\n\nResponse\n\nThis will return a list of Segment objects.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - list\ndata\tArray\tAn array containing Segment Objects"
  },
  {
    "title": "Detach a contact from a company",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/companies/detach-contact-from-company/",
    "html": "Detach a contact from a company\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<contact_id>/companies/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nhttphtml\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can detach a company from a single contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\ncontact_id\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nid\tString\tYes\tThe unique identifier for the company which is given by Intercom\nResponse\n\nThis will return a Company model for the company that was just detached from the contact."
  },
  {
    "title": "Create or update a company",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/companies/create-or-update-company/",
    "html": "Create or update a company\nExample Request & Response\n$ curl https://api.intercom.io/companies \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type:application/json' -d '\n{\n  \"name\": \"Blue Sun\",\n  \"plan\": \"Paid\",\n  \"company_id\": \"6\",\n  \"remote_created_at\": 1394531169,\n  \"size\": 750,\n  \"website\": \"http://www.example.com\",\n  \"industry\": \"Manufacturing\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"team_mates\": 0,\n    \"monthly_spend\": 155.98\n  }\n}'\n\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"company\",\n    \"company_id\": \"6\",\n    \"id\": \"57e0120926806ceca3c13ba8\",\n    \"app_id\": \"pi3243fa\",\n    \"name\": \"Blue Sun\",\n    \"remote_created_at\": 1394531169,\n    \"created_at\": 1474302473,\n    \"updated_at\": 1475659931,\n    \"last_request_at\": 1473419085,\n    \"monthly_spend\": 49,\n    \"session_count\": 0,\n    \"user_count\": 0,\n    \"tags\": {\n        \"type\": \"tag.list\",\n        \"tags\": []\n    },\n    \"segments\": {\n        \"type\": \"segment.list\",\n        \"segments\": [\n            {\n                \"type\": \"segment\",\n                \"id\": \"56cc69cc8618d37b45000009\"\n            }\n        ]\n    },\n    \"plan\": {\n        \"type\": \"plan\",\n        \"id\": \"108609\",\n        \"name\": \"Paid\"\n    },\n    \"custom_attributes\": {\n        \"paid_subscriber\": true,\n        \"team_mates\": 0,\n        \"referral_source\": \"Google\",\n        \"founded\": \"20th Century\",\n        \"monthly_spend\": 155.98,\n        \"remove\": true\n    }\n}\n\nintercom.companies.create(:company_id => 6, :name => \"Blue Sun\", :plan => \"Paid\")\n\n<?php\n$intercom->companies->create([\n    \"name\" => \"Academy\",\n    \"id\" => \"10\"\n])\n?>\n\nimport static io.intercom.api.CustomAttribute.*;\n\nCompany company = new Company()\n  .setName(\"Blue Sun\")\n  .setCompanyID(\"1\")\n  .setPlan(new Company.Plan(\"premium\"))\n  .addCustomAttribute(newIntegerAttribute(\"items\", 246))\n  .addCustomAttribute(CustomAttribute.newStringAttribute(\"bar\", \"fruity\"));\n\ncompany = Company.create(company);\n\ncompany.setName(\"Blue Sun Corporation\");\nCompany.update(company);\n\n\nYou can create or update a company.\n\nCOMPANIES WITH NO USERS\n\nCompanies will be only visible in Intercom when there is at least one associated user.\n\nCompanies are looked up via company_id in a POST request, if not found via company_id, the new company will be created, if found, that company will be updated.\n\nRequest Body Parameters\nArgument\tType\tDescription\nremote_created_at\ttimestamp\tThe time the company was created by you.\ncompany_id\tstring\tThe company id you have defined for the company.\nCan't be updated.\nname\tstring\tThe name of the company.\nmonthly_spend\tnumber\tHow much revenue the company generates for your business. Note that this will truncate floats. i.e. it only allow for whole integers, 155.98 will be truncated to 155. Note that this has an upper limit of 2**31-1 or 2147483647..\nplan\tstring\tThe name of the plan you have associated with the company.\nsize\tnumber\tThe number of employees in this company.\nwebsite\tstring\tThe URL for this company's website. Please note that the value specified here is not validated. Accepts any string.\nindustry\tstring\tThe industry that this company operates in.\ncustom_attributes\tobject\tA hash of key/value pairs containing any other data about the company you want Intercom to store..\nResponse\n\nThis will return the Company model that has been created or updated."
  },
  {
    "title": "Create an article",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/articles/create-an-article/",
    "html": "Create an article\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/articles \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\\n\\n{\\n  \\\"title\\\": \\\"Thanks for everything\\\",\\n  \\\"description\\\": \\\"English description\\\",\\n  \\\"body\\\": \\\"<p>This is the body in html</p>\\\",\\n  \\\"author_id\\\": 1,\\n  \\\"state\\\": \\\"published\\\",\\n  \\\"parent_id\\\": 1,\\n  \\\"parent_type\\\": \\\"collection\\\",\\n  \\\"translated_content\\\": {\\n    \\\"fr\\\": {\\n      \\\"title\\\": \\\"Allez les verts\\\",\\n      \\\"description\\\": \\\"French description\\\",\\n      \\\"body\\\": \\\"<p>French body in html</p>\\\",\\n      \\\"author_id\\\": 1,\\n      \\\"state\\\": \\\"published\\\"\\n    }\\n  }\\n}\n\n\nYou can create a new article by making a POST request to https://api.intercom.io/articles.\n\nRequest Body Parameters\nKey\tType\tRequired?\tDescription\ntitle\tString\tYes\tThe title of the article.\nFor multilingual articles, this will be the title of the default language's content.\ndescription\tString\tNo\tThe description of the article.\nFor multilingual articles, this will be the description of the default language's content.\nbody\tString\tNo\tThe body of the article in HTML.\nFor multilingual articles, this will be the body of the default language's content.\nauthor_id\tString\tYes\tThe id of the author of the article.\nFor multilingual articles, this will be the id of the author of the default language's content. Must be a teammate on the help center's workspace.\nstate\tString\tNo\tWhether the article will be published or will be a draft.\nDefaults to draft.\nFor multilingual articles, this will be the state of the default language's content.\nparent_id\tString\tNo\tThe id of the article's parent collection or section. An article without this field stands alone.\nparent_type\tString\tNo\tThe type of parent, which can either be a collection or section.\ntranslated_content\tObject\tNo\tAn Article Translated Content Object whereby you can specify multiple multilingual articles to be created.\nResponse\n\nThis will return an Article object of the article you just created."
  },
  {
    "title": "Delete a company",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/companies/delete-a-company/",
    "html": "Delete a company\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/companies/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nCompany not found\nHTTP/1.1 404 FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Company Not Found\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can delete a single company.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the company which is given by Intercom\nResponse\n\nThis will return an object with details on the deleted company.\n\nAttribute\tType\tDescription\nid\tString\tThe unique identifier for the company which is given by Intercom\nobject\tString\tThe type of object - company\ndeleted\tBoolean\tWhether the company has been deleted - true"
  },
  {
    "title": "Attach a contact to a company",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/companies/attach-contact-to-company/",
    "html": "Attach a contact to a company\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/companies \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type: application/json' \\\\\\n-d '{\\\"id\\\": \\\"56cde0cc3deab1bd8c000100\\\"}'\n\nExample Errors\nhttphtml\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can attach a company to a single contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nRequest Body Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the company which is given by Intercom\nResponse\n\nThis will return a Company model for the company that was just attached to the contact."
  },
  {
    "title": "The company model",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/companies/company-model/",
    "html": "The company model\nExample Company Object\n{\\n  \\\"type\\\": \\\"company\\\",\\n  \\\"id\\\": \\\"531ee472cce572a6ec000006\\\",\\n  \\\"name\\\": \\\"Blue Sun\\\",\\n  \\\"plan\\\": {\\n        \\\"type\\\": \\\"plan\\\",\\n        \\\"id\\\": \\\"269315\\\",\\n        \\\"name\\\": \\\"pro\\\"\\n    },\\n  \\\"company_id\\\": \\\"6\\\",\\n  \\\"remote_created_at\\\": 1394531169,\\n  \\\"created_at\\\": 1394533506,\\n  \\\"updated_at\\\": 1396874658,\\n  \\\"size\\\": 85,\\n  \\\"website\\\": \\\"http://www.example.com\\\",\\n  \\\"industry\\\": \\\"Manufacturing\\\",\\n  \\\"monthly_spend\\\": 49,\\n  \\\"session_count\\\": 26,\\n  \\\"user_count\\\": 10,\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"team_mates\\\": 0\\n  }\\n}\n\n\nCompanies allow you to represent organizations using your product. Each company will have its own description and be associated with contacts. You can fetch, create, update and list companies.\n\nCompanies will not appear within Intercom until users have been added or associated with a company.\n\nCompany object\nAttribute\tType\tDescription\ntype\tString\tValue is 'company'.\nid\tString\tThe Intercom defined id representing the company.\ncreated_at\tDate (UNIX timestamp)\tThe time the company was added to Intercom.\nremote_created_at\tDate (UNIX timestamp)\tThe time the company was created by you.\nupdated_at\tDate (UNIX timestamp)\tThe last time the company was updated.\nlast_request_at\tDate (UNIX timestamp)\tThe time the company last recorded making a request.\ncompany_id\tString\tThe company id you have defined for the company.\nname\tString\tThe name of the company.\ncustom_attributes\tObject\tThe custom attributes you have set on the company.\nsession_count\tInteger\tHow many sessions the company has recorded.\nmonthly_spend\tInteger\tHow much revenue the company generates for your business.\nuser_count\tInteger\tThe number of users in the company.\nplan\tObject\tThe name of the plan you have associated with the company.\nsize\tInteger\tThe number of employees in the company.\nwebsite\tString\tThe URL for the company website.\nindustry\tString\tThe industry that the company operates in.\nPlan object\nAttribute\tType\tDescription\ntype\tstring\tWill always be of type 'plan'\nid\tstring\tThe plan ID\nname\tstring\tThe name of the plan, note that this is the only field that can be set via the API."
  },
  {
    "title": "The message model",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/messages/messages-model/",
    "html": "The message model\nExample Message Object\n{\n    \"type\": \"message\",\n    \"id\": \"489373052\",\n    \"created_at\": 1539897198,\n    \"subject\": \"This is the subject - if it's an email\",\n    \"body\": \"<p>Hello</p>\",\n    \"message_type\": \"email\"\n}\n\n\nMessage are how you reach out to contacts in Intercom. They are created when an admin sends an outbound message to a contact.\n\nMessage Object\nKey\tType\tDescription\ntype\tString\tAlways message.\nid\tString\tThe id representing the message.\ncreated_at\tUNIX Timestamp\tThe time the conversation was created.\nsubject\tString\tThe subject of the message. Only present if message_type: email.\nbody\tString\tThe message body, which may contain HTML.\nmessage_type\tString\tThe type of message that was sent. Can be email, inapp, facebook or twitter.\nconversation_id\tString\tThe associated conversation_id. Only returned when creating a conversation."
  },
  {
    "title": "Use of HTTP",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/common-structures/use-of-http/",
    "html": "Use of HTTP\n\nRequest methods are used in accordance with HTTP.\n\nGET is used to access resources and perform queries. The API does not allow modifications (creates, updates, deletes) to occur via GET.\nPOST is used to create or update resources. The preferred model for creation is to post JSON to a 'collections' resource - for example the collections resource for users is https://api.intercom.io/users.\nDELETE is used to delete resources.\n\nResponses use standard HTTP codes. Where there are client or server errors, a list of of one or more errors in JSON format is returned in the body - see Error Objects for more details.\n\nThe API may send cache directives where suitable, notably the ETag, Last-Modified and If-Modified-Since headers.\n\nThe Accept header must be used by a client used to indicate a preferred response for GET/HEAD requests. Requests without an Accept header of application/json may be rejected with a client error of 404 or 406.\n\nThe Content-Type header should be used by clients to indicate the submitted format for POST/PUT requests."
  },
  {
    "title": "Retrieve a segment",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/segments/view-a-segment/",
    "html": "Retrieve a segment\nExample Request & Response\n$ curl https://api.intercom.io/segments/53203e244cba153d39000062 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"segment\",\n  \"id\": \"53203e244cba153d39000062\",\n  \"name\": \"New\",\n  \"created_at\": 1394621988,\n  \"updated_at\": 1394622004\n}\n\nintercom.segments.find(:id => '1234')\n\nSegment segment = Segment.find(\"1234\");\n\n\nYou can fetch the details of a single segment.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identified of a given segment.\nRequest Query Parameters\nParameter\tType\tRequired?\tDescription\ninclude_count\tBoolean\tNo\tIncludes the count of contacts that belong to a given segment.\nResponse\n\nThis will return a Segment Model."
  },
  {
    "title": "The tag model",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/tags/tag-model/",
    "html": "The tag model\nExample Object\n{\\n  \\\"id\\\": \\\"17513\\\",\\n  \\\"name\\\": \\\"independent\\\",\\n  \\\"type\\\": \\\"tag\\\"\\n}\n\n\nA tag allows you to label your contacts and companies and list them using that tag.\n\nTag Object\nKey\tType\tDescription\ntype\tstring\tvalue is 'tag'\nid\tstring\tThe id of the tag\nname\tstring\tThe name of the tag"
  },
  {
    "title": "Webhook models",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/webhooks/webhook-models-1/",
    "html": "Webhook models\nWebhook Topics\n\nYou can subscribe to the following Webhook topics, and you will receive notifications on your endpoint URL when an event occurs. The 'Object' column shows the Intercom object related to the event sent as part of the notification.\n\nEach Webhook topic is associated with one or more permissions. When you set up a subscription to a particular topic, you will need to select the appropriate permissions to be able to receive a notification for that topic.\n\nMULTIPLE PERMISSIONS\n\nSome topics are associated with multiple permissions. In these cases, you don't need to select all these permissions to subscribe to that topic.\n\nAdmin topics\n\nTopic\tObject\tEvent description\tPermissions\nadmin.added_to_workspace\tAdmin\tAn Admin being added to workspace\tRead admins\nadmin.away_mode_updated\tAdmin\tAdmin away mode updates\tRead admins\nadmin.removed_from_workspace\tAdmin\tAn Admin being removed from a workspace\tRead admins\n\nCompany topics\n\nTopic\tObject\tEvent description\tPermissions\ncompany.created\tCompany\tCompany creations\tRead users and companies Read one user and one company\n\nContact topics\n\nTopic\tObject\tEvent description\tPermissions\ncontact.archive\tContact\tContacts archived\tRead users and companies Read and write users Read one user\ncontact.deleted\tContact\tContacts deleted\tRead users and companies Read one user and one company\ncontact.email.updated\tContact\tA Contact email address is updated\tRead users and companies Read and write users Read one user and one company\ncontact.lead.added_email\tContact\tAn email address is added to a Contact (Lead)\tRead users and companies Read and write users Read one user and one company\ncontact.lead.created\tContact\tContact creations (Lead)\tRead users and companies Read and write users Read one user and one company\ncontact.lead.signed_up\tContact\tContacts converting from Leads to Users\tRead users and companies Read and write users Read one user and one company\ncontact.lead.tag.created\tContact Tag\tContacts being tagged (Lead)\tRead users and companies Read and write users Read one user and one company\ncontact.lead.tag.deleted\tContact Tag\tContacts being untagged (Lead)\tRead users and companies Read and write users Read one user and one company\ncontact.lead.updated\tContact\tContacts being updated (Lead)\tRead users and companies Read and write users Read one user and one company\ncontact.unsubscribed\tContact\tContacts unsubscribing from email\tRead users and companies Read and write users Read one user and one company\ncontact.user.created\tContact\tContact creations (User)\tRead users and companies Read and write users Read one user and one company\ncontact.user.tag.created\tContact Tag\tContacts being tagged (User)\tRead users and companies Read and write users Read one user and one company\ncontact.user.tag.deleted\tContact Tag\tContacts being untagged (User)\tRead users and companies Read and write users Read one user and one company\n\nConversation topics\n\nTopic\tObject\tEvent description\tPermissions\nconversation.admin.assigned\tConversation\tAdmin conversation assignments\tRead conversations\nconversation.admin.closed\tConversation\tAdmin conversation closed\tRead conversations\nconversation.admin.noted\tConversation\tAdmin conversation notes\tRead conversations\nconversation.admin.opened\tConversation\tAdmin conversation opens\tRead conversations\nconversation.admin.replied\tConversation\tAdmin conversation replies\tRead conversations\nconversation.admin.single.created\tConversation\tAdmin initiated 1:1 conversations\tRead conversations\nconversation.admin.snoozed\tConversation\tAdmin conversation snoozes\tRead conversations\nconversation.admin.unsnoozed\tConversation\tAdmin conversation unsnoozes\tRead conversations\nconversation.deleted\tConversation\tConversation deleted\tRead conversations\nconversation_part.redacted\tConversation Part\tConversation parts being deleted\tRead conversations\nconversation_part.tag.created\tConversation Part\tConversation parts being tagged\tRead conversations\nconversation.priority.updated\tConversation\tConversation priority updated\tRead conversations\nconversation.rating.added\tConversation\tConversations getting a rating\tRead conversations\nconversation.user.created\tConversation\tContact initiated conversations (User and Lead)\tRead conversations\nconversation.user.replied\tConversation\tContact conversation replies (Visitor, Lead and User)\tRead conversations\n\nEvent topics\n\nTopic\tObject\tEvent description\tPermissions\nevent.created\tEvent\tEvents created\tRead events\n\nSubscription topics\n\nTopics\tObject\tEvent description\tPermissions\ngranular.unsubscribe\tSubscription\tA User unsubscribes from a message subscription type\tRead and list users and companies Read and write users Read one user and one company\n\nVisitor topics\n\nTopics\tObject\tEvent description\tPermissions\nvisitor.signed_up\tVisitor\tContacts converting from Visitors to Users\tRead users and companies Read and write users Read one user and one company\n\nPing\n\n\t\t\nping\tPing\tSent when a post to the subscription's ping resource is received or periodically by Intercom. Ping is always subscribed to.\nWebhook notification object\n\nA notification object contains the following fields:\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'notification_event'\nid\tstring\tThe Intercom defined id representing the notification.\nself\tstring\tThe Intercom defined URL for the subscription. Optional.\ncreated_at\ttimestamp\tThe timestamp the notification was created.\ntopic\tstring\tCorresponds to a topic.\ndelivery_attempts\tnumber\tThe number of times this notification has been attempted.\nfirst_sent_at\ttimestamp\tThe first time the delivery was attempted.\ndata\tobject\tA container for the data associated with the notification.\ndata.item\tobject\tThe data associated with the notification, which will have a 'type' field.\n\nThe contents of data.item object will be defined according to its type field. In the example to the right, the type value of Company indicates a company object.\n\n{\n  \"type\": \"notification_event\",\n  \"topic\": \"company.created\",\n  \"id\": \"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b3\",\n  \"app_id\" : \"a86dr8yl\",\n  \"created_at\": 1392731331,\n  \"delivery_attempts\": 1,\n  \"first_sent_at\": 1392731392,\n  \"data\": {\n    \"item\": {\n      \"type\": \"company\",\n      \"id\": \"531ee472cce572a6ec000006\",\n      \"name\": \"Blue Sun\",\n      \"company_id\": \"6\",\n      \"remote_created_at\": 1394531169,\n      \"created_at\": 1394533506,\n      \"updated_at\": 1396874658,\n      \"custom_attributes\": {\n      }\n    }\n  }\n}\n\nHandling Webhook notifications\n\nYou will receive notifications on your chosen topics when you set up a subscription. How you handle those notifications, i.e. the HTTP status code returned, will determine the subsequent state of that subscription.\n\nTIMEOUT\n\nYou have 5 seconds to respond to a notification. If you don't send a response within that time, the notification is treated as failed and will be retried only once after 1 minute.\\If you respond with too many error responses, we drop future notifications for a period of 15 minutes.\n\nResponse Code\tDescription\tAction\n2xx\tSuccess\tThe webhook was successfully delivered.\n410\tGone\tWhen a 410 is received, we assume the resource is no longer available. We will disable the subscription and no more notifications will be sent.\n429\tToo many requests\tWhen a 429 is received, all notifications from that subscription will be throttled. Depending on the rate of delivery, this delay can be between 1 minute to 2 hours. If 429s continue and any notification is delayed for > 2 hours then we will drop that notification.\n4xx (excl. 429) 5xx\tClient or service errors\tWe will retry after 1 minute for all other errors. If the 2nd retry fails then we mark the notification delivery as failed.\nSigned notifications\n\nIntercom signs webhook notifications via an X-Hub-Signature header. We do this so that you can verify that the notification came from Intercom by decoding the signature.\n\nWe compute the value of this X-Hub-Signature header by creating a signature using the body of the JSON request and your App's client_secret value, which you can find on the Basic Info page of your App.\n\nThe signature is the hexadecimal (40-byte) representation of an SHA-1 signature computed using the HMAC algorithm defined in RFC2104.\n\nThe X-Hub-Signature header value starts with the string sha1= followed by the signature.\n\nPOST https://example.org/hooks\nUser-Agent: intercom-parrot-service-client/1.0\nX-Hub-Signature: sha1=21ff2e149e0fdcac6f947740f6177f6434bda921\nAccept: application/json\nContent-Type: application/json\n\n{\n  \"type\" : \"notification_event\",\n  \"id\" : \"notif_78c122d0-23ba-11e4-9464-79b01267cc2e\",\n  \"topic\" : \"user.created\",\n  \"app_id\" : \"a86dr8yl\",\n  \"data\" : {\n    \"type\" : \"notification_event_data\",\n    \"item\" : {\n      \"type\" : \"user\",\n      \"id\" : \"530370b477ad7120001d\",\n      \"user_id\" : \"25\",\n      \"name\" : \"Hoban Washburne\",\n      \"unsubscribed_from_emails\" : false,\n      \"custom_attributes\" : {}\n    }\n  }\n}\n\nAdmin object for Webhooks\n\nThe Admin object is similar to the model returned via the API. You can see an example object below:\n\nExample Admin Response Model for Webhooks\n{\\t\\\"type\\\": \\\"admin\\\",\\t\\\"id\\\": \\\"1\\\",\\t\\\"name\\\": \\\"John Doe\\\",\\t\\\"email\\\": \\\"john.doe@intercom.io\\\",\\t\\\"job_title\\\": \\\"CEO\\\",\\t\\\"away_mode_enabled\\\": true,\\t\\\"away_mode_reassign\\\": false,\\t\\\"away_status_reason\\\": \\\"🍔 On lunch\\\",\\t\\\"has_inbox_seat\\\": true,\\t\\\"team_ids\\\": []}\n\nContact Tag object for Webhooks\n\nWe only return the Contact Tag object for Webhooks. You can see an example object below:\n\n{\n  \"type\": \"contact_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"1287\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"contact\" : {\n      \"type\": \"contact\",\n      \"id\": \"1287ab1287fefe\",\n        ........\n  }\n}\n\n\nA contact tag is composed from the existing contact and tag JSON and is sent when contacts are tagged and untagged via the contact.user.tag.created, contact.lead.tag.created, contact.lead.tag.deleted and contact.user.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'contact_tag'.\ncreated_at\ttimestamp\tThe time the contact tag object was created.\ntag\tTag\tThe tag that was added or removed.\ncontact\tcontact\tThe contact that was tagged or untagged."
  },
  {
    "title": "List all segments",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/segments/list-segments/",
    "html": "List all segments\nExample Request & Response\n$ curl https://api.intercom.io/segments\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"segment.list\",\n  \"segments\": [\n    {\n      \"created_at\": 1393613031,\n      \"id\": \"5310d8e7598c9a0b24000002\",\n      \"name\": \"Active\",\n      \"type\": \"segment\",\n      \"updated_at\": 1393613031\n    },\n    {\n      \"created_at\": 1393613030,\n      \"id\": \"5310d8e6598c9a0b24000001\",\n      \"name\": \"New\",\n      \"type\": \"segment\",\n      \"updated_at\": 1393613030\n    },\n    {\n      \"created_at\": 1393613031,\n      \"id\": \"5310d8e7598c9a0b24000003\",\n      \"name\": \"Slipping Away\",\n      \"type\": \"segment\",\n      \"updated_at\": 1393613031\n    }\n  ]\n}\n\nintercom.segments.all.each { ... }\n\n<?php\n$intercom->segments->getSegments([]);\n?>\n\nSegmentCollection segments = Segment.list();\nwhile (segments.hasNext()) {\n    out.println(segments.next().getId());\n}\n\n\nYou can fetch a list of all segments.\n\nRequest Query Parameters\nParameter\tType\tRequired?\tDescription\ninclude_count\tBoolean\tNo\tIt includes the count of contacts that belong to each segment.\nResponse\n\nThis will return a list of Segment Objects. The result may also have a pages object if the response is paginated.\n\nAttribute\tType\tDescription\ntype\tString\tvalue is 'segment.list'\nsegments\tArray\tA list of segment objects\npages\tObject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch."
  },
  {
    "title": "Create a data attribute",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/data-attributes/create-data-attributes/",
    "html": "Create a data attribute\nExample Requests & Response\ncurlhttp\n$ curl https://api.intercom.io/data_attributes \\\\-X POST \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept: application/json' \\\\-H 'Content-Type: application/json' -d{  \\\"name\\\": \\\"list_cda\\\",  \\\"description\\\": \\\"You are either alive or dead\\\",  \\\"data_type\\\": \\\"options\\\",  \\\"company\\\": false,  \\\"options\\\": [    {\\\"value\\\": \\\"alive\\\"},    {\\\"value\\\": \\\"dead\\\"}  ]}\n\nExample Errors\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"0006klvnje6ffng7ot80\",\n  \"errors\": [\n    {\n      \"code\": \"parameter_invalid\",\n      \"message\": \"You already have 'text_cda' in your people data. To save this as new company data, use a different name.\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"0000rnvpf3m1f3nf4k40\",\n  \"errors\": [\n    {\n      \"code\": \"parameter_invalid\",\n      \"message\": \"Your name for this attribute must only contain alphanumeric characters, currency symbols, and hyphens\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"0000rnvpf3m1f3nf4k40\",\n  \"errors\": [\n    {\n      \"code\": \"parameter_invalid\",\n      \"message\": \"'Name' is one of our standard attributes for your people data. To save this as new people data, use a different name.\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"0000rnvpf3m1f3nf4k40\",\n  \"errors\": [\n    {\n      \"code\": \"parameter_invalid\",\n      \"message\": \"Data Type isn't an option\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"0000rnvpf3m1f3nf4k40\",\n  \"errors\": [\n    {\n      \"code\": \"parameter_invalid\",\n      \"message\": \"You must have at least two options on a list type data attribute\"\n    }\n  ]\n}\n\n\nYou can create a data attributes for a contact or a company.\n\nRequest Body Parameters\nAttribute\tType\tDescription\nname\tstring\tThe name of the attribute.\nmodel\tString\tThe model where the attribute applies to. Accepts contact or company .\ndata_type\tstring\tThe type of data stored for this attribute. Accepted values are string, integer, float, boolean, date.\ndescription\tstring\t(Optional) The readable description you see in the UI for the attribute.\noptions\tarray\t(Optional) To create list attributes. Provide a set of hashes with value as the key of the options you want to make. data_type must be string.\nResponse\n\nThis will return a Data Attribute Model showing the details of your created attribute."
  },
  {
    "title": "Retrieve a job status",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/exports-content-stats/checking-the-status-of-the-job/",
    "html": "Retrieve a job status\n\nYou can view the status of your job by sending a GET request to the URL\nhttps://api.intercom.io/export/content/data/{job_identifier} - the {job_identifier} is the value returned in the response when you first created the export job. More on it can be seen in the Export Job Model.\n\n🚧 Jobs expire after two days\n\nAll jobs that have completed processing (and are thus available to download from the provided URL) will have an expiry limit of two days from when the export ob completed. After this, the data will no longer be available.\n\n❗️ Why does my job have a failed status?\n\nIf a job has failed, then the HTTP Response Code will show as a 504 (Timeout). This is because this type of error commonly comes from jobs taking over 12 hours to process and thus timing out.\n\nExample Request\ncurl https://api.intercom.io/export/content/data/v5xsp8c19ji0s82 \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>'\\n-H 'Accept: application/json'\n\nExample Responses\nHTTP/1.1 200 OK\n{\n  \"job_identifier\":\"v5xsp8c19ji0s82\",\n  \"status\":\"pending\",\n  \"download_expires_at\": \"\",\n  \"download_url\": \"\",\n}\n\nHTTP/1.1 200 OK\n{\n  \"job_identifier\":\"v5xsp8c19ji0s82\",\n  \"status\":\"complete\",\n  \"download_expires_at\": \"1530545400\",\n  \"download_url\": \"https://api.intercom.io/download/messages/data/message-data-export.nsayjlto.5973fb2a-2617-45x9-9f30-60a27b1480f6.csv\",\n}\n\nHTTP/1.1 504 TIMEOUT\n{\n  \"job_identifier\":\"v5xsp8c19ji0s82\",\n  \"status\":\"failed\",\n  \"download_expires_at\": \"\",\n  \"download_url\": \"\",\n}\n\nExample Errors\nhttphttp\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"000l13h1qd7ktp11tidg\\\",\\n  \\\"errors\\\": [\\n      {\\n        \\\"code\\\": \\\"not_found\\\",\\n        \\\"message\\\": \\\"Export job not found for identifier: mqj3mpa4has8\\\"\\n      }\\n  ]\\n}\\n\n\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"errors\\\": [\\n      {\\n        \\\"code\\\": \\\"not_found\\\",\\n        \\\"message\\\": \\\"The requested resource does not exist; check your path and try again\\\"\\n      }\\n  ]\\n}\n\nResponse\n\nThis will return a Export Job Model."
  },
  {
    "title": "Users",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/users/users/",
    "html": "Users\n\nUsers is no longer available as a resource. In order to see information and take action on users, you should use the Contacts API."
  },
  {
    "title": "The visitor model",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/visitors/visitor-object/",
    "html": "The visitor model\n\nVisitors are useful for representing anonymous people that have not yet been identified. They usually represent website visitors. Visitors are not visible in Intercom platform.\nThe Visitors resource provides methods to fetch, update, convert and delete.\n\nVisitor Object\nAttribute\tType\tDescription\ntype\tString\tValue is 'visitor'.\nid\tString\tThe Intercom defined id representing the Visitor.\ncreated_at\tDate (UNIX timestamp)\tThe time the Visitor was added to Intercom.\nupdated_at\tDate (UNIX timestamp)\tThe last time the Visitor was updated.\nuser_id\tString\tAutomatically generated identifier for the Visitor.\nname\tString\tThe name of the Visitor.\ncustom_attributes\tObject\tThe custom attributes you have set on the Visitor.\nlast_request_at\tDate (UNIX timestamp)\tThe time the Lead last recorded making a request.\navatar\tObject\tAn avatar object for the Visitor.\nunsubscribed_from_emails\tBoolean\tWhether the Visitor is unsubscribed from emails.\nlocation_data\tObject\tA Location Object relating to the Visitor.\nsocial_profiles\tList\tA list of social profiles associated with the Visitor.\nsegments\tList\tA list of segments the Visitor.\ntags\tList\tA list of tags associated with the Visitor."
  },
  {
    "title": "Retrieve a visitor",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/visitors/view-a-visitor/",
    "html": "Retrieve a visitor\nExample ID Request\n$ curl \\\n-s https://api.intercom.io/visitors/<id> \\   \n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nor \n\n$ curl \\\n-s https://api.intercom.io/visitors\\?user_id\\=16e690c0-485a-4e87-ae98-a326e788a4f7 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"visitor\",\n  \"id\": \"573479f784c5acde6a000575\",\n  \"user_id\": \"16e690c0-485a-4e87-ae98-a326e788a4f7\",\n  \"email\": \"winstonsmith@truth.org\",\n  \"name\": \"Winston Smith\",\n  ...\n}\n# NB: Full Visitor objects are returned\n\nvisitor = intercom.visitors.find(:id => \"530370b477ad7120001d\")\nvisitor = intercom.visitors.find(:user_id => \"8a88a590-e1c3-41e2-a502-e0649dbf721c\")\n\n\nYou can fetch the details of a single visitor.\n\nRequest Path Parameters\nParameter\tRequired?\tDescription\nid\tOne of\tId provided by Intercom.\n?user_id=\tOne of\tTo get the visitor user_id from the browser you can use the Intercom JS SDK following method : Intercom('getVisitorId').\nResponse\n\nThis will return a Visitor Model."
  },
  {
    "title": "Update a visitor",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/visitors/update-a-visitor/",
    "html": "Update a visitor\nExample Request\n$ curl https://api.intercom.io/visitors \\\n-X PUT \\\n-H 'Authorization:Bearer <Your access token>'  \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"user_id\": \"124\",\n  \"name\": \"Winston Smith\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 9\n  }\n}'\n\nHTTP/1.1 200 OK\n\n{\n  \"user_id\": \"124\",\n  \"name\": \"Winston Smith\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 9\n  }\n  \n  # and the rest of the Visitor model\n}'\n\nvisitor.name = \"Winston Smith\"\nvisitor.custom_attribute[:foo] = 'bar'\nintercom.visitors.save(visitor)\n\n\nSending a PUT request to /visitors and passing identifiers (user_id or id) in the body will result in an update of an existing Visitor.\n\nRequest Body Parameters\nArgument\tType\tRequired?\tDescription\nid\tString\tOne of\tA unique identified for the visitor which is given by Intercom.\nuser_id\tString\tOne of\tA unique identified for the visitor which is given by you.\nname\tString\tNo\tThe visitor's name.\ncustom_attributes\tObject\tNo\tThe custom attributes which are set for the visitor.\nResponse\n\nThis will return a Visitor Model of the visitor you just updated."
  },
  {
    "title": "List all data events",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/data-events/list-user-events/",
    "html": "List all data events\n\nPlease note that you can only 'list' events that are less than 90 days old. Event counts and summaries will still include your events older than 90 days but you cannot 'list' these events individually if they are older than 90 days\n\nList all customer events\ncurlcurlrubyphpjava\n$ curl 'https://api.intercom.io/events?type=user&user_id=314159' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"event.list\\\",\\n  \\\"events\\\": [\\n      {\\n        \\\"event_name\\\" : \\\"ordered-item\\\",\\n        \\\"created_at\\\": 1391691571,\\n        \\\"user_id\\\" : \\\"314159\\\"\\n      },\\n      {\\n        \\\"event_name\\\" : \\\"invited-friend\\\",\\n        \\\"created_at\\\": 1389913941,\\n        \\\"user_id\\\" : \\\"314159\\\",\\n        \\\"metadata\\\": {\\n         \\\"invitee_email\\\": \\\"pi@example.org\\\",\\n         \\\"invite_code\\\": \\\"ADDAFRIEND\\\"\\n         }\\n      },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/events?type=user&intercom_user_id=55a3b&before=144474756550\\\"\\n  }\\n}\\n\\n# NB: Full event objects are returned\n\n\nThe events belonging to a customer can be listed by sending a GET request to https://api.intercom.io/events with a user or lead identifier along with a type parameter. The identifier parameter can be one of user_id, email or intercom_user_id. The type parameter value must be user.\n\nhttps://api.intercom.io/events?type=user&user_id={user_id}\nhttps://api.intercom.io/events?type=user&email={email}\nhttps://api.intercom.io/events?type=user&intercom_user_id={id} (this call can be used to list leads)\n\nThe email parameter value should be url encoded when sending.\n\nYou can optionally define the result page size as well with the per_page parameter.\n\nRequest Parameters\nParameter\tRequired\tDescription\ntype\tyes\tThe value must be user\nuser_id\tno\tThe user id you have defined for the user\nemail\tno\tThe email you have defined for the user\nintercom_user_id\tno\tThe Intercom defined id for the user\nper_page\tno\tHow many results to return per page defaults to 50.\nsummary\tno\tBoolean value. When set to true, event counts are returned grouped by event name.\nReturns\n\nA pageable list of events. The event list contains a pages object that indicates if more events exist for the customer via the next field, whose value is a URL that can be used to fetch the next page. If the next field is not present, that indicates there are no further events for the user. Clients should note that the parameters in the returned link are not assured to be the same as those sent in the request.\n\nThe event list is sorted by the created_at field and ordered descending, most recently created first.\n\nAs well as the fields that were supplied when the event was posted to Intercom(see Event model) for details) the event payload will also contain an id field that uniquely identifies the event and may optionally contain an intercom_user_id containing the Intercom defined id representing the user.\n\nYou can use the API to get counts of users, leads and companies filtered by certain criteria.\n\nCounts are a good way to periodically obtain data for the purposes of tracking rates of change in user and company data."
  },
  {
    "title": "Delete a visitor",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/visitors/delete-a-visitor/",
    "html": "Delete a visitor\nExample Request & Response\ncurlcurl\n$ curl \\\\\\nhttps://api.intercom.io/visitors/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"visitor\\\",\\n  \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n  \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  ...\\n}\\n\n\n\nYou can delete a single visitor.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the visitor which is given by Intercom.\nResponse\n\nThis will return a Visitor Model of the visitor you just deleted."
  },
  {
    "title": "List all data events",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/data-events/list-user-events/",
    "html": "List all data events\n\nPlease note that you can only 'list' events that are less than 90 days old. Event counts and summaries will still include your events older than 90 days but you cannot 'list' these events individually if they are older than 90 days\n\nList all customer events\ncurlcurlrubyphpjava\n$ curl 'https://api.intercom.io/events?type=user&user_id=314159' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"event.list\\\",\\n  \\\"events\\\": [\\n      {\\n        \\\"event_name\\\" : \\\"ordered-item\\\",\\n        \\\"created_at\\\": 1391691571,\\n        \\\"user_id\\\" : \\\"314159\\\"\\n      },\\n      {\\n        \\\"event_name\\\" : \\\"invited-friend\\\",\\n        \\\"created_at\\\": 1389913941,\\n        \\\"user_id\\\" : \\\"314159\\\",\\n        \\\"metadata\\\": {\\n         \\\"invitee_email\\\": \\\"pi@example.org\\\",\\n         \\\"invite_code\\\": \\\"ADDAFRIEND\\\"\\n         }\\n      },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/events?type=user&intercom_user_id=55a3b&before=144474756550\\\"\\n  }\\n}\\n\\n# NB: Full event objects are returned\n\n\nThe events belonging to a customer can be listed by sending a GET request to https://api.intercom.io/events with a user or lead identifier along with a type parameter. The identifier parameter can be one of user_id, email or intercom_user_id. The type parameter value must be user.\n\nhttps://api.intercom.io/events?type=user&user_id={user_id}\nhttps://api.intercom.io/events?type=user&email={email}\nhttps://api.intercom.io/events?type=user&intercom_user_id={id} (this call can be used to list leads)\n\nThe email parameter value should be url encoded when sending.\n\nYou can optionally define the result page size as well with the per_page parameter.\n\nRequest Parameters\nParameter\tRequired\tDescription\ntype\tyes\tThe value must be user\nuser_id\tno\tThe user id you have defined for the user\nemail\tno\tThe email you have defined for the user\nintercom_user_id\tno\tThe Intercom defined id for the user\nper_page\tno\tHow many results to return per page defaults to 50.\nsummary\tno\tBoolean value. When set to true, event counts are returned grouped by event name.\nReturns\n\nA pageable list of events. The event list contains a pages object that indicates if more events exist for the customer via the next field, whose value is a URL that can be used to fetch the next page. If the next field is not present, that indicates there are no further events for the user. Clients should note that the parameters in the returned link are not assured to be the same as those sent in the request.\n\nThe event list is sorted by the created_at field and ordered descending, most recently created first.\n\nAs well as the fields that were supplied when the event was posted to Intercom (see Event model for details) the event payload will also contain an id field that uniquely identifies the event and may optionally contain an intercom_user_id containing the Intercom defined id representing the user.\n\nYou can use the API to get counts of users, leads and companies filtered by certain criteria.\n\nCounts are a good way to periodically obtain data for the purposes of tracking rates of change in user and company data."
  },
  {
    "title": "Attach a contact to a company",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/companies/attach-contact-to-company/",
    "html": "Attach a contact to a company\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/companies \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type: application/json' -d\\n\\n{\\n\\t\\\"id\\\": \\\"56cde0cc3deab1bd8c000100\\\"\\n}\\n\n\nExample Errors\nhttphtml\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can attach a company to a single contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nRequest Body Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the company which is given by Intercom\nResponse\n\nThis will return a Company model for the company that was just attached to the contact."
  },
  {
    "title": "Webhook models",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/webhooks/webhook-models/",
    "html": "Webhook models\nWebhook Topics\n\nYou can subscribe to the following Webhook topics, and you will receive notifications on your endpoint URL when an event occurs. The 'Object' column shows the Intercom object related to the event sent as part of the notification.\n\nEach Webhook topic is associated with one or more permissions. When you set up a subscription to a particular topic, you will need to select the appropriate permissions to be able to receive a notification for that topic.\n\n🚧 Multiple permissions\n\nSome topics are associated with multiple permissions. In these cases, you don't need to select all these permissions to subscribe to that topic.\n\nAdmin topics\nTopic\tObject\tEvent description\tPermissions\nadmin.added_to_workspace\tAdmin\tAn Admin being added to workspace\tRead admins\nadmin.away_mode_updated\tAdmin\tAdmin away mode updates\tRead admins\nadmin.removed_from_workspace\tAdmin\tAn Admin being removed from a workspace\tRead admins\nadmin.logged_in\tAdmin\tAn Admin logging into a workspace\tRead admins\nadmin.logged_out\tAdmin\tAn Admin manually logging out of Intercom in the current workspace or when the Admin's session expires after signing in through SAML SSO\tRead admins\nCompany topics\nTopic\tObject\tEvent description\tPermissions\ncompany.created\tCompany\tCompany creations\tRead users and companies\nRead one user and one company\ncompany.deleted\tCompany\tCompany deletions\tRead users and companies\nRead one user and one company\ncompany.updated\tCompany\tCompany being updated\tRead users and companies\nRead one user and one company\ncompany.contact.attached\tCompany, Contact\tCompany attached to a Contact\tRead users and companies, Read one user and one company\ncompany.contact.detached\tCompany, Contact\tCompany detached from a Contact\tRead users and companies, Read one user and one company\nContact topics\nTopic\tObject\tEvent description\tPermissions\ncontact.archived\tContact\tContacts archived\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.deleted\tContact\tContacts deleted\tRead users and companies\nRead one user and one company\ncontact.email.updated\tContact\tA Contact email address is updated\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.lead.added_email\tContact\tAn email address is added to a Contact\n(Lead)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.lead.created\tContact\tContact creations\n(Lead)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.lead.signed_up\tContact\tContacts converting from Leads to Users\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.lead.tag.created\tContact Tag\tContacts being tagged (Lead)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.lead.tag.deleted\tContact Tag\tContacts being untagged (Lead)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.lead.updated\tContact\tContacts being updated\n(Lead)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.merged\tContact\tContacts being merged\n(User and Lead)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.subscribed\tSubscription\tContacts subscribing to email\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.unarchive\tContact\tContacts unarchived\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.unsubscribed\tSubscription\tContacts unsubscribing from email\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.user.created\tContact\tContact creations\n(User)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.user.tag.created\tContact Tag\tContacts being tagged\n(User)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.user.tag.deleted\tContact Tag\tContacts being untagged\n(User)\tRead users and companies\nRead and write users\nRead one user and one company\ncontact.user.updated\tContact\tContact updated (User)\tRead users and companies, Read and write users,\nRead one user and one company\nConversation topics\nTopic\tObject\tEvent description\tPermissions\nconversation.admin.assigned\tConversation\tAdmin conversation assignments\tRead conversations\nconversation.admin.closed\tConversation\tAdmin conversation closed\tRead conversations\nconversation.admin.noted\tConversation\tAdmin conversation notes\tRead conversations\nconversation.admin.opened\tConversation\tAdmin conversation opens\tRead conversations\nconversation.admin.replied\tConversation\tAdmin conversation replies\tRead conversations\nconversation.admin.single.created\tConversation\tAdmin initiated 1:1 conversations\tRead conversations\nconversation.admin.snoozed\tConversation\tAdmin conversation snoozes\tRead conversations\nconversation.admin.unsnoozed\tConversation\tAdmin conversation unsnoozes\tRead conversations\nconversation.deleted\tConversation\tConversation deleted\tRead conversations\nconversation_part.redacted\tConversation Part\tConversation parts being deleted\tRead conversations\nconversation_part.tag.created\tConversation Part\tConversation parts being tagged\tRead conversations\nconversation.priority.updated\tConversation\tConversation priority updated\tRead conversations\nconversation.rating.added\tConversation\tConversations getting a rating\tRead conversations\nconversation.read\tConversation\tContacts reading conversations\n(User and Lead)\t\nconversation.user.created\tConversation\tContact initiated conversations\n(User and Lead)\tRead conversations\nconversation.user.replied\tConversation\tContact conversation replies\n(Visitor, Lead and User)\tRead conversations\nconversation.contact.attached\tConversation, Contact\tContact attached to a conversation\tRead conversations\nconversation.contact.detached\tConversation, Contact\tContact detached from a conversation\tRead conversations\nEvent topics\nTopic\tObject\tEvent description\tPermissions\nevent.created\tEvent\tEvents created\tRead events\nSubscription topics\nTopics\tObject\tEvent description\tPermissions\ngranular.unsubscribe\tSubscription\tA User unsubscribes from a message subscription type\tRead and list users and companies\nRead and write users\nRead one user and one company\ngranular.subscribe\tSubscription\tA User subscribes from a message subscription type\tRead and list users and companies\nRead and write users\nRead one user and one company\nVisitor topics\nTopics\tObject\tEvent description\tPermissions\nvisitor.signed_up\tVisitor\tContacts converting from Visitors to Users\tRead users and companies\nRead and write users\nRead one user and one company\nPing\nTopics\tObject\tEvent description\nping\tPing\tSent when a post to the subscription's ping resource is received or periodically by Intercom. Ping is always subscribed to.\nContent stat topics\nTopics\tObject\tEvent description\tPermissions\ncontent_stat.banner\tContent Stat\tBanner message events:\n- receipt (Banner displayed)\n- goal_success\n- click\n- collected_email\n- reaction\tRead content data\ncontent_stat.carousel\tContent Stat\tMobile carousel events:\n- receipt (Carousel displayed)\n- goal_success\n- button_tap\n- completion\n- dismissal\n- permission_grant\tRead content data\ncontent_stat.chat\tContent Stat\tChat message events:\n- receipt (Chat delivered)\n- goal_success\n- open\n- click\n- collected_email\n- reply\tRead content data\ncontent_stat.checklist\tContent Stat\tChecklist events:\n- receipt (Checklist shown)\n- goal_success\tRead content data\ncontent_stat.custom_bot\tContent Stat\tCustom Bot events:\n- receipt\n- goal_success\n- reply\n- completion\tRead content data\ncontent_stat.email\tContent Stat\tEmail events:\n- receipt (Email sent)\n- goal_success\n- open\n- click\n- reply\n\nEmail failure events:\n- hard_bounce\n- soft_bounce\n- spam_complaint\n- unsubscribe\tRead content data\ncontent_stat.news_item\tContent Stat\tNews Item events:\n- receipt (News Item displayed)\n- open\n- click\n- reaction\tRead content data\ncontent_stat.post\tContent Stat\tPost message events:\n- receipt (Post sent)\n- goal_success\n- open\n- click\n- Reply\n- reaction\tRead content data\ncontent_stat.push\tContent Stat\tPush message events:\n- receipt (Push sent)\n- goal_success\n- Open\n\nPush message failure events:\n- push_failure\tRead content data\ncontent_stat.series\tContent Stat\tSeries campaign events:\n- receipt\n- goal_success\n- series_completion\n- series_disengagement\n- series_exit\tRead content data\ncontent_stat.series.webhook\tContent Stat\tSeries Webhook events:\n- receipt\n\nSeries Webhook failure event:\n- failure\tRead content data\ncontent_stat.sms\tContent Stat\tSMS message events:\n- receipt (SMS sent)\n- goal_success\n- keyword_reply\n\nFailure stat types include:\n- sms_failure\n- unsubscribe\tRead content data\ncontent_stat.survey\tContent Stat\tSurvey events:\n- receipt (Survey shown)\n- goal_success\n- answer\n- click\n- completion\n- dismissal\tRead content data\ncontent_stat.tooltip_group\tContent Stat\tTooltip events:\n- receipt\n- goal_success\tRead content data\ncontent_stat.tour\tContent Stat\tProduct tour events:\n- receipt (Tour shown)\n- goal_success\n- tour_step_failure\n- completion\tRead content data\nWebhook notification object\n\nA standard Webhook notification object contains the following fields:\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'notification_event'\nid\tstring\tThe Intercom defined id representing the notification.\nself\tstring\tThe Intercom defined URL for the subscription. Optional.\ncreated_at\ttimestamp\tThe timestamp the notification was created.\ntopic\tstring\tCorresponds to a topic.\ndelivery_attempts\tnumber\tThe number of times this notification has been attempted.\nfirst_sent_at\ttimestamp\tThe first time the delivery was attempted.\ndata\tobject\tA container for the data associated with the notification.\ndata.item\tobject\tThe data associated with the notification, which will have a 'type' field.\n\nThe contents of data.item object will be defined according to its type field. In the example below, the type value of Company indicates a company object.\n\n{\n  \"type\": \"notification_event\",\n  \"topic\": \"company.created\",\n  \"id\": \"notif_ccd8a4d0-f965-11e3-a367-c779cae3e1b3\",\n  \"app_id\" : \"a86dr8yl\",\n  \"created_at\": 1392731331,\n  \"delivery_attempts\": 1,\n  \"first_sent_at\": 1392731392,\n  \"data\": {\n    \"item\": {\n      \"type\": \"company\",\n      \"id\": \"531ee472cce572a6ec000006\",\n      \"name\": \"Blue Sun\",\n      \"company_id\": \"6\",\n      \"remote_created_at\": 1394531169,\n      \"created_at\": 1394533506,\n      \"updated_at\": 1396874658,\n      \"custom_attributes\": {\n      }\n    }\n  }\n}\n\nHandling Webhook notifications\n\nYou will receive notifications on your chosen topics when you set up a subscription. How you handle those notifications, i.e. the HTTP status code returned, will determine the subsequent state of that subscription.\n\n❗️ Timeout\n\nYou have 5 seconds to respond to a notification. If you don't send a response within that time, the notification is treated as failed and will be retried only once after 1 minute.\n\nIf you respond with too many error responses, we drop future notifications for a period of 15 minutes.\n\nResponse Code\tDescription\tAction\n2xx\tSuccess\tThe webhook was successfully delivered.\n410\tGone\tWhen a 410 is received, we assume the resource is no longer available. We will disable the subscription and no more notifications will be sent.\n429\tToo many requests\tWhen a 429 is received, all notifications from that subscription will be throttled. Depending on the rate of delivery, this delay can be between 1 minute to 2 hours. If 429s continue and any notification is delayed for > 2 hours then we will drop that notification.\n4xx (excl. 429)\n5xx\tClient or service errors\tWe will retry after 1 minute for all other errors. If the 2nd retry fails then we mark the notification delivery as failed.\nSigned notifications\n\nIntercom signs webhook notifications via an X-Hub-Signature header. We do this so that you can verify that the notification came from Intercom by decoding the signature.\n\nWe compute the value of this X-Hub-Signature header by creating a signature using the body of the JSON request and your App's client_secret value, which you can find on the Basic Info page of your App.\n\nThe signature is the hexadecimal (40-byte) representation of an SHA-1 signature computed using the HMAC algorithm defined in RFC2104.\n\nThe X-Hub-Signature header value starts with the string sha1= followed by the signature.\n\nPOST https://example.org/hooks\nUser-Agent: intercom-parrot-service-client/1.0\nX-Hub-Signature: sha1=21ff2e149e0fdcac6f947740f6177f6434bda921\nAccept: application/json\nContent-Type: application/json\n\n{\n  \"type\" : \"notification_event\",\n  \"id\" : \"notif_78c122d0-23ba-11e4-9464-79b01267cc2e\",\n  \"topic\" : \"user.created\",\n  \"app_id\" : \"a86dr8yl\",\n  \"data\" : {\n    \"type\" : \"notification_event_data\",\n    \"item\" : {\n      \"type\" : \"user\",\n      \"id\" : \"530370b477ad7120001d\",\n      \"user_id\" : \"25\",\n      \"name\" : \"Hoban Washburne\",\n      \"unsubscribed_from_emails\" : false,\n      \"custom_attributes\" : {}\n    }\n  }\n}\n\nAdmin notification object\n\nThe Admin notification object is similar to the model returned via the API. You can see an example object below:\n\n{\n  \"type\": \"admin\",\n  \"id\": \"1\",\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@intercom.io\",\n  \"job_title\": \"CEO\",\n  \"away_mode_enabled\": true,\n  \"away_mode_reassign\": false,\n  \"away_status_reason\": \"🍔 On lunch\",\n  \"has_inbox_seat\": true,\n  \"team_ids\": []\n}\n\nContact Tag notification object\n\nWe only return the Contact Tag notification object for Webhooks. You can see an example object below:\n\n{\n  \"type\": \"contact_tag\",\n  \"created_at\": 1392731331,\n  \"tag\" : {\n      \"id\": \"1287\",\n      \"name\": \"independent\",\n      \"type\": \"tag\"\n    },\n  \"contact\" : {\n      \"type\": \"contact\",\n      \"id\": \"1287ab1287fefe\",\n        ........\n  }\n}\n\n\nA Contact Tag notification object is composed from the existing Contact and Tag objects and is sent when Contacts are tagged and untagged via the contact.user.tag.created, contact.lead.tag.created, contact.lead.tag.deleted and contact.user.tag.deleted topics.\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'contact_tag'.\ncreated_at\ttimestamp\tThe time the contact tag object was created.\ntag\tTag\tThe tag that was added or removed.\ncontact\tcontact\tThe contact that was tagged or untagged.\nContent Stat notification object\n\nWe only return the Content Stat notification object for Webhooks. You can see an example object below:\n\n{\n  \"type\": \"content_stat.series\",\n  \"created_at\": \"2022-10-11T15:01:07.000Z\",\n  \"content_stat\": {\n    \"id\": 1,\n    \"content_type\": \"series\",\n     \"content_id\": 1,\n     \"stat_type\": \"receipt\",\n     \"ruleset_id\": 29,\n     \"content_title\": \"Untitled\",\n     \"ruleset_version_id\": -1,\n     \"receipt_id\": 1,\n     \"tags\": {\n       \"type\": \"list\",\n       \"has_more\": false,\n       \"data\": [],\n       \"total_count\": 0\n     },\n     \"series_id\": 1,\n     \"series_title\": null,\n     \"node_id\": 3\n  },\n  \"contact\": {\n    \"type\": \"contact\",\n    \"id\": \"6318db7dfb80c614fe1792b5\",\n    ...\n  }\n}\n\n\nThe Content Stat notification object will match our existing Webhook notification object detailed here and contains the following fields:\n\nAttribute\tType\tDescription\nid\tstring\tThe unique identifier for the Content Stat set by Intercom\ncontent_type\tstring\tThe type of Content the Stat relates to, e.g. Email, Chat, Post, Push etc\ncontent_id\tstring\tThe unique identifier for the Content given by Intercom, In an A/B test each version has its own identifier.\nstat_type\tstring\tType of the stat event. While there are some common stat types like \"receipt\", others are content specific. Content Type email, for example, has stats for unsubscribe, bounce etc. The list of supported stat types is included in the table above. Others may be added over time.\ncontent_title\tstring\tThe title of Content you see in your Intercom Workspace\nruleset_id\tstring\tThe unique identifier of the Outbound Message the Content relates to in your Intercom Workspace\nruleset_version_id\tstring\tThe unique identifier of the Outbound Message version the Content relates to in your Intercom Workspace\nseries_id\tstring\tOptional - If the stat relates to a Content object (email, push, etc) which is part of a Series campaign, this will include the ID of that Series campaign\nseries_title\tstring\tOptional - If the stat relates to a Content object (email, push, etc) which is part of a Series campaign, this is title of the Series\nnode_id\tstring\tOptional - If the stat relates to a Content object (email, push, etc) which is part of a Series campaign, this is the ID of the Node in the Series\ncontact\tobject\tNested Contact object. This is the user or lead to whom the content was sent.\ncompany\tobject\tOptional nested Company object. If the content stat relates to a company (company predicates were used in the audience targeting), the company information is also included.\nContent Stat Survey response notification object\n\nThe content_stat.survey notification object contains additional payload fields relating to Survey answers. The individual answer key is included in the answer stat type event. The answers key is included in the completion stat type event showing all answers in the Survey.\n\nAttribute\tType\tDescription\nanswered_at\tstring\tThe time the question was answered.\nquestion_id\tstring\tThe ID of the specific survey question.\nquestion_text\tstring\tThe text of the question\nresponse\tstring\tThe raw response from the user"
  },
  {
    "title": "Redact a conversation part",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Conversations/redactConversation/",
    "html": "You can redact a conversation part or the source message of a conversation (as seen in the source object).\n\n📘 Which parts and source messages can I redact?\n\nIf you are redacting a conversation part, it must have a body. If you are redacting a source message, it must have been created by a contact. We will return a conversation_part_not_redactable error if these criteria are not met."
  },
  {
    "title": "Detach a contact from a group conversation",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Conversations/detachContactFromConversation/",
    "html": "You can add participants who are contacts to a conversation, on behalf of either another contact or an admin.\n\n🚧 Note about contacts without an email\n\nIf you add a contact via the email parameter and there is no user/lead found on that workspace with he given email, then we will create a new contact with role set to lead."
  },
  {
    "title": "Attach a contact to a conversation",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Conversations/attachContactToConversation/",
    "html": "You can add participants who are contacts to a conversation, on behalf of either another contact or an admin.\n\n🚧 Note about contacts without an email\n\nIf you add a contact via the email parameter and there is no user/lead found on that workspace with he given email, then we will create a new contact with role set to lead."
  },
  {
    "title": "Run Assignment Rules on a conversation",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Conversations/autoAssignConversation/",
    "html": "You can let a conversation be automatically assigned following assignment rules."
  },
  {
    "title": "Manage a conversation",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Conversations/manageConversation/",
    "html": "You can close a conversation. You can snooze a conversation to reopen on a future date. You can open a conversation which is snoozed or closed. You can assign a conversation to an admin and/or team."
  },
  {
    "title": "Reply to a conversation",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Conversations/replyConversation/",
    "html": "You can reply to a conversation with a message from an admin or on behalf of a contact, or with a note for admins."
  },
  {
    "title": "Search conversations",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Conversations/searchConversations/",
    "html": "You can search for multiple conversations by the value of their attributes in order to fetch exactly which ones you want.\n\nTo search for conversations, you need to send a POST request to https://api.intercom.io/conversations/search. This will accept a query object in the body which will define your filters in order to search for conversations.\n\n🚧 Nesting & Limitations\n\nYou can nest these filters in order to get even more granular insights that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4). There are some limitations to the amount of multiple's there can be:\n\nThere's a limit of max 2 nested filters\nThere's a limit of max 15 filters for each AND or OR group\nAccepted Fields\n\nMost keys listed as part of the The conversation model is searchable, whether writeable or not. The value you search for has to match the accepted type, otherwise the query will fail (ie. as created_at accepts a date, the value cannot be a string such as \"foorbar\").\n\nField\tType\nid\tString\ncreated_at\tDate (UNIX timestamp)\nupdated_at\tDate (UNIX timestamp)\nsource.type\tString\nsource.id\tString\nsource.delivered_as\tString\nsource.subject\tString\nsource.body\tString\nsource.author.id\tString\nsource.author.type\tString\nsource.author.name\tString\nsource.author.email\tString\nsource.url\tString\ncontact_ids\tString\nteammate_ids\tString\nadmin_assignee_id\tString\nteam_assignee_id\tString\nchannel_initiated\tString\nAccepted fields are conversation, push, facebook, twitter and email.\nopen\tBoolean\nread\tBoolean\nstate\tString\nwaiting_since\tDate (UNIX timestamp)\nsnoozed_until\tDate (UNIX timestamp)\ntag_ids\tString\npriority\tString\nstatistics.time_to_assignment\tInteger\nstatistics.time_to_admin_reply\tInteger\nstatistics.time_to_first_close\tInteger\nstatistics.time_to_last_close\tInteger\nstatistics.median_time_to_reply\tInteger\nstatistics.first_contact_reply_at\tDate (UNIX timestamp)\nstatistics.first_assignment_at\tDate (UNIX timestamp)\nstatistics.first_admin_reply_at\tDate (UNIX timestamp)\nstatistics.first_close_at\tDate (UNIX timestamp)\nstatistics.last_assignment_at\tDate (UNIX timestamp)\nstatistics.last_assignment_admin_reply_at\tDate (UNIX timestamp)\nstatistics.last_contact_reply_at\tDate (UNIX timestamp)\nstatistics.last_admin_reply_at\tDate (UNIX timestamp)\nstatistics.last_close_at\tDate (UNIX timestamp)\nstatistics.last_closed_by_id\tString\nstatistics.count_reopens\tInteger\nstatistics.count_assignments\tInteger\nstatistics.count_conversation_parts\tInteger\nconversation_rating.requested_at\tDate (UNIX timestamp)\nconversation_rating.replied_at\tDate (UNIX timestamp)\nconversation_rating.score\tInteger\nconversation_rating.remark\tString\nconversation_rating.contact_id\tString\nconversation_rating.admin_d\tString"
  },
  {
    "title": "Update a conversation",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Conversations/updateConversation/",
    "html": "You can update an existing conversation.\n\n📘\n\nIf you want to update a conversation with either a reply (or actions such as assign, unassign, open, close or snooze) then take a look at their own sections respectively as they currently require different endpoints and parameters."
  },
  {
    "title": "Retrieve a conversation",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Conversations/retrieveConversation/",
    "html": "You can fetch the details of a single conversation.\n\nThis will return a single Conversation model with all its conversation parts.\n\n🚧 Hard limit of 500 parts\n\nThe maximum number of conversation parts that can be returned via the API is 500. If you have more than that we will return the 500 most recent conversation parts.\n\n📘 Bot name in conversation parts\n\nFor conversation parts generated by a bot, bot name will depend on the following:\n\nCustomers that never turned on AI answers will have operator as the bot name\nCustomers that have turned on AI answers at some point will have fin as the bot name"
  },
  {
    "title": "Creates a conversation",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Conversations/createConversation/",
    "html": "You can create a conversation that has been initiated by a contact (ie. user or lead). The conversation can be an in-app message only.\n\n📘 Sending for visitors\n\nYou can also send a message from a visitor by specifying their user_id or id value in the from field, along with a type field value of contact. This visitor will be automatically converted to a contact with a lead role once the conversation is created.\n\nThis will return the Message model that has been created."
  },
  {
    "title": "List all conversations",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Conversations/listConversations/",
    "html": "You can fetch a list of all conversations.\n\nYou can optionally request the result page size and the cursor to start after to fetch the result"
  },
  {
    "title": "Remove tag from a conversation",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Conversations/detachTagFromConversation/",
    "html": "You can remove tag from a specific conversation. This will return a tag object for the tag that was removed from the conversation."
  },
  {
    "title": "Add tag to a conversation",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Conversations/attachTagToConversation/",
    "html": "You can tag a specific conversation. This will return a tag object for the tag that was added to the conversation."
  },
  {
    "title": "Delete an article",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Articles/deleteArticle/",
    "html": "You can delete a single article by making a DELETE request to https://api.intercom.io/articles/<id>."
  },
  {
    "title": "Update an article",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Articles/updateArticle/",
    "html": "You can update the details of a single article by making a PUT request to https://api.intercom.io/articles/<id>."
  },
  {
    "title": "Retrieve an article",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Articles/retrieveArticle/",
    "html": "You can fetch the details of a single article by making a GET request to https://api.intercom.io/articles/<id>."
  },
  {
    "title": "Create an article",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Articles/createArticle/",
    "html": "You can create a new article by making a POST request to https://api.intercom.io/articles."
  },
  {
    "title": "List all articles",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Articles/listArticles/",
    "html": "You can fetch a list of all articles by making a GET request to https://api.intercom.io/articles.\n\n📘 How are the articles sorted and ordered?\n\nArticles will be returned in descending order on the updated_at attribute. This means if you need to iterate through results then we'll show the most recently updated articles first."
  },
  {
    "title": "Delete tag",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Tags/deleteTag/",
    "html": "You can delete the details of tags that are on the workspace by passing in the id."
  },
  {
    "title": "Find a specific tag",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Tags/findTag/",
    "html": "You can fetch the details of tags that are on the workspace by their id. This will return a tag object."
  },
  {
    "title": "Create or update a tag, Tag or untag companies, Tag contacts",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Tags/createTag/",
    "html": "You can use this endpoint to perform the following operations:\n\n1. Create a new tag: You can create a new tag by passing in the tag name as specified in \"Create or Update Tag Request Payload\" described below.\n\n2. Update an existing tag: You can update an existing tag by passing the id of the tag as specified in \"Create or Update Tag Request Payload\" described below.\n\n3. Tag Companies: You can tag single company or a list of companies. You can tag a company by passing in the tag name and the company details as specified in \"Tag Company Request Payload\" described below. Also, if the tag doesn't exist then a new one will be created automatically.\n\n4. Untag Companies: You can untag a single company or a list of companies. You can untag a company by passing in the tag id and the company details as specified in \"Untag Company Request Payload\" described below.\n\n5. Tag Multiple Users: You can tag a list of users. You can tag the users by passing in the tag name and the user details as specified in \"Tag Users Request Payload\" described below.\n\nEach operation will return a tag object."
  },
  {
    "title": "List all tags",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Tags/listTags/",
    "html": "You can fetch a list of all tags for a given workspace."
  },
  {
    "title": "Add tag to a conversation",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Tags/attachTagToConversation/",
    "html": "You can tag a specific conversation. This will return a tag object for the tag that was added to the conversation."
  },
  {
    "title": "Remove tag from a conversation",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Tags/detachTagFromConversation/",
    "html": "You can remove tag from a specific conversation. This will return a tag object for the tag that was removed from the conversation."
  },
  {
    "title": "Redact a conversation part",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/conversations/redact-a-conversation-part/",
    "html": "Redact a conversation part\nExample Request & Response\n$ curl https://api.intercom.io/conversations/redact \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-d \n\n{\n  \"type\": <resource_type>,\n  \"conversation_id\": <conversation_id>,\n  \"conversation_part_id\": <conversation_part_id>,\n  \"source_id\": <source_id>,\n}\n\nHTTP/1.1 200 OK\n{\n    \"type\": \"conversation\",\n    \"id\": \"1911149811\",\n    \"created_at\": 1539897198,\n    \"updated_at\": 1540393270,\n    \"source\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\",\n        \"redacted\": false\n    },\n    \"contacts\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"teammates\": [\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    ],\n    \"admin_assignee_id\": \"814860\",\n    \"team_assignee_id\": null,\n    \"custom_attributes\": {\n      \"issue_type\": \"Billing\",\n      \"priority\": \"High\"\n    },\n    \"open\": true,\n    \"state\": \"open\",\n    \"read\": true,\n    \"waiting_since\": 64654125776\n    \"snoozed_until\": null,\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\",\n    },\n    \"first_contact_reply\": {\n    \t\"created_at\": 1539897198\n    \t\"type\": \"conversation\",\n    \t\"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"priority\": \"not_priority\",\n    \"sla_applied\": {\n    \t\"sla_name\": \"VIP customer <5m\",\n      \"sla_status\": \"missed\",\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"contact\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null,\n            \"name\": null,\n            \"email\": null\n        }\n    },\n    \"statistics\": {\n      \"time_to_assignment\": 2310,\n      \"time_to_admin_reply\": 2408,\n      \"time_to_first_close\": 4915 ,\n      \"time_to_last_close\": 5125,\n      \"median_time_to_reply\": 321,\n      \"first_contacat_reply_at\": 1539897200,\n      \"first_assignment_at\": 1539897200,\n      \"first_admin_reply_at\": 1539897200,\n      \"first_close_at\": 1539897200,\n      \"last_assignment_at\": 1539897200,\n      \"last_assignment_admin_reply_at\": 1539897200,\n      \"last_contact_reply_at\": 1539897200,\n      \"last_admin_reply_at\": 1539897200,\n      \"last_close_at\": 1539897200,\n      \"last_closed_by\": {\n      \t\"type\": \"admin\",\n        \"id\": \"325432652\",\n        \"name\": \"Tom Smith\",\n        \"email\": \"tom@example.com\"\n      },\n      \"count_reopens\": 3,\n      \"count_assignments\": 2,\n      \"count_conversation_parts\": 67\n    },\n    \"conversation_parts\": {\n        \"conversation_parts\": [\n            {\n                \"assigned_to\": null,\n                \"attachments\": [],\n                \"author\": {\n                    \"id\": \"815309\",\n                    \"type\": \"bot\"\n                },\n                \"body\": \"<p>Test_App typically replies in a few hours.</p>\",\n                \"created_at\": 1539897200,\n                \"external_id\": null,\n                \"id\": \"2202737122\",\n                \"notified_at\": 1539897200,\n                \"part_type\": \"comment\",\n                \"type\": \"conversation_part\",\n                \"updated_at\": 1539897200,\n                \"redacted\": false\n            },\n          #List of conversation parts...\n        ],\n        \"total_count\": 67,\n        \"type\": \"conversation_part.list\"\n    }    \n}\n\nExample Errors\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"ffa661e0-a805-4ca1-9c8f-87a926ce72bc\",\n  \"errors\": [\n    {\n      \"code\": \"parameter_not_found\",\n      \"message\": \"conversation_id is a required parameter\"\n    }\n  ]\n}\n\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"ffa661e0-a805-4ca1-9c8f-87a926ce72bc\",\n  \"errors\": [\n    {\n      \"code\": \"conversation_part_not_redactable\",\n      \"message\": \"Part can't be redacted\"\n    }\n  ]\n}\n\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"ffa661e0-a805-4ca1-9c8f-87a926ce72bc\",\n  \"errors\": [\n    {\n      \"code\": \"type_mismatch\",\n      \"message\": \"The type attribute provided should be either 'conversation_part' or 'source'\"\n    }\n  ]\n}\n\n\nYou can redact a conversation part or the source message of a conversation (as seen in the source object).\n\nWHICH PARTS AND SOURCE MESSAGES CAN I REDACT?\n\nIf you are redacting a conversation part, it must have a body.\\nIf you are redacting a source message, it must have been created by a contact.\\nWe will return a conversation_part_not_redactable error if these criteria are not met.\n\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\ntype\tString\tYes\tThe type of resource being redacted. Accepted values are conversation_part or source.\nconversation_id\tString\tYes\tThe id of the conversation.\nconversation_part_id\tString\tYes (if type: conversation_part)\tThe id of the conversation_part.\nsource_id\tString\tYes (if type: source)\tThe id of the source.\nResponse\n\nThis will return the Conversation with the Conversation Parts which have been redacted."
  },
  {
    "title": "Retrieve a conversation",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/conversations/retrieve-a-conversation/",
    "html": "Retrieve a conversation\nExample Request & Response\n$ curl https://api.intercom.io/conversations/<id> \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"1911149811\",\n    \"created_at\": 1539897198,\n    \"updated_at\": 1540393270,\n    \"source\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\",\n        \"redacted\": false\n    },\n    \"contacts\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"teammates\": [\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    ],\n    \"admin_assignee_id\": \"814860\",\n    \"team_assignee_id\": null,\n    \"custom_attributes\": {\n      \"issue_type\": \"Billing\",\n      \"priority\": \"High\"\n    },\n    \"topics\": {\n       \"type\": \"topic.list\",\n       \"topics\": [\n           {\n            \"type\": \"topic\"\n            \"name\": \"Example Topic 1\",\n            \"id\": 839\n           }\n        ],\n      \"total_count\": 1\n    },\n    \"open\": true,\n    \"state\": \"open\",\n    \"read\": true,\n    \"waiting_since\": 64654125776\n    \"snoozed_until\": null,\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\",\n    },\n    \"first_contact_reply\": {\n    \t\"created_at\": 1539897198\n    \t\"type\": \"conversation\",\n    \t\"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"priority\": \"not_priority\",\n    \"sla_applied\": {\n    \t\"sla_name\": \"VIP customer <5m\",\n      \"sla_status\": \"missed\",\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"contact\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null,\n            \"name\": null,\n            \"email\": null\n        }\n    },\n    \"statistics\": {\n      \"time_to_assignment\": 2310,\n      \"time_to_admin_reply\": 2408,\n      \"time_to_first_close\": 4915 ,\n      \"time_to_last_close\": 5125,\n      \"median_time_to_reply\": 321,\n      \"first_contacat_reply_at\": 1539897200,\n      \"first_assignment_at\": 1539897200,\n      \"first_admin_reply_at\": 1539897200,\n      \"first_close_at\": 1539897200,\n      \"last_assignment_at\": 1539897200,\n      \"last_assignment_admin_reply_at\": 1539897200,\n      \"last_contact_reply_at\": 1539897200,\n      \"last_admin_reply_at\": 1539897200,\n      \"last_close_at\": 1539897200,\n      \"last_closed_by\": {\n      \t\"type\": \"admin\",\n        \"id\": \"325432652\",\n        \"name\": \"Tom Smith\",\n        \"email\": \"tom@example.com\"\n      },\n      \"count_reopens\": 3,\n      \"count_assignments\": 2,\n      \"count_conversation_parts\": 67\n    },\n    \"conversation_parts\": {\n        \"conversation_parts\": [\n            {\n                \"assigned_to\": null,\n                \"attachments\": [],\n                \"author\": {\n                    \"id\": \"815309\",\n                    \"type\": \"bot\"\n                },\n                \"body\": \"<p>Test_App typically replies in a few hours.</p>\",\n                \"created_at\": 1539897200,\n                \"external_id\": null,\n                \"id\": \"2202737122\",\n                \"notified_at\": 1539897200,\n                \"part_type\": \"comment\",\n                \"type\": \"conversation_part\",\n                \"updated_at\": 1539897200,\n                \"redacted\": false\n            },\n          #List of conversation parts...\n        ],\n        \"total_count\": 67,\n        \"type\": \"conversation_part.list\"\n    }    \n}\n\nintercom.conversations.find(:id => '147')\n\n<?php\n$intercom->conversations->getConversation(\"10957850396\");\n?>\n\nConversation conversation = Conversation.find(\"147\");\n\nConversationMessage message =\n  conversation.getConversationMessage();\n\nConversationPartCollection parts =\n  conversation.getConversationPartCollection();\n\nList<ConversationPart> list = parts.getPageItems();\n\nfor (ConversationPart part : list) {\n  String partType = part.getPartType();\n  Author author = part.getAuthor();\n  String body = part.getBody();\n}\n\nConversationPart recent =\n  conversation.getMostRecentConversationPart();\n\nAdmin assignee =\n  conversation.getAssignee();\n\nUser user =\n  conversation.getUser();\n\n\nYou can fetch the details of a single conversation.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Query Parameters\nParameter\tType\tRequired?\tDescription\ndisplay_as\tString\tNo\tSet to plaintext to retrieve conversation messages in plain text.\nResponse\n\nThis will return a single Conversation model with all its conversation parts.\n\nHARD LIMIT OF 500 PARTS\n\nThe maximum number of conversation parts that can be returned via the API is 500. If you have more than that we will return the 500 most recent conversation parts."
  },
  {
    "title": "List all conversations",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/conversations/list-conversations/",
    "html": "List all conversations\nExample Request & Response\n$ curl \\\"https://api.intercom.io/conversations?order=desc&sort=updated_at\" \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"conversation.list\",\n  \"conversations\": [\n    {\n    \"type\": \"conversation\",\n    \"id\": \"1911149811\",\n    \"created_at\": 1539897198,\n    \"updated_at\": 1540393270,\n    \"source\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"contacts\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"teammates\": [\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    ],\n    \"admin_assignee_id\": \"814860\",\n    \"team_assignee_id\": null,\n    \"custom_attributes\": {\n      \"issue_type\": \"Billing\",\n      \"priority\": \"High\"\n    },\n    \"topics\": {\n       \"type\": \"topic.list\",\n       \"topics\": [\n           {\n              \"type\": \"topic\"\n              \"name\": \"Example Topic 1\",\n              \"id\": 839\n           }\n       ],\n       \"total_count\": 1\n    },\n    \"open\": true,\n    \"state\": \"open\",\n    \"read\": true,\n    \"waiting_since\": 64654125776\n    \"snoozed_until\": null,\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\",\n    },\n    \"first_contact_reply\": {\n    \t\"created_at\": 1539897198\n    \t\"type\": \"conversation\",\n    \t\"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"priority\": \"not_priority\",\n    \"sla_applied\": {\n    \t\"sla_name\": \"VIP customer <5m\",\n      \"sla_status\": \"missed\",\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"contact\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null,\n            \"name\": null,\n            \"email\": null\n        }\n    },\n    \"statistics\": {\n      \"time_to_assignment\": 2310,\n      \"time_to_admin_reply\": 2408,\n      \"time_to_first_close\": 4915 ,\n      \"time_to_last_close\": 5125,\n      \"median_time_to_reply\": 321,\n      \"first_contact_reply_at\": 1539897200,\n      \"first_assignment_at\": 1539897200,\n      \"first_admin_reply_at\": 1539897200,\n      \"first_close_at\": 1539897200,\n      \"last_assignment_at\": 1539897200,\n      \"last_assignment_admin_reply_at\": 1539897200,\n      \"last_contact_reply_at\": 1539897200,\n      \"last_admin_reply_at\": 1539897200,\n      \"last_close_at\": 1539897200,\n      \"last_closed_by\": {\n      \t\"type\": \"admin\",\n        \"id\": \"325432652\",\n        \"name\": \"Tom Smith\",\n        \"email\": \"tom@example.com\"\n      },\n      \"count_reopens\": 3,\n      \"count_assignments\": 2,\n      \"count_conversation_parts\": 67\n    }, \n    \n    # list of conversaionts\n\n  ],\n  \"pages\": {\n    \"next\": \"https://api.intercom.io/conversations?per_page=20&page=2\",\n    \"page\": 1,\n    \"per_page\": 20,\n    \"total_pages\": 77,\n    \"type\": \"pages\"\n  }\n}\n\nintercom.conversations.find_all(:type => 'admin', :id => 25, :open => true)\n\n<?php\n$intercom->conversations->getConversations([\n    \"type\" => \"admin\",\n    \"admin_id\" => \"891290\",\n    \"open\" => false\n]);\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"type\", \"admin\");\nparams.put(\"admin_id\", \"1\");\nConversationCollection conversations = Conversation.list(params);\nwhile (conversations.hasNext()) {\n  Conversation conversation = conversations.next();\n}\n\n\nYou can fetch a list of all conversations.\n\nRequest Query Parameters\nParameter\tType\tRequired?\tDescription\norder\tString\tNo\tReturn the conversations in ascending (asc) or descending (desc) order. Defaults to desc. If you provide an invalid value, we default to asc.\nsort\tString\tNo\tReturn the conversation sorted by their created_at, updated_at, or waiting_since timestamp values. Defaults to updated_at.\nCONVERSATIONS NOT SHOWING WITH WAITING_SINCE SORTING\n\nIf a teammate was the last person to reply, or the conversation is closed, then those conversations will not show up on this list. This is to ensure you have an easy way of identifying and prioritizing those customers who have been waiting longest.\n\nResponse\n\nA paginated list of Conversations is returned, without the conversation_parts object.\n\nRETRIEVING CONVERSATION PARTS\n\nYou must retrieve a single conversation using the conversation's id to return a conversation with the conversation_part array and objects included."
  },
  {
    "title": "Search for conversations",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/conversations/search-for-conversations/",
    "html": "Search for conversations\n\nYou can search for multiple conversations by the value of their attributes in order to fetch exactly which ones you want.\n\nTo search for conversations, you need to send a POST request to https://api.intercom.io/conversations/search. This will accept a query object in the body which will define your filters in order to search for conversations.\n\nSearch with single filter\n\nYou should provide the following parameters within a query object:\n\nParameter\tRequired?\tDescription\nfield\tYes\tThe fields associated to a conversation that you can search for. See all accepted fields.\noperator\tYes\tThe operator that you want to compare by. See all accepted operators below.\nvalue\tYes\tThe value you want to search by.\nSearch with multiple filters\n\nYou can search with multiple filters by combining a list of single filter objects within a value array and saying whether you want to ensure all given values match (AND), or only one of these match (OR). The query object should contain these parameters.\n\nParameter\tRequired?\tDescription\noperator\tYes\tThe operator (AND or OR) by which to query the combined values.\nvalue\tYes\tAn array of single query objects.\nONLY CHECKING IF ONE VALUE MATCHES?\n\nIf you're only using OR to check that one matches out of the values, you could instead use IN as the operator in a single filter query. You could also use NIN to say that it does not match one of the values.\n\nNESTING & LIMITATIONS\n\nYou can nest these filters in order to get even more granular insights that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4).\\There are some limitations to the amount of multiple's there can be:\\_ There's a limit of max 2 nested filters_ There's a limit of max 15 filters for each AND or OR group\n\nExample Request (Single Filter)\nRequest\n{ \\\"query\\\":  {    \\\"field\\\": \\\"updated_at\\\",    \\\"operator\\\": \\\">\\\",    \\\"value\\\": 1560436784  }}\n\nExample Request (Multiple Filters)\njsonjson\n{ \\\"query\\\":  {    \\\"operator\\\": \\\"AND\\\",    \\\"value\\\": [      {        \\\"field\\\": \\\"statistics.time_to_admin_reply\\\",        \\\"operator\\\": \\\">\\\",        \\\"value\\\": 1000      },       {        \\\"field\\\": \\\"admin_assignee_id\\\",        \\\"operator\\\": \\\"=\\\",        \\\"value\\\": \\\"1627383\\\"      },      {        \\\"field\\\": \\\"open\\\",        \\\"operator\\\": \\\"=\\\",        \\\"value\\\": true      }    ]  }}\n\n{ \\\"query\\\":  {    \\\"field\\\": \\\"tags\\\",    \\\"operator\\\": \\\"IN\\\",    \\\"value\\\": [\\\"feature-request\\\", \\\"bug\\\", \\\"confusion\\\"]  }}\n\nExample Request (Nested Filters)\nRequest\n{ \\\"query\\\":  {    \\\"operator\\\": \\\"AND\\\",    \\\"value\\\": [      {        \\\"operator\\\": \\\"OR\\\",        \\\"value\\\": [          {            \\\"field\\\": \\\"updated_at\\\",            \\\"operator\\\": \\\">\\\",            \\\"value\\\": 1560436650          },           {            \\\"field\\\": \\\"conversation_rating.rating\\\",            \\\"operator\\\": \\\"=\\\",            \\\"value\\\": 1          }        ]      },      {        \\\"operator\\\": \\\"OR\\\",        \\\"value\\\": [          {            \\\"field\\\": \\\"updated_at\\\",            \\\"operator\\\": \\\">\\\",            \\\"value\\\": 1560436650          },           {            \\\"field\\\": \\\"conversation_rating.rating\\\",            \\\"operator\\\": \\\"=\\\",            \\\"value\\\": 2          }        ]      }    ]  }}\n\nExample Errors\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n      {\n        \"code\": \"bad_request\",\n        \"message\": \"bad 'random_param' parameter\"\n      }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_query\",\n      \"message\": \"Invalid query. Ensure 'field', 'operator', 'value' are present for field queries. Ensure 'operator' and 'value' for composite queries.\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_value\",\n      \"message\": \"123 is not a valid string\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_field\",\n      \"message\": \"not_a_field is not a valid field\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_values\",\n      \"message\": \"Value depth exceeds 10 items\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_value\",\n      \"message\": \"Number of elements in composite query is greater than 15, please try again with a smaller list\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_operator\",\n      \"message\": \"Composite operators must be of type AND or OR \"\n    }\n  ]\n}\n\nAccepted Fields\n\nMost keys listed as part of the The conversation model is searchable, whether writeable or not. The value you search for has to match the accepted type, otherwise the query will fail (ie. as created_at accepts a date, the value cannot be a string such as \"foorbar\").\n\nField\tType\nid\tString\ncreated_at\tDate (UNIX timestamp)\nupdated_at\tDate (UNIX timestamp)\nsource.type\tString\nsource.id\tString\nsource.delivered_as\tString\nsource.subject\tString\nsource.body\tString\nsource.author.id\tString\nsource.author.type\tString\nsource.author.name\tString\nsource.author.email\tString\nsource.url\tString\ncontact_ids\tString\nteammate_ids\tString\nadmin_assignee_id\tString\nteam_assignee_id\tString\nchannel_initiated\tString Accepted fields are conversation, push, facebook, twitter and email.\nopen\tBoolean\nread\tBoolean\nstate\tString\nwaiting_since\tDate (UNIX timestamp)\nsnoozed_until\tDate (UNIX timestamp)\ntag_ids\tString\npriority\tString\nstatistics.time_to_assignment\tInteger\nstatistics.time_to_admin_reply\tInteger\nstatistics.time_to_first_close\tInteger\nstatistics.time_to_last_close\tInteger\nstatistics.median_time_to_reply\tInteger\nstatistics.first_contact_reply_at\tDate (UNIX timestamp)\nstatistics.first_assignment_at\tDate (UNIX timestamp)\nstatistics.first_admin_reply_at\tDate (UNIX timestamp)\nstatistics.first_close_at\tDate (UNIX timestamp)\nstatistics.last_assignment_at\tDate (UNIX timestamp)\nstatistics.last_assignment_admin_reply_at\tDate (UNIX timestamp)\nstatistics.last_contact_reply_at\tDate (UNIX timestamp)\nstatistics.last_admin_reply_at\tDate (UNIX timestamp)\nstatistics.last_close_at\tDate (UNIX timestamp)\nstatistics.last_closed_by_id\tString\nstatistics.count_reopens\tInteger\nstatistics.count_assignments\tInteger\nstatistics.count_conversation_parts\tInteger\nconversation_rating.requested_at\tDate (UNIX timestamp)\nconversation_rating.replied_at\tDate (UNIX timestamp)\nconversation_rating.score\tInteger\nconversation_rating.remark\tString\nconversation_rating.contact_id\tString\nconversation_rating.admin_d\tString\nAccepted Operators\n\nThe table below shows the operators you can use to define how you want to search for the value. The operator should be put in as a string (\"=\"). The operator has to be compatible with the field's type (eg. you cannot search with > for a given string value as it's only compatible for integer's and dates).\n\nOperator\tValid Types\tDescription\n=\tAll\tEquals\n!=\tAll\tDoesn't Equal\nIN\tAll\tIn Shortcut for OR queries Values most be in Array\nNIN\tAll\tNot In Shortcut for OR ! queries Values must be in Array\n>\tInteger Date (UNIX Timestamp)\tGreater (or equal) than\n<\tInteger Date (UNIX Timestamp)\tLower (or equal) than\n~\tString\tContains\n!~\tString\tDoesn't Contain\n^\tString\tStarts With\n$\tString\tEnds With\nResponse\n\nA JSON payload with a list of Conversations Model that match the search query, with a total_count integer saying how many models have been returned."
  },
  {
    "title": "Open a conversation",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/conversations/open-a-conversation/",
    "html": "Open a conversation\nExample Request & Response\ncurljson\n$ curl 'https://api.intercom.io/conversations/<id>/parts' \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d\\n\\n{\\n  \\\"message_type\\\":\\\"open\\\",\\n  \\\"admin_id\\\": \\\"724860\\\"\\n}\n\n\nYou can open a conversation which is snoozed or closed.\n\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tAlways open.\nadmin_id\tString\tYes\tThe id of the admin which is performing the action.\nResponse\n\nThis will return the Conversation which was opened."
  },
  {
    "title": "List tags attached to a contact",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Tags/listTagsForAContact/",
    "html": "You can fetch a list of all tags that are attached to a specific contact."
  },
  {
    "title": "Remove tag from a contact",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Tags/detachTagFromContact/",
    "html": "You can remove tag from a specific contact. This will return a tag object for the tag that was removed from the contact."
  },
  {
    "title": "Add tag to a contact",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Tags/attachTagToContact/",
    "html": "You can tag a specific contact. This will return a tag object for the tag that was added to the contact."
  },
  {
    "title": "Create a conversation",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/conversations/create-a-conversation/",
    "html": "Create a conversation\nExample Request & Response\n$ curl https://api.intercom.io/conversations \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d\n\n{\n  \"from\": {\n    \"type\": \"user\",\n    \"id\": \"536e564f316c83104c000020\"\n  },\n  \"body\": \"Hey\"\n}\n\nHTTP/1.1 200 OK\n{\n  \"type\": \"user_message\",\n  \"id\": \"2001\",\n  \"created_at\": 1401917202,\n  \"body\" : \"Hey, is the new thing in stock?\",\n  \"message_type\": \"inapp\",\n  \"conversation_id\": \"36000324324\"\n}\n\nintercom.messages.create(\n  :from => {\n    :type => \"user\",\n    :id => \"536e564f316c83104c000020\"\n  },\n  :body => \"Hey\"\n)\n\n<?php\n$intercom->messages->create([\n    \"message_type\" => \"inapp\",\n    \"body\" => \"Surely, I said, knowledge is the food of the soul\",\n    \"from\" => [\n        \"type\" => \"user\",\n        \"id\" => \"5989303470da497b1babb9ef\"\n    ]\n]);\n?>\n\nUserMessage userMessage = new UserMessage()\n  .setBody(\"Hey! Is there, is there a reward?\")\n  .setUser(user);\nConversation.create(userMessage);\n\n\nYou can create a conversation that has been initiated by a contact (ie. user or lead). The conversation can be an in-app message only.\n\nSENDING FOR VISITORS\n\nYou can also send a message from a visitor by specifying their user_id or id value in the from field, along with a type field value of contact. This visitor will be automatically converted to a contact with a lead role once the conversation is created.\n\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\nfrom\tObject\tYes\tSee From Object below for more.\nbody\tString\tYes\tThe content of the message. HTML is not supported.\nFrom Object\nAttribute\tType\tRequired?\tDescription\ntype\tString\tYes\tThe role associated to the contact - user.\nid\tString\tYes\tThe identifier for the contact which is given by Intercom.\nResponse\n\nThis will return the Message model that has been created."
  },
  {
    "title": "Detach a contact from a group conversation",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/conversations/deleting-from-group-conversations/",
    "html": "Detach a contact from a group conversation\nExample Request & Response\ncurlhttp\n$ curl 'https://api.intercom.io/conversations/<conversation_id>/customers/<contact_id>' \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d\\n\\n{\\n  \\\"admin_id\\\": \\\"781345\\\"\\n}\n\n\nRemoves a Contact from a group conversation.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nconversation_id\tString\tYes\tThe identifier for the conversation as given by Intercom.\ncontact_id\tString\tYes\tThe identifier for the contact as given by Intercom.\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\nadmin_id\tString\tYes\tThe id of the admin who is performing the action.\nResponse\n\nThis will return the Contact who was detached from the conversation."
  },
  {
    "title": "Close a conversation",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/conversations/close-a-conversation/",
    "html": "Close a conversation\nExample Request & Response\ncurljson\n$ curl https://api.intercom.io/conversations/<id>/parts\\n-X POST\\n-H 'Authorization:Bearer <Your access token>'\\n-H 'Accept:application/json'\\n-H 'Content-Type:application/json' -d\\n\\n{ \\n  \\\"message_type\\\": \\\"close\\\",\\n  \\\"type\\\": \\\"admin\\\",\\n  \\\"admin_id\\\": 5784329,\\n  \\\"body\\\": \\\"Closed conversation because of X.\\\"\\n}\n\n\nYou can close a conversation.\n\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Body Parameters\nParameter\tType\tRequired?\tDescripton\nmessage_type\tString\tYes\tAlways close.\ntype\tString\tYes\tAlways admin.\nadmin_id\tString\tYes\tThe id of the admin who is performing the action.\nbody\tString\tNo\tOptionally you can leave a message in the conversation to provide additional context to the user and other teammates.\nResponse\n\nThis will return the Conversation that has been closed."
  },
  {
    "title": "Assign a conversation",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/conversations/assign-a-conversation/",
    "html": "Assign a conversation\nExample Request & Response (Assigning to Admin)\ncurljson\n$ curl https://api.intercom.io/conversations/{id}/parts \\\\-X POST \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json' \\\\-H 'Content-Type:application/json' -d{  \\\"type\\\": \\\"admin\\\",  \\\"admin_id\\\": \\\"814860\\\",  \\\"assignee_id\\\": \\\"530165\\\",  \\\"message_type\\\": \\\"assignment\\\",  \\\"body\\\": \\\"Reassigning for X reason.\\\",}\n\nExample Request & Response (Auto Assignment)\ncurljson\n$ curl 'https://api.intercom.io/conversations/{id}/run_assignment_rules'-X POST -H 'Authorization: Bearer <Your access token>' -H 'Accept: application/json' -H 'Content-Type: application/json'\n\n\nYou can assign a conversation to an admin and/or team. You can also let it be automatically assigned following assignment rules.\n\nRequest Path Parameters\nParameter\tRequired?\tDescription\nid\tYes\tThe identifier for the conversation as given by Intercom.\nrun_assignment_rules\tNo\tRuns through all assignment rules created in the Intercom Inbox product for a given workspace.\nRequest Body Parameters\n\nNo body parameters are required when auto assigning conversations using the {id}/run_assignment_rules path parameter.\n\nArgument\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tAlways assignment.\ntype\tString\tYes\tAccepts admin or team.\nadmin_id\tString\tYes\tThe id of the admin who is performing the action.\nassignee_id\tString\tYes\tThe id of the admin or team which will be assigned the conversation. A conversation can be assigned both an admin and a team. Set 0 if you want this assign to no admin or team (ie. Unassigned).\nbody\tString\tNo\tOptionally you can leave a note in the conversation for additional context to other teammates.\nResponse\n\nThis will return the Conversation that has been assigned."
  },
  {
    "title": "Update a section",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/help-center/update-a-section/",
    "html": "Update a section\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/sections/<id> \\\\-X PUT \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json'-H 'Content-Type: application/json' -d{  \\\"name\\\": \\\"New title\\\",  \\\"translated_content\\\": {    \\\"type\\\": \\\"group_translated_content\\\",    \\\"es\\\": {      \\\"type\\\": \\\"group_content\\\",      \\\"name\\\": \\\"Nuevo título\\\"    }  }}\n\n\nYou can update the details of a single section by making a PUT request to https://api.intercom.io/help_center/sections/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the section which is given by Intercom.\nRequest Body Parameters\nAttribute\tType\tRequired?\tDescription\nname\tString\tNo\tThe name of the section. For multilingual collections, this will be the name of the default language's content.\nparent_id\tString\tNo\tThe id for the collection this section will be within.\ntranslated_content\tObject\tNo\tA Group Translated Content Object whereby you can specify multiple multilingual collections to be created.\nResponse\n\nThis will return a Section object of the section you just updated."
  },
  {
    "title": "Update a collection",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/help-center/update-a-collection/",
    "html": "Update a collection\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/collection/<id> \\\\-X PUT \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json'-H 'Content-Type: application/json' -d{  \\\"name\\\": \\\"New title\\\",  \\\"translated_content\\\": {    \\\"es\\\": {      \\\"name\\\": \\\"Nuevo título\\\"    }  }}\n\n\nYou can update the details of a single collection by making a PUT request to https://api.intercom.io/help_center/collection/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the collection which is given by Intercom.\nRequest Body Parameters\nAttribute\tType\tRequired?\tDescription\nname\tString\tNo\tThe name of the collection. For multilingual collections, this will be the name of the default language's content.\ndescription\tString\tNo\tThe description of the collection. For multilingual articles, this will be the description of the default language's content.\ntranslated_content\tObject\tNo\tA Group Translated Content Object whereby you can specify multiple multilingual collections to be created.\nResponse\n\nThis will return a Collection Model of the collection you just updated."
  },
  {
    "title": "Retrieve a collection",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/help-center/retrieve-a-collection/",
    "html": "Retrieve a collection\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/collections/<id> \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can fetch the details of a single collection by making a GET request to https://api.intercom.io/help_center/collections/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the collection which is given by Intercom.\nResponse\n\nThis will return a Collection Model."
  },
  {
    "title": "List all sections",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/help-center/list-all-sections/",
    "html": "List all sections\nExample Request & Response (Single Language Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/sections \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can fetch a list of all sections by making a GET request to https://api.intercom.io/help_center/sections.\n\nResponse\nKey\tType\tDescription\ntype\tString\tThe type of object - list.\npages\tObject\tA Pages object with the information needed to paginate through sections.\ntotal_count\tInteger\tA count of the total number of sections.\ndata\tArray\tAn array of Section objects\nHOW ARE THE SECTIONS SORTED AND ORDERED?\n\nSections will be returned in descending order on the updated_at attribute. This means if you need to iterate through results then we'll show the most recently updated sections first."
  },
  {
    "title": "Retrieve a section",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/help-center/retrieve-a-section/",
    "html": "Retrieve a section\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/sections/<id> \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can fetch the details of a single section by making a GET request to https://api.intercom.io/help_center/sections/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the section which is given by Intercom.\nResponse\n\nThis will return a This will return a Section object."
  },
  {
    "title": "Delete a section",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/help-center/delete-a-section/",
    "html": "Delete a section\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/sections/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can delete a single section by making a DELETE request to https://api.intercom.io/help_center/sections/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the section which is given by Intercom.\nResponse\nKey\tType\tDescription\nid\tString\tThe unique identifier for the section which you provided in the URL.\nobject\tString\tThe type of object which was deleted - section.\ndeleted\tBoolean\tWhether the section was deleted successfully or not."
  },
  {
    "title": "List all collections",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/help-center/list-all-collections/",
    "html": "List all collections\nExample Request & Response (Single Language Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/collections \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can fetch a list of all collections by making a GET request to https://api.intercom.io/help_center/collections.\n\nResponse\nKey\tType\tDescription\ntype\tString\tThe type of object - list.\npages\tObject\tA Pages object with the information needed to paginate through collections.\ntotal_count\tInteger\tA count of the total number of collections.\ndata\tArray\tAn array of Collection objects.\nHOW ARE THE COLLECTIONS SORTED AND ORDERED?\n\nCollections will be returned in descending order on the updated_at attribute. This means if you need to iterate through results then we'll show the most recently updated collections first."
  },
  {
    "title": "Open a conversation",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/conversations/open-a-conversation/",
    "html": "Open a conversation\nExample Request & Response\ncurljson\n$ curl 'https://api.intercom.io/conversations/<id>/parts' \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d\\n\\n{\\n  \\\"message_type\\\":\\\"open\\\",\\n  \\\"admin_id\\\": \\\"724860\\\"\\n}\n\n\nYou can open a conversation which is snoozed or closed.\n\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tAlways open.\nadmin_id\tString\tYes\tThe id of the admin which is performing the action.\nResponse\n\nThis will return the Conversation which was opened."
  },
  {
    "title": "Canvas",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/responseobjects/canvas/",
    "html": "Canvas\nDescription\n\nYou have to respond to the majority of requests with a canvas object. This will tell us what UI to show for your app.\n\nA canvas can either be static (meaning we send you the next request only when an action takes place) or live (meaning we send you the next request when someone views the app).\n\nA static canvas needs a Content Object which will contain the components to show.\nA live canvas needs a content_url which we we will make the Live Canvas requests to when the app is viewed. This is only possible for apps viewed or used in the Messenger.\nAttributes\nKey\tType\tCanvas Type\tDescription\ncontent\tobject\tStatic\tThe Content that will be shown as the UI of the app. Max Size is 64KB.\ncontent_url\tstring\tLive\tThe URL which we make Live Canvas requests to. You must respond to these with a Content Object. Max size is 64KB.\nstored_data\tobject\tStatic, Live\tOptional Stored Data that you want to be returned in the next sent request. Max Size is 64KB.\nExample Objects\n{\n  canvas: {\n    content: {\n      components: [\n        {\n          \"type\": \"text\",\n          \"text\": \"This is a text component.\"\n        }\n      ]\n    },\n    stored_data: { \"key\": \"value\" } //Can be more than one pair \n  }\n}\n\n{\n  canvas: {\n    content_url: \"https://messengerapp.com/get-content-here\",\n    stored_data: { \"key\": \"value\" } //Can be more than one pair \n  }\n}\n"
  },
  {
    "title": "Retrieve a conversation",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/conversations/retrieve-a-conversation/",
    "html": "Retrieve a conversation\nExample Request & Response\n$ curl https://api.intercom.io/conversations/<id> \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"1911149811\",\n    \"created_at\": 1539897198,\n    \"updated_at\": 1540393270,\n    \"source\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\",\n        \"redacted\": false\n    },\n    \"contacts\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"teammates\": [\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    ],\n    \"admin_assignee_id\": \"814860\",\n    \"team_assignee_id\": null,\n    \"custom_attributes\": {\n      \"issue_type\": \"Billing\",\n      \"priority\": \"High\"\n    },\n    \"topics\": {\n        \"type\": \"topic.list\",\n        \"topics\": [\n            {\n                \"type\": \"topic\"\n                \"name\": \"Example Topic 1\",\n                \"id\": 839\n            }\n        ],\n        \"total_count\": 1\n    },\n    \"open\": true,\n    \"state\": \"open\",\n    \"read\": true,\n    \"waiting_since\": 64654125776\n    \"snoozed_until\": null,\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\",\n    },\n    \"first_contact_reply\": {\n    \t\"created_at\": 1539897198\n    \t\"type\": \"conversation\",\n    \t\"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"priority\": \"not_priority\",\n    \"sla_applied\": {\n    \t\"sla_name\": \"VIP customer <5m\",\n      \"sla_status\": \"missed\",\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"contact\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null,\n            \"name\": null,\n            \"email\": null\n        }\n    },\n    \"statistics\": {\n      \"time_to_assignment\": 2310,\n      \"time_to_admin_reply\": 2408,\n      \"time_to_first_close\": 4915 ,\n      \"time_to_last_close\": 5125,\n      \"median_time_to_reply\": 321,\n      \"first_contacat_reply_at\": 1539897200,\n      \"first_assignment_at\": 1539897200,\n      \"first_admin_reply_at\": 1539897200,\n      \"first_close_at\": 1539897200,\n      \"last_assignment_at\": 1539897200,\n      \"last_assignment_admin_reply_at\": 1539897200,\n      \"last_contact_reply_at\": 1539897200,\n      \"last_admin_reply_at\": 1539897200,\n      \"last_close_at\": 1539897200,\n      \"last_closed_by\": {\n      \t\"type\": \"admin\",\n        \"id\": \"325432652\",\n        \"name\": \"Tom Smith\",\n        \"email\": \"tom@example.com\"\n      },\n      \"count_reopens\": 3,\n      \"count_assignments\": 2,\n      \"count_conversation_parts\": 67\n    },\n    \"conversation_parts\": {\n        \"conversation_parts\": [\n            {\n                \"assigned_to\": null,\n                \"attachments\": [],\n                \"author\": {\n                    \"id\": \"815309\",\n                    \"type\": \"bot\"\n                },\n                \"body\": \"<p>Test_App typically replies in a few hours.</p>\",\n                \"created_at\": 1539897200,\n                \"external_id\": null,\n                \"id\": \"2202737122\",\n                \"notified_at\": 1539897200,\n                \"part_type\": \"comment\",\n                \"type\": \"conversation_part\",\n                \"updated_at\": 1539897200,\n                \"redacted\": false\n            },\n          #List of conversation parts...\n        ],\n        \"total_count\": 67,\n        \"type\": \"conversation_part.list\"\n    }    \n}\n\nintercom.conversations.find(:id => '147')\n\n<?php\n$intercom->conversations->getConversation(\"10957850396\");\n?>\n\nConversation conversation = Conversation.find(\"147\");\n\nConversationMessage message =\n  conversation.getConversationMessage();\n\nConversationPartCollection parts =\n  conversation.getConversationPartCollection();\n\nList<ConversationPart> list = parts.getPageItems();\n\nfor (ConversationPart part : list) {\n  String partType = part.getPartType();\n  Author author = part.getAuthor();\n  String body = part.getBody();\n}\n\nConversationPart recent =\n  conversation.getMostRecentConversationPart();\n\nAdmin assignee =\n  conversation.getAssignee();\n\nUser user =\n  conversation.getUser();\n\n\nYou can fetch the details of a single conversation.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Query Parameters\nParameter\tType\tRequired?\tDescription\ndisplay_as\tString\tNo\tSet to plaintext to retrieve conversation messages in plain text.\nResponse\n\nThis will return a single Conversation model with all its conversation parts.\n\nHARD LIMIT OF 500 PARTS\n\nThe maximum number of conversation parts that can be returned via the API is 500. If you have more than that we will return the 500 most recent conversation parts."
  },
  {
    "title": "Assign a conversation",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/conversations/assign-a-conversation/",
    "html": "Assign a conversation\nExample Request & Response (Assigning to Admin)\ncurljson\n$ curl https://api.intercom.io/conversations/{id}/parts \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d\\n\\n{\\n  \\\"type\\\": \\\"admin\\\",\\n  \\\"admin_id\\\": \\\"814860\\\",\\n  \\\"assignee_id\\\": \\\"814860\\\",\\n  \\\"message_type\\\": \\\"assignment\\\",\\n  \\\"body\\\": \\\"Reassigning for X reason.\\\"\\n}\n\nExample Request & Response (Auto Assignment)\ncurljson\n$ curl 'https://api.intercom.io/conversations/{id}/run_assignment_rules'\\n-X POST \\n-H 'Authorization: Bearer <Your access token>' \\n-H 'Accept: application/json' \\n-H 'Content-Type: application/json'\\n\n\n\nYou can assign a conversation to an admin and/or team. You can also let it be automatically assigned following assignment rules.\n\nRequest Path Parameters\nParameter\tRequired?\tDescription\nid\tYes\tThe identifier for the conversation as given by Intercom.\nrun_assignment_rules\tNo\tRuns through all assignment rules created in the Intercom Inbox product for a given workspace.\nRequest Body Parameters\n\nNo body parameters are required when auto assigning conversations using the {id}/run_assignment_rules path parameter.\n\nArgument\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tAlways assignment.\ntype\tString\tYes\tAccepts admin or team.\nadmin_id\tString\tYes\tThe id of the admin who is performing the action.\nassignee_id\tString\tYes\tThe id of the admin or team which will be assigned the conversation. A conversation can be assigned both an admin and a team. Set 0 if you want this assign to no admin or team (ie. Unassigned).\nbody\tString\tNo\tOptionally you can leave a note in the conversation for additional context to other teammates.\nResponse\n\nThis will return the Conversation that has been assigned."
  },
  {
    "title": "Create a conversation",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/conversations/create-a-conversation/",
    "html": "Create a conversation\nExample Request & Response\n$ curl https://api.intercom.io/conversations \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d\n\n{\n  \"from\": {\n    \"type\": \"user\",\n    \"id\": \"536e564f316c83104c000020\"\n  },\n  \"body\": \"Hey\"\n}\n\nHTTP/1.1 200 OK\n{\n  \"type\": \"user_message\",\n  \"id\": \"2001\",\n  \"created_at\": 1401917202,\n  \"body\" : \"Hey, is the new thing in stock?\",\n  \"message_type\": \"inapp\",\n  \"conversation_id\": \"36000324324\"\n}\n\nintercom.messages.create(\n  :from => {\n    :type => \"user\",\n    :id => \"536e564f316c83104c000020\"\n  },\n  :body => \"Hey\"\n)\n\n<?php\n$intercom->messages->create([\n    \"message_type\" => \"inapp\",\n    \"body\" => \"Surely, I said, knowledge is the food of the soul\",\n    \"from\" => [\n        \"type\" => \"user\",\n        \"id\" => \"5989303470da497b1babb9ef\"\n    ]\n]);\n?>\n\nUserMessage userMessage = new UserMessage()\n  .setBody(\"Hey! Is there, is there a reward?\")\n  .setUser(user);\nConversation.create(userMessage);\n\n\nYou can create a conversation that has been initiated by a contact (ie. user or lead). The conversation can be an in-app message only.\n\nSENDING FOR VISITORS\n\nYou can also send a message from a visitor by specifying their user_id or id value in the from field, along with a type field value of contact. This visitor will be automatically converted to a contact with a lead role once the conversation is created.\n\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\nfrom\tObject\tYes\tSee Form Object below for more.\nbody\tString\tYes\tThe content of the message.HTML is not supported.\nFrom Object\nAttribute\tType\tRequired?\tDescription\ntype\tString\tYes\tThe role associated to the contact - user or contact.\nid\tString\tYes\tThe identifier for the contact which is given by Intercom.\nResponse\n\nThis will return the Message model that has been created."
  },
  {
    "title": "Redact a conversation part",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/conversations/redact-a-conversation-part/",
    "html": "Redact a conversation part\nExample Request & Response\n$ curl https://api.intercom.io/conversations/redact \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-d \n\n{\n  \"type\": <resource_type>,\n  \"conversation_id\": <conversation_id>,\n  \"conversation_part_id\": <conversation_part_id>,\n  \"source_id\": <source_id>,\n}\n\nHTTP/1.1 200 OK\n{\n    \"type\": \"conversation\",\n    \"id\": \"1911149811\",\n    \"created_at\": 1539897198,\n    \"updated_at\": 1540393270,\n    \"source\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\",\n        \"redacted\": false\n    },\n    \"contacts\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"teammates\": [\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    ],\n    \"admin_assignee_id\": \"814860\",\n    \"team_assignee_id\": null,\n    \"custom_attributes\": {\n      \"issue_type\": \"Billing\",\n      \"priority\": \"High\"\n    },\n    \"open\": true,\n    \"state\": \"open\",\n    \"read\": true,\n    \"waiting_since\": 64654125776\n    \"snoozed_until\": null,\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\",\n    },\n    \"first_contact_reply\": {\n    \t\"created_at\": 1539897198\n    \t\"type\": \"conversation\",\n    \t\"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"priority\": \"not_priority\",\n    \"sla_applied\": {\n    \t\"sla_name\": \"VIP customer <5m\",\n      \"sla_status\": \"missed\",\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"contact\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null,\n            \"name\": null,\n            \"email\": null\n        }\n    },\n    \"statistics\": {\n      \"time_to_assignment\": 2310,\n      \"time_to_admin_reply\": 2408,\n      \"time_to_first_close\": 4915 ,\n      \"time_to_last_close\": 5125,\n      \"median_time_to_reply\": 321,\n      \"first_contacat_reply_at\": 1539897200,\n      \"first_assignment_at\": 1539897200,\n      \"first_admin_reply_at\": 1539897200,\n      \"first_close_at\": 1539897200,\n      \"last_assignment_at\": 1539897200,\n      \"last_assignment_admin_reply_at\": 1539897200,\n      \"last_contact_reply_at\": 1539897200,\n      \"last_admin_reply_at\": 1539897200,\n      \"last_close_at\": 1539897200,\n      \"last_closed_by\": {\n      \t\"type\": \"admin\",\n        \"id\": \"325432652\",\n        \"name\": \"Tom Smith\",\n        \"email\": \"tom@example.com\"\n      },\n      \"count_reopens\": 3,\n      \"count_assignments\": 2,\n      \"count_conversation_parts\": 67\n    },\n    \"conversation_parts\": {\n        \"conversation_parts\": [\n            {\n                \"assigned_to\": null,\n                \"attachments\": [],\n                \"author\": {\n                    \"id\": \"815309\",\n                    \"type\": \"bot\"\n                },\n                \"body\": \"<p>Test_App typically replies in a few hours.</p>\",\n                \"created_at\": 1539897200,\n                \"external_id\": null,\n                \"id\": \"2202737122\",\n                \"notified_at\": 1539897200,\n                \"part_type\": \"comment\",\n                \"type\": \"conversation_part\",\n                \"updated_at\": 1539897200,\n                \"redacted\": false\n            },\n          #List of conversation parts...\n        ],\n        \"total_count\": 67,\n        \"type\": \"conversation_part.list\"\n    }    \n}\n\nExample Errors\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"ffa661e0-a805-4ca1-9c8f-87a926ce72bc\",\n  \"errors\": [\n    {\n      \"code\": \"parameter_not_found\",\n      \"message\": \"conversation_id is a required parameter\"\n    }\n  ]\n}\n\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"ffa661e0-a805-4ca1-9c8f-87a926ce72bc\",\n  \"errors\": [\n    {\n      \"code\": \"conversation_part_not_redactable\",\n      \"message\": \"Part can't be redacted\"\n    }\n  ]\n}\n\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"ffa661e0-a805-4ca1-9c8f-87a926ce72bc\",\n  \"errors\": [\n    {\n      \"code\": \"type_mismatch\",\n      \"message\": \"The type attribute provided should be either 'conversation_part' or 'source'\"\n    }\n  ]\n}\n\n\nYou can redact a conversation part or the source message of a conversation (as seen in the source object).\n\nWHICH PARTS AND SOURCE MESSAGES CAN I REDACT?\n\nIf you are redacting a conversation part, it must have a body.\\nIf you are redacting a source message, it must have been created by a contact.\\nWe will return a conversation_part_not_redactable error if these criteria are not met.\n\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\ntype\tString\tYes\tThe type of resource being redacted. Accepted values are conversation_part or source.\nconversation_id\tString\tYes\tThe id of the conversation.\nconversation_part_id\tString\tYes (if type: conversation_part)\tThe id of the conversation_part.\nsource_id\tString\tYes (if type: source)\tThe id of the source.\nResponse\n\nThis will return the Conversation with the Conversation Parts which have been redacted."
  },
  {
    "title": "List all conversations",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/conversations/list-conversations/",
    "html": "List all conversations\nExample Request & Response\n$ curl \\\"https://api.intercom.io/conversations?order=desc&sort=updated_at\" \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"conversation.list\",\n  \"conversations\": [\n    {\n    \"type\": \"conversation\",\n    \"id\": \"1911149811\",\n    \"created_at\": 1539897198,\n    \"updated_at\": 1540393270,\n    \"source\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"contacts\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"teammates\": [\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    ],\n    \"admin_assignee_id\": \"814860\",\n    \"team_assignee_id\": null,\n    \"custom_attributes\": {\n      \"issue_type\": \"Billing\",\n      \"priority\": \"High\"\n    },\n    \"topics\": {\n        \"type\": \"topic.list\",\n        \"topics\": [\n            {\n                \"type\": \"topic\"\n                \"name\": \"Example Topic 1\",\n                \"id\": 839\n            }\n        ],\n        \"total_count\": 1\n    },\n    \"open\": true,\n    \"state\": \"open\",\n    \"read\": true,\n    \"waiting_since\": 64654125776\n    \"snoozed_until\": null,\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\",\n    },\n    \"first_contact_reply\": {\n    \t\"created_at\": 1539897198\n    \t\"type\": \"conversation\",\n    \t\"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"priority\": \"not_priority\",\n    \"sla_applied\": {\n    \t\"sla_name\": \"VIP customer <5m\",\n      \"sla_status\": \"missed\",\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"contact\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null,\n            \"name\": null,\n            \"email\": null\n        }\n    },\n    \"statistics\": {\n      \"time_to_assignment\": 2310,\n      \"time_to_admin_reply\": 2408,\n      \"time_to_first_close\": 4915 ,\n      \"time_to_last_close\": 5125,\n      \"median_time_to_reply\": 321,\n      \"first_contact_reply_at\": 1539897200,\n      \"first_assignment_at\": 1539897200,\n      \"first_admin_reply_at\": 1539897200,\n      \"first_close_at\": 1539897200,\n      \"last_assignment_at\": 1539897200,\n      \"last_assignment_admin_reply_at\": 1539897200,\n      \"last_contact_reply_at\": 1539897200,\n      \"last_admin_reply_at\": 1539897200,\n      \"last_close_at\": 1539897200,\n      \"last_closed_by\": {\n      \t\"type\": \"admin\",\n        \"id\": \"325432652\",\n        \"name\": \"Tom Smith\",\n        \"email\": \"tom@example.com\"\n      },\n      \"count_reopens\": 3,\n      \"count_assignments\": 2,\n      \"count_conversation_parts\": 67\n    }, \n    \n    # list of conversaionts\n\n  ],\n  \"pages\": {\n    \"next\": \"https://api.intercom.io/conversations?per_page=20&page=2\",\n    \"page\": 1,\n    \"per_page\": 20,\n    \"total_pages\": 77,\n    \"type\": \"pages\"\n  }\n}\n\nintercom.conversations.find_all(:type => 'admin', :id => 25, :open => true)\n\n<?php\n$intercom->conversations->getConversations([\n    \"type\" => \"admin\",\n    \"admin_id\" => \"891290\",\n    \"open\" => false\n]);\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"type\", \"admin\");\nparams.put(\"admin_id\", \"1\");\nConversationCollection conversations = Conversation.list(params);\nwhile (conversations.hasNext()) {\n  Conversation conversation = conversations.next();\n}\n\n\nYou can fetch a list of all conversations.\n\nRequest Query Parameters\nParameter\tType\tRequired?\tDescription\norder\tString\tNo\tReturn the conversations in ascending (asc) or descending (desc) order. Defaults to desc. If you provide an invalid value, we default to asc.\nsort\tString\tNo\tReturn the conversation sorted by their created_at, updated_at, or waiting_since timestamp values. Defaults to updated_at.\nCONVERSATIONS NOT SHOWING WITH WAITING_SINCE SORTING\n\nIf a teammate was the last person to reply, or the conversation is closed, then those conversations will not show up on this list. This is to ensure you have an easy way of identifying and prioritizing those customers who have been waiting longest.\n\nResponse\nPAGINATION\n\nThe list all conversations query have a default per_page value of 60.\n\nA paginated list of Conversations is returned, without the conversation_parts object.\n\nRETRIEVING CONVERSATION PARTS\n\nYou must retrieve a single conversation using the conversation's id to return a conversation with the conversation_part array and objects included."
  },
  {
    "title": "Close a conversation",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/conversations/close-a-conversation/",
    "html": "Close a conversation\nExample Request & Response\ncurljson\n$ curl https://api.intercom.io/conversations/<id>/parts\\n-X POST\\n-H 'Authorization:Bearer <Your access token>'\\n-H 'Accept:application/json'\\n-H 'Content-Type:application/json' -d\\n\\n{ \\n  \\\"message_type\\\": \\\"close\\\",\\n  \\\"type\\\": \\\"admin\\\",\\n  \\\"admin_id\\\": 5784329,\\n  \\\"body\\\": \\\"Closed conversation because of X.\\\"\\n}\n\n\nYou can close a conversation.\n\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Body Parameters\nParameter\tType\tRequired?\tDescripton\nmessage_type\tString\tYes\tAlways close.\ntype\tString\tYes\tAlways admin.\nadmin_id\tString\tYes\tThe id of the admin who is performing the action.\nbody\tString\tNo\tOptionally you can leave a message in the conversation to provide additional context to the user and other teammates.\nResponse\n\nThis will return the Conversation that has been closed."
  },
  {
    "title": "The conversation model",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/conversations/conversation-model/",
    "html": "The conversation model\nExample Conversation Object\n{\n    \"type\": \"conversation\",\n    \"id\": \"1911149811\",\n    \"created_at\": 1539897198,\n    \"updated_at\": 1540393270,\n    \"source\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\",\n        \"redacted\": false\n    },\n    \"contacts\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"teammates\": [\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\"\n        }\n    ],\n    \"title\": \"Conversation Title\",\n    \"admin_assignee_id\": 814860,\n    \"team_assignee_id\": null,\n    \"custom_attributes\": {\n      \"issue_type\": \"Billing\",\n      \"priority\": \"High\"\n    },\n    \"topics\": {\n        \"type\": \"topic.list\",\n        \"topics\": [\n            {\n                \"type\": \"topic\"\n                \"name\": \"Example Topic 1\",\n                \"id\": 839\n            }\n        ],\n        \"total_count\": 1\n    },\n    \"open\": true,\n    \"state\": \"open\",\n    \"read\": true,\n    \"waiting_since\": 64654125776,\n    \"snoozed_until\": null,\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\",\n    },\n    \"first_contact_reply\": {\n    \t\"created_at\": 1539897198\n    \t\"type\": \"conversation\",\n    \t\"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"priority\": \"not_priority\",\n    \"sla_applied\": {\n    \t\"sla_name\": \"VIP customer <5m\",\n      \"sla_status\": \"missed\",\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"contact\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null\n        }\n    },\n    \"statistics\": {\n      \"time_to_assignment\": 2310,\n      \"time_to_admin_reply\": 2408,\n      \"time_to_first_close\": 4915 ,\n      \"time_to_last_close\": 5125,\n      \"median_time_to_reply\": 321,\n      \"first_contact_reply_at\": 1539897200,\n      \"first_assignment_at\": 1539897200,\n      \"first_admin_reply_at\": 1539897200,\n      \"first_close_at\": 1539897200,\n      \"last_assignment_at\": 1539897200,\n      \"last_assignment_admin_reply_at\": 1539897200,\n      \"last_contact_reply_at\": 1539897200,\n      \"last_admin_reply_at\": 1539897200,\n      \"last_close_at\": 1539897200,\n      \"last_closed_by\": {\n      \t\"type\": \"admin\",\n        \"id\": \"325432652\",\n        \"name\": \"Tom Smith\",\n        \"email\": \"tom@example.com\"\n      },\n      \"count_reopens\": 3,\n      \"count_assignments\": 2,\n      \"count_conversation_parts\": 67\n    },\n    \"conversation_parts\": {\n        \"conversation_parts\": [\n            {\n                \"assigned_to\": null,\n                \"attachments\": [],\n                \"author\": {\n                    \"id\": \"815309\",\n                    \"type\": \"bot\"\n                },\n                \"body\": \"<p>Test_App typically replies in a few hours.</p>\",\n                \"created_at\": 1539897200,\n                \"external_id\": null,\n                \"id\": \"2202737122\",\n                \"notified_at\": 1539897200,\n                \"part_type\": \"comment\",\n                \"type\": \"conversation_part\",\n                \"updated_at\": 1539897200,\n                \"redacted\": false\n            },\n          #List of conversation parts...\n        ],\n        \"total_count\": 67,\n        \"type\": \"conversation_part.list\"\n    }    \n}\n\n{\n   \"type\":\"conversation\",\n   \"id\":\"1122334455\",\n   \"created_at\":1567693209,\n   \"updated_at\":1568367881,\n   \"waiting_since\":1568367881,\n   \"snoozed_until\":null,\n   \"admin_assignee_id\": \"814860\",\n   \"team_assignee_id\": null,\n   \"open\":true,\n   \"state\":\"open\",\n   \"read\":true,\n   \"tags\":{\n      \"type\":\"tag.list\",\n      \"tags\":[\n\n      ]\n   },\n   \"conversation_rating\":{\n      \"rating\":null,\n      \"remark\":null,\n      \"created_at\":null,\n      \"customer\":{\n         \"type\":null,\n         \"id\":null\n      },\n      \"teammate\":{\n         \"type\":null,\n         \"id\":null\n      }\n   },\n   \"conversation_parts\":{\n      \"type\":\"conversation_part.list\",\n      \"conversation_parts\":[\n         {\n            \"type\":\"conversation_part\",\n            \"id\":\"1223445555\",\n            \"part_type\":\"comment\",\n            \"body\":\"We've removed this part of the conversation to comply with Twitter's terms and conditions. You can view the complete conversation in Intercom.\",\n            \"created_at\":1567693273,\n            \"updated_at\":1567693273,\n            \"notified_at\":1567693273,\n            \"assigned_to\":null,\n             \"author\":{\n               \"type\":\"user\",\n               \"id\":\"5310d8e7598c9a0b24000002\",\n               \"name\":\"\",\n               \"email\":\"\"\n            },\n            \"attachments\": [],\n            \"external_id\":null\n         },\n      ],\n      \"total_count\":1\n   },\n   \"customer_first_reply\":{\n      \"created_at\":1567693209,\n      \"type\":\"twitter\",\n      \"url\":\"\"\n   },\n   \"conversation_message\":{\n      \"type\":\"twitter\",\n      \"id\":\"409820079\",\n      \"delivered_as\":\"customer_initiated\",\n      \"subject\":\"We've removed this part of the conversation to comply with Twitter's terms and conditions. You can view the complete conversation in Intercom.\",\n      \"body\":\"We've removed this part of the conversation to comply with Twitter's terms and conditions. You can view the complete conversation in Intercom.\",\n      \"author\":{\n         \"type\":\"user\",\n         \"id\":\"5310d8e7598c9a0b24000002\",\n         \"name\":\"\",\n         \"email\":\"\"\n      },\n      \"attachments\":[\n\n      ],\n      \"url\":\"\"\n   },\n   \"customers\":[\n      {\n         \"type\":\"user\",\n         \"id\":\"5310d8e7598c9a0b24000002\"\n      }\n   ],\n   \"user\":{\n      \"type\":\"user\",\n      \"id\":\"5310d8e7598c9a0b24000002\"\n   }\n}\n\n\nConversations are how you can communicate with users in Intercom. They are created when a contact replies to an outbound message, or when one admin directly sends a message to a single contact.\n\nConversation Object\nKey\tType\tDescription\ntype\tString\tAlways conversation.\nid\tString\tThe id representing the conversation.\ncreated_at\tTimestamp\tThe time the conversation was created.\nupdated_at\tTimestamp\tThe last time the conversation was updated.\nsource\tObject\tThe Conversation Part that originated this conversation, which can be Contact, Admin, Campaign, Automated or Operator initiated.\ncontacts\tList\tThe list of contacts (users or leads) involved in this conversation.\nThis will only contain one customer unless more were added via the group conversation feature.\nteammates\tList\tThe list of teammates who participated in the conversation (wrote at least one conversation part).\ntitle\tString\tThe title given to the conversation.\nadmin_assignee_id\tInteger\tThe id of the admin assigned to the conversation. If it's not assigned to an admin it will return null.\nteam_assignee_id\tString\tThe id of the team assigned to the conversation. If it's not assigned to a team it will return null.\ncustom_attributes\tObject\tAn object containing the different custom attributes associated to the conversation as key-value pairs.\nopen\tBoolean\tIndicates whether a conversation is open (true) or closed (false).\nstate\tString\tCan be set to \"open\", \"closed\" or \"snoozed\".\nread\tBoolean\tIndicates whether a conversation has been read.\nwaiting_since\tTimestamp\tThe last time a Contact responded to an Admin.\nIn other words, the time a customer started waiting for a response. Set to null if last reply is from an Admin.\nsnoozed_until\tTimestamp\tIf set this is the time in the future when this conversation will be marked as open.\ni.e. it will be in a snoozed state until this time.\ntags\tList\tA list of tags objects associated with the conversation.\nfirst_contact_reply\tObject\tAn object containing information on the first users message. For a contact initiated message this will represent the users original message.\npriority\tString\tIf marked as priority, it will return priority or else not_priority.\nsla_applied\tObject\tThe SLA Applied object contains the details for which SLA has been applied to this conversation.\nconversation_rating\tObject\tThe Conversation Rating object which contains information on the rating and/or remark added by a Contact and the Admin assigned to the conversation.\nstatistics\tObject\tA Statistics object containing all information required for reporting, with timestamps and calculated metrics.\nconversation_parts\tList\tA list of Conversation Part objects for each part message in the conversation. This is only returned when Retrieving a Conversation, and ignored when Listing all Conversations. There is a limit of 500 parts.\nSource object\nAttribute\tType\tDescription\ntype\tString\tThis includes conversation, push, facebook, twitter and email.\nid\tString\tThe id representing the message.\ndelivered_as\tString\tThe conversation's initiation type.\nPossible values are customer_initiated, campaigns_initiated (legacy campaigns), operator_initiated (Custom bot), automated (Series and other outbounds with dynamic audience message) and admin_initiated (fixed audience message, ticket initiated by an admin, group email).\nsubject\tString\tOptional. The message subject.\nFor Twitter, this will show a generic message regarding why the subject is obscured.\nbody\tString\tThe message body, which may contain HTML.\nFor Twitter, this will show a generic message regarding why the body is obscured.\nauthor\tObject\tThe object who initiated the conversation, which can be a Contact, Admin or Team. Bots and campaigns send messages on behalf of Admins or Teams.\nFor Twitter, this will be blank.\nattachments\tList\tA list of attachments for the part.\nurl\tString\tThe URL where the conversation was started.\nFor Twitter, Email, and Bots, this will be blank.\nredacted\tBoolean\tWhether or not the source message has been redacted. Only applicable for contact initiated messages.\nContact Object\nAttribute\tType\tDescription\ntype\tString\tThis can be either a user or a lead.\nid\tString\tThe ID for the user or lead.\nTeammate Object\nAttribute\tType\tDescription\ntype\tString\tCurrently this will always be of type admin. Conversations not rated will return null.\nid\tString\tThe ID of the Admin.\nFirst Contact Reply Object\nAttribute\tType\tDescription\ntype\tString\tOver which channel did the first reply occur. Options include conversation, push, facebook, twitter and email.\nurl\tString\tThe URL where the first reply originated from.\nFor Twitter and Email replies, this will be blank.\ncreated_at\tTimestamp\tThe time the users messages was created. This is in unix timestamp format.\nConversation Rating Object\nAttribute\tType\tDescription\nrating\tInteger\tThe rating, between 1 and 5, for the conversation.\nremark\tString\tAn optional field to add a remark to correspond to the number rating.\ncreated_at\tTimestamp\tThe time the rating was requested in the conversation being rated.\ncontact\tObject\tAn object containing the ID and type of the Contact.\nteammate\tObject\tAn object containing the ID and type of the Intercom teammate associated with the conversation when it was rated.\nSLA Object\nAttribute\tType\tDescription\nsla_name\tString\tThe name of the SLA as given by the teammate when it was created.\nsla_status\tString\tOne of \"hit\", \"missed\", \"cancelled\", or \"active\".\nStatistics Object\nAttribute\tType\tDescription\ntime_to_assignment\tInteger\tDuration until last assignment before first admin reply. In seconds.\ntime_to_admin_reply\tInteger\tDuration until first admin reply. Subtracts out of business hours. In seconds.\ntime_to_first_close\tInteger\tDuration until conversation was closed first time. Subtracts out of business hours. In seconds.\ntime_to_last_close\tInteger\tDuration until conversation was closed last time. Subtracts out of business hours. In seconds.\nmedian_time_to_reply\tInteger\tMedian based on all admin replies after a contact reply. Subtracts out of business hours. In seconds.\nfirst_contact_reply_at\tTimestamp\tTime of first text conversation part from a contact.\nfirst_assignment_at\tTimestamp\tTime of first assignment after first_contact_reply_at.\nfirst_admin_reply_at\tTimestamp\tTime of first admin reply after first_contact_reply_at.\nfirst_close_at\tTimestamp\tTime of first close after first_contact_reply_at.\nlast_assignment_at\tTimestamp\tTime of last assignment after first_contact_reply_at.\nlast_assignment_admin_reply_at\tTimestamp\tTime of first admin reply since most recent assignment.\nlast_contact_reply_at\tTimestamp\tTime of the last conversation part from a contact.\nlast_admin_reply_at\tTimestamp\tTime of the last conversation part from an admin.\nlast_close_at\tTimestamp\tTime of the last conversation close.\nlast_closed_by\tObject\tThe last admin who closed the conversation. Returns a reference to an Admin object.\ncount_reopens\tInteger\tNumber of reopens after first_contact_reply_at.\ncount_assignments\tInteger\tNumber of assignments after first_contact_reply_at.\ncount_conversations_parts\tInteger\tTotal number of conversation parts.\nConversation Part Object\n\n🚧\n\nConversation Parts are not returned when listing or searching for all conversations, only when retrieving a single conversation. There is also a limit of 500 parts.\n\nAttribute\tType\tDescription\ntype\tString\tAlways conversation_part.\nid\tString\tThe id representing the conversation part.\npart_type\tString\tThe type of conversation part.\nbody\tString\tThe message body, which may contain HTML.\nFor Twitter, this will show a generic message regarding why the body is obscured.\ncreated_at\tTimestamp\tThe time the conversation part was created.\nupdated_at\tTimestamp\tThe last time the conversation part was updated.\nnotified_at\tTimestamp\tThe time the user was notified with the conversation part.\nassigned_to\tString\tThe id of the admin that was assigned the conversation by this conversation_part (null if there has been no change in assignment.)\nauthor\tString\tThe type of individual that sent the message (user, admin or bot) and their related id.\nFor Twitter, this will be blank.\nattachments\tList\tA list of attachments for the part.\nredacted\tBoolean\tWhether or not a conversation part has been redacted.\nConversation Part Types\nType\tDescription\ncomment\tStandard reply from customer or admin to a conversation.\nnote\tA note created by an admin on the conversation. A note will only be viewable as an admin.\nnote_and_reopen\tAdd a note and reopen the conversations in the one action.\nassignment\tAn assignment of the conversation to an admin, or Nobody.\nopen\tIdentifies a conversation has been opened.\nclose\tIdentifies a conversation has been closed.\naway_mode_assignment\tConversation has been assigned due to the admin being in away mode.\nparticipant_added\tA participant has been added to a group conversation.\nparticipant_removed\tA participant has been removed from a group conversation.\nconversation_rating_changed\tA conversation rating has been changed, not this can only occur before the rating has been submitted. Once it has been submitted it cannot be changed.\nconversation_rating_remark_added\tA conversation remark has been added to the conversation.\nsnoozed\tA conversation has been snoozed.\nunsnoozed\tA conversation has been unsnoozed.\nassign_and_unsnooze\tAssign a conversation and unsnooze it in one action..\ntimer_unsnooze\tUnsnooze a conversation after a set time."
  },
  {
    "title": "Create a section",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/help-center/create-a-section/",
    "html": "Create a section\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/sections \\\\-X POST \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json'-H 'Content-Type: application/json' -d{  \\\"name\\\": \\\"Section 1\\\",  \\\"parent_id\\\": \\\"1\\\",  \\\"translated_content\\\": {    \\\"es\\\": {      \\\"name\\\": \\\"Sección 1\\\",      \\\"description\\\": \\\"Spanish description\\\"    }  }}\n\n\nYou can create a new section by making a POST request to https://api.intercom.io/help_center/sections.\n\nRequest Body Parameters\nKey\tType\tRequired?\tDescription\nname\tString\tYes\tThe name of the collection. For multilingual collections, this will be the name of the default language's content.\nparent_id\tString\tYes\tThe id for the collection this section will be within.\ntranslated_content\tString\tNo\tA Group Translated Content Object whereby you can specify multiple multilingual collections to be created.\nResponse\n\nThis will return a Section Model of the section you just created."
  },
  {
    "title": "Event",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/responseobjects/event/",
    "html": "Event\nDescription\n\nThe event object enables Intercom to know more about the actions that took place in your app. Currently, you can only tell us when an app's flow has been completed.\n\nAttributes\nKey\tType\tDescription\ntype\tstring\tWhat action took place. The only value currently accepted is completed.\nExample Object\nevent: { \"type\": \"completed\" } // Optional. Recorded by Intercom.\n"
  },
  {
    "title": "Delete a collection",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/help-center/delete-a-collection/",
    "html": "Delete a collection\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/collections/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can delete a single collection by making a DELETE request to https://api.intercom.io/help_center/collections/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the collection which is given by Intercom.\nResponse\nKey\tType\tDescription\nid\tString\tThe unique identifier for the collection which you provided in the URL.\nobject\tString\tThe type of object which was deleted - collection.\ndeleted\tBoolean\tWhether the collections was deleted successfully or not."
  },
  {
    "title": "Content",
    "url": "https://developers.intercom.com/docs/references/2.9/canvas-kit/responseobjects/content/",
    "html": "Content\nDescription\n\nThe content object is where you specify the UI of your app. You provide us with a set of components in a components array that we then render.\n\nThe content object should usually be returned within the canvas object. If you're responding to a Live Canvas request however, then you should only respond with the content object.\n\nAttributes\nKey\tType\tDescription\ncomponents\tarray\tThe list of components to be rendered. See the components further in this reference.\nExample Object\n{\n  content: {\n    components: [\n      {\n        \"type\": \"text\",\n        \"id\": \"component-1\",\n        \"text\": \"This is the first component\",\n        \"align\": \"center\",\n        \"style\": \"header\"\n      },\n      {\n        \"type\": \"button\",\n        \"id\": \"component-2\",\n        \"label\": \"This is the second component\",\n        \"action\": {\n          \"type\": \"submit\"\n        }\n      }\n    ]\n  }\n}\n"
  },
  {
    "title": "Search for conversations",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/conversations/search-for-conversations/",
    "html": "Search for conversations\n\nYou can search for multiple conversations by the value of their attributes in order to fetch exactly which ones you want.\n\nTo search for conversations, you need to send a POST request to https://api.intercom.io/conversations/search. This will accept a query object in the body which will define your filters in order to search for conversations.\n\nSearch with single filter\n\nYou should provide the following parameters within a query object:\n\nParameter\tRequired?\tDescription\nfield\tYes\tThe fields associated to a conversation that you can search for. See all accepted fields.\noperator\tYes\tThe operator that you want to compare by. See all accepted operators below.\nvalue\tYes\tThe value you want to search by.\nSearch with multiple filters\n\nYou can search with multiple filters by combining a list of single filter objects within a value array and saying whether you want to ensure all given values match (AND), or only one of these match (OR). The query object should contain these parameters.\n\nParameter\tRequired?\tDescription\noperator\tYes\tThe operator (AND or OR) by which to query the combined values.\nvalue\tYes\tAn array of single query objects.\nONLY CHECKING IF ONE VALUE MATCHES?\n\nIf you're only using OR to check that one matches out of the values, you could instead use IN as the operator in a single filter query. You could also use NIN to say that it does not match one of the values.\n\nNESTING & LIMITATIONS\n\nYou can nest these filters in order to get even more granular insights that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4).\\There are some limitations to the amount of multiple's there can be:\\_ There's a limit of max 2 nested filters_ There's a limit of max 15 filters for each AND or OR group\n\nExample Request (Single Filter)\nRequest\n{ \\\"query\\\":  {    \\\"field\\\": \\\"updated_at\\\",    \\\"operator\\\": \\\">\\\",    \\\"value\\\": 1560436784  }}\n\nExample Request (Multiple Filters)\njsonjson\n{ \\\"query\\\":  {    \\\"operator\\\": \\\"AND\\\",    \\\"value\\\": [      {        \\\"field\\\": \\\"statistics.time_to_admin_reply\\\",        \\\"operator\\\": \\\">\\\",        \\\"value\\\": 1000      },       {        \\\"field\\\": \\\"admin_assignee_id\\\",        \\\"operator\\\": \\\"=\\\",        \\\"value\\\": \\\"1627383\\\"      },      {        \\\"field\\\": \\\"open\\\",        \\\"operator\\\": \\\"=\\\",        \\\"value\\\": true      }    ]  }}\n\n{ \\\"query\\\":  {    \\\"field\\\": \\\"tags\\\",    \\\"operator\\\": \\\"IN\\\",    \\\"value\\\": [\\\"feature-request\\\", \\\"bug\\\", \\\"confusion\\\"]  }}\n\nExample Request (Nested Filters)\nRequest\n{ \\\"query\\\":  {    \\\"operator\\\": \\\"AND\\\",    \\\"value\\\": [      {        \\\"operator\\\": \\\"OR\\\",        \\\"value\\\": [          {            \\\"field\\\": \\\"updated_at\\\",            \\\"operator\\\": \\\">\\\",            \\\"value\\\": 1560436650          },           {            \\\"field\\\": \\\"conversation_rating.rating\\\",            \\\"operator\\\": \\\"=\\\",            \\\"value\\\": 1          }        ]      },      {        \\\"operator\\\": \\\"OR\\\",        \\\"value\\\": [          {            \\\"field\\\": \\\"updated_at\\\",            \\\"operator\\\": \\\">\\\",            \\\"value\\\": 1560436650          },           {            \\\"field\\\": \\\"conversation_rating.rating\\\",            \\\"operator\\\": \\\"=\\\",            \\\"value\\\": 2          }        ]      }    ]  }}\n\nExample Errors\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n      {\n        \"code\": \"bad_request\",\n        \"message\": \"bad 'random_param' parameter\"\n      }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_query\",\n      \"message\": \"Invalid query. Ensure 'field', 'operator', 'value' are present for field queries. Ensure 'operator' and 'value' for composite queries.\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_value\",\n      \"message\": \"123 is not a valid string\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_field\",\n      \"message\": \"not_a_field is not a valid field\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_values\",\n      \"message\": \"Value depth exceeds 10 items\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_value\",\n      \"message\": \"Number of elements in composite query is greater than 15, please try again with a smaller list\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_operator\",\n      \"message\": \"Composite operators must be of type AND or OR \"\n    }\n  ]\n}\n\nAccepted Fields\n\nMost keys listed as part of the The conversation model is searchable, whether writeable or not. The value you search for has to match the accepted type, otherwise the query will fail (ie. as created_at accepts a date, the value cannot be a string such as \"foorbar\").\n\nField\tType\nid\tString\ncreated_at\tDate (UNIX timestamp)\nupdated_at\tDate (UNIX timestamp)\nsource.type\tString\nsource.id\tString\nsource.delivered_as\tString\nsource.subject\tString\nsource.body\tString\nsource.author.id\tString\nsource.author.type\tString\nsource.author.name\tString\nsource.author.email\tString\nsource.url\tString\ncontact_ids\tString\nteammate_ids\tString\nadmin_assignee_id\tString\nteam_assignee_id\tString\nchannel_initiated\tString Accepted fields are conversation, push, facebook, twitter and email.\nopen\tBoolean\nread\tBoolean\nstate\tString\nwaiting_since\tDate (UNIX timestamp)\nsnoozed_until\tDate (UNIX timestamp)\ntag_ids\tString\npriority\tString\nstatistics.time_to_assignment\tInteger\nstatistics.time_to_admin_reply\tInteger\nstatistics.time_to_first_close\tInteger\nstatistics.time_to_last_close\tInteger\nstatistics.median_time_to_reply\tInteger\nstatistics.first_contact_reply_at\tDate (UNIX timestamp)\nstatistics.first_assignment_at\tDate (UNIX timestamp)\nstatistics.first_admin_reply_at\tDate (UNIX timestamp)\nstatistics.first_close_at\tDate (UNIX timestamp)\nstatistics.last_assignment_at\tDate (UNIX timestamp)\nstatistics.last_assignment_admin_reply_at\tDate (UNIX timestamp)\nstatistics.last_contact_reply_at\tDate (UNIX timestamp)\nstatistics.last_admin_reply_at\tDate (UNIX timestamp)\nstatistics.last_close_at\tDate (UNIX timestamp)\nstatistics.last_closed_by_id\tString\nstatistics.count_reopens\tInteger\nstatistics.count_assignments\tInteger\nstatistics.count_conversation_parts\tInteger\nconversation_rating.requested_at\tDate (UNIX timestamp)\nconversation_rating.replied_at\tDate (UNIX timestamp)\nconversation_rating.score\tInteger\nconversation_rating.remark\tString\nconversation_rating.contact_id\tString\nconversation_rating.admin_d\tString\nAccepted Operators\n\nThe table below shows the operators you can use to define how you want to search for the value. The operator should be put in as a string (\"=\"). The operator has to be compatible with the field's type (eg. you cannot search with > for a given string value as it's only compatible for integer's and dates).\n\nOperator\tValid Types\tDescription\n=\tAll\tEquals\n!=\tAll\tDoesn't Equal\nIN\tAll\tIn Shortcut for OR queries Values most be in Array\nNIN\tAll\tNot In Shortcut for OR ! queries Values must be in Array\n>\tInteger Date (UNIX Timestamp)\tGreater (or equal) than\n<\tInteger Date (UNIX Timestamp)\tLower (or equal) than\n~\tString\tContains\n!~\tString\tDoesn't Contain\n^\tString\tStarts With\n$\tString\tEnds With\nResponse\n\nA JSON payload with a list of Conversations Model that match the search query, with a total_count integer saying how many models have been returned."
  },
  {
    "title": "Results",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/responseobjects/results/",
    "html": "Results\nDescription\n\nThe results object should be sent when you want to end configuration of the app and trigger the Initialize request to be sent. You provide the key-value pairs of data you want access to and we will send these in the Initialize request within a card_creation_options object.\n\nExample Object\nresults: { \"key\": \"value\" } // Can be more than one pair\n"
  },
  {
    "title": "Content",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/responseobjects/content/",
    "html": "Content\nDescription\n\nThe content object is where you specify the UI of your app. You provide us with a set of components in a components array that we then render.\n\nThe content object should usually be returned within the canvas object. If you're responding to a Live Canvas request however, then you should only respond with the content object.\n\nAttributes\nKey\tType\tDescription\ncomponents\tarray\tThe list of components to be rendered. See the components further in this reference.\nExample Object\n{\n  content: {\n    components: [\n      {\n        \"type\": \"text\",\n        \"id\": \"component-1\",\n        \"text\": \"This is the first component\",\n        \"align\": \"center\",\n        \"style\": \"header\"\n      },\n      {\n        \"type\": \"button\",\n        \"id\": \"component-2\",\n        \"label\": \"This is the second component\",\n        \"action\": {\n          \"type\": \"submit\"\n        }\n      }\n    ]\n  }\n}\n"
  },
  {
    "title": "Canvas",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/responseobjects/canvas/",
    "html": "Canvas\nDescription\n\nYou have to respond to the majority of requests with a canvas object. This will tell us what UI to show for your app.\n\nA canvas can either be static (meaning we send you the next request only when an action takes place) or live (meaning we send you the next request when someone views the app).\n\nA static canvas needs a Content Object which will contain the components to show.\nA live canvas needs a content_url which we we will make the Live Canvas requests to when the app is viewed. This is only possible for apps viewed or used in the Messenger.\nAttributes\nKey\tType\tCanvas Type\tDescription\ncontent\tobject\tStatic\tThe Content that will be shown as the UI of the app. Max Size is 64KB.\ncontent_url\tstring\tLive\tThe URL which we make Live Canvas requests to. You must respond to these with a Content Object. Max size is 64KB.\nstored_data\tobject\tStatic, Live\tOptional Stored Data that you want to be returned in the next sent request. Max Size is 64KB.\nExample Objects\n{\n  canvas: {\n    content: {\n      components: [\n        {\n          \"type\": \"text\",\n          \"text\": \"This is a text component.\"\n        }\n      ]\n    },\n    stored_data: { \"key\": \"value\" } //Can be more than one pair \n  }\n}\n\n{\n  canvas: {\n    content_url: \"https://messengerapp.com/get-content-here\",\n    stored_data: { \"key\": \"value\" } //Can be more than one pair \n  }\n}\n"
  },
  {
    "title": "Event",
    "url": "https://developers.intercom.com/docs/references/2.6/canvas-kit/responseobjects/event/",
    "html": "Event\nDescription\n\nThe event object enables Intercom to know more about the actions that took place in your app. Currently, you can only tell us when an app's flow has been completed.\n\nAttributes\nKey\tType\tDescription\ntype\tstring\tWhat action took place. The only value currently accepted is completed.\nExample Object\nevent: { \"type\": \"completed\" } // Optional. Recorded by Intercom.\n"
  },
  {
    "title": "HTTP Responses",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/errors/http-responses/",
    "html": "HTTP Responses\n\nThe API returns HTTP responses on each request to indicate the success or otherwise of API requests. The codes listed below are often used, and the API may use others. Note that 4xx and 5xx responses may be returned for any request and clients should cater for them.\n\nResponse Code\tDescription\n400\tBad Request -- General client error, possibly malformed data.\n401\tUnauthorized -- The API Key was not authorised (or no API Key was found).\n402\tPayment Required -- The API is not available on your current plan.\n403\tForbidden -- The request is not allowed.\n404\tNot Found -- The resource was not found.\n405\tMethod Not Allowed -- The resource does not accept the HTTP method.\n406\tNot Acceptable -- The resource cannot return the client's required content type.\n408\tRequest Timeout -- The server would not wait any longer for the client.\n409\tConflict - Multiple existing users match this email address - must be more specific using user_id\n415\tUnsupported Media Type - The server doesn't accept the submitted content-type.\n422\tUnprocessable Entity -- The data was well-formed but invalid.\n429\tToo Many Requests -- The client has reached or exceeded a rate limit, or the server is overloaded.\n500, 502, 503, 504\tServer errors - something went wrong with Intercom's servers. These responses are most likely momentary operational errors (e.g. temporary unavailability), and, as a result, requests should be retried once."
  },
  {
    "title": "Error Objects",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/errors/error-objects/",
    "html": "Error Objects\nError List Object\n{\n  \"type\": \"error.list\",\n  \"errors\": [\n    {\n      \"code\": \"not_found\",\n      \"message\": \"No such user_id[314159]\",\n      \"field\": \"user_id\"\n    },\n    {\n      \"code\": \"not_found\",\n      \"message\": \"No such email[pi@example.org]\",\n      \"field\": \"email\"\n    }\n  ]\n}\n\n// the JavaScript client doesn't directly expose error data\n\n# the Ruby client doesn't directly expose error data\n\n<?php\n// the PHP client doesn't directly expose error data\n?>\n\ntry {\n  UserCollection uc = User.list();\n} catch(IntercomException  ie) {\n  Error e = ie.getFirstError();\n  log.error(\"{}:{}\", e.getCode(), e.getMessage());\n}\n\n\nThe API will return an Error List for a failed request, which will contain one or more Error objects.\n\nError List Attributes\n\nEach error has the following attributes\n\nField\tDescription\ntype\tThe type is error.list\nerrors\tAn array of one or more error objects\nError Object Attributes\n\nEach Error Object has the following attributes\n\nField\tDescription\ncode\tA string indicating the kind of error, used to further qualify the HTTP response code\nmessage\tOptional. Human readable description of the error\nfield\tOptional. Used to identify a particular field or query parameter that was in error."
  },
  {
    "title": "Conversation Count Model",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/counts/conversation-counts/",
    "html": "Conversation Count Model\nConversation Count Object\n\nThe conversation count supplies global counts about your App's conversations\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nconversation\tobject\tContains counts related to conversations\nconversation.assigned\tnumber\tContains the number of assigned conversations\nconversation.closed\tnumber\tContains the number of closed conversations\nconversation.open\tnumber\tContains the number of open conversations\nconversation.unassigned\tnumber\tContains the number of unassigned conversations\n{\n    \"type\": \"count\",\n    \"conversation\": {\n        \"open\": 30,\n        \"closed\": 17,\n        \"unassigned\": 0,\n        \"assigned\": 30\n    }\n}\n\n# Conversation Counts\n$ curl 'https://api.intercom.io/counts?type=conversation' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# Conversation App Counts\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"count\",\n    \"conversation\": {\n        \"open\": 30,\n        \"closed\": 17,\n        \"unassigned\": 0,\n        \"assigned\": 30\n    }\n}\n\nintercom.counts.for_type(type: 'conversation')\n\n<?php\n$counts = $intercom->counts->getCounts([\"type\" => \"conversation\"]);\nprint_r($counts);\n?>\n\n// Conversation Counts\nfinal Counts.Conversation totals = Counts.conversationTotals();\ntotals.getAssigned();\ntotals.getClosed();\ntotals.getOpen();\ntotals.getUnassigned();\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nConversation Count\tconversation\tNone"
  },
  {
    "title": "Company User/Segment/Tag Count Model",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/counts/company-tag-counts/",
    "html": "Company User/Segment/Tag Count Model\nCompany User/Segment/Tag Count Object\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\ncompany\tobject\tContains a field called segment containing segment counts\ncompany.segment\tarray\tContains a list of segment objects their name and their number of companies tagged\ncompany.tag\tarray\tContains a list of tag objects with their name and their number of companies tagged\ncompany.user\tarray\tContains an array of companies with their name and their number of users\ncurlcurlrubyphpjava\n# Company Tag Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=tag&per_page=5' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\n# Company Segment Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=segment' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\n# Company User Count\\n$ curl 'https://api.intercom.io/counts?type=company&count=user' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\n# Company Tag Count\\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"count\\\",\\n    \\\"company\\\": {\\n        \\\"tag\\\": [\\n            {\\n                \\\"VIP\\\": 0\\n            },\\n            {\\n                \\\"UpMarket\\\": 0\\n            },\\n            {\\n                \\\"test\\\": 0\\n            },\\n            {\\n                \\\"new\\\": 0\\n            },\\n            {\\n                \\\"smb\\\": 0\\n            }\\n        ]\\n    },\\n    \\\"pages\\\": {\\n        \\\"pages\\\": {\\n            \\\"type\\\": \\\"pages\\\",\\n            \\\"next\\\": \\\"https://api.intercom.io/counts?type=company&count=tag&page=2&per_page=5\\\",\\n            \\\"page\\\": 1,\\n            \\\"per_page\\\": 5,\\n            \\\"total_pages\\\": 203\\n        }\\n    }\\n}\\n\\n# Company Segment Count\\nHTTP/1.1 200 OK\\n{\\n    \\\"type\\\": \\\"count\\\",\\n    \\\"company\\\": {\\n        \\\"segment\\\": [\\n            {\\n                \\\"Active\\\": 2\\n            },\\n            {\\n                \\\"New\\\": 0\\n            },\\n            {\\n                \\\"Slipping Away\\\": 0\\n            },\\n            {\\n                \\\"id=10\\\": 10\\n            }\\n        ]\\n    },\\n    \\\"pages\\\": {}\\n}\\n\\n# Company User Count\\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"count\\\",\\n  \\\"company\\\": {\\n    \\\"user\\\": [\\n      {\\n        \\\"Independents\\\": 7,\\n        \\\"remote_company_id\\\": \\\"6\\\"\\n      },\\n      {\\n        \\\"Alliance\\\": 1,\\n        \\\"remote_company_id\\\": \\\"7\\\"\\n      }\\n    ]\\n  },\\n  \\\"pages\\\": {}\\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nCompany Segment Count\tcompany\tsegment\nCompany Tag Count\tcompany\ttag\nCompany User Count\tcompany\tuser\nPAGINATION WITH COMPANY COUNTS\n\nCompany tag counts are returned via pagination, which means it defaults to 50 results per page unless you specify otherwise. e.g. \\n'https://api.intercom.io/counts?type=company&count=tag&per_page=10\\\"\\n\\nTo get the next page of results you need to make a GET request with the \"next\" RUL supplied in the initial response."
  },
  {
    "title": "The article model",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/articles/the-article-model/",
    "html": "The article model\nExample Article Object\nJSON\n{  \\\"id\\\": 1,  \\\"type\\\": \\\"article\\\",  \\\"workspace_id\\\": \\\"abcdef\\\",  \\\"title\\\": \\\"Default language title\\\",  \\\"description\\\": \\\"Default language description\\\",  \\\"body\\\": \\\"Default language body in html\\\",  \\\"author_id\\\": 1,  \\\"state\\\": \\\"published\\\",  \\\"created_at\\\": 123456,  \\\"updated_at\\\": 123456,  \\\"url\\\": \\\"http://intercom.test/help/en/articles/3-default-language\\\",  \\\"parent_id\\\": 1,  \\\"parent_type\\\": \\\"collection\\\",  \\\"default_locale\\\": \\\"en\\\",  \\\"translated_content\\\": {    \\\"type\\\": \\\"article_translated_content\\\",    \\\"fr\\\": {      \\\"type\\\": \\\"article_content\\\",      \\\"title\\\": \\\"French title\\\",      \\\"description\\\": \\\"French description\\\",   \\t  \\\"body\\\": \\\"French body in html\\\",   \\t  \\\"author_id\\\": 1,     \\t\\\"state\\\": \\\"published\\\",     \\t\\\"created_at\\\": 7891011,     \\t\\\"updated_at\\\": 7891011,     \\t\\\"url\\\": \\\"http://intercom.test/help/fr/articles/3-french-multilingual\\\"    }  },  \\\"statistics\\\": {      \\\"type\\\": \\\"article_statistics\\\",      \\\"views\\\": 10,      \\\"conversations\\\": 0,      \\\"reactions\\\": 8,      \\\"happy_reaction_percentage\\\": 38,      \\\"neutral_reaction_percentage\\\": 38,      \\\"sad_reaction_percentage\\\": 25  }}\n\nExample HTML Body\nHTML\n<h1 class=\\\"intercom-align-left\\\">Header 1</h1><h2 class=\\\"intercom-align-left\\\">Header 2</h2><h2 class=\\\"intercom-align-center\\\">Centered Header</h2><p class=\\\"intercom-align-left\\\">   <a href=\\\"https://intercom.com\\\" target=\\\"_blank\\\">Link</a></p><ul>   <li>Single-level List</li></ul><pre><code>'Pre' Code</code></pre><p class=\\\"intercom-align-left\\\"><code>Inline code</code></p><p class=\\\"intercom-align-left\\\"><b>Bold text</b></p><p class=\\\"intercom-align-left\\\"><i>Italic text</i></p><p class=\\\"intercom-align-center\\\">Centered text</p><p class=\\\"intercom-align-left\\\">Image without link:</p><div class=\\\"intercom-container intercom-align-left\\\">   <img      src=\\\"https://downloads.intercomcdn.com/i/o/204050460/7a140f62f8e715d1d6cf246d/Image.jpg\\\"      /></div><p class=\\\"intercom-align-left\\\">Image with link:</p><div class=\\\"intercom-container intercom-align-left\\\">   <a target=\\\"_blank\\\" href=\\\"https://intercom.com\\\"      ><img      src=\\\"https://downloads.intercomcdn.com/i/o/204049719/b41c9a81c13b8a91023df1e7/Image.jpg\\\"      /></a></div><p class=\\\"intercom-align-left\\\">Image with link and centered:</p><div class=\\\"intercom-container intercom-align-center\\\">   <a target=\\\"_blank\\\" href=\\\"https://intercom.com\\\"      ><img      src=\\\"https://downloads.intercomcdn.com/i/o/204050579/2e85d79a0d9e0c47b088f50c/Image.jpg\\\"      /></a></div><div class=\\\"intercom-container intercom-align-left\\\">   <a class=\\\"intercom-h2b-button\\\" target=\\\"_blank\\\" href=\\\"https://intercom.com\\\"      >Button</a      ></div><div class=\\\"intercom-container intercom-align-center\\\">   <a class=\\\"intercom-h2b-button\\\" target=\\\"_blank\\\" href=\\\"https://intercom.com\\\"      >Centered Button</a      ></div><p class=\\\"intercom-align-left\\\">Video Embed with iFrame:</p><div class=\\\"intercom-h2b-video\\\">   <iframe      src=\\\"https://www.youtube.com/embed/jqO8AQHj7Fw?rel=0\\\"      frameborder=\\\"0\\\"      webkitallowfullscreen      mozallowfullscreen      allowfullscreen      ></iframe></div><p class=\\\"intercom-align-left\\\"></p>\n\n\nThe Articles API is a central place to gather all information and take actions on your articles. Articles can live within collections and sections, or alternatively they can stand alone.\n\nFor collections and sections you should refer to the Help Center endpoint.\n\nArticle Object\nKey\tType\tDescription\ntype\tString\tThe type of object - article.\nid\tString\tThe unique identifier for the article which is given by Intercom.\nworkspace_id\tString\tThe id of the workspace which the article belongs to.\ntitle\tString\tThe title of the article.\nFor multilingual articles, this will be the title of the default language's content.\ndescription\tString\tThe description of the article.\nFor multilingual articles, this will be the description of the default language's content.\nbody\tString\tThe body of the article in HTML.\nFor multilingual articles, this will be the body of the default language's content.\nSee more on what we accept in the Supported HTML table below.\nauthor_id\tString\tThe id of the author of the article.\nFor multilingual articles, this will be the id of the author of the default language's content. Must be a teammate on the help center's workspace.\nstate\tString\tWhether the article is published or is a draft.\nFor multilingual articles, this will be the state of the default language's content.\ncreated_at\tTimestamp\tThe time when the article was created.\nFor multilingual articles, this will be the timestamp of creation of the default language's content.\nupdated_at\tTimestamp\tThe time when the article was last updated.\nFor multilingual articles, this will be the timestamp of last update of the default language's content.\nurl\tString\tThe URL of the article.\nFor multilingual articles, this will be the URL of the default language's content.\nparent_id\tString\tThe id of the article's parent collection or section. An article without this field stands alone.\nparent_type\tString\tThe type of parent, which can either be a collection or section.\ndefault_locale\tString\tThe default locale of the help center. This field is only returned for multilingual help centers.\ntranslated_content\tObject\tAn Article Translated Content Object for multilingual articles. This field is only returned for multilingual help centers.\nArticle Translated Content Object\nKey\tType\tWriteable?\tDescription\ntype\tString\tNo\tThe type of object - article_translated_content.\n<locale> ar, bg, bs, ca, cs, da, de, 'de-form', el, en, es, et, fi, fr, he, hr, hu, id, it, ja, ko, lt, lv, mn, nb, nl, pl, 'pt-BR', pt, ro, ru, sl, sr, sv, tr, vi, 'zh-CN', 'zh-TW'\tObject\tYes\tAn Article Content Object for each supported locale of the multilingual help center. The default locale's content and information will be contained in the initial Article Object. If there's no content for a locale, the value will be nil.\nArticle Content Object\nKey\tType\tWriteable?\tDescription\ntype\tString\tNo\tThe type of object - article_content.\ntitle\tString\tYes\tThe title of the article.\ndescription\tString\tYes\tThe description of the article.\nbody\tString\tYes\tThe body of the article in HTML.\nauthor\tString\tYes\tThe id of the author of the article.\nstate\tString\tYes\tWhether the article is published or is a draft.\ncreated_at\tTimestamp\tNo\tThe time when the article was created.\nupdated_at\tTimestamp\tNo\tThe time when the article was last updated.\nurl\tString\tNo\tThe URL of the article.\nArticle Statistics Object\nKey\tType\tWriteable?\tDescription\ntype\tString\tNo\tThe type of object - article_statistics.\nviews\tInteger\tNo\tThe number of total views the article has received.\nconversations\tInteger\tNo\tThe number of conversations started from the article.\nreactions\tInteger\tNo\tThe number of total reactions the article has received.\nhappy_reaction_percentage\tInteger\tNo\tThe percentage of happy reactions the article has received against other types of reaction.\nneutral_reaction_percentage\tInteger\tNo\tThe percentage of neutral reactions the article has received against other types of reaction.\nsad_reaction_percentage\tInteger\tNo\tThe percentage of sad reactions the article has received against other types of reaction.\nSupported HTML\n\nThe table below defines the subset of HTML accepted when creating or updating an Article. Over time we may add support for new HTML elements and attributes, since this will not constitute a breaking change, we advise any client code to support the full HTML specification when reading article content.\n\nRemoving element support, or otherwise changing the API in a way that causes previously supported HTML to become unsupported will be considered a breaking change.\n\nTag\tWhat does it do?\tAdditional Details\n<p>\tParagraph\tAll text must be placed within paragraph tags.\n<br>\tLine break\tSupported in-line.\n<hr>\tHorizontal rule\tNA\n<h1> <h2>\tHeading\tOnly these two header tags are supported. All others will be replaced with <h2>.\n<a>\tLink\tAn image can be placed in-between the link tags.\n<img>\tImage\tImages will be uploaded to Intercom and we'll use an Intercom link to display these.\nIf these fail to upload then we'll hard fail and return 400 Bad Request.\n<ul> <ol> <li>\tList\tLists must contain at least one non-empty <li> element.\n\n<li> elements can contain plain text, or any other supported HTML tags, except <table>.\n\nIf these criteria aren't met, then the article will hard fail and return 400 Bad request.\n<table>\tTable\tNeeds to have at least one row and one cell.\nCan contain any other supported HTML tags, except another <table> within.\nIf these criteria aren't met then it will hard fail and return 400 Bad request.\n<iframe>\tVideo\tsrc must be for a supported video embed link.\nOnly works for Youtube, Wistia, Vimeo, Loom, Vidyard or StreamIO.\n<pre> <code>\tPre-formatted code\t\n<b> <strong>\tBold\t\n<i> <em>\tItalic\t\nSupported CSS\nClass\tWhat does it do?\tWhere does it work?\nintercom-align-center\tCenter Alignment\tOn tag level: Headers, Paragraphs. On wrapping div: Images, Buttons.\nintercom-h2b-button\tButton\tOn tag level: Links\nUnsupported HTML\nTag\tWhat does it do?\tWhat do we do?\n<dl>\tDefinition List\tHard fail - 400 Bad Request\n<ul> or <ol>\tNested lists\tHard fail - 400 Bad Request\n<iframe>\tiFrame Unsupported video\tHard fail - 400 Bad Request\n<div> <span>\tContent division\tReplace with <p>\n<h3> to <h6>\tHeading\tReplace with <h2>\n<form>\tForm\tRemove from content\n<input> <textarea>\tInput\tRemove from content\n<script>\tJavascript Script\tRemove from content\n<head> <html> <footer> etc.\tAll other tags\tRemove from content Internals replaced with <p>"
  },
  {
    "title": "App Total Count Model",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/counts/company-user-counts/",
    "html": "App Total Count Model\n\nYou can use the API to get counts of users and companies filtered by certain criteria.\n\nCounts are a legacy way to periodically obtain data for the purposes of tracking rates of change in contact and company data.\n\nWorkspace Total Count Object\n\nThe total count object contains the summary of the following fields in a workspace, -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count.hash'\ncompany\tobject\tContains the number of companies in your App\nsegment\tobject\tContains the number of segments in your App\ntag\tobject\tContains the number of tags in your App\nuser\tobject\tContains the number of users in your App\nlead\tobject\tContains the number of leads in your App\n\nThe count of tags and segments includes archived tags and segments.\n\n{\n    \"type\": \"count.hash\",\n    \"company\": {\n        \"count\": 55\n    },\n    \"user\": {\n        \"count\": 54944\n    },\n    \"lead\": {\n        \"count\": 17\n    },\n    \"tag\": {\n        \"count\": 1012\n    },\n    \"segment\": {\n        \"count\": 7\n    }\n}\n\n# App Counts\n$ curl 'https://api.intercom.io/counts' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# App Total Counts\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"count.hash\",\n    \"company\": {\n        \"count\": 55\n    },\n    \"user\": {\n        \"count\": 54944\n    },\n    \"lead\": {\n        \"count\": 17\n    },\n    \"tag\": {\n        \"count\": 1012\n    },\n    \"segment\": {\n        \"count\": 7\n    }\n}\n\nintercom.counts.for_app\n\n<?php\n// Global App Counts\n$intercom->counts->getCounts([]);\n?>\n\n// Global App Counts\nfinal Counts.Totals appTotals = Counts.appTotals();\nappTotals.getCompany().getValue();\nappTotals.getSegment().getValue();\nappTotals.getTag().getValue();\nappTotals.getUser().getValue();\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nGlobal App Counts\tNone\tNone"
  },
  {
    "title": "Retrieve an article",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/articles/retrieve-an-article/",
    "html": "Retrieve an article\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/articles/<id> \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can fetch the details of a single article by making a GET request to https://api.intercom.io/articles/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the article which is given by Intercom.\nResponse\n\nThis will return an Article model."
  },
  {
    "title": "List all articles",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/articles/list-all-articles/",
    "html": "List all articles\nExample Request & Response (Single Language Help Center)\ncurlhttp\n$ curl https://api.intercom.io/articles \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can fetch a list of all articles by making a GET request to https://api.intercom.io/articles.\n\nResponse\nKey\tType\tDescription\ntype\tString\tThe type of object - list.\npages\tObject\tA Pages object with the information needed to paginate through Articles.\ntotal_count\tInteger\tA count of the total number of articles.\ndata\tArray\tAn array of Article Objects.\nHOW ARE THE ARTICLES SORTED AND ORDERED?\n\nArticles will be returned in descending order on the updated_at attribute. This means if you need to iterate through results then we'll show the most recently updated articles first."
  },
  {
    "title": "The tag model",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/tags/tag-model/",
    "html": "The tag model\nExample Object\n{\\n  \\\"id\\\": \\\"17513\\\",\\n  \\\"name\\\": \\\"independent\\\",\\n  \\\"type\\\": \\\"tag\\\"\\n}\n\n\nA tag allows you to label your contacts and companies and list them using that tag.\n\nTag Object\nKey\tType\tDescription\ntype\tstring\tvalue is 'tag'\nid\tstring\tThe id of the tag\nname\tstring\tThe name of the tag"
  },
  {
    "title": "Webhook notifications",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/webhooks/webhook-notifications/",
    "html": "Webhook notifications\n\nA Webhook notification is the object delivered when an event is triggered, and notifications have data payloads that contain references to the Intercom objects associated with the event. There may be instances when we pause, suspend or delay notifications.\n\nWhy are my Webhook topic notifications missing?\nPaused subscription notifications\n\nIf your endpoint URL responds with more than 1000 consecutive HTTP error codes in a 15-minute window, we pause your Webhook topic notifications for 15 minutes after which we start sending as normal again.\n\nSuspended subscriptions\n\nIf your endpoint URL responds with HTTP error codes for more than seven days, we suspend your Webhook subscription, and you will stop receiving any further notifications.\n\nIf we suspend your subscription, we display an error banner on the Webhooks page under the Configure menu of the relevant App in your Developer Hub.\n\nAfter resolving any issues with your server, you can resume suspended subscriptions by pressing Set live from the top right of the page.\n\nWe only suspend Webhook subscriptions for Private apps. Webhook subscriptions used in Public apps are never suspended.\n\nWhy are my Webhook topic notifications delayed?\nRate limiting\n\nWe will prioritise the first 150,000 events per minute of your Webhook topic notifications and then rate limit all further notifications with a lower priority.\n\nSlow topic notifications\n\nWe prioritise Webhook topic notifications for endpoint URLs that successfully respond within 500ms. If response times exceed 500ms, we deliver topic notifications with a lower priority.\n\nThrottling\n\nIf we receive an HTTP 429 (Too Many Requests) response from your endpoint URL, we throttle further notifications with a delay that starts at 1 minute and extends to 2 hours. We drop any throttled notifications if we do not receive a successful response within 2 hours.\n\nWhy are my Webhook topic notifications out of order?\n\nEach notification object has a timestamp created_at field. We do not offer any guarantee on the order of Webhook topic notifications.\n\nWhat happens to my Webhook topic notifications when Intercom is down?\n\nIf Intercom's System Status interrupts notification delivery, we will store them and resume sending once we restore the service. We will always prioritise the most recent notifications and process older delayed notifications with a lower priority.\n\nWhat volume of notifications should I expect?\n\nEvents in Intercom with the potential for generating a high volume of Webhook topic notifications are related to the Content Stat object and Contact object.\n\nFor example, the volume of Content Stat Webhook topic notifications is typically five times the size of the audience receiving the Outbound Message content; Chats, Emails, Mobile Push etc.\n\nConfigure your endpoint URL server to handle spikes in velocity and volume to minimise paused and suspended Webhook subscriptions or rate-limited and throttled Webhook topic notifications.\n\nWhy am I receiving duplicate notifications?\n\nIf we do not receive an HTTP 200 (OK) response within 5 seconds of sending a notification, we will resend the notification one more time.\n\nTo avoid this, we recommend responding with HTTP 200 (OK) immediately upon receipt and before you trigger any long-running tasks."
  },
  {
    "title": "Untag companies",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/tags/untag-companies/",
    "html": "Untag companies\nExample Request & Response\n$ curl https://api.intercom.io/tags \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d'\n{\n  \"name\": \"Independent\",\n  \"companies\": [\n    {\n      \"id\" : \"53427b7ecce5722303000003\",\n      \"untag\": true\n    }\n  ]\n}\n\nHTTP/1.1 200 Ok\n\n{\n  \"type\": \"tag\",\n  \"name\": \"Follow Up\",\n  \"id\": \"17513\"\n}\n\n\nYou can untag a single or a list of companies.\n\nRequest Body Parameters\nParameters\tType\tRequired\tDescription\nname\tString\tYes\tThe name of the tag which will be untagged from the.\ncompanies\tObject\tYes\tAn array of objects with the unique id or company_id of the company to be untagged, and the untag boolean set to true.\nResponse\n\nThis will return a Tag model for the tag that was unapplied to the given company."
  },
  {
    "title": "Delete an article",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/articles/delete-an-article/",
    "html": "Delete an article\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/articles/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can delete a single article by making a DELETE request to https://api.intercom.io/articles/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the article which is given by Intercom.\nResponse\nKey\tType\tDescription\nid\tString\tThe unique identifier for the article which you provided in the URL.\nobject\tString\tThe type of object which was deleted - article.\ndeleted\tBoolean\tWhether the article was deleted successfully or not."
  },
  {
    "title": "Webhooks",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/webhooks/webhooks/",
    "html": "Webhooks\nOverview\n\nWebhooks allow you to subscribe to real-time notifications of events happening in Intercom, a Contact created, an incoming Conversation received, or an Admin Away Mode updated.\n\nIf you're unfamiliar with Webhooks, head to pipedream's RequestBin blog to learn more.\n\nThe main concepts of Intercom Webhooks are subscriptions, topics and notifications.\n\nSubscriptions\n\nA Webhook Subscription is created within an App and is where you define the Topics you want to receive event Notifications on. A subscription can contain one or more topics. You will need to provide a URL where Intercom will send all notifications for your subscription.\n\nTopics\n\nA topic contains the events you will receive notifications on; for example, Conversation created or Contact deleted.\n\nA subscription will contain one or more topics. Topics are types of notifications that you want to be informed about.\n\nNotifications\n\nA notification is the event object delivered when an event is triggered, and notifications have data payloads that contain references to the Intercom objects associated with the event. Notifications for all topics will be sent to the URL you provided for your subscription.\n\nWebhooks FAQs\nDo Webhooks belong to my Workspace or my App?\n\nWebhooks are associated with an App, and you configure your Webhooks per App just like you configure your Access Tokens. When you configure a Webhook, you tell Intercom where you want Notifications sent for one or more Topics.\n\nIf I am developing Apps for other people, what do I need to do?\n\nYou will need to select the correct permissions on the Authorization page of your App and then subscribe to the relevant topics on the Webhooks page.\n\nCan I set up Subscriptions for Webhook Topics via the API?\n\nNo, you can only subscribe to Webhooks via Apps in your Developer Hub.\n\nI previously configured webhooks via the API. Can I still do that?\n\nIf you previously set up Workspace Webhooks via the API, these will continue to work, and Intercom will not delete or reconfigure them.\n\nWhat IP addresses does Intercom send Webhook Notifications from?\n\nThe IP addresses Intercom sends Webhook Notifications from are:\n\nUSA 34.231.68.152 34.197.76.213 35.171.78.91 35.169.138.21 52.70.27.159 52.44.63.161\n\nEurope 54.217.125.63 54.246.173.113 54.216.9.3\n\nAustralia 52.63.36.185 3.104.68.152 52.64.2.165"
  },
  {
    "title": "The segment model",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/segments/segment-model/",
    "html": "The segment model\nExample Segment Object\n{\\n  \\\"type\\\": \\\"segment\\\",\\n  \\\"id\\\": \\\"53203e244cba153d39000062\\\",\\n  \\\"name\\\": \\\"New\\\",\\n  \\\"created_at\\\": 1394621988,\\n  \\\"updated_at\\\": 1394622004\\n}\n\n\nA segment is a group of your contacts defined by rules that you set. Contacts are automatically added to the segment every time the contact updates to match those rules. You can use Search for contacts to find contacts that match the same rules.\n\nSegment Object\nKey\tType\tDescription\ntype\tstring\tvalue is segment'.\nid\tstring\tThe unique identifier representing the segment.\nname\tstring\tThe name of the segment.\ncreated_at\ttimestamp\tThe time the segment was created.\nupdated_at\ttimestamp\tThe time the segment was updated.\nperson_type\tstring\tType of the record: user or lead.\ncount\tinteger\tThe number of items in the user segment. It's returned when include_count=true is included in the request."
  },
  {
    "title": "Delete a tag",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/tags/delete-a-tag/",
    "html": "Delete a tag\nExample Delete Tag Request\n$ curl https://api.intercom.io/tags/17513 \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n# Not exposed in Ruby client\n\n<?php\n// Not exposed in PHP client\n?>\n\nTag.delete(tag);\n\n\nYou can delete a single tag.\n\nRequest Path Parameters\nParemeter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier of the tag.\nResponse\n\nThis will return a Tag Model of the tag you just deleted."
  },
  {
    "title": "Search for contacts",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/contacts/search-for-contacts/",
    "html": "Search for contacts\n\nYou can search for multiple contacts by the value of their attributes in order to fetch exactly who you want.\n\nTo search for contacts, you need to send a POST request to https://api.intercom.io/contacts/search. This will accept a query object in the body which will define your filters in order to search for contacts.\n\nWHY IS THERE A DELAY WHEN CREATING CONTACTS AND SEARCHING FOR THEM?\n\nIf a contact has recently been created, there is a possibility that it will not yet be available when searching. This means that it may not appear in the response. This delay can take a few minutes. If you need to be instantly notified then you could use webhooks instead, which you'd currently have to iterate on to see if they match your search filters.\n\nSearch with single filter\n\nYou should provide the following parameters within a query object:\n\nParameter\tRequired?\tDescription\nfield\tYes\tThe fields associated to a customer that you can search for. See all accepted fields below.\noperator\tYes\tThe operator that you want to compare by. See all accepted operators below.\nvalue\tYes\tThe value you want to search by.\nSearch with multiple filters\n\nYou can search with multiple filters by combining a list of single filter objects within a value array and saying whether you want to ensure all given values match (AND), or only one of these match (OR). The query object should contain these parameters.\n\nParameter\tRequired?\tDescription\noperator\tYes\tThe operator (AND or OR) by which to query the combined values.\nvalue\tYes\tAn array of single query objects.\nONLY CHECKING IF ONE VALUE MATCHES?\n\nIf you're only using OR to check that one matches out of the values, you could instead use IN as the operator in a single filter query. You could also use NIN to say that it does not match one of the values.\n\nNESTING & LIMITATIONS\n\nYou can nest these filters in order to get even more granular insights that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4).\\n\\nThere are some limitations to the amount of multiple's there can be:\\n\\n_ There's a limit of max 2 nested filters\\n_ There's a limit of max 15 filters for each AND or OR group\n\nExample Request (Single Filter)\nRequest\n{\\n \\\"query\\\":  {\\n    \\\"field\\\": \\\"custom_attributes.salesforce_status\\\",\\n    \\\"operator\\\": \\\"~\\\",\\n    \\\"value\\\": \\\"open\\\"\\n  }\\n}\n\nExample Request (Multiple Filters)\njsonjson\n{\\n \\\"query\\\":  {\\n    \\\"operator\\\": \\\"AND\\\",\\n    \\\"value\\\": [\\n      {\\n        \\\"field\\\": \\\"custom_attributes.social_network\\\",\\n        \\\"operator\\\": \\\"=\\\",\\n        \\\"value\\\": \\\"facebook\\\"\\n      }, \\n      {\\n        \\\"field\\\": \\\"custom_attributes.social_network\\\",\\n        \\\"operator\\\": \\\"=\\\",\\n        \\\"value\\\": \\\"twitter\\\"\\n      },\\n      {\\n        \\\"field\\\": \\\"custom_attributes.social_network\\\",\\n        \\\"operator\\\": \\\"=\\\",\\n        \\\"value\\\": \\\"instagram\\\"\\n      }\\n    ]\\n  }\\n}\n\n{\\n \\\"query\\\":  {\\n    \\\"field\\\": \\\"custom_attributes.social_network\\\",\\n    \\\"operator\\\": \\\"IN\\\",\\n    \\\"value\\\": [\\\"facebook\\\", \\\"twitter\\\", \\\"instagram\\\"]\\n  }\\n}\n\nExample Request (Nested Filters)\nRequest\n{\\n \\\"query\\\":  {\\n    \\\"operator\\\": \\\"AND\\\",\\n    \\\"value\\\": [\\n      {\\n        \\\"operator\\\": \\\"OR\\\",\\n        \\\"value\\\": [\\n          {\\n            \\\"field\\\": \\\"created_at\\\",\\n            \\\"operator\\\": \\\">\\\",\\n            \\\"value\\\": 1560436650\\n          }, \\n          {\\n            \\\"field\\\": \\\"signed_up_at\\\",\\n            \\\"operator\\\": \\\">\\\",\\n            \\\"value\\\": 1560436784\\n          }\\n        ]\\n      },\\n      {\\n        \\\"operator\\\": \\\"OR\\\",\\n        \\\"value\\\": [\\n          {\\n            \\\"field\\\": \\\"custom_attributes.salseforce_status\\\",\\n            \\\"operator\\\": \\\"~\\\",\\n            \\\"value\\\": \\\"Open\\\"\\n          }, \\n          {\\n            \\\"field\\\": \\\"custom_attributes.salesforce_object_type\\\",\\n            \\\"operator\\\": \\\"=\\\",\\n            \\\"value\\\": \\\"Lead\\\"\\n          }\\n        ]\\n      }\\n    ]\\n  }\\n}\n\nExample Errors\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n      {\n        \"code\": \"bad_request\",\n        \"message\": \"bad 'random_param' parameter\"\n      }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_query\",\n      \"message\": \"Invalid query. Ensure 'field', 'operator', 'value' are present for field queries. Ensure 'operator' and 'value' for composite queries.\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_values\",\n      \"message\": \"Value depth exceeds 10 items\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_value\",\n      \"message\": \"123 is not a valid string\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_field\",\n      \"message\": \"not_a_field is not a valid field\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_operator\",\n      \"message\": \"Composite operators must be of type AND or OR \"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_operator\",\n      \"message\": \"email does not support operator: >\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_value\",\n      \"message\": \"Number of elements in composite query is greater than 15, please try again with a smaller list\"\n    }\n  ]\n}\n\nAccepted Fields\nSEARCHING FOR TIMESTAMP FIELDS\n\nAll timestamp fields (created_at, updated_at etc.) are indexed as Dates for Contact Search queries; Datetime queries are not currently supported. This means you can only query for timestamp fields by day - not hour, minute or second.\\n\\nFor example, if you search for all Contacts with a created_at value greater (>) than 1577869200 (the UNIX timestamp for January 1st, 2020 9:00 AM), that will be interpreted as 1577836800 (January 1st, 2020 12:00 AM). The search results will then include Contacts created from January 2nd, 2020 12:00 AM onwards.\\n\\nIf you'd like to get contacts created on January 1st, 2020 you should search with a created_at value equal (=) to 1577836800 (January 1st, 2020 12:00 AM).\\n\\nThis behaviour applies only to timestamps used in search queries. The search results will still contain the full UNIX timestamp and be sorted accordingly.\n\nMost key listed as part of the Contacts Model are searchable, whether writeable or not. The value you search for has to match the accepted type, otherwise the query will fail (ie. as created_at accepts a date, the value cannot be a string such as \"foorbar\").\n\nField\tType\nid\tString\nrole\tString\nAccepts user or lead\nname\tString\navatar\tString\nowner_id\tInteger\nemail\tString\nphone\tString\nexternal_id\tString\ncreated_at\tDate (UNIX Timestamp)\nsigned_up_at\tDate (UNIX Timestamp)\nupdated_at\tDate (UNIX Timestamp)\nlast_seen_at\tDate (UNIX Timestamp)\nlast_contacted_at\tDate (UNIX Timestamp)\nlast_replied_at\tDate (UNIX Timestamp)\nlast_email_opened_at\tDate (UNIX Timestamp)\nlast_email_clicked_at\tDate (UNIX Timestamp)\nlanguage_override\tString\nbrowser\tString\nbrowser_language\tString\nos\tString\nlocation.country\tString\nlocation.region\tString\nlocation.city\tString\nunsubscribed_from_emails\tBoolean\nmarked_email_as_spam\tBoolean\nhas_hard_bounced\tBoolean\nios_last_seen_at\tDate (UNIX Timestamp)\nios_app_version\tString\nios_device\tString\nios_app_device\tString\nios_os_version\tString\nios_app_name\tString\nios_sdk_version\tString\nandroid_last_seen_at\tDate (UNIX Timestamp)\nandroid_app_version\tString\nandroid_device\tString\nandroid_app_name\tString\nandoid_sdk_version\tString\nsegment_id\tString\ntag_id\tString\ncustom_attributes.{attribute_name}\tString\nAccepted Operators\n\nThe table below shows the operators you can use to define how you want to search for the value. The operator should be put in as a string (\"=\"). The operator has to be compatible with the field's type (eg. you cannot search with > for a given string value as it's only compatible for integer's and dates).\n\nOperator\tValid Types\tDescription\n=\tAll\tEquals\n!=\tAll\tDoesn't Equal\nIN\tAll\tIn\nShortcut for OR queries\nValues must be in Array\nNIN\tAll\tNot In\nShortcut for OR ! queries\nValues must be in Array\n>\tInteger\nDate (UNIX Timestamp)\tGreater than\n<\tInteger\nDate (UNIX Timestamp)\tLower than\n~\tString\tContains\n!~\tString\tDoesn't Contain\n^\tString\tStarts With\n$\tString\tEnds With\nResponse\n\nA JSON payload with a list of Contact objects that match the search query, with a total_count integer saying how many models have been returned."
  },
  {
    "title": "Retrieve a company",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/companies/view-a-company/",
    "html": "Retrieve a company\nExample Request & Response\n$ curl \\\n-s https://api.intercom.io/companies?company_id=141 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Accept:application/json\" \\\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"company\",\n  \"id\": \"531ee472cce572a6ec000006\",\n  \"name\": \"Blue Sun\",\n  \"plan\": {\n    \"type\":\"plan\",\n    \"id\":\"1\",\n    \"name\":\"Paid\"\n  },\n  \"company_id\": \"141\",\n  \"remote_created_at\": 1394531169,\n  \"created_at\": 1394533506,\n  \"updated_at\": 1396874658,\n  \"last_request_at\": 1396874658,\n  \"monthly_spend\": 49,\n  \"session_count\": 26,\n  \"user_count\": 10,\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"team_mates\": 0\n  }\n}\n\nintercom.companies.find(:id => \"41e66f0313708347cb0000d0\")\n\n<?php\n# Using the name of the company\n$intercom->companies->getCompanies(['name' => 'OneAmerica']);\n\n# Via company_id\n$intercom->companies->getCompanies(['company_id' => '10']);\n\n?>\n\nString id = \"541a144b201ebf2ec5000001\";\nCompany company = Company.find(id);\n\n\nYou can fetch a single company.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nname\tString\tNo\tThe name of the company.\nThe parameter should be url encoded.\ncompany_id\tString\tNo\tThe company_id you have given to the company.\n\nA company can also be fetched by its name using a name or company_id parameter in the url, whose values are the ones you have defined for that company -\n\nhttps://api.intercom.io/companies?name={name}\nhttps://api.intercom.io/companies?company_id={company_id}\nResponse\n\nThis will return the Company model that has been created or updated."
  },
  {
    "title": "Retrieve a tag",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/tags/retrieve-a-tag/",
    "html": "Retrieve a tag\nExample Request\n$ curl https://api.intercom.io/tags/<id> \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"note\",\n  \"id\": \"2\",\n  \"created_at\": 1389913951,\n  \"body\": \"<p>Text for my note</p>\",\n  \"user\": {\n      \"id\": \"5310d8e8598c9a0b24000005\",\n      \"type\": \"user\"\n    },\n  \"author\": {\n    \"type\": \"admin\",\n    \"id\": \"21\",\n    \"name\": \"Jayne Cobb\",\n    \"email\": \"jayne@serenity.io\",\n    \"avatar\" : {\n       \"type\":\"avatar\",\n      \"image_url\": \"http://example.org/128Jayne.jpg\"\n    },\n    \"companies\": []\n  }\n}\n\nintercom.notes.find(:id => note)\n\n<?php\n$note = $intercom->notes->getNote(\"9259097\");\n?>\n\nNote note = Note.find(\"2\");\n\n\nYou can fetch the details of a single tag.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier of a given tag.\nResponse\n\nThis will return a Tag model."
  },
  {
    "title": "List all tags",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/tags/list-tags-for-an-app/",
    "html": "List all tags\nExample List Tag Request\n$ curl https://api.intercom.io/tags \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n{\n  \"type\": \"list\",\n  \"data\": [\n    {\n      \"type\": \"tag\",\n      \"name\": \"Beta User\",\n      \"id\": 1\n    },\n    {\n      \"type\": \"tag\",\n      \"name\": \"Amazing User\",\n      \"id\": 2\n    },\n    {\n      \"type\": \"tag\",\n      \"name\": \"Epic User\",\n      \"id\": 3\n    }\n  ]\n}\n\nintercom.tags.all.each { ... }\n\n<?php\n$tags= $intercom->tags->getTags([]);\nforeach ($tags->tags as $tag) {\n    print \"id:\".$tag->id.\" name:\".$tag->name.\"\\n\";\n}?>\n\nTagCollection tags = Tag.list();\nwhile (tags.hasNext()) {\n    out.println(tags.next().getId());\n}\n\n\nYou can list all tags.\n\nResponse\n\nA list of tag objects.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'list'\ndata\tarray\tA list of tag objects"
  },
  {
    "title": "Unarchive a contact",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/contacts/unarchive-a-contact/",
    "html": "Unarchive a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/unarchive \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can unarchive a single contact.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return an object with details on the unarchived contact.\n\nAttribute\tType\tDescription\nid\tString\tThe unique identifier for the contact which is given by Intercom\nobject\tString\tThe type of object - contact\narchived\tBoolean\tWhether the contact has been archived - false"
  },
  {
    "title": "Update a contact",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/contacts/update-contact/",
    "html": "Update a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id> \\\\\\n-X PUT \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\\n\\n{\\n\\t\\\"role\\\": \\\"user\\\",\\n\\t\\\"external_id\\\": \\\"25\\\",\\n\\t\\\"email\\\": \\\"wash@serenity.io\\\",\\n\\t\\\"phone\\\": \\\"+1123456789\\\",\\n\\t\\\"name\\\": \\\"Hoban Washburn\\\",\\n\\t\\\"avatar\\\": \\\"https://example.org/128Wash.jpg\\\",\\n\\t\\\"last_seen_at\\\": 1571069751,\\n\\t\\\"signed_up_at\\\": 1571069751,\\n\\t\\\"owner_id\\\": 127,\\n\\t\\\"unsubscribed_from_emails\\\": false,\\n\\t\\\"custom_attributes\\\": {\\n\\t\\t\\\"paid_subscriber\\\": true,\\n\\t\\t\\\"monthly_spend\\\": 155.5,\\n\\t\\t\\\"team_mates\\\": 1\\n\\t}\\n}\\n\n\nExample Errors\nHTTP/1.1 404 FOUND\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"9a3d0816-9707-4598-977e-c009ba630148\",\n  \"errors\": [\n    {\n      \"code\": \"not_found\",\n      \"message\": \"Contact Not Found\"\n    }\n  ]\n}\n\nHTTP/1.1 409 CONFLICT\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"80ec9d92-99ff-4da9-9a0e-c0ab7c42f7e7\",\n  \"errors\": [\n    {\n      \"code\": \"conflict\",\n      \"message\": \"A contact matching those details already exists with id=5da6f18e3d7cf967e4582d05\"\n    }\n  ]\n}\n\nHTTP/1.1 400 UNPROCESSABLE ENTITY\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"00043csj9iva7pl9mmmg\",\n  \"errors\": [\n    {\n      \"code\": \"client_error\",\n      \"message\": \"Contact with user role can't be converted to a lead\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"00043csj9iva7pl9mmmg\",\n  \"errors\": [\n    {\n      \"code\": \"parameter_invalid\",\n      \"message\": \"The owner specified is not a member of the workspace\"\n    }\n  ]\n}\n\n\nYou can update an existing contact (ie. user or lead).\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nRequest Body Parameters\nAttribute\tType\tRequired?\tDescription\nrole\tString\tYes\tThe role of the contact. Accepted values are user or lead (only if lead already).\nexternal_id\tString\tYes - if role is user and email is blank\tA unique identifier for the contact which is given to Intercom.\nemail\tString\tYes - if role is lead, or if role is user and external_id is blank\tThe contacts email.\nphone\tString\tNo\tThe contacts phone.\nname\tString\tNo\tThe contacts name.\navatar\tString\tNo\tAn image URL containing the avatar of a contact.\nowner_id\tString\tNo\tThe id of an admin that has been assigned account ownership of the contact.\nsigned_up_at\tDate (UNIX timestamp)\tNo\tThe time specified for when a contact signed up.\nlast_seen_at\tDate (UNIX timestamp)\tNo\tThe time when the contact was last seen (either where the Intercom Messenger was installed or when specified manually).\nowner_id\tInteger\tNo\tThe id of an admin that has been assigned account ownership of the contact.\nunsubscribed_from_emails\tBoolean\tNo\tWhether the contact is unsubscribed from emails.\ncustom_attributes\tObject\tNo\tThe custom attributes which are set for the contact.\nCREATING NEW CUSTOM DATA ATTRIBUTES\n\nYou can only write to custom data attributes that already exist on the workspace. If you need to create new attributes to write to, you should Create Data Attributes through the data Attributes API.\n\nResponse\n\nThis will return a Contact model of the contact you just updated."
  },
  {
    "title": "Tag companies",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/tags/tag-companies/",
    "html": "Tag companies\nExample Request & Response\n$ curl https://api.intercom.io/tags \\\n-XPOST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d'\n{\n  \"name\": \"Independent\",\n  \"companies\": [\n    {\n      \"id\" : \"53427b7ecce5722303000003\"\n    }\n  ]\n}\n\nHTTP/1.1 200 Ok\n\n{\n  \"type\": \"tag\",\n  \"name\": \"Independent\",\n  \"id\": \"17513\"\n}\n\nintercom.tags.tag(name: 'Independent', users: [{ id: \"42ea2f1b93891f6a99000427\" }, { email: \"foo@bar.com\" }])\n\n<?php\n# Note that you can use either id, user_id or email to tag a user.\n# You only need to use one per user, e.g. the below will tag\n# three users if each identifier is for a different, unique user\n$intercom->tags->tag([\n    \"name\" => \"VIPs\",\n    \"users\" => [\n        [\"id\" => \"5977e20941abfc5aae4552d1\"],\n        [\"user_id\" => \"12345\"],\n        [\"email\" => \"camus@phil.com\"]\n    ]\n]);\n?>\n\nUser one = new User().setEmail(\"river@serenity.io\");\nUser two = new User().setEmail(\"simon@serenity.io\")\nList<User> users = Lists.newArrayList(one, two);\nTag.tag(tag, new UserCollection(users));\n\n\nYou can tag a single or a list of companies.\n\nRequest Body Parameters\nParameters\tType\tRequired\tDescription\nname\tString\tYes\tThe name of the tag, which will be created if not found.\ncompanies\tObject\tYes\tAn array of objects with the unique id or company_id of the company to be tagged.\nResponse\n\nThis will return a Tag Model for the tag that was applied to the given company."
  },
  {
    "title": "Merge two contacts",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/contacts/merge-contact/",
    "html": "Merge two contacts\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/merge \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\\n\\n{\\n  \\\"from\\\": \\\"5d70dd30de4efd54f42fd526\\\",\\n  \\\"into\\\": \\\"5ba682d23d7cf92bef87bfd4\\\"\\n}\\n\n\nExample Errors\nhttphttp\nHTTP/1.1 404 FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\\n\n\nHTTP/1.1 400 UNPROCESSABLE ENTITY\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"0019c4t1derm7namdon0\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"invalid_merge\\\",\\n      \\\"message\\\": \\\"Merging can only be performed on a lead into a user\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can merge a contact with a role of lead into a contact with a role of user.\n\nWHAT HAPPENS UPON A CONTACT BEING MERGED?\n\nThe contact that's specified as from will be deleted after being merged into the contact specified as into. Attributes that don't exist on the contact specified as into will be copied over.\n\nRequest Body Parameters\nParameter\tType\tRequired\tDescription\nfrom\tString\tYes\tThe unique identifier for the contact to merge away from. Must be a lead.\ninto\tString\tYes\tThe unique identifier for the contact to merge into. Must be a user.\nResponse\n\nThis will return a Contact model for the contact who's been merged into."
  },
  {
    "title": "List all contacts",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/contacts/list-contacts/",
    "html": "List all contacts\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nInvalid starting_after param\nHTTP/1.1 400 BAD REQUEST\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"000nbboasf1qqab6b910\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"client_error\\\",\\n      \\\"message\\\": \\\"Invalid starting_after param. Please try again using a starting_after value from a paginated response\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can fetch a list of all contacts.\n\nResponse\n\nThis will return a paginated list of Contact objects .\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - list\ndata\tArray\tAn array containing Contact Objects\ntotal_count\tInteger\tThe total number of contacts\npages\tPagination Object\tThe information needed to paginate through contacts"
  },
  {
    "title": "Detach a conversation",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/tags/detach-a-tag-from-a-conversation/",
    "html": "Detach a conversation\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/conversations/<id>/tags/<tag_id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' -d\\n\\n{\\n  \\\"admin_id\\\": \\\"123\\\"\\n}\\n\n\nExample Errors\nhttphtml\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can untag a single conversation.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the conversation which is given by Intercom\nid\tString\tYes\tThe unique identifier for the tag which is given by Intercom\nRequest Body Parameter\nParameter\tType\tRequired\tDescription\nadmin_id\tString\tYes\tThe unique identifier for the admin who is removing the tag.\nResponse\n\nThis will return a Tag model for the tag that was removed from the conversation."
  },
  {
    "title": "Unsnoozing a conversation",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/conversations/unsnoozing-a-conversation/",
    "html": "Unsnoozing a conversation\nUnsnooze a conversation\n$ curl 'https://api.intercom.io/conversations/11055118659/reply' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"admin_id\": \"814860\",\n  \"message_type\":\"open\"\n}'\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"11055118659\",\n    \"created_at\": 1501496012,\n    \"updated_at\": 1501508752,\n    \"waiting_since\": 1501498931,\n    \"snoozed_until\": null,\n    \"conversation_message\": {\n        \"type\": \"conversation_message\",\n        \"id\": \"55951247\",\n        \"subject\": \"\",\n        \"body\": \"<p>Hi \\ud83d\\ude00 We hope you enjoy the example app. To get started just copy and paste some code into the JS editor. Let us know if you think this is useful? <br></p>\",\n        \"author\": {\n            \"type\": \"admin\",\n            \"id\": \"724865\"\n        },\n        \"attachments\": [],\n        \"url\": null\n    },\n    \"user\": {\n        \"type\": \"lead\",\n        \"id\": \"597f02cb22f4bb37597e0b7d\"\n    },\n    \"customers\": [\n        {\n            \"type\": \"lead\",\n            \"id\": \"597f02cb22f4bb37597e0b7d\"\n        },\n        {\n            \"type\": \"user\",\n            \"id\": \"58ff3f670f14ab4f1aa83750\"\n        }\n    ],\n    \"assignee\": {\n        \"type\": \"admin\",\n        \"id\": \"724860\"\n    },\n    \"conversation_parts\": {\n        \"type\": \"conversation_part.list\",\n        \"conversation_parts\": [\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712337945\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>test convo 1</p>\",\n                \"created_at\": 1501496025,\n                \"updated_at\": 1501496025,\n                \"notified_at\": 1501496025,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"user\",\n                    \"id\": \"597f02cb22f4bb37597e0b7d\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712338024\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>TestApp typically replies in a few hours. Don\\u2019t miss their reply.</p>\",\n                \"created_at\": 1501496028,\n                \"updated_at\": 1501496028,\n                \"notified_at\": 1501496028,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"bot\",\n                    \"id\": \"815309\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712338089\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p></p><p>Get notified by email</p>\",\n                \"created_at\": 1501496030,\n                \"updated_at\": 1501496030,\n                \"notified_at\": 1501496031,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"bot\",\n                    \"id\": \"815309\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712344562\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>group test two</p>\",\n                \"created_at\": 1501496290,\n                \"updated_at\": 1501496290,\n                \"notified_at\": 1501496291,\n                \"assigned_to\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712383990\",\n                \"part_type\": \"participant_added\",\n                \"body\": null,\n                \"created_at\": 1501497831,\n                \"updated_at\": 1501497831,\n                \"notified_at\": 1501497832,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712411349\",\n                \"part_type\": \"participant_added\",\n                \"body\": null,\n                \"created_at\": 1501498885,\n                \"updated_at\": 1501498885,\n                \"notified_at\": 1501498885,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712412506\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>group test</p>\",\n                \"created_at\": 1501498931,\n                \"updated_at\": 1501498931,\n                \"notified_at\": 1501498932,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"user\",\n                    \"id\": \"597f02cb22f4bb37597e0b7d\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712425169\",\n                \"part_type\": \"participant_removed\",\n                \"body\": null,\n                \"created_at\": 1501499414,\n                \"updated_at\": 1501499414,\n                \"notified_at\": 1501499414,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712728293\",\n                \"part_type\": \"snoozed\",\n                \"body\": null,\n                \"created_at\": 1501508752,\n                \"updated_at\": 1501508752,\n                \"notified_at\": 1501508752,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            }\n        ],\n        \"total_count\": 9\n    },\n    \"open\": true,\n    \"state\": \"snoozed\",\n    \"read\": false,\n    \"tags\": {\n        \"type\": \"tag.list\",\n        \"tags\": []\n    }\n}\n\nArguments\nArgument\tRequired\tDescription\nadmin_id\tYes\tOnly admins can snooze a conversation so you need to provide the admin_id\nmessage_type\tYes\tMust be open to re-open or 'unsnooze' the conversation"
  },
  {
    "title": "Create or update a tag",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/tags/create-and-update-tags/",
    "html": "Create or update a tag\nExample Request & Response\n$ curl https://api.intercom.io/tags \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d'\n{\n  \"name\": \"Independent\"\n}'\n\nHTTP/1.1 200 Ok\n\n{\n  \"type\": \"tag\",\n  \"name\": \"Independent\",\n  \"id\": \"17513\"\n}\n\nintercom.tags.tag(name: 'Independent', users: [{ id: \"42ea2f1b93891f6a99000427\" }])\n\n<?php\n$intercom->tags->tag([\"name\" => \"php-tag\"]);\n?>\n\nTag t = new Tag().setName(\"Independent\");\nt = Tag.create(t);\n\n\nYou can create or update a tag.\n\nRequest Body Parameters\nAttribute\tRequired\tDescription\nname\tYes\tThe name of the tag, which will be created if not found, or the new name for the tag if this is an update request. Names are case insensitive.\nid\tOnly for update\tThe id of tag to updates.\nResponse\n\nThis will return a Tag Model of the tag you just created or updated."
  },
  {
    "title": "Attach a contact",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/tags/tag-contact/",
    "html": "Attach a contact\nExample Single User Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/tags \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' -d\\n\\n{\\n\\t\\\"id\\\": \\\"2084335\\\"\\n}\n\nExample Errors\nhttphtml\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can tag a single contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nRequest Body Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the tag which is given by Intercom\n\nYou can also tag multiple users\n\nMultiple Request Body Parameter\nParameter\tType\tRequired\tDescription\nname\tString\tYes\tThe name of the tag, which will be created if not found.\nusers\tObject\tYes\tAn array of objects with the unique identifier of the users to be tagged.\nExample Multi User Request & Response\ncurlhttp\n$ curl https://api.intercom.io/tags \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' -d\\n{\\n  \\\"name\\\": \\\"Independent\\\",\\n  \\\"users\\\": [\\n    {\\n      \\\"id\\\": \\\"56cde0cc3deab1bd8c000100\\\"\\n    },\\n    {\\n      \\\"id\\\": \\\"63ced1cc3deab1bd8c11011\\\"\\n    }\\n  ]\\n }\n\nResponse\n\nThis will return a Tag model for the tag that was added to the contact."
  },
  {
    "title": "List attached tags",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/contacts/list-tags-of-contact/",
    "html": "List attached tags\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/tags \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can fetch a list of tags that are associated to a contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return a list of Tag objects.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - tag.list\ntags\tArray\tAn array containing Tag Objects"
  },
  {
    "title": "List attached segments for contact",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/contacts/list-attached-segments/",
    "html": "List attached segments for contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/segments \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can fetch a list of segments that are associated to a contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return a list of Segment objects.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - list\ndata\tArray\tAn array containing Segment Objects"
  },
  {
    "title": "List attached companies",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/contacts/list-companies-of-contact/",
    "html": "List attached companies\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/companies \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can fetch a list of companies that are associated to a contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return a paginated list of Company objects.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - company.list\ncompanies\tArray\tAn array containing Company Objects\ntotal_count\tInteger\tThe total number of companies associated to this contact\npages\tPagination Object\tThe information needed to paginate through companies"
  },
  {
    "title": "List attached email subscriptions",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/contacts/list-attached-email-subscriptions/",
    "html": "List attached email subscriptions\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/subscriptions \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 NOT FOUND\\n{\\n    \\\"type\\\": \\\"error.list\\\",\\n    \\\"request_id\\\": \\\"cc1a749e-6cc4-4b7c-944c-e26bb6d61662\\\",\\n    \\\"errors\\\": [\\n        {\\n            \\\"code\\\": \\\"not_found\\\",\\n            \\\"message\\\": \\\"User Not Found\\\"\\n        }\\n    ]\\n}\n\n\nYou can fetch a list of tags that are associated to a contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return a list of Subscription Type objects that the contact is associated with.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - list\ndata\tArray\tA list of subscriptions tied to the contact"
  },
  {
    "title": "Replying to Users Last Conversation",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/conversations/replying-to-users-last-conversation/",
    "html": "Replying to Users Last Conversation\n\nInstead of specifying a conversation id when replying, you can also reply to the most recent conversation for a user at https://api.intercom.io/conversations/last/reply:\n\nReplying to the Users Most Recent Conversation\n# Send a reply from admin 1234 to a user's last conversation\n$ curl https://api.intercom.io/conversations/last/reply \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"intercom_user_id\": \"536e564f316c83104c000020\",\n  \"body\": \"Let me know if you have any more questions!\",\n  \"type\": \"admin\",\n  \"admin_id\": \"1234\",\n  \"message_type\": \"comment\"\n}'\n\n<?php\n\n$intercom->conversations->replyToLastConversation([\n    \"intercom_user_id\" => \"5977303470ab497b1babb9ef\",\n    \"body\" => \"I am the wisest man alive, for I know one thing, and that is that I know nothing.\",\n    \"type\" => \"user\",\n    \"message_type\" => \"comment\"\n]);\n?>\n"
  },
  {
    "title": "Retrieve a contact",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/contacts/get-contact/",
    "html": "Retrieve a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id> \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can fetch the details of a single contact.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return a Contact model."
  },
  {
    "title": "Marking a Conversation as Read",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/conversations/marking-a-conversation-as-read/",
    "html": "Marking a Conversation as Read\n\nYou can mark a conversation within Intercom as read.\n\nMark a Conversation as Read\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/conversations/147 \\\\\\n-X PUT \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d'\\n{\\n  \\\"read\\\": true\\n}'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"conversation\\\",\\n  \\\"id\\\": \\\"147\\\",\\n  \\\"created_at\\\": 1400850973,\\n  \\\"updated_at\\\": 1400857494,\\n  \\\"read\\\": true\\n  # ...\\n}\\n\\n# NB: Full Conversation Object returned\n"
  },
  {
    "title": "Run assignment rules on a conversation",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/conversations/run-conversation-assignment-rules/",
    "html": "Run assignment rules on a conversation\n\nYou can set up assignment rules to assign conversations to the correct team or teammate.\n\nThis usually happens upon a new, user initiated conversation coming in. This API call allows you to trigger the assignment rules when a conversation is unassigned - whether that's during a conversation, or when a user responds to an admin initiated conversation.\n\nREQUIRED PRODUCT\n\nAssignment Rules are only available with Inbox Pro. You can upgrade here.\n\nAssign based on assignment rules\ncurlhttp\ncurl 'https://api.intercom.io/conversations/{convo_id}/run_assignment_rules'\\n-X POST \\n-H 'Authorization: Bearer <Acess Token>=' \\n-H 'Accept: application/json' \\n-H 'Content-Type: application/json'\n"
  },
  {
    "title": "Admin Initiated Conversation",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/conversations/admin-initiated-conversation/",
    "html": "Admin Initiated Conversation\nEmail From Admin\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/messages \\\\\\n-XPOST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d'\\n{\\n  \\\"message_type\\\": \\\"email\\\",\\n  \\\"subject\\\": \\\"Hey\\\",\\n  \\\"body\\\": \\\"Ponies, cute small horses or something more sinister?\\\",\\n  \\\"template\\\": \\\"plain\\\",\\n  \\\"from\\\": {\\n    \\\"type\\\": \\\"admin\\\",\\n    \\\"id\\\": \\\"394051\\\"\\n  },\\n  \\\"to\\\": {\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"536e564f316c83104c000020\\\"\\n  }\\n}'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"admin_message\\\",\\n  \\\"id\\\": \\\"2001\\\",\\n  \\\"created_at\\\": 1401916877,\\n  \\\"message_type\\\": \\\"email\\\",\\n  \\\"subject\\\" : \\\"Hey\\\",\\n  \\\"body\\\" : \\\"Ponies, cute small horses or something more sinister?\\\",\\n  \\\"template\\\": \\\"plain\\\",\\n  \\\"owner\\\": {\\n    \\\"email\\\": \\\"wash@serenity.io\\\",\\n    \\\"id\\\": \\\"394051\\\",\\n    \\\"name\\\": \\\"Wash\\\",\\n    \\\"type\\\": \\\"admin\\\"\\n  }\\n}\n\n\nYou can create a new admin initiated message by submitting a POST to https://api.intercom.io/messages along with JSON message.\n\nAn admin initiated message can be delivered to a user as an In-App conversation or as an Email. The message_type field is used to determine which, with a value of either inapp or email. For admin initiated In-App messages, they will not trigger push notifications.\n\nReceiving Users are identified by a user_id, id, or email field in the to object.\n\nReceiving Contacts are identified by a user_id or id field in the to object.\n\nThe type field for the to object is then set to either contact or user.\n\nThe subject field is only used for email type messages and will not be used for inapp message types.\n\nA sending admin must be added using the from field, along with a type field value of admin and the corresponding Intercom id for that admin. The admin's Intercom id value may be obtained from the List Admins resource.\n\nCONVERSATION V MESSAGE\n\nNote that since creating an admin-initiated conversation hits the /messages endpoint, the response contains a message object rather than a conversation object. As a result you will not see the conversation ID in the returned message object. You may, however, retrieve the customers's conversations and iterate over them looking for the message_id value.\n\nAttributes\nAttribute\tType\tDescription\nmessage_type\tstring\tThe kind of message being created. Values: inapp or email\nsubject\tstring\tOptional unless message_type is email. The title of the email.\nbody\tstring\tThe content of the message. HTML or plaintext.\ntemplate\tstring\tThe style of the outgoing message. Only valid for email messages. Possible values plain or personal.\nfrom\tobject\tRequired. An admin object containing the admin's id. The type field must have a value of admin.\nto\tobject\tRequired. A user object containing the user's id, email or user_id. The type field must have a value of user or of contact.\nReturns\n\nThe created message object.\n\nIf the from type was supplied with an admin's details, the owner field in the response will represent the admin in question."
  },
  {
    "title": "Replying to a Conversation",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/conversations/replying-to-a-conversation/",
    "html": "Replying to a Conversation\nReply with and Without Attachments\ncurlcurlrubyphpjava\n# Reply without attachment\\n$ curl 'https://api.intercom.io/conversations/{conversation_id}/reply' \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d'\\n{\\n  \\\"intercom_user_id\\\": \\\"536e564f316c83104c000020\\\",\\n  \\\"body\\\": \\\"Thanks again :)\\\",\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"message_type\\\": \\\"comment\\\"\\n}'\\n\\n\\n\\n# Reply with attachment\\n$ curl https://api.intercom.io/conversations/{conversation_id}/reply \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d'\\n{\\n  \\\"intercom_user_id\\\": \\\"536e564f316c83104c000020\\\",\\n  \\\"body\\\": \\\"Thanks again :)\\\",\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"message_type\\\": \\\"comment\\\",\\n  \\\"attachment_urls\\\": [\\\"http://www.example.com/attachment.jpg\\\"]\\n}\n\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"conversation\\\",\\n    \\\"id\\\": \\\"{conversation_id}\\\",\\n    # ...\\n}\\n# NB: Full Conversation Object returned\n\nReply with a note\ncurltext\n# You can replay with a note also and use some HTML formatting such as bold, italics, and lists\\ncurl 'https://api.intercom.io/conversations/{conversation_id}/reply' \\\\\\n-X POST \\\\\\n-H 'Authorization: Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' \\\\\\n{\\n  \\\"admin_id\\\": \\\"814860\\\",\\n  \\\"body\\\": \\\"<html> <body>  <h2>An Unordered HTML List</h2>  <ul>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ul>    <h2>An Ordered HTML List</h2>  <ol>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ol>   </body> </html>\\\",\\n  \\\"type\\\": \\\"admin\\\",\\n  \\\"message_type\\\": \\\"note\\\"\\n}\\n\n\nArguments\n\nFor a User Reply:\n\nArgument\tRequired\tDescription\ntype\tYes\tuser\nmessage_type\tYes\tMust be comment\nbody\tYes\tThe text body of the comment\nintercom_user_id\tone of\tThe Intercom defined id representing the user\nuser_id\tone of\tThe user id you have defined for the user\nemail\tone of\tThe email you have defined for the user\nattachment_urls\tNo\tA list of URLs of (image only) files that will be added as attachments. You can include up to 5 attachments.\n\nor for an Admin Reply:\n\nArgument\tRequired\tDescription\ntype\tYes\tadmin\nmessage_type\tYes\tMust be comment, assignment, open, close, or note\nadmin_id\tYes\tThe id of the Admin who is authoring the comment\nbody\tNo\tThe text body of the comment. Must be set for comment and note\nassignee_id\tNo\tAssignments only: assigns the conversation to the given admin id. Note this must be \"0\" if you want to move it to unassigned\nattachment_urls\tNo\tA list of URLs of files that will be added as attachments. You can include up to 5 attachments..\n\nNotes are not visible to the end user.\n\nReturns\n\nA full Conversation object, with Conversation Parts."
  },
  {
    "title": "List Admins",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/admins/list-admins/",
    "html": "List Admins\nList Admins\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/admins \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\\n{\\n    \\\"type\\\": \\\"admin.list\\\",\\n    \\\"admins\\\": [\\n        {\\n        \\t\\t\\\"type\\\": \\\"admin\\\",\\n            \\\"id\\\": \\\"493881\\\",\\n      \\t\\t\\t\\\"name\\\": \\\"Hoban Washburne\\\",\\n      \\t\\t\\t\\\"email\\\": \\\"wash@serenity.io\\\"\\n            \\\"away_mode_enabled\\\": false,\\n            \\\"away_mode_reassign\\\": false,\\n            \\\"team_ids\\\": [\\n                814865\\n            ]\\n        },\\n        {\\n            \\\"type\\\": \\\"admin\\\",\\n            \\\"email\\\": \\\"mal@serenity.io\\\",\\n            \\\"id\\\": \\\"646303\\\",\\n            \\\"name\\\": \\\"Malcolm Reynolds \\\",\\n            \\\"away_mode_enabled\\\": true,\\n            \\\"away_mode_reassign\\\": false,\\n            \\\"team_ids\\\": [\\n                814865\\n            ]\\n        },\\n        {\\n            \\\"type\\\": \\\"admin\\\",\\n            \\\"email\\\": \\\"jayne@serenity.io\\\",\\n            \\\"id\\\": \\\"1195856\\\",\\n            \\\"name\\\": \\\"Jayne Cobb \\\",\\n            \\\"away_mode_enabled\\\": false,\\n            \\\"away_mode_reassign\\\": false,\\n            \\\"team_ids\\\": [\\n                814865\\n            ]\\n        },\\n        {\\n            \\\"type\\\": \\\"team\\\",\\n            \\\"email\\\": null,\\n            \\\"id\\\": \\\"814865\\\",\\n            \\\"name\\\": \\\"SerenityTeam\\\",\\n            \\\"away_mode_enabled\\\": false,\\n            \\\"away_mode_reassign\\\": false,\\n            \\\"admin_ids\\\": [\\n                493881,\\n                646303,\\n                1195856\\n            ]\\n        }\\n    ]\\n}\n\n\nAn App's admins can be fetched by sending a GET request to https://api.intercom.io/admins/.\n\nAdmin List\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'admin.list'\nadmins\tarray\tA list of admin objects\npages\tobject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch.\nRequest Parameters\n\nNone.\n\nReturns\n\nA list of admin objects for the App. The result may also have a pages object if the response is paginated."
  },
  {
    "title": "The article model",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/articles/the-article-model/",
    "html": "The article model\nExample Article Object\nJSON\n{  \\\"id\\\": 1,  \\\"type\\\": \\\"article\\\",  \\\"workspace_id\\\": \\\"abcdef\\\",  \\\"title\\\": \\\"Default language title\\\",  \\\"description\\\": \\\"Default language description\\\",  \\\"body\\\": \\\"Default language body in html\\\",  \\\"author_id\\\": 1,  \\\"state\\\": \\\"published\\\",  \\\"created_at\\\": 123456,  \\\"updated_at\\\": 123456,  \\\"url\\\": \\\"http://intercom.test/help/en/articles/3-default-language\\\",  \\\"parent_id\\\": 1,  \\\"parent_type\\\": \\\"collection\\\",  \\\"default_locale\\\": \\\"en\\\",  \\\"translated_content\\\": {    \\\"type\\\": \\\"article_translated_content\\\",    \\\"fr\\\": {      \\\"type\\\": \\\"article_content\\\",      \\\"title\\\": \\\"French title\\\",      \\\"description\\\": \\\"French description\\\",   \\t  \\\"body\\\": \\\"French body in html\\\",   \\t  \\\"author_id\\\": 1,     \\t\\\"state\\\": \\\"published\\\",     \\t\\\"created_at\\\": 7891011,     \\t\\\"updated_at\\\": 7891011,     \\t\\\"url\\\": \\\"http://intercom.test/help/fr/articles/3-french-multilingual\\\"    }  },  \\\"statistics\\\": {      \\\"type\\\": \\\"article_statistics\\\",      \\\"views\\\": 10,      \\\"conversations\\\": 0,      \\\"reactions\\\": 8,      \\\"happy_reaction_percentage\\\": 38,      \\\"neutral_reaction_percentage\\\": 38,      \\\"sad_reaction_percentage\\\": 25  }}\n\nExample HTML Body\nHTML\n<h1 class=\\\"intercom-align-left\\\">Header 1</h1><h2 class=\\\"intercom-align-left\\\">Header 2</h2><h2 class=\\\"intercom-align-center\\\">Centered Header</h2><p class=\\\"intercom-align-left\\\">   <a href=\\\"https://intercom.com\\\" target=\\\"_blank\\\">Link</a></p><ul>   <li>Single-level List</li></ul><pre><code>'Pre' Code</code></pre><p class=\\\"intercom-align-left\\\"><code>Inline code</code></p><p class=\\\"intercom-align-left\\\"><b>Bold text</b></p><p class=\\\"intercom-align-left\\\"><i>Italic text</i></p><p class=\\\"intercom-align-center\\\">Centered text</p><p class=\\\"intercom-align-left\\\">Image without link:</p><div class=\\\"intercom-container intercom-align-left\\\">   <img      src=\\\"https://downloads.intercomcdn.com/i/o/204050460/7a140f62f8e715d1d6cf246d/Image.jpg\\\"      /></div><p class=\\\"intercom-align-left\\\">Image with link:</p><div class=\\\"intercom-container intercom-align-left\\\">   <a target=\\\"_blank\\\" href=\\\"https://intercom.com\\\"      ><img      src=\\\"https://downloads.intercomcdn.com/i/o/204049719/b41c9a81c13b8a91023df1e7/Image.jpg\\\"      /></a></div><p class=\\\"intercom-align-left\\\">Image with link and centered:</p><div class=\\\"intercom-container intercom-align-center\\\">   <a target=\\\"_blank\\\" href=\\\"https://intercom.com\\\"      ><img      src=\\\"https://downloads.intercomcdn.com/i/o/204050579/2e85d79a0d9e0c47b088f50c/Image.jpg\\\"      /></a></div><div class=\\\"intercom-container intercom-align-left\\\">   <a class=\\\"intercom-h2b-button\\\" target=\\\"_blank\\\" href=\\\"https://intercom.com\\\"      >Button</a      ></div><div class=\\\"intercom-container intercom-align-center\\\">   <a class=\\\"intercom-h2b-button\\\" target=\\\"_blank\\\" href=\\\"https://intercom.com\\\"      >Centered Button</a      ></div><p class=\\\"intercom-align-left\\\">Video Embed with iFrame:</p><div class=\\\"intercom-h2b-video\\\">   <iframe      src=\\\"https://www.youtube.com/embed/jqO8AQHj7Fw?rel=0\\\"      frameborder=\\\"0\\\"      webkitallowfullscreen      mozallowfullscreen      allowfullscreen      ></iframe></div><p class=\\\"intercom-align-left\\\"></p>\n\n\nThe Articles API is a central place to gather all information and take actions on your articles. Articles can live within collections and sections, or alternatively they can stand alone.\n\nFor collections and sections you should refer to the Help Center endpoint.\n\nArticle Object\nKey\tType\tDescription\ntype\tString\tThe type of object - article.\nid\tString\tThe unique identifier for the article which is given by Intercom.\nworkspace_id\tString\tThe id of the workspace which the article belongs to.\ntitle\tString\tThe title of the article.\nFor multilingual articles, this will be the title of the default language's content.\ndescription\tString\tThe description of the article.\nFor multilingual articles, this will be the description of the default language's content.\nbody\tString\tThe body of the article in HTML.\nFor multilingual articles, this will be the body of the default language's content.\nSee more on what we accept in the Supported HTML table below.\nauthor_id\tString\tThe id of the author of the article.\nFor multilingual articles, this will be the id of the author of the default language's content. Must be a teammate on the help center's workspace.\nstate\tString\tWhether the article is published or is a draft.\nFor multilingual articles, this will be the state of the default language's content.\ncreated_at\tTimestamp\tThe time when the article was created.\nFor multilingual articles, this will be the timestamp of creation of the default language's content.\nupdated_at\tTimestamp\tThe time when the article was last updated.\nFor multilingual articles, this will be the timestamp of last update of the default language's content.\nurl\tString\tThe URL of the article.\nFor multilingual articles, this will be the URL of the default language's content.\nparent_id\tString\tThe id of the article's parent collection or section. An article without this field stands alone.\nparent_type\tString\tThe type of parent, which can either be a collection or section.\ndefault_locale\tString\tThe default locale of the help center. This field is only returned for multilingual help centers.\ntranslated_content\tObject\tAn Article Translated Content Object for multilingual articles. This field is only returned for multilingual help centers.\nArticle Translated Content Object\nKey\tType\tWriteable?\tDescription\ntype\tString\tNo\tThe type of object - article_translated_content.\n<locale>ar, bg, bs, ca, cs, da, de, 'de-form', el, en, es, et, fi, fr, he, hr, hu, id, it, ja, ko, lt, lv, mn, nb, nl, pl, 'pt-BR', pt, ro, ru, sl, sr, sv, tr, vi, 'zh-CN', 'zh-TW'\tObject\tYes\tAn Article Content Object for each supported locale of the multilingual help center.The default locale's content and information will be contained in the initial Article Object.If there's no content for a locale, the value will be nil.\nArticle Content Object\nKey\tType\tWriteable?\tDescription\ntype\tString\tNo\tThe type of object - article_content.\ntitle\tString\tYes\tThe title of the article.\ndescription\tString\tYes\tThe description of the article.\nbody\tString\tYes\tThe body of the article in HTML.\nauthor\tString\tYes\tThe id of the author of the article.\nstate\tString\tYes\tWhether the article is published or is a draft.\ncreated_at\tTimestamp\tNo\tThe time when the article was created.\nupdated_at\tTimestamp\tNo\tThe time when the article was last updated.\nurl\tString\tNo\tThe URL of the article.\nArticle Statistics Object\nKey\tType\tWriteable?\tDescription\ntype\tString\tNo\tThe type of object - article_statistics.\nviews\tInteger\tNo\tThe number of total views the article has received.\nconversations\tInteger\tNo\tThe number of conversations started from the article.\nreactions\tInteger\tNo\tThe number of total reactions the article has received.\nhappy_reaction_percentage\tInteger\tNo\tThe percentage of happy reactions the article has received against other types of reaction.\nneutral_reaction_percentage\tInteger\tNo\tThe percentage of neutral reactions the article has received against other types of reaction.\nsad_reaction_percentage\tInteger\tNo\tThe percentage of sad reactions the article has received against other types of reaction.\nSupported HTML\n\nThe table below defines the subset of HTML accepted when creating or updating an Article. Over time we may add support for new HTML elements and attributes, since this will not constitute a breaking change, we advise any client code to support the full HTML specification when reading article content.\n\nRemoving element support, or otherwise changing the API in a way that causes previously supported HTML to become unsupported will be considered a breaking change.\n\nTag\tWhat does it do?\tAdditional Details\n<p>\tParagraph\tAll text must be placed within paragraph tags.\n<br>\tLine break\tSupported in-line.\n<hr>\tHorizontal rule\tNA\n<h1> <h2>\tHeading\tOnly these two header tags are supported. All others will be replaced with <h2>.\n<a>\tLink\tAn image can be placed in-between the link tags.\n<img>\tImage\tImages will be uploaded to Intercom and we'll use an Intercom link to display these.\nIf these fail to upload then we'll hard fail and return 400 Bad Request.\n<ul> <ol> <li>\tList\tLists must contain at least one non-empty <li> element.\n\n<li> elements can contain plain text, or any other supported HTML tags, except <table>.\n\nIf these criteria aren't met, then the article will hard fail and return 400 Bad request.\n<table>\tTable\tNeeds to have at least one row and one cell.\nCan contain any other supported HTML tags, except another <table> within.\nIf these criteria aren't met then it will hard fail and return 400 Bad request.\n<iframe>\tVideo\tsrc must be for a supported video embed link.\nOnly works for Youtube, Wistia, Vimeo, Loom, Vidyard or StreamIO.\n<pre> <code>\tPre-formatted code\t\n<b> <strong>\tBold\t\n<i> <em>\tItalic\t\nSupported CSS\nClass\tWhat does it do?\tWhere does it work?\nintercom-align-center\tCenter Alignment\tOn tag level: Headers, Paragraphs.On wrapping div: Images, Buttons.\nintercom-h2b-button\tButton\tOn tag level: Links\nUnsupported HTML\nTag\tWhat does it do?\tWhat do we do?\n<dl>\tDefinition List\tHard fail - 400 Bad Request\n<ul> or <ol>\tNested lists\tHard fail - 400 Bad Request\n<iframe>\tiFrameUnsupported video\tHard fail - 400 Bad Request\n<div> <span>\tContent division\tReplace with <p>\n<h3> to <h6>\tHeading\tReplace with <h2>\n<form>\tForm\tRemove from content\n<input> <textarea>\tInput\tRemove from content\n<script>\tJavascript Script\tRemove from content\n<head> <html> <footer> etc.\tAll other tags\tRemove from contentInternals replaced with <p>"
  },
  {
    "title": "Detach a contact from a subscription",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/subscription-types/detach-a-contact/",
    "html": "Detach a contact from a subscription\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<contact_id>/subscriptions/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\n\nExample Errors\nhttphttp\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"User Not Found\\\"\\n    }\\n  ]\\n}\n\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"060932ab-ab9d-4f89-88f3-d0152d005873\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Resource Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can detach an opt out subscription for a single contact.\n\nRequest Path Parameter\nAttribute\tType\tDescription\ncontact_id\tString\tThe unique identifier for the contact which is given by Intercom\nid\tString\tThe unique identifier for the subscription type which is given by Intercom\nResponse\n\nThis will return a Subscription Type model for the opt out subscription type that was removed from the contact."
  },
  {
    "title": "Deleted Company Object",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Models/deleted_company_object/",
    "html": "Response returned when an object is deleted"
  },
  {
    "title": "List all companies",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/companies/list-companies/",
    "html": "List all companies\nList companies\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/companies \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"company.list\\\",\\n  \\\"total_count\\\": 105,\\n  \\\"companies\\\": [\\n    {\\n      \\\"type\\\": \\\"company\\\",\\n      \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n       ...\\n     },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/companies?per_page=50&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 3\\n  }\\n}\\n\\n# NB: Full company objects are returned\n\n\nYou can list companies. The company list is sorted by the last_request_at field and by default is ordered descending, most recently requested first.\n\nNote that the API does not include companies who have no associated users in list responses.\n\nRequest Parameters\n\nYou can optionally request the result page size and which page to fetch as follows -\n\nParameter\tRequired\tDescription\npage\tno\twhat page of results to fetch defaults to first page.\nper_page\tno\thow many results per page defaults to 15.\norder\tno\tasc or desc. Return the companies in ascending or descending order. defaults to desc.\nRequest Query Parameters\nParameter\tRequired\tDescription\ntag_id\tone of\tThe id of the tag to filter by.\nsegment_id\tone of\tThe id of the segment to filter by.\nResponse\n\nThis will return a paginated list of Company Objects\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - list\ndata\tArray\tAn array containing Company Objects.\ntotal_count\tInteger\tThe total number of companies.\npages\tPagination Object\tThe information needed to paginate through companies\n\nWhen using the Companies endpoint and the pages object to iterate through the returned companies, there is a limit of 10,000 Companies that can be returned. If you need to list or iterate on more than 10,000 Companies, please use the Scroll API."
  },
  {
    "title": "Deleted Article Object",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Models/deleted_article_object/",
    "html": "Response returned when an object is deleted"
  },
  {
    "title": "Contact Archived",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Models/contact_archived/",
    "html": "archived contact object"
  },
  {
    "title": "Data Event Summary Item",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Models/data_event_summary_item/",
    "html": "This will return a summary of a data event for the App."
  },
  {
    "title": "Retrieve a team",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/teams/view-a-team/",
    "html": "Retrieve a team\nExample Request & Response\n$ curl https://api.intercom.io/teams/2744328 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"admin_ids\": [\n        646303,\n        814860\n    ],\n    \"id\": \"2744328\",\n    \"name\": \"the_a_team\",\n    \"type\": \"team\"\n}\n\n\nYou can fetch the details of a single team, containing an array of admins that belong to this team.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier of a given team.\nResponse\n\nThis will return a Team Object."
  },
  {
    "title": "Companies",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Models/company_list/",
    "html": "This will return a list of companies for the App."
  },
  {
    "title": "Segment List",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/api.intercom.io/Models/segment_list/",
    "html": "This will return a list of Segment Objects. The result may also have a pages object if the response is paginated."
  },
  {
    "title": "Help Centers",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/api.intercom.io/Help-Center/help_center_list/",
    "html": "A list of Help Centers belonging to the App"
  },
  {
    "title": "Delete a collection",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Help-Center/deleteCollection/",
    "html": "You can delete a single collection by making a DELETE request to https://api.intercom.io/collections/<id>."
  },
  {
    "title": "Attach a Contact to a Company",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Companies/attachContactToACompany/",
    "html": "You can attach a company to a single contact."
  },
  {
    "title": "Retrieve a segment",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/api.intercom.io/Segments/retrieveSegment/",
    "html": "You can fetch the details of a single segment."
  },
  {
    "title": "Remove tag from a contact",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Contacts/detachTagFromContact/",
    "html": "You can remove tag from a specific contact. This will return a tag object for the tag that was removed from the contact."
  },
  {
    "title": "List tags attached to a contact",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Contacts/listTagsForAContact/",
    "html": "You can fetch a list of all tags that are attached to a specific contact."
  },
  {
    "title": "Unarchive contact",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Contacts/UnarchiveContact/",
    "html": "You can unarchive a single contact."
  },
  {
    "title": "Update a collection",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Help-Center/updateCollection/",
    "html": "You can update the details of a single collection by making a PUT request to https://api.intercom.io/collections/<id>."
  },
  {
    "title": "Rate Limiting",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/errors/rate-limiting/",
    "html": "Rate Limiting\n# Example with the default rate limit of 1000\n\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 100\nX-RateLimit-Reset: 1487332510\n\n# After another request:\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 99\nX-RateLimit-Reset: 1487332510\n\n# After window resets\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 100\nX-RateLimit-Reset: 1487332520\n\n# If you make more than the allowed requests\nHTTP/1.1 429 Too Many Requests\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 0\nX-RateLimit-Reset: 1487332520\n\nintercom.rate_limit_details\n#=> {:limit=>1000, :remaining=>999, :reset_at=>2019-08-05 14:59:00 +0100}\n\n\nAPI Rate Limits are in place to protect Intercom from API traffic spikes that could put our databases at risk. We therefore measure the amount of requests sent to the API in order to throttle these when they surpass the amount allowed. We will respond with '429 Too Many Requests' and the following headers:\n\nHeader Name\tHeader Description\nX-RateLimit-Limit\tMaximum number of requests allowed for the app.\nX-RateLimit-Remaining\tNumber of requests left in the current time.\nX-RateLimit-Reset\tTime when the number of requests will be reset to the maximum limit. Shown as UNIX timestamp.\nWHAT ABOUT CANVAS KIT REQUESTS?\n\nRate Limits only apply to calls to the REST API, not to any webhook requests that are sent as part of the Canvas Kit capabilities.\n\nWhat is the default amount of requests?\n\nEvery app will have default rate limits. The amount we rate limit them by is different for apps which are privately built for your own usage, or for apps that are publicly installed by third-parties.\n\nPrivate\n\nPrivate apps have a default rate limit of 10,000 API calls per minute per app and 25,000 API calls per minute per workspace. This means that if a workspace has multiple private apps installed, every one contributes towards total number of requests.\n\nPublic\n\nPublic apps have a default rate limit of 10,000 API calls per minute for each app and 25,000 API calls per minute per workspace. This means that if a workspace has multiple public apps installed, each one has its own separate request limit without contributing to the others.\n\nHIGHER RATE LIMITS\n\nIf you require higher rate limits than the defaults, you can contact us using the messenger in the bottom right.\n\nWhen does the amount of requests reset?\n\nAlthough the permitted limit of requests lasts for 1 minute, we evenly distribute this into 10 second windows. This means that every 10 seconds, the amount of permitted requests resets. For example, a default rate limit of 1000 per minute means that you can send a maximum of 166 operations per 10 second period (1000/6).\n\nHow can I handle rate limits?\n\nTo prevent hitting the rate limits, here are a few options for handling within your code.\n\nUse the header information\n\nYou can find the number of requests allowed in your current window in the Intercom headers, or if you are using the Intercom Ruby SDK you can call your client's rate_limit_details which returns a Hash with information about your app's rate limit.\n\nYou can use the remaining number of requests allowed in your current window and when this is below a certain value you can rest until your rate limit is reset.\n\nIn the example below the app is restricted to a rate limit of 5 just to show the output returned — note that we’ve also shown what information is available in the Intercom client and the response for your current rate limits using the Ruby SDK.\n\nrequire 'intercom'\nrequire 'stringio'\n\nintercom = Intercom::Client.new(token: ENV['YOUR_TOKEN'])\n\nretries = 0\nmax_retries = 3\nbackoff_factor = 2\n\nfor num in 0..20\n  begin\n    puts(\"Request Number #{num+1}\")\n    email = 'contact' + num.to_s + '@example.com'\n    name = 'Mrs ' + num.to_s + \"Example\"\n    # Make a HTTP POST request to Intercom to create/update a user\n    response = intercom.contacts.create(:email => email, :name => name, :signed_up_at => Time.now.to_i)\n    # These are the headers we have access to when making requests\n    puts(\"Rate Limit: #{intercom.rate_limit_details[:limit]} \\n\")\n    puts(\"Remaining: #{intercom.rate_limit_details[:remaining]} \\n\")\n    puts(\"Reset Time: #{intercom.rate_limit_details[:reset_at]} \\n\")\n\n    # Check when request limit is under a certain number\n    if not intercom.rate_limit_details[:remaining].nil? and intercom.rate_limit_details[:remaining] < 2\n      sleep_time = intercom.rate_limit_details[:reset_at].to_i - Time.now.to_i\n      puts(\"Waiting for #{sleep_time} seconds to allow for rate limit to be reset\")\n      sleep sleep_time\n    end\n  rescue => error\n    raise(\"Received a general error so exiting: #{error}\")\n  end\nend\n\n\nThe output from the above code is below. You would not need to output all of this data, but this should offer an example of what to expect and how you might approach implementing a rest until the limit is reset.\n\nRequest Number 1\nRate Limit:\nRemaining:\nReset Time:\nRequest Number 2\nRate Limit: 5\nRemaining: 5\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 3\nRate Limit: 5\nRemaining: 4\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 4\nRate Limit: 5\nRemaining: 3\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 5\nRate Limit: 5\nRemaining: 2\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 6\nRate Limit: 5\nRemaining: 1\nReset Time: 2023-12-08 15:19:51 +0000 \nWaiting for 38 seconds to allow for rate limit to be reset\nRequest Number 7\nRate Limit: 5\nRemaining: 5\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 8\nRate Limit: 5\nRemaining: 4\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 9\nRate Limit: 5\nRemaining: 3\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 10\nRate Limit: 5\nRemaining: 2\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 11\nRate Limit: 5\nRemaining: 1\nReset Time: 2016-11-16 16:15:00 +0000\nWaiting for 58 seconds to allow for rate limit to be reset\n\nUse randomization\n\nWhile the reset option is one way to deal with rate limiting, you may want more granular control over your rate limit handling. For example, you might have a specific retry timeframe that you want to follow and not wait for the minute window to pass for your entire rate limit to be reset.\n\nIf you want more control over your rate limiting handling then you can check for the specific rate limit error returned and use some form of randomization in the backoff calculation.\n\nYou could change the retry code above to look like this to achieve some randomization:\n\nrequire 'intercom'\nrequire 'stringio'\n\nintercom = Intercom::Client.new(token: ENV['YOUR_TOKEN'])\n\nretries = 0\nmax_retries = 3\nbackoff_factor = 2\n\nfor num in 0..20\n  begin\n    puts(\"Request Number #{num+1}\")\n    email = 'contact' + num.to_s + '@example.com'\n    name = 'Mrs ' + num.to_s + \"Example\"\n    # Make a HTTP POST request to Intercom to create/update a user\n    response = intercom.contacts.create(:email => email, :name => name, :signed_up_at => Time.now.to_i)\n  rescue Intercom::RateLimitExceeded => error\n    #At this point we know we have encountered a limit\n    #So lets try for a few times and backoff a little in each case\n    puts(\"Error Msg: #{error.inspect} \\n\")\n    puts(\"http_code: #{error.http_code[:http_code]}\\n\" )\n    puts(\"http_code: #{error.http_code[:application_error_code]}\\n\" )\n    if retries <= max_retries\n      # Lets try it a few more times\n      retries += 1\n      # Set a range from num of retries to backoff and randomly sample from that\n      # You can pick any range you like here, this is just an example\n      backoff = rand(retries..(backoff_factor * retries))\n      puts(\"Backoff for #{backoff} seconds\")\n      sleep backoff\n    else\n      # Rasing error here so you can perform some action based on this event\n      raise(\"No longer retrying since we have retried #{retries} times.\\n\"\\\n              \"The error returned was: '#{error.message}'\")\n    end\n  rescue => error\n    raise(\"Received a general error so exiting: #{error}\")\n  end\nend\n\n\nAfter running this code, your output would look like this:\n\nRequest Number 1\nRequest Number 2\nRequest Number 3\nRequest Number 4\nRequest Number 5\nRequest Number 6\nRequest Number 7\nError Msg: #<Intercom::RateLimitExceeded: More than 5 requests received in 1 minute>\nhttp_code: 429\nhttp_code: rate_limit_exceeded\nBackoff for 2 seconds\nRequest Number 8\nError Msg: #<Intercom::RateLimitExceeded: More than 5 requests received in 1 minute>\nhttp_code: 429\nhttp_code: rate_limit_exceeded\nBackoff for 3 seconds\nRequest Number 9\nError Msg: #<Intercom::RateLimitExceeded: More than 5 requests received in 1 minute>\nhttp_code: 429\nhttp_code: rate_limit_exceeded\nBackoff for 3 seconds\nRequest Number 10\nError Msg: #<Intercom::RateLimitExceeded: More than 5 requests received in 1 minute>\nhttp_code: 429\nhttp_code: rate_limit_exceeded\nBackoff for 6 seconds\nRequest Number 11\nError Msg: #<Intercom::RateLimitExceeded: More than 5 requests received in 1 minute>\nhttp_code: 429\nhttp_code: rate_limit_exceeded\nadvanced_throttle.rb:32:in `rescue in block in <main>': No longer retrying since we have retried 4 times. (RuntimeError)\nThe error returned was: 'More than 5 requests received in 1 minute'\n\tfrom advanced_throttle.rb:9:in `block in <main>'\n\tfrom advanced_throttle.rb:8:in `each'\n\tfrom advanced_throttle.rb:8:in `<main>'\n\nUse a library for exponential backoff\n\nTo prevent having to implement your own backoff forumlas, you can use a library that will handle this for you. Some examples include:\n\nretry for Node.js\nbackoff for Python\nretries, a RubyGem which will be used for the below example\n\nWith retries, all you specify the number of retries you want and it will handle the rest.\n\nrequire 'intercom'\nrequire 'stringio'\nrequire 'retries'\n\nintercom = Intercom::Client.new(token: ENV['YOUR_TOKEN'])\n\nmax_retries = 3\n\nfor num in 0..20\n  handler = Proc.new do |exception, attempt_number, total_delay|\n    puts \"Handler saw a #{exception.class}; retry attempt #{attempt_number}; #{total_delay} seconds have passed.\"\n  end\n  with_retries(:max_tries => max_retries, :handler => handler, :rescue => [Intercom::RateLimitExceeded]) do |attempt|\n    puts(\"Request Number #{num+1}\")\n    # You can check for the max retry number and raise an error so you can take some action based on this event\n    if attempt >= max_retries\n      raise(\"No longer retrying since we have retried #{attempt} time.\\n\"\\\n    \"The error returned was: '#{Intercom::RateLimitExceeded}'\")\n    end\n    puts(\"Request Number #{num+1}\")\n    email = 'contact' + num.to_s + '@example.com'\n    name = 'Mrs ' + num.to_s + \"Example\"\n    # Make a HTTP POST request to Intercom to create/update a user\n    response = intercom.contacts.create(:email => email, :name => name, :signed_up_at => Time.now.to_i)\n  end\nend\n\n\nThe is what the output of the above example looks like using retries:\n\nRequest Number 1\nRequest Number 2\nRequest Number 3\nRequest Number 4\nRequest Number 5\nRequest Number 6\nHandler saw a Intercom::RateLimitExceeded; retry attempt 1; 0.328696139 seconds have passed.\nRequest Number 6\nHandler saw a Intercom::RateLimitExceeded; retry attempt 2; 1.194656588 seconds have passed.\nRequest Number 6\nthrottle_retries.rb:14:in `block (2 levels) in <main>': No longer retrying since we have retried 3 times. (RuntimeError)\nThe error returned was: 'Intercom::RateLimitExceeded'\n\tfrom /home/ec2-user/.rvm/gems/ruby-2.3.0/gems/retries-0.0.5/lib/retries.rb:46:in `with_retries'\n\tfrom throttle_retries.rb:11:in `block in <main>'\n\tfrom throttle_retries.rb:7:in `each'\n\tfrom throttle_retries.rb:7:in `<main>'\n[ec2-user@ip-10-0-2-162 ~]$\n"
  },
  {
    "title": "Create a contact",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/contacts/create-contact/",
    "html": "Create a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts \\\\-X POST \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json'-H 'Content-Type: application/json' -d{\\t\\\"role\\\": \\\"user\\\",\\t\\\"external_id\\\": \\\"25\\\",\\t\\\"email\\\": \\\"wash@serenity.io\\\",\\t\\\"phone\\\": \\\"+1123456789\\\",\\t\\\"name\\\": \\\"Hoban Washburn\\\",\\t\\\"avatar\\\": \\\"https://example.org/128Wash.jpg\\\",\\t\\\"last_seen_at\\\": 1571069751,\\t\\\"signed_up_at\\\": 1571069751,\\t\\\"owner_id\\\": 127,\\t\\\"unsubscribed_from_emails\\\": false,\\t\\\"custom_attributes\\\": {\\t\\t\\\"paid_subscriber\\\": true,\\t\\t\\\"monthly_spend\\\": 155.5,\\t\\t\\\"team_mates\\\": 1\\t}}\n\nExample Errors\nhttphttp\nHTTP/1.1 409 CONFLICT{  \\\"type\\\": \\\"error.list\\\",  \\\"request_id\\\": \\\"80ec9d92-99ff-4da9-9a0e-c0ab7c42f7e7\\\",  \\\"errors\\\": [    {      \\\"code\\\": \\\"conflict\\\",      \\\"message\\\": \\\"A contact matching those details already exists with id=5da6f18e3d7cf967e4582d05\\\"    }  ]}\n\nHTTP/1.1 400 BAD REQUEST{  \\\"type\\\": \\\"error.list\\\",  \\\"request_id\\\": \\\"00043csj9iva7pl9mmmg\\\",  \\\"errors\\\": [    {      \\\"code\\\": \\\"parameter_invalid\\\",      \\\"message\\\": \\\"The owner specified is not a member of the workspace\\\"    }  ]}\n\n\nYou can create a new contact (ie. user or lead).\n\nRequest Body Parameters\nAttribute\tType\tRequired\tDescription\nrole\tString\tYes\tThe role of the contact. Accepted values are user or lead.\nexternal_id\tString\tYes - if role is user and email is blank\tA unique identifier for the contact which is given to Intercom\nemail\tString\tYes - if role is user and external_id is blank\tThe contacts email\nphone\tString\tNo\tThe contacts phone\nname\tString\tNo\tThe contacts name\navatar\tString\tNo\tAn image URL containing the avatar of a contact\nsigned_up_at\tTimestamp\tNo\tThe time specified for when a contact signed up\nlast_seen_at\tTimestamp\tNo\tThe time when the contact was last seen (either where the Intercom Messenger was installed or when specified manually)\nowner_id\tInteger\tNo\tThe id of an admin that has been assigned account ownership of the contact\nunsubscribed_from_emails\tBoolean\tNo\tWhether the contact is unsubscribed from emails\ncustom_attributes\tObject\tNo\tThe custom attributes which are set for the contact\nCREATING NEW CUSTOM DATA ATTRIBUTES\n\nYou can only write to custom data attributes that already exist on the workspace. If you need to create new attributes to write to, you should Create Data Attributes through the data Attributes API.\n\nResponse\n\nThis will return a Contact model of the contact you just created."
  },
  {
    "title": "View an Admin",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/admins/view-an-admin/",
    "html": "View an Admin\nRetrieve a single admin\n$ curl https://api.intercom.io/admins/493881 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"type\": \"admin\",\n    \"id\": \"493881\",\n    \"name\": \"Hoban Washburne\",\n    \"email\": \"wash@serenity.io\",\n    \"away_mode_enabled\": false,\n    \"away_mode_reassign\": false,\n    \"team_ids\": [\n        814865\n    ]\n}\n\n<?php\n$admin = $intercom->admins->getAdmin(\"493881\");\n?>\n\n\nEach admin object has its own URL, where the {id} is the value of the admins id field:\n\nhttps://api.intercom.io/admins/{id}"
  },
  {
    "title": "Update a data attribute",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/data-attributes/update-data-attributes/",
    "html": "Update a data attribute\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/data_attributes/163728 \\\\-X PUT \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept: application/json' \\\\-H 'Content-Type: application/json' -d{  \\\"description\\\": \\\"You are either great or bad\\\",  \\\"options\\\": [    {\\\"value\\\": \\\"great\\\"},    {\\\"value\\\": \\\"bad\\\"}  ]}\n\nExample Errors\nHTTP/1.1 404 NOT FOUND{  \"type\": \"error.list\",  \"request_id\": \"0006klvnje6ffng7ot80\",  \"errors\": [    {      \"code\": \"field_not_found\",      \"message\": \"We couldn't find that data attribute to update\"    }  ]}\n\nHTTP/1.1 422 UNPROCESSIBLE ENTITY{  \"type\": \"error.list\",  \"request_id\": \"0006klvnje6ffng7ot80\",  \"errors\": [    {      \"code\": \"data_invalid\",      \"message\": \"The Data Attribute you are trying to archive has a dependant object\"    }  ]}\n\nHTTP/1.1 400 BAD REQUEST{  \"type\": \"error.list\",  \"request_id\": \"0000rnvpf3m1f3nf4k40\",  \"errors\": [    {      \"code\": \"parameter_invalid\",      \"message\": \"You must have at least two options on a list type data attribute\"    }  ]}\n\n\nYou can update data attribute.\n\nRequest Body Parameters\nArgument\tType\tDescription\ndescription\tString\t(Optional) The readable description you see in the UI for the attribute.\noptions\tList\t(Optional) To change to or update list attributes. Provide a set of hashes with value as the key of the options you want to make.data_type must be string.\narchived\tBoolean\t(Optional) Whether the attribute is to be archived or not.\nUPDATING THE DATA TYPE IS NOT POSSIBLE\n\nIt is currently a dangerous action to execute changing a data attribute's type via the API. You will need to update the type via the UI instead.\n\nResponse\n\nThis will return a Data Attribute Model showing the details of your updated attribute."
  },
  {
    "title": "Adding to group conversations as admin",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/conversations/adding-to-group-conversations-as-admin/",
    "html": "Adding to group conversations as admin\nAdding a customer to a group conversation\nCUSTOMERS\n\nNote that customers refers to both users and leads.\n\n$ curl 'https://api.intercom.io/conversations/11055118659/customers' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"admin_id\": \"781236\",\n  \"customer\":{\n    \"intercom_user_id\": \"58c1c78946a0aa9ef45b098a\"\n  }\n}'\n\nHTTP/1.1 200 OK\n\n{\"customers\":[\n  {\"type\":\"user\",\"id\":\"597f02cb22f4bb37597e0b7d\"}, \n  {\"type\":\"lead\",\"id\":\"58ff3f670f14ab4f1aa83750\"}]\n}\n\n\nCustomers can be added to a conversation via a POST method to https://api.intercom.io/conversations/{convo_id}/customers/, which accepts a JSON object describing the customer.\n\nArguments\nArgument\tRequired\tDescription\nadmin_id\tYes\tYou must provide the ID of a valid admin to add a customer to the conversation\ncustomer\tYes\tJSON object describing the customer that you want to add to the conversation.\n\nCustomer object\n\nArgument\tRequired\tDescription\nintercom_user_id\tone of\tThe Intercom defined id representing the user (in the URL)\nuser_id\tone of\tThe user id you have defined for the user (or auto defined in the case of leads)\nemail\tone of\tThe email you have defined for the user\nNOTE ABOUT CUSTOMERS WITHOUT AN EMAIL\n\nIf you try to add a customer via intercom_user_id or user_id which does not have an email you will receive an error. Alternatively, If you add a customer via the email parameter and there is no user/lead in the system for that customer then we will create a new lead."
  },
  {
    "title": "List all collections",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/help-center/list-all-collections/",
    "html": "List all collections\nExample Request & Response (Single Language Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/collections \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can fetch a list of all collections by making a GET request to https://api.intercom.io/help_center/collections.\n\nResponse\nKey\tType\tDescription\ntype\tString\tThe type of object - list.\npages\tObject\tA Pages object with the information needed to paginate through collections.\ntotal_count\tInteger\tA count of the total number of collections.\ndata\tArray\tAn array of Collection objects.\nHOW ARE THE COLLECTIONS SORTED AND ORDERED?\n\nCollections will be returned in descending order on the updated_at attribute. This means if you need to iterate through results then we'll show the most recently updated collections first."
  },
  {
    "title": "List all data attributes",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/data-attributes/list-data-attributes/",
    "html": "List all data attributes\nExample Request & Response\ncurlcurl\n$ curl https://api.intercom.io/data_attributes?model=contact-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json'\n\n{  \\\"type\\\": \\\"list\\\",  \\\"data\\\": [    {      \\\"type\\\": \\\"data_attribute\\\",      \\\"model\\\": \\\"customer\\\",      \\\"name\\\": \\\"paid_subscriber\\\",      \\\"full_name\\\": \\\"custom_attributes.paid_subscriber\\\",      \\\"label\\\": \\\"paid_subscriber\\\",      \\\"description\\\": \\\"\\\",      \\\"data_type\\\": \\\"string\\\",      \\\"options\\\": [        \\\"pick_value_1\\\",        \\\"pick_value_2\\\"      ],      \\\"api_writable\\\": true,      \\\"ui_writable\\\": true,      \\\"custom\\\": true,      \\\"archived\\\": false,      \\\"admin_id\\\": \\\"1\\\",      \\\"created_at\\\": 1392734388,      \\\"updated_at\\\": 1392734388    },    {      \\\"type\\\": \\\"data_attribute\\\",      \\\"model\\\": \\\"customer\\\",      \\\"name\\\": \\\"region_name\\\",      \\\"full_name\\\": \\\"location_data.region_name\\\",      \\\"label\\\": \\\"Region\\\",      \\\"description\\\": \\\"\\\",      \\\"data_type\\\": \\\"string\\\",      \\\"api_writable\\\": false,      \\\"ui_writable\\\": true,      \\\"custom\\\": false,      \\\"archived\\\": false    },    {      \\\"type\\\": \\\"data_attribute\\\",      \\\"model\\\": \\\"company\\\",      \\\"name\\\": \\\"plan\\\",      \\\"full_name\\\": \\\"plan\\\",      \\\"label\\\": \\\"Plan\\\",      \\\"description\\\": \\\"\\\",      \\\"data_type\\\": \\\"string\\\",      \\\"api_writable\\\": true,      \\\"ui_writable\\\": true,      \\\"custom\\\": false,      \\\"archived\\\": false    },    {      \\\"type\\\": \\\"data_attribute\\\",      \\\"model\\\": \\\"conversation\\\",      \\\"name\\\": \\\"priority\\\",      \\\"full_name\\\": \\\"priority\\\",      \\\"label\\\": \\\"Priority\\\",      \\\"description\\\": \\\"\\\",      \\\"data_type\\\": \\\"string\\\",      \\\"api_writable\\\": true,      \\\"ui_writable\\\": true,      \\\"custom\\\": true,      \\\"archived\\\": false    }  ]}\n\n\nYou can fetch a list of all data attributes belonging to a workspace for contacts, companies or conversations.\n\nRequest Query Parameters\nParameter\tType\tRequired?\tDescription\nmodel\tString\tNo\tSpecify the data attribute model to return. Possible values are contact, company and conversation.\ninclude_archived\tBoolean\tNo\tInclude archived attributes in the list.By default we return only non archived data attributes.\nResponse\n\nThis will return a List of Data Attribute Models."
  },
  {
    "title": "Snooze a conversation",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/conversations/snooze-a-conversation/",
    "html": "Snooze a conversation\nExample Request & Response\ncurljson\n$ curl 'https://api.intercom.io/conversations/<id>/reply' \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d\\n\\n{\\n  \\\"message_type\\\":\\\"snoozed\\\",\\n  \\\"admin_id\\\": \\\"724860\\\",\\n  \\\"snoozed_until\\\":\\\"1501512795\\\"\\n}\n\n\nYou can snooze a conversation to reopen on a future date.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Body Parameters\n\nTo snooze a conversation:\n\nParameter\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tAlways snoozed.\nadmin_id\tString\tYes\tThe id of the admin which is performing the action.\nsnoozed_until\tUNIX Timestamp\tYes\tThe time you want the conversation to reopen.\nResponse\n\nThis will return the Conversation which was snoozed."
  },
  {
    "title": "Delete a contact",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/contacts/delete-contact/",
    "html": "Delete a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can delete a single contact.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return an object with details on the deleted contact.\n\nAttribute\tType\tDescription\nid\tString\tThe unique identifier for the contact which is given by Intercom\nobject\tString\tThe type of object - contact\ndeleted\tBoolean\tWhether the contact has been deleted - true"
  },
  {
    "title": "Replying to a Conversation",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/conversations/replying-to-a-conversation/",
    "html": "Replying to a Conversation\nReply with and Without Attachments\ncurlcurlrubyphpjava\n# Reply without attachment\\n$ curl 'https://api.intercom.io/conversations/{conversation_id}/reply' \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d'\\n{\\n  \\\"intercom_user_id\\\": \\\"536e564f316c83104c000020\\\",\\n  \\\"body\\\": \\\"Thanks again :)\\\",\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"message_type\\\": \\\"comment\\\"\\n}'\\n\\n\\n\\n# Reply with attachment\\n$ curl https://api.intercom.io/conversations/{conversation_id}/reply \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d'\\n{\\n  \\\"intercom_user_id\\\": \\\"536e564f316c83104c000020\\\",\\n  \\\"body\\\": \\\"Thanks again :)\\\",\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"message_type\\\": \\\"comment\\\",\\n  \\\"attachment_urls\\\": [\\\"http://www.example.com/attachment.jpg\\\"]\\n}\n\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"conversation\\\",\\n    \\\"id\\\": \\\"{conversation_id}\\\",\\n    # ...\\n}\\n# NB: Full Conversation Object returned\n\nReply with a note\ncurltext\n# You can replay with a note also and use some HTML formatting such as bold, italics, and lists\\ncurl 'https://api.intercom.io/conversations/{conversation_id}/reply' \\\\\\n-X POST \\\\\\n-H 'Authorization: Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' \\\\\\n{\\n  \\\"admin_id\\\": \\\"814860\\\",\\n  \\\"body\\\": \\\"<html> <body>  <h2>An Unordered HTML List</h2>  <ul>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ul>    <h2>An Ordered HTML List</h2>  <ol>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ol>   </body> </html>\\\",\\n  \\\"type\\\": \\\"admin\\\",\\n  \\\"message_type\\\": \\\"note\\\"\\n}\\n\n\nArguments\n\nFor a User Reply:\n\nArgument\tRequired\tDescription\ntype\tYes\tuser\nmessage_type\tYes\tMust be comment\nbody\tYes\tThe text body of the comment\nintercom_user_id\tone of\tThe Intercom defined id representing the user\nuser_id\tone of\tThe user id you have defined for the user\nemail\tone of\tThe email you have defined for the user\nattachment_urls\tNo\tA list of URLs of (image only) files that will be added as attachments. You can include up to 5 attachments.\n\nor for an Admin Reply:\n\nArgument\tRequired\tDescription\ntype\tYes\tadmin\nmessage_type\tYes\tMust be comment, assignment, open, close, or note\nadmin_id\tYes\tThe id of the Admin who is authoring the comment\nbody\tNo\tThe text body of the comment. Must be set for comment and note\nassignee_id\tNo\tAssignments only: assigns the conversation to the given admin id. Note this must be \"0\" if you want to move it to unassigned\nattachment_urls\tNo\tA list of URLs of files that will be added as attachments. You can include up to 5 attachments..\n\nNotes are not visible to the end user.\n\nReturns\n\nA full Conversation object, with Conversation Parts."
  },
  {
    "title": "Update a conversation",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/conversations/update-a-conversation/",
    "html": "Update a conversation\nExample Request & Response\n$ curl https://api.intercom.io/conversations/<id> \\\n-X PUT \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d\n\n{\n  \"read\": true,\n  \"custom_attributes\": {\n\t  \"issue_type\": \"Billing\",\n\t  \"priority\": \"High\"\n  }\n}\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"1911149811\",\n    \"created_at\": 1539897198,\n    \"updated_at\": 1540393270,\n    \"source\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"contacts\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"teammates\": [\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    ],\n    \"admin_assignee_id\": \"814860\",\n    \"team_assignee_id\": null,\n    \"custom_attributes\": {\n      \"issue_type\": \"Billing\",\n      \"priority\": \"High\"\n    },\n    \"topics\": {\n        \"type\": \"topic.list\",\n        \"topics\": [\n            {\n                \"type\": \"topic\"\n                \"name\": \"Example Topic 1\",\n                \"id\": 839\n            }\n        ],\n        \"total_count\": 1\n    },\n    \"open\": true,\n    \"state\": \"open\",\n    \"read\": true,\n    \"waiting_since\": 64654125776\n    \"snoozed_until\": null,\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\",\n    },\n    \"first_contact_reply\": {\n    \t\"created_at\": 1539897198\n    \t\"type\": \"conversation\",\n    \t\"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"priority\": \"not_priority\",\n    \"sla_applied\": {\n    \t\"sla_name\": \"VIP customer <5m\",\n      \"sla_status\": \"missed\",\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"contact\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null,\n            \"name\": null,\n            \"email\": null\n        }\n    },\n    \"statistics\": {\n      \"time_to_assignment\": 2310,\n      \"time_to_admin_reply\": 2408,\n      \"time_to_first_close\": 4915 ,\n      \"time_to_last_close\": 5125,\n      \"median_time_to_reply\": 321,\n      \"first_contacat_reply_at\": 1539897200,\n      \"first_assignment_at\": 1539897200,\n      \"first_admin_reply_at\": 1539897200,\n      \"first_close_at\": 1539897200,\n      \"last_assignment_at\": 1539897200,\n      \"last_assignment_admin_reply_at\": 1539897200,\n      \"last_contact_reply_at\": 1539897200,\n      \"last_admin_reply_at\": 1539897200,\n      \"last_close_at\": 1539897200,\n      \"last_closed_by\": {\n      \t\"type\": \"admin\",\n        \"id\": \"325432652\",\n        \"name\": \"Tom Smith\",\n        \"email\": \"tom@example.com\"\n      },\n      \"count_reopens\": 3,\n      \"count_assignments\": 2,\n      \"count_conversation_parts\": 67\n    },   \n}\n\nconversation.read = true\nintercom.conversations.save(conversation)\n\n<?php\n$intercom->conversations->markConversationAsRead(\"10957850396\");\n?>\n\nAdmin admin = new Admin().setId(\"1\");\nAdminReply adminReply = new AdminReply(admin);\nadminReply.setMessageType(\"close\");\nConversation.reply(\"66\", adminReply);\n\n\nYou can update an existing conversation.\n\nIf you want to update a conversation with either a reply (or actions such as assign, unassign, open, close or snooze) then take a look at their own sections respectively as they currently require different endpoints and parameters.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\nread\tBoolean\tNo\tMark a conversation as read within Intercom.\ncustom_attributes\tHash\tNo\tSet custom attributes and their values for the conversation.\nResponse\n\nThis will return the Conversation that has been updated."
  },
  {
    "title": "Unarchive a contact",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/contacts/unarchive-a-contact/",
    "html": "Unarchive a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/unarchive \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can unarchive a single contact.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return an object with details on the unarchived contact.\n\nAttribute\tType\tDescription\nid\tString\tThe unique identifier for the contact which is given by Intercom\nobject\tString\tThe type of object - contact\narchived\tBoolean\tWhether the contact has been archived - false"
  },
  {
    "title": "Search for conversations",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/conversations/search-for-conversations/",
    "html": "Search for conversations\n\nYou can search for multiple conversations by the value of their attributes in order to fetch exactly which ones you want.\n\nTo search for conversations, you need to send a POST request to https://api.intercom.io/conversations/search. This will accept a query object in the body which will define your filters in order to search for conversations.\n\nSearch with single filter\n\nYou should provide the following parameters within a query object:\n\nParameter\tRequired?\tDescription\nfield\tYes\tThe fields associated to a conversation that you can search for. See all accepted fields.\noperator\tYes\tThe operator that you want to compare by. See all accepted operators below.\nvalue\tYes\tThe value you want to search by.\nSearch with multiple filters\n\nYou can search with multiple filters by combining a list of single filter objects within a value array and saying whether you want to ensure all given values match (AND), or only one of these match (OR). The query object should contain these parameters.\n\nParameter\tRequired?\tDescription\noperator\tYes\tThe operator (AND or OR) by which to query the combined values.\nvalue\tYes\tAn array of single query objects.\nONLY CHECKING IF ONE VALUE MATCHES?\n\nIf you're only using OR to check that one matches out of the values, you could instead use IN as the operator in a single filter query. You could also use NIN to say that it does not match one of the values.\n\nNESTING & LIMITATIONS\n\nYou can nest these filters in order to get even more granular insights that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4).\\There are some limitations to the amount of multiple's there can be:\\_ There's a limit of max 2 nested filters_ There's a limit of max 15 filters for each AND or OR group\n\nOUTBOUND MESSAGES VS CONVERSATIONS\n\nBy default, an outbound message will not be considered part of a conversation until the contact responds. This means that outbound messages will not appear in the search results for this endpoint unless the contact has replied.\\Messages can be created to be part of a conversation immediately via the Create a Message endpoint and setting the create_conversation_without_contact_reply to true.\n\nExample Request (Single Filter)\nRequest\n{ \\\"query\\\":  {    \\\"field\\\": \\\"updated_at\\\",    \\\"operator\\\": \\\">\\\",    \\\"value\\\": 1560436784  }}\n\nExample Request (Multiple Filters)\njsonjson\n{ \\\"query\\\":  {    \\\"operator\\\": \\\"AND\\\",    \\\"value\\\": [      {        \\\"field\\\": \\\"statistics.time_to_admin_reply\\\",        \\\"operator\\\": \\\">\\\",        \\\"value\\\": 1000      },       {        \\\"field\\\": \\\"admin_assignee_id\\\",        \\\"operator\\\": \\\"=\\\",        \\\"value\\\": \\\"1627383\\\"      },      {        \\\"field\\\": \\\"open\\\",        \\\"operator\\\": \\\"=\\\",        \\\"value\\\": true      }    ]  }}\n\n{ \\\"query\\\":  {    \\\"field\\\": \\\"tags\\\",    \\\"operator\\\": \\\"IN\\\",    \\\"value\\\": [\\\"feature-request\\\", \\\"bug\\\", \\\"confusion\\\"]  }}\n\nExample Request (Nested Filters)\nRequest\n{ \\\"query\\\":  {    \\\"operator\\\": \\\"AND\\\",    \\\"value\\\": [      {        \\\"operator\\\": \\\"OR\\\",        \\\"value\\\": [          {            \\\"field\\\": \\\"updated_at\\\",            \\\"operator\\\": \\\">\\\",            \\\"value\\\": 1560436650          },           {            \\\"field\\\": \\\"conversation_rating.rating\\\",            \\\"operator\\\": \\\"=\\\",            \\\"value\\\": 1          }        ]      },      {        \\\"operator\\\": \\\"OR\\\",        \\\"value\\\": [          {            \\\"field\\\": \\\"updated_at\\\",            \\\"operator\\\": \\\">\\\",            \\\"value\\\": 1560436650          },           {            \\\"field\\\": \\\"conversation_rating.rating\\\",            \\\"operator\\\": \\\"=\\\",            \\\"value\\\": 2          }        ]      }    ]  }}\n\nExample Errors\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n      {\n        \"code\": \"bad_request\",\n        \"message\": \"bad 'random_param' parameter\"\n      }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_query\",\n      \"message\": \"Invalid query. Ensure 'field', 'operator', 'value' are present for field queries. Ensure 'operator' and 'value' for composite queries.\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_value\",\n      \"message\": \"123 is not a valid string\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_field\",\n      \"message\": \"not_a_field is not a valid field\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_values\",\n      \"message\": \"Value depth exceeds 10 items\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_value\",\n      \"message\": \"Number of elements in composite query is greater than 15, please try again with a smaller list\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_operator\",\n      \"message\": \"Composite operators must be of type AND or OR \"\n    }\n  ]\n}\n\nAccepted Fields\n\nMost keys listed as part of the The conversation model is searchable, whether writeable or not. The value you search for has to match the accepted type, otherwise the query will fail (ie. as created_at accepts a date, the value cannot be a string such as \"foorbar\").\n\nField\tType\nid\tString\ncreated_at\tDate (UNIX timestamp)\nupdated_at\tDate (UNIX timestamp)\nsource.type\tString\nsource.id\tString\nsource.delivered_as\tString\nsource.subject\tString\nsource.body\tString\nsource.author.id\tString\nsource.author.type\tString\nsource.author.name\tString\nsource.author.email\tString\nsource.url\tString\ncontact_ids\tString\nteammate_ids\tString\nadmin_assignee_id\tString\nteam_assignee_id\tString\nchannel_initiated\tString Accepted fields are conversation, push, facebook, twitter and email.\nopen\tBoolean\nread\tBoolean\nstate\tString\nwaiting_since\tDate (UNIX timestamp)\nsnoozed_until\tDate (UNIX timestamp)\ntag_ids\tString\npriority\tString\nstatistics.time_to_assignment\tInteger\nstatistics.time_to_admin_reply\tInteger\nstatistics.time_to_first_close\tInteger\nstatistics.time_to_last_close\tInteger\nstatistics.median_time_to_reply\tInteger\nstatistics.first_contact_reply_at\tDate (UNIX timestamp)\nstatistics.first_assignment_at\tDate (UNIX timestamp)\nstatistics.first_admin_reply_at\tDate (UNIX timestamp)\nstatistics.first_close_at\tDate (UNIX timestamp)\nstatistics.last_assignment_at\tDate (UNIX timestamp)\nstatistics.last_assignment_admin_reply_at\tDate (UNIX timestamp)\nstatistics.last_contact_reply_at\tDate (UNIX timestamp)\nstatistics.last_admin_reply_at\tDate (UNIX timestamp)\nstatistics.last_close_at\tDate (UNIX timestamp)\nstatistics.last_closed_by_id\tString\nstatistics.count_reopens\tInteger\nstatistics.count_assignments\tInteger\nstatistics.count_conversation_parts\tInteger\nconversation_rating.requested_at\tDate (UNIX timestamp)\nconversation_rating.replied_at\tDate (UNIX timestamp)\nconversation_rating.score\tInteger\nconversation_rating.remark\tString\nconversation_rating.contact_id\tString\nconversation_rating.admin_d\tString\nAccepted Operators\n\nThe table below shows the operators you can use to define how you want to search for the value. The operator should be put in as a string (\"=\"). The operator has to be compatible with the field's type (eg. you cannot search with > for a given string value as it's only compatible for integer's and dates).\n\nOperator\tValid Types\tDescription\n=\tAll\tEquals\n!=\tAll\tDoesn't Equal\nIN\tAll\tIn Shortcut for OR queries Values most be in Array\nNIN\tAll\tNot In Shortcut for OR ! queries Values must be in Array\n>\tInteger Date (UNIX Timestamp)\tGreater (or equal) than\n<\tInteger Date (UNIX Timestamp)\tLower (or equal) than\n~\tString\tContains\n!~\tString\tDoesn't Contain\n^\tString\tStarts With\n$\tString\tEnds With\nResponse\n\nA JSON payload with a list of Conversations Model that match the search query, with a total_count integer saying how many models have been returned."
  },
  {
    "title": "List attached tags",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/contacts/list-tags-of-contact/",
    "html": "List attached tags\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/tags \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can fetch a list of tags that are associated to a contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return a list of Tag objects.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - tag.list\ntags\tArray\tAn array containing Tag Objects"
  },
  {
    "title": "Create a section",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/help-center/create-a-section/",
    "html": "Create a section\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/sections \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\\n\\n{\\n  \\\"name\\\": \\\"Section 1\\\",\\n  \\\"parent_id\\\": \\\"1\\\",\\n  \\\"translated_content\\\": {\\n  \\t\\\"type\\\": \\\"group_translated_content\\\",\\n    \\\"es\\\": {\\n      \\\"type\\\": \\\"group_content\\\",\\n      \\\"name\\\": \\\"Sección 1\\\",\\n      \\\"description\\\": \\\"Spanish description\\\"\\n    }\\n  }\\n}\n\n\nYou can create a new section by making a POST request to https://api.intercom.io/help_center/sections.\n\nRequest Body Parameters\nKey\tType\tRequired?\tDescription\nname\tString\tYes\tThe name of the collection. For multilingual collections, this will be the name of the default language's content.\nparent_id\tString\tYes\tThe id for the collection this section will be within.\ntranslated_content\tString\tNo\tA Group Translated Content Object whereby you can specify multiple multilingual collections to be created.\nResponse\n\nThis will return a Section Model of the section you just created."
  },
  {
    "title": "Merge two contacts",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/contacts/merge-contact/",
    "html": "Merge two contacts\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/merge \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\\n\\n{\\n  \\\"from\\\": \\\"5d70dd30de4efd54f42fd526\\\",\\n  \\\"into\\\": \\\"5ba682d23d7cf92bef87bfd4\\\"\\n}\\n\n\nExample Errors\nhttphttp\nHTTP/1.1 404 FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\\n\n\nHTTP/1.1 400 UNPROCESSABLE ENTITY\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"0019c4t1derm7namdon0\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"invalid_merge\\\",\\n      \\\"message\\\": \\\"Merging can only be performed on a lead into a user\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can merge a contact with a role of lead into a contact with a role of user.\n\nWHAT HAPPENS UPON A CONTACT BEING MERGED?\n\nThe contact that's specified as from will be deleted after being merged into the contact specified as into. Attributes that don't exist on the contact specified as into will be copied over.\n\nRequest Body Parameters\nParameter\tType\tRequired\tDescription\nfrom\tString\tYes\tThe unique identifier for the contact to merge away from. Must be a lead.\ninto\tString\tYes\tThe unique identifier for the contact to merge into. Must be a user.\nResponse\n\nThis will return a Contact model for the contact who's been merged into."
  },
  {
    "title": "Search for contacts",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/contacts/search-for-contacts/",
    "html": "Search for contacts\n\nYou can search for multiple contacts by the value of their attributes in order to fetch exactly who you want.\n\nTo search for contacts, you need to send a POST request to https://api.intercom.io/contacts/search. This will accept a query object in the body which will define your filters in order to search for contacts.\n\nWHY IS THERE A DELAY WHEN CREATING CONTACTS AND SEARCHING FOR THEM?\n\nIf a contact has recently been created, there is a possibility that it will not yet be available when searching. This means that it may not appear in the response. This delay can take a few minutes. If you need to be instantly notified then you could use webhooks instead, which you'd currently have to iterate on to see if they match your search filters.\n\nSearch with single filter\n\nYou should provide the following parameters within a query object:\n\nParameter\tRequired?\tDescription\nfield\tYes\tThe fields associated to a customer that you can search for. See all accepted fields below.\noperator\tYes\tThe operator that you want to compare by. See all accepted operators below.\nvalue\tYes\tThe value you want to search by.\nSearch with multiple filters\n\nYou can search with multiple filters by combining a list of single filter objects within a value array and saying whether you want to ensure all given values match (AND), or only one of these match (OR). The query object should contain these parameters.\n\nParameter\tRequired?\tDescription\noperator\tYes\tThe operator (AND or OR) by which to query the combined values.\nvalue\tYes\tAn array of single query objects.\nONLY CHECKING IF ONE VALUE MATCHES?\n\nIf you're only using OR to check that one matches out of the values, you could instead use IN as the operator in a single filter query. You could also use NIN to say that it does not match one of the values.\n\nNESTING & LIMITATIONS\n\nYou can nest these filters in order to get even more granular insights that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4).\\n\\nThere are some limitations to the amount of multiple's there can be:\\n\\n_ There's a limit of max 2 nested filters\\n_ There's a limit of max 15 filters for each AND or OR group\n\nExample Request (Single Filter)\nRequest\n{\\n \\\"query\\\":  {\\n    \\\"field\\\": \\\"custom_attributes.salesforce_status\\\",\\n    \\\"operator\\\": \\\"~\\\",\\n    \\\"value\\\": \\\"open\\\"\\n  }\\n}\n\nExample Request (Multiple Filters)\njsonjson\n{\\n \\\"query\\\":  {\\n    \\\"operator\\\": \\\"AND\\\",\\n    \\\"value\\\": [\\n      {\\n        \\\"field\\\": \\\"custom_attributes.social_network\\\",\\n        \\\"operator\\\": \\\"=\\\",\\n        \\\"value\\\": \\\"facebook\\\"\\n      }, \\n      {\\n        \\\"field\\\": \\\"custom_attributes.social_network\\\",\\n        \\\"operator\\\": \\\"=\\\",\\n        \\\"value\\\": \\\"twitter\\\"\\n      },\\n      {\\n        \\\"field\\\": \\\"custom_attributes.social_network\\\",\\n        \\\"operator\\\": \\\"=\\\",\\n        \\\"value\\\": \\\"instagram\\\"\\n      }\\n    ]\\n  }\\n}\n\n{\\n \\\"query\\\":  {\\n    \\\"field\\\": \\\"custom_attributes.social_network\\\",\\n    \\\"operator\\\": \\\"IN\\\",\\n    \\\"value\\\": [\\\"facebook\\\", \\\"twitter\\\", \\\"instagram\\\"]\\n  }\\n}\n\nExample Request (Nested Filters)\nRequest\n{\\n \\\"query\\\":  {\\n    \\\"operator\\\": \\\"AND\\\",\\n    \\\"value\\\": [\\n      {\\n        \\\"operator\\\": \\\"OR\\\",\\n        \\\"value\\\": [\\n          {\\n            \\\"field\\\": \\\"created_at\\\",\\n            \\\"operator\\\": \\\">\\\",\\n            \\\"value\\\": 1560436650\\n          }, \\n          {\\n            \\\"field\\\": \\\"signed_up_at\\\",\\n            \\\"operator\\\": \\\">\\\",\\n            \\\"value\\\": 1560436784\\n          }\\n        ]\\n      },\\n      {\\n        \\\"operator\\\": \\\"OR\\\",\\n        \\\"value\\\": [\\n          {\\n            \\\"field\\\": \\\"custom_attributes.salseforce_status\\\",\\n            \\\"operator\\\": \\\"~\\\",\\n            \\\"value\\\": \\\"Open\\\"\\n          }, \\n          {\\n            \\\"field\\\": \\\"custom_attributes.salesforce_object_type\\\",\\n            \\\"operator\\\": \\\"=\\\",\\n            \\\"value\\\": \\\"Lead\\\"\\n          }\\n        ]\\n      }\\n    ]\\n  }\\n}\n\nExample Errors\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n      {\n        \"code\": \"bad_request\",\n        \"message\": \"bad 'random_param' parameter\"\n      }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_query\",\n      \"message\": \"Invalid query. Ensure 'field', 'operator', 'value' are present for field queries. Ensure 'operator' and 'value' for composite queries.\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_values\",\n      \"message\": \"Value depth exceeds 10 items\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_value\",\n      \"message\": \"123 is not a valid string\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_field\",\n      \"message\": \"not_a_field is not a valid field\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_operator\",\n      \"message\": \"Composite operators must be of type AND or OR \"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_operator\",\n      \"message\": \"email does not support operator: >\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": null,\n  \"errors\": [\n    {\n      \"code\": \"invalid_value\",\n      \"message\": \"Number of elements in composite query is greater than 15, please try again with a smaller list\"\n    }\n  ]\n}\n\nAccepted Fields\nSEARCHING FOR TIMESTAMP FIELDS\n\nAll timestamp fields (created_at, updated_at etc.) are indexed as Dates for Contact Search queries; Datetime queries are not currently supported. This means you can only query for timestamp fields by day - not hour, minute or second.\\n\\nFor example, if you search for all Contacts with a created_at value greater (>) than 1577869200 (the UNIX timestamp for January 1st, 2020 9:00 AM), that will be interpreted as 1577836800 (January 1st, 2020 12:00 AM). The search results will then include Contacts created from January 2nd, 2020 12:00 AM onwards.\\n\\nIf you'd like to get contacts created on January 1st, 2020 you should search with a created_at value equal (=) to 1577836800 (January 1st, 2020 12:00 AM).\\n\\nThis behaviour applies only to timestamps used in search queries. The search results will still contain the full UNIX timestamp and be sorted accordingly.\n\nMost key listed as part of the Contacts Model are searchable, whether writeable or not. The value you search for has to match the accepted type, otherwise the query will fail (ie. as created_at accepts a date, the value cannot be a string such as \"foorbar\").\n\nField\tType\nid\tString\nrole\tString\nAccepts user or lead\nname\tString\navatar\tString\nowner_id\tInteger\nemail\tString\nphone\tString\nexternal_id\tString\ncreated_at\tDate (UNIX Timestamp)\nsigned_up_at\tDate (UNIX Timestamp)\nupdated_at\tDate (UNIX Timestamp)\nlast_seen_at\tDate (UNIX Timestamp)\nlast_contacted_at\tDate (UNIX Timestamp)\nlast_replied_at\tDate (UNIX Timestamp)\nlast_email_opened_at\tDate (UNIX Timestamp)\nlast_email_clicked_at\tDate (UNIX Timestamp)\nlanguage_override\tString\nbrowser\tString\nbrowser_language\tString\nos\tString\nlocation.country\tString\nlocation.region\tString\nlocation.city\tString\nunsubscribed_from_emails\tBoolean\nmarked_email_as_spam\tBoolean\nhas_hard_bounced\tBoolean\nios_last_seen_at\tDate (UNIX Timestamp)\nios_app_version\tString\nios_device\tString\nios_app_device\tString\nios_os_version\tString\nios_app_name\tString\nios_sdk_version\tString\nandroid_last_seen_at\tDate (UNIX Timestamp)\nandroid_app_version\tString\nandroid_device\tString\nandroid_app_name\tString\nandoid_sdk_version\tString\nsegment_id\tString\ntag_id\tString\ncustom_attributes.{attribute_name}\tString\nAccepted Operators\n\nThe table below shows the operators you can use to define how you want to search for the value. The operator should be put in as a string (\"=\"). The operator has to be compatible with the field's type (eg. you cannot search with > for a given string value as it's only compatible for integer's and dates).\n\nOperator\tValid Types\tDescription\n=\tAll\tEquals\n!=\tAll\tDoesn't Equal\nIN\tAll\tIn\nShortcut for OR queries\nValues must be in Array\nNIN\tAll\tNot In\nShortcut for OR ! queries\nValues must be in Array\n>\tInteger\nDate (UNIX Timestamp)\tGreater than\n<\tInteger\nDate (UNIX Timestamp)\tLower than\n~\tString\tContains\n!~\tString\tDoesn't Contain\n^\tString\tStarts With\n$\tString\tEnds With\nResponse\n\nA JSON payload with a list of Contact objects that match the search query, with a total_count integer saying how many models have been returned."
  },
  {
    "title": "Update a contact",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/contacts/update-contact/",
    "html": "Update a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id> \\\\\\n-X PUT \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\\n\\n{\\n\\t\\\"role\\\": \\\"user\\\",\\n\\t\\\"external_id\\\": \\\"25\\\",\\n\\t\\\"email\\\": \\\"wash@serenity.io\\\",\\n\\t\\\"phone\\\": \\\"+1123456789\\\",\\n\\t\\\"name\\\": \\\"Hoban Washburn\\\",\\n\\t\\\"avatar\\\": \\\"https://example.org/128Wash.jpg\\\",\\n\\t\\\"last_seen_at\\\": 1571069751,\\n\\t\\\"signed_up_at\\\": 1571069751,\\n\\t\\\"owner_id\\\": 127,\\n\\t\\\"unsubscribed_from_emails\\\": false,\\n\\t\\\"custom_attributes\\\": {\\n\\t\\t\\\"paid_subscriber\\\": true,\\n\\t\\t\\\"monthly_spend\\\": 155.5,\\n\\t\\t\\\"team_mates\\\": 1\\n\\t}\\n}\\n\n\nExample Errors\nHTTP/1.1 404 FOUND\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"9a3d0816-9707-4598-977e-c009ba630148\",\n  \"errors\": [\n    {\n      \"code\": \"not_found\",\n      \"message\": \"Contact Not Found\"\n    }\n  ]\n}\n\nHTTP/1.1 409 CONFLICT\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"80ec9d92-99ff-4da9-9a0e-c0ab7c42f7e7\",\n  \"errors\": [\n    {\n      \"code\": \"conflict\",\n      \"message\": \"A contact matching those details already exists with id=5da6f18e3d7cf967e4582d05\"\n    }\n  ]\n}\n\nHTTP/1.1 400 UNPROCESSABLE ENTITY\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"00043csj9iva7pl9mmmg\",\n  \"errors\": [\n    {\n      \"code\": \"client_error\",\n      \"message\": \"Contact with user role can't be converted to a lead\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"00043csj9iva7pl9mmmg\",\n  \"errors\": [\n    {\n      \"code\": \"parameter_invalid\",\n      \"message\": \"The owner specified is not a member of the workspace\"\n    }\n  ]\n}\n\n\nYou can update an existing contact (ie. user or lead).\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nRequest Body Parameters\nAttribute\tType\tRequired?\tDescription\nrole\tString\tYes\tThe role of the contact. Accepted values are user or lead (only if lead already).\nexternal_id\tString\tYes - if role is user and email is blank\tA unique identifier for the contact which is given to Intercom.\nemail\tString\tYes - if role is lead, or if role is user and external_id is blank\tThe contacts email.\nphone\tString\tNo\tThe contacts phone.\nname\tString\tNo\tThe contacts name.\navatar\tString\tNo\tAn image URL containing the avatar of a contact.\nowner_id\tString\tNo\tThe id of an admin that has been assigned account ownership of the contact.\nsigned_up_at\tDate (UNIX timestamp)\tNo\tThe time specified for when a contact signed up.\nlast_seen_at\tDate (UNIX timestamp)\tNo\tThe time when the contact was last seen (either where the Intercom Messenger was installed or when specified manually).\nowner_id\tInteger\tNo\tThe id of an admin that has been assigned account ownership of the contact.\nunsubscribed_from_emails\tBoolean\tNo\tWhether the contact is unsubscribed from emails.\ncustom_attributes\tObject\tNo\tThe custom attributes which are set for the contact.\nCREATING NEW CUSTOM DATA ATTRIBUTES\n\nYou can only write to custom data attributes that already exist on the workspace. If you need to create new attributes to write to, you should Create Data Attributes through the data Attributes API.\n\nResponse\n\nThis will return a Contact model of the contact you just updated."
  },
  {
    "title": "The export job model",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/exports-content-stats/export-job-model/",
    "html": "The export job model\n\nYou can use the API to export data for all messages sent or viewed in a given timeframe. This data will be valuable in analysing the performance of your Intercom messages, including all outbound content types such as Posts, Custom Bots, Emails, Surveys and more. As well enabling you to join message engagement data with user data external to Intercom to attribute performance. More on the feature is here.\n\nYou should perform three operations in order to retrieve your message data:\n\nCreate an export job where you set the timeframe for the messages you want to export\nCheck the status of your export job\nDownload the message data once the export job has been completed\nExport Job Object\nKey\tValue\tDescription\njob_identfier\tstring\tThe identifier for your job.\nstatus\tpending, in_progress, failed, completed, no_data,\tThe current state of your job.\ndownload_expires_at\tdate\tThe time after which you will not be able to access the data.\ndownload_url\tURL\tThe location where you can download your data.\n\n🚧 Export limit size\n\nIf your export job exceeds 10 millions rows in size then we will only return the first 10 millions rows. In other words, we cannot export any job greater than 10 million rows"
  },
  {
    "title": "Update a collection",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/help-center/update-a-collection/",
    "html": "Update a collection\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/collection/<id> \\\\\\n-X PUT \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\\n\\n{\\n  \\\"name\\\": \\\"New title\\\",\\n  \\\"translated_content\\\": {\\n    \\\"es\\\": {\\n      \\\"name\\\": \\\"Nuevo título\\\"\\n    }\\n  }\\n}\n\n\nYou can update the details of a single collection by making a PUT request to https://api.intercom.io/help_center/collection/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the collection which is given by Intercom.\nRequest Body Parameters\nAttribute\tType\tRequired?\tDescription\nname\tString\tNo\tThe name of the collection.\nFor multilingual collections, this will be the name of the default language's content.\ndescription\tString\tNo\tThe description of the collection.\nFor multilingual articles, this will be the description of the default language's content.\ntranslated_content\tObject\tNo\tA Group Translated Content Object whereby you can specify multiple multilingual collections to be created.\nResponse\n\nThis will return a Collection Model of the collection you just updated."
  },
  {
    "title": "List all contacts",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/contacts/list-contacts/",
    "html": "List all contacts\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nInvalid starting_after param\nHTTP/1.1 400 BAD REQUEST\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"000nbboasf1qqab6b910\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"client_error\\\",\\n      \\\"message\\\": \\\"Invalid starting_after param. Please try again using a starting_after value from a paginated response\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can fetch a list of all contacts.\n\nResponse\n\nThis will return a paginated list of Contact objects .\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - list\ndata\tArray\tAn array containing Contact Objects\ntotal_count\tInteger\tThe total number of contacts\npages\tPagination Object\tThe information needed to paginate through contacts"
  },
  {
    "title": "Retrieve a conversation",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/conversations/retrieve-a-conversation/",
    "html": "Retrieve a conversation\nExample Request & Response\n$ curl https://api.intercom.io/conversations/<id> \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"1911149811\",\n    \"created_at\": 1539897198,\n    \"updated_at\": 1540393270,\n    \"source\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\",\n        \"redacted\": false\n    },\n    \"contacts\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"teammates\": [\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    ],\n    \"admin_assignee_id\": \"814860\",\n    \"team_assignee_id\": null,\n    \"custom_attributes\": {\n      \"issue_type\": \"Billing\",\n      \"priority\": \"High\"\n    },\n    \"topics\": {\n        \"type\": \"topic.list\",\n        \"topics\": [\n            {\n                \"type\": \"topic\"\n                \"name\": \"Example Topic 1\",\n                \"id\": 839\n            }\n        ],\n        \"total_count\": 1\n    },\n    \"open\": true,\n    \"state\": \"open\",\n    \"read\": true,\n    \"waiting_since\": 64654125776\n    \"snoozed_until\": null,\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\",\n    },\n    \"first_contact_reply\": {\n    \t\"created_at\": 1539897198\n    \t\"type\": \"conversation\",\n    \t\"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"priority\": \"not_priority\",\n    \"sla_applied\": {\n    \t\"sla_name\": \"VIP customer <5m\",\n      \"sla_status\": \"missed\",\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"contact\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null,\n            \"name\": null,\n            \"email\": null\n        }\n    },\n    \"statistics\": {\n      \"time_to_assignment\": 2310,\n      \"time_to_admin_reply\": 2408,\n      \"time_to_first_close\": 4915 ,\n      \"time_to_last_close\": 5125,\n      \"median_time_to_reply\": 321,\n      \"first_contacat_reply_at\": 1539897200,\n      \"first_assignment_at\": 1539897200,\n      \"first_admin_reply_at\": 1539897200,\n      \"first_close_at\": 1539897200,\n      \"last_assignment_at\": 1539897200,\n      \"last_assignment_admin_reply_at\": 1539897200,\n      \"last_contact_reply_at\": 1539897200,\n      \"last_admin_reply_at\": 1539897200,\n      \"last_close_at\": 1539897200,\n      \"last_closed_by\": {\n      \t\"type\": \"admin\",\n        \"id\": \"325432652\",\n        \"name\": \"Tom Smith\",\n        \"email\": \"tom@example.com\"\n      },\n      \"count_reopens\": 3,\n      \"count_assignments\": 2,\n      \"count_conversation_parts\": 67\n    },\n    \"conversation_parts\": {\n        \"conversation_parts\": [\n            {\n                \"assigned_to\": null,\n                \"attachments\": [],\n                \"author\": {\n                    \"id\": \"815309\",\n                    \"type\": \"bot\"\n                },\n                \"body\": \"<p>Test_App typically replies in a few hours.</p>\",\n                \"created_at\": 1539897200,\n                \"external_id\": null,\n                \"id\": \"2202737122\",\n                \"notified_at\": 1539897200,\n                \"part_type\": \"comment\",\n                \"type\": \"conversation_part\",\n                \"updated_at\": 1539897200,\n                \"redacted\": false\n            },\n          #List of conversation parts...\n        ],\n        \"total_count\": 67,\n        \"type\": \"conversation_part.list\"\n    }    \n}\n\nintercom.conversations.find(:id => '147')\n\n<?php\n$intercom->conversations->getConversation(\"10957850396\");\n?>\n\nConversation conversation = Conversation.find(\"147\");\n\nConversationMessage message =\n  conversation.getConversationMessage();\n\nConversationPartCollection parts =\n  conversation.getConversationPartCollection();\n\nList<ConversationPart> list = parts.getPageItems();\n\nfor (ConversationPart part : list) {\n  String partType = part.getPartType();\n  Author author = part.getAuthor();\n  String body = part.getBody();\n}\n\nConversationPart recent =\n  conversation.getMostRecentConversationPart();\n\nAdmin assignee =\n  conversation.getAssignee();\n\nUser user =\n  conversation.getUser();\n\n\nYou can fetch the details of a single conversation.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Query Parameters\nParameter\tType\tRequired?\tDescription\ndisplay_as\tString\tNo\tSet to plaintext to retrieve conversation messages in plain text.\nResponse\n\nThis will return a single Conversation model with all its conversation parts.\n\nHARD LIMIT OF 500 PARTS\n\nThe maximum number of conversation parts that can be returned via the API is 500. If you have more than that we will return the 500 most recent conversation parts."
  },
  {
    "title": "List attached companies",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/contacts/list-companies-of-contact/",
    "html": "List attached companies\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/companies \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can fetch a list of companies that are associated to a contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return a paginated list of Company objects.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - company.list\ncompanies\tArray\tAn array containing Company Objects\ntotal_count\tInteger\tThe total number of companies associated to this contact\npages\tPagination Object\tThe information needed to paginate through companies"
  },
  {
    "title": "The collection & section models",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/help-center/the-collection-section-models/",
    "html": "The collection & section models\nExample Collection Object\nJSON\n{\\n  \\\"id\\\": 1,\\n  \\\"type\\\": \\\"collection\\\",\\n  \\\"workspace_id\\\": \\\"abcdef\\\",\\n  \\\"name\\\": \\\"Default language name\\\",\\n  \\\"description\\\": \\\"Default language description\\\", \\n  \\\"created_at\\\": 123456,\\n  \\\"updated_at\\\": 123456,\\n  \\\"url\\\": \\\"http://intercom.test/help/collection/name\\\",\\n  \\\"icon\\\": \\\"http://intercom/help_center/icon-1\\\",\\n  \\\"order\\\": 0,\\n  \\\"default_locale\\\": \\\"en\\\",\\n  \\\"translated_content\\\": {\\n    \\\"type\\\": \\\"group_translated_content\\\",\\n    \\\"fr\\\": {\\n      \\\"type\\\": \\\"group_content\\\",\\n      \\\"name\\\": \\\"French name\\\",\\n      \\\"description\\\": \\\"French description\\\"\\n    }\\n  }\\n}\n\nExample Section Object\n{\n  \"id\": 1,\n  \"type\": \"section\",\n  \"workspace_id\": \"abcdef\",\n  \"name\": \"Default language name\",\n  \"created_at\": 123456,\n  \"updated_at\": 123456,\n  \"url\": \"http://intercom.test/help/section/name\",\n  \"icon\": \"http://intercom/help_center/icon-1\",\n  \"order\": 0,\n  \"collection_id\": \"1\",\n  \"default_locale\": \"en\",\n  \"translated_content\": {\n    \"type\": \"group_translated_content\",\n    \"fr\": {\n      \"type\": \"group_content\",\n      \"name\": \"French name\"\n    }\n  }\n}\n\n\nThe Help Center API is a central place to gather all information and take actions on those elements within a Help Center - namely the collections and sections. Collections are top level containers for Articles within the Help Center. Sections are subdivisions of a collection, with a collection potentially having multiple sections.\n\nFor articles you should refer to the Articles endpoint.\n\nCollection Object\nKey\tType\tDescription\ntype\tString\tThe type of object - collection.\nid\tString\tThe unique identifier for the collection which is given by Intercom.\nworkspace_id\tString\tThe id of the workspace which the collection belongs to.\nname\tString\tThe name of the collection.\nFor multilingual help centers, this will be the title of the default language's content.\ndescription\tString\tThe description of the collection.\nFor multilingual help centers, this will be the description of the collection for the default language.\ncreated_at\tTimestamp\tThe time when the article was created.\nFor multilingual articles, this will be the timestamp of creation of the default language's content.\nupdated_at\tTimestamp\tThe time when the article was last updated.\nFor multilingual articles, this will be the timestamp of last update of the default language's content.\nurl\tString\tThe URL of the collection.\nFor multilingual help centers, this will be the URL of the collection for the default language.\nicon\tString\tThe icon for the collection.\norder\tInteger\tThe order of the section in relation to others sections within a collection.\nValues go from 0 upwards.\n0 is the default if there's no order.\ndefault_locale\tString\tThe default locale of the help center.\nThis field is only returned for multilingual help centers.\ntranslated_content\tObject\tAn Group Translated Content Object for multilingual articles.\nThis field is only returned for multilingual help centers.\nSection Object\nKey\tType\tDescription\ntype\tString\tThe type of object - section.\nid\tString\tThe unique identifier for the section which is given by Intercom.\nworkspace_id\tString\tThe id of the workspace which the section belongs to.\nname\tString\tThe name of the section.\nFor multilingual help centers, this will be the name of the section for the default language.\ncreated_at\tTimestamp\tThe time when the section was created.\nFor multilingual help centers, this will be the timestamp of the section's creation for the default language.\nupdated_at\tTimestamp\tThe time when the section was last updated.\nFor multilingual help centers, this will be the timestamp of the section's last update for the default language.\nurl\tString\tThe URL of the section.\nFor multilingual help centers, this will be the URL of the section for the default language.\nicon\tString\tThe icon for the section.\norder\tInteger\tThe order of the section in relation to others sections within a collection.\nValues go from 0 upwards.\n0 is the default if there's no order.\ncollection_id\tString\tThe id of the collection to which this section belongs to.\ndefault_locale\tString\tThe default locale of the help center.\nThis field is only returned for multilingual help centers.\ntranslated_content\tObject\tAn Group Translated Content Object for multilingual articles.\nThis field is only returned for multilingual help centers.\nGroup Translated Content Object\nKey\tType\tWriteable?\tDescription\ntype\tString\tNo\tThe type of object - group_translated_content.\n<locale>\n\nar, bg, bs, ca, cs, da, de, 'de-form', el, en, es, et, fi, fr, he, hr, hu, id, it, ja, ko, lt, lv, mn, nb, nl, pl, 'pt-BR', pt, ro, ru, sl, sr, sv, tr, vi, 'zh-CN', 'zh-TW'\tObject\tYes\tAn Group Content Object for each supported locale of the multilingual help center.\nThe default locale's content and information will be contained in the initial Collection Object or Section Object respectively.\nIf there's no content for a locale, the value will be nil.\nGroup Content Object\nKey\tType\tWriteable?\tDescription\ntype\tString\tNo\tThe type of object - group_content.\nname\tString\tYes\tThe name of the collection or section.\ndescription\tString\tYes\tThe description of the collection.\nOnly available for collections."
  },
  {
    "title": "Redact a conversation part",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/conversations/redact-a-conversation-part/",
    "html": "Redact a conversation part\nExample Request & Response\n$ curl https://api.intercom.io/conversations/redact \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-d \n\n{\n  \"type\": <resource_type>,\n  \"conversation_id\": <conversation_id>,\n  \"conversation_part_id\": <conversation_part_id>,\n  \"source_id\": <source_id>,\n}\n\nHTTP/1.1 200 OK\n{\n    \"type\": \"conversation\",\n    \"id\": \"1911149811\",\n    \"created_at\": 1539897198,\n    \"updated_at\": 1540393270,\n    \"source\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\",\n        \"redacted\": false\n    },\n    \"contacts\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"teammates\": [\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    ],\n    \"admin_assignee_id\": \"814860\",\n    \"team_assignee_id\": null,\n    \"custom_attributes\": {\n      \"issue_type\": \"Billing\",\n      \"priority\": \"High\"\n    },\n    \"open\": true,\n    \"state\": \"open\",\n    \"read\": true,\n    \"waiting_since\": 64654125776\n    \"snoozed_until\": null,\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\",\n    },\n    \"first_contact_reply\": {\n    \t\"created_at\": 1539897198\n    \t\"type\": \"conversation\",\n    \t\"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"priority\": \"not_priority\",\n    \"sla_applied\": {\n    \t\"sla_name\": \"VIP customer <5m\",\n      \"sla_status\": \"missed\",\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"contact\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null,\n            \"name\": null,\n            \"email\": null\n        }\n    },\n    \"statistics\": {\n      \"time_to_assignment\": 2310,\n      \"time_to_admin_reply\": 2408,\n      \"time_to_first_close\": 4915 ,\n      \"time_to_last_close\": 5125,\n      \"median_time_to_reply\": 321,\n      \"first_contacat_reply_at\": 1539897200,\n      \"first_assignment_at\": 1539897200,\n      \"first_admin_reply_at\": 1539897200,\n      \"first_close_at\": 1539897200,\n      \"last_assignment_at\": 1539897200,\n      \"last_assignment_admin_reply_at\": 1539897200,\n      \"last_contact_reply_at\": 1539897200,\n      \"last_admin_reply_at\": 1539897200,\n      \"last_close_at\": 1539897200,\n      \"last_closed_by\": {\n      \t\"type\": \"admin\",\n        \"id\": \"325432652\",\n        \"name\": \"Tom Smith\",\n        \"email\": \"tom@example.com\"\n      },\n      \"count_reopens\": 3,\n      \"count_assignments\": 2,\n      \"count_conversation_parts\": 67\n    },\n    \"conversation_parts\": {\n        \"conversation_parts\": [\n            {\n                \"assigned_to\": null,\n                \"attachments\": [],\n                \"author\": {\n                    \"id\": \"815309\",\n                    \"type\": \"bot\"\n                },\n                \"body\": \"<p>Test_App typically replies in a few hours.</p>\",\n                \"created_at\": 1539897200,\n                \"external_id\": null,\n                \"id\": \"2202737122\",\n                \"notified_at\": 1539897200,\n                \"part_type\": \"comment\",\n                \"type\": \"conversation_part\",\n                \"updated_at\": 1539897200,\n                \"redacted\": false\n            },\n          #List of conversation parts...\n        ],\n        \"total_count\": 67,\n        \"type\": \"conversation_part.list\"\n    }    \n}\n\nExample Errors\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"ffa661e0-a805-4ca1-9c8f-87a926ce72bc\",\n  \"errors\": [\n    {\n      \"code\": \"parameter_not_found\",\n      \"message\": \"conversation_id is a required parameter\"\n    }\n  ]\n}\n\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"ffa661e0-a805-4ca1-9c8f-87a926ce72bc\",\n  \"errors\": [\n    {\n      \"code\": \"conversation_part_not_redactable\",\n      \"message\": \"Part can't be redacted\"\n    }\n  ]\n}\n\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"ffa661e0-a805-4ca1-9c8f-87a926ce72bc\",\n  \"errors\": [\n    {\n      \"code\": \"type_mismatch\",\n      \"message\": \"The type attribute provided should be either 'conversation_part' or 'source'\"\n    }\n  ]\n}\n\n\nYou can redact a conversation part or the source message of a conversation (as seen in the source object).\n\nWHICH PARTS AND SOURCE MESSAGES CAN I REDACT?\n\nIf you are redacting a conversation part, it must have a body.\\nIf you are redacting a source message, it must have been created by a contact.\\nWe will return a conversation_part_not_redactable error if these criteria are not met.\n\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\ntype\tString\tYes\tThe type of resource being redacted. Accepted values are conversation_part or source.\nconversation_id\tString\tYes\tThe id of the conversation.\nconversation_part_id\tString\tYes (if type: conversation_part)\tThe id of the conversation_part.\nsource_id\tString\tYes (if type: source)\tThe id of the source.\nResponse\n\nThis will return the Conversation with the Conversation Parts which have been redacted."
  },
  {
    "title": "List attached email subscriptions",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/contacts/list-attached-email-subscriptions/",
    "html": "List attached email subscriptions\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/subscriptions \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 NOT FOUND\\n{\\n    \\\"type\\\": \\\"error.list\\\",\\n    \\\"request_id\\\": \\\"cc1a749e-6cc4-4b7c-944c-e26bb6d61662\\\",\\n    \\\"errors\\\": [\\n        {\\n            \\\"code\\\": \\\"not_found\\\",\\n            \\\"message\\\": \\\"User Not Found\\\"\\n        }\\n    ]\\n}\n\n\nYou can fetch a list of tags that are associated to a contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return a list of Subscription Type objects that the contact is associated with.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - list\ndata\tArray\tA list of subscriptions tied to the contact"
  },
  {
    "title": "Retrieve a section",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/help-center/retrieve-a-section/",
    "html": "Retrieve a section\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/sections/<id> \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can fetch the details of a single section by making a GET request to https://api.intercom.io/help_center/sections/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the section which is given by Intercom.\nResponse\n\nThis will return a Section object."
  },
  {
    "title": "List all conversations",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/conversations/list-conversations/",
    "html": "List all conversations\nExample Request & Response\n$ curl \\\"https://api.intercom.io/conversations?order=desc&sort=updated_at\" \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"conversation.list\",\n  \"conversations\": [\n    {\n    \"type\": \"conversation\",\n    \"id\": \"1911149811\",\n    \"created_at\": 1539897198,\n    \"updated_at\": 1540393270,\n    \"source\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"contacts\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"teammates\": [\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    ],\n    \"admin_assignee_id\": \"814860\",\n    \"team_assignee_id\": null,\n    \"custom_attributes\": {\n      \"issue_type\": \"Billing\",\n      \"priority\": \"High\"\n    },\n    \"topics\": {\n        \"type\": \"topic.list\",\n        \"topics\": [\n            {\n                \"type\": \"topic\"\n                \"name\": \"Example Topic 1\",\n                \"id\": 839\n            }\n        ],\n        \"total_count\": 1\n    },\n    \"open\": true,\n    \"state\": \"open\",\n    \"read\": true,\n    \"waiting_since\": 64654125776\n    \"snoozed_until\": null,\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\",\n    },\n    \"first_contact_reply\": {\n    \t\"created_at\": 1539897198\n    \t\"type\": \"conversation\",\n    \t\"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"priority\": \"not_priority\",\n    \"sla_applied\": {\n    \t\"sla_name\": \"VIP customer <5m\",\n      \"sla_status\": \"missed\",\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"contact\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null,\n            \"name\": null,\n            \"email\": null\n        }\n    },\n    \"statistics\": {\n      \"time_to_assignment\": 2310,\n      \"time_to_admin_reply\": 2408,\n      \"time_to_first_close\": 4915 ,\n      \"time_to_last_close\": 5125,\n      \"median_time_to_reply\": 321,\n      \"first_contact_reply_at\": 1539897200,\n      \"first_assignment_at\": 1539897200,\n      \"first_admin_reply_at\": 1539897200,\n      \"first_close_at\": 1539897200,\n      \"last_assignment_at\": 1539897200,\n      \"last_assignment_admin_reply_at\": 1539897200,\n      \"last_contact_reply_at\": 1539897200,\n      \"last_admin_reply_at\": 1539897200,\n      \"last_close_at\": 1539897200,\n      \"last_closed_by\": {\n      \t\"type\": \"admin\",\n        \"id\": \"325432652\",\n        \"name\": \"Tom Smith\",\n        \"email\": \"tom@example.com\"\n      },\n      \"count_reopens\": 3,\n      \"count_assignments\": 2,\n      \"count_conversation_parts\": 67\n    }, \n    \n    # list of conversaionts\n\n  ],\n  \"pages\": {\n    \"next\": \"https://api.intercom.io/conversations?per_page=20&page=2\",\n    \"page\": 1,\n    \"per_page\": 20,\n    \"total_pages\": 77,\n    \"type\": \"pages\"\n  }\n}\n\nintercom.conversations.find_all(:type => 'admin', :id => 25, :open => true)\n\n<?php\n$intercom->conversations->getConversations([\n    \"type\" => \"admin\",\n    \"admin_id\" => \"891290\",\n    \"open\" => false\n]);\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"type\", \"admin\");\nparams.put(\"admin_id\", \"1\");\nConversationCollection conversations = Conversation.list(params);\nwhile (conversations.hasNext()) {\n  Conversation conversation = conversations.next();\n}\n\n\nYou can fetch a list of all conversations.\n\nRequest Query Parameters\nParameter\tType\tRequired?\tDescription\norder\tString\tNo\tReturn the conversations in ascending (asc) or descending (desc) order. Defaults to desc. If you provide an invalid value, we default to asc.\nsort\tString\tNo\tReturn the conversation sorted by their created_at, updated_at, or waiting_since timestamp values. Defaults to updated_at.\nCONVERSATIONS NOT SHOWING WITH WAITING_SINCE SORTING\n\nIf a teammate was the last person to reply, or the conversation is closed, then those conversations will not show up on this list. This is to ensure you have an easy way of identifying and prioritizing those customers who have been waiting longest.\n\nResponse\nPAGINATION\n\nThe list all conversations query have a default per_page value of 60.\n\nA paginated list of Conversations is returned, without the conversation_parts object.\n\nRETRIEVING CONVERSATION PARTS\n\nYou must retrieve a single conversation using the conversation's id to return a conversation with the conversation_part array and objects included."
  },
  {
    "title": "List attached segments for contact",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/contacts/list-attached-segments/",
    "html": "List attached segments for contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/segments \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can fetch a list of segments that are associated to a contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return a list of Segment objects.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - list\ndata\tArray\tAn array containing Segment Objects"
  },
  {
    "title": "Retrieve a collection",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/help-center/retrieve-a-collection/",
    "html": "Retrieve a collection\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/collections/<id> \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can fetch the details of a single collection by making a GET request to https://api.intercom.io/help_center/collections/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the collection which is given by Intercom.\nResponse\n\nThis will return a Collection Model."
  },
  {
    "title": "Open a conversation",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/conversations/open-a-conversation/",
    "html": "Open a conversation\nExample Request & Response\ncurljson\n$ curl 'https://api.intercom.io/conversations/<id>/parts' \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d\\n\\n{\\n  \\\"message_type\\\":\\\"open\\\",\\n  \\\"admin_id\\\": \\\"724860\\\"\\n}\n\n\nYou can open a conversation which is snoozed or closed.\n\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tAlways open.\nadmin_id\tString\tYes\tThe id of the admin which is performing the action.\nResponse\n\nThis will return the Conversation which was opened."
  },
  {
    "title": "Detach a contact from a group conversation",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/conversations/deleting-from-group-conversations/",
    "html": "Detach a contact from a group conversation\nExample Request & Response\ncurlhttp\n$ curl 'https://api.intercom.io/conversations/<conversation_id>/customers/<contact_id>' \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d\\n\\n{\\n  \\\"admin_id\\\": \\\"781345\\\"\\n}\n\n\nRemoves a Contact from a group conversation.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nconversation_id\tString\tYes\tThe identifier for the conversation as given by Intercom.\ncontact_id\tString\tYes\tThe identifier for the contact as given by Intercom.\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\nadmin_id\tString\tYes\tThe id of the admin who is performing the action.\nResponse\n\nThis will return the Contact who was detached from the conversation."
  },
  {
    "title": "Retrieve a contact",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/contacts/get-contact/",
    "html": "Retrieve a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id> \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can fetch the details of a single contact.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return a Contact model."
  },
  {
    "title": "List all sections",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/help-center/list-all-sections/",
    "html": "List all sections\nExample Request & Response (Single Language Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/sections \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can fetch a list of all sections by making a GET request to https://api.intercom.io/help_center/sections.\n\nResponse\nKey\tType\tDescription\ntype\tString\tThe type of object - list.\npages\tObject\tA Pages object with the information needed to paginate through sections.\ntotal_count\tInteger\tA count of the total number of sections.\ndata\tArray\tAn array of Section objects\nHOW ARE THE SECTIONS SORTED AND ORDERED?\n\nSections will be returned in descending order on the updated_at attribute. This means if you need to iterate through results then we'll show the most recently updated sections first."
  },
  {
    "title": "Delete a contact",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/contacts/delete-contact/",
    "html": "Delete a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can delete a single contact.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return an object with details on the deleted contact.\n\nAttribute\tType\tDescription\nid\tString\tThe unique identifier for the contact which is given by Intercom\nobject\tString\tThe type of object - contact\ndeleted\tBoolean\tWhether the contact has been deleted - true"
  },
  {
    "title": "The article model",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/articles/the-article-model/",
    "html": "The article model\nExample Article Object\nJSON\n{  \\\"id\\\": 1,  \\\"type\\\": \\\"article\\\",  \\\"workspace_id\\\": \\\"abcdef\\\",  \\\"title\\\": \\\"Default language title\\\",  \\\"description\\\": \\\"Default language description\\\",  \\\"body\\\": \\\"Default language body in html\\\",  \\\"author_id\\\": 1,  \\\"state\\\": \\\"published\\\",  \\\"created_at\\\": 123456,  \\\"updated_at\\\": 123456,  \\\"url\\\": \\\"http://intercom.test/help/en/articles/3-default-language\\\",  \\\"parent_id\\\": 1,  \\\"parent_type\\\": \\\"collection\\\",  \\\"default_locale\\\": \\\"en\\\",  \\\"translated_content\\\": {    \\\"type\\\": \\\"article_translated_content\\\",    \\\"fr\\\": {      \\\"type\\\": \\\"article_content\\\",      \\\"title\\\": \\\"French title\\\",      \\\"description\\\": \\\"French description\\\",   \\t  \\\"body\\\": \\\"French body in html\\\",   \\t  \\\"author_id\\\": 1,     \\t\\\"state\\\": \\\"published\\\",     \\t\\\"created_at\\\": 7891011,     \\t\\\"updated_at\\\": 7891011,     \\t\\\"url\\\": \\\"http://intercom.test/help/fr/articles/3-french-multilingual\\\"    }  },  \\\"statistics\\\": {      \\\"type\\\": \\\"article_statistics\\\",      \\\"views\\\": 10,      \\\"conversations\\\": 0,      \\\"reactions\\\": 8,      \\\"happy_reaction_percentage\\\": 38,      \\\"neutral_reaction_percentage\\\": 38,      \\\"sad_reaction_percentage\\\": 25  }}\n\nExample HTML Body\nHTML\n<h1 class=\\\"intercom-align-left\\\">Header 1</h1><h2 class=\\\"intercom-align-left\\\">Header 2</h2><h2 class=\\\"intercom-align-center\\\">Centered Header</h2><p class=\\\"intercom-align-left\\\">   <a href=\\\"https://intercom.com\\\" target=\\\"_blank\\\">Link</a></p><ul>   <li>Single-level List</li></ul><pre><code>'Pre' Code</code></pre><p class=\\\"intercom-align-left\\\"><code>Inline code</code></p><p class=\\\"intercom-align-left\\\"><b>Bold text</b></p><p class=\\\"intercom-align-left\\\"><i>Italic text</i></p><p class=\\\"intercom-align-center\\\">Centered text</p><p class=\\\"intercom-align-left\\\">Image without link:</p><div class=\\\"intercom-container intercom-align-left\\\">   <img      src=\\\"https://downloads.intercomcdn.com/i/o/204050460/7a140f62f8e715d1d6cf246d/Image.jpg\\\"      /></div><p class=\\\"intercom-align-left\\\">Image with link:</p><div class=\\\"intercom-container intercom-align-left\\\">   <a target=\\\"_blank\\\" href=\\\"https://intercom.com\\\"      ><img      src=\\\"https://downloads.intercomcdn.com/i/o/204049719/b41c9a81c13b8a91023df1e7/Image.jpg\\\"      /></a></div><p class=\\\"intercom-align-left\\\">Image with link and centered:</p><div class=\\\"intercom-container intercom-align-center\\\">   <a target=\\\"_blank\\\" href=\\\"https://intercom.com\\\"      ><img      src=\\\"https://downloads.intercomcdn.com/i/o/204050579/2e85d79a0d9e0c47b088f50c/Image.jpg\\\"      /></a></div><div class=\\\"intercom-container intercom-align-left\\\">   <a class=\\\"intercom-h2b-button\\\" target=\\\"_blank\\\" href=\\\"https://intercom.com\\\"      >Button</a      ></div><div class=\\\"intercom-container intercom-align-center\\\">   <a class=\\\"intercom-h2b-button\\\" target=\\\"_blank\\\" href=\\\"https://intercom.com\\\"      >Centered Button</a      ></div><p class=\\\"intercom-align-left\\\">Video Embed with iFrame:</p><div class=\\\"intercom-h2b-video\\\">   <iframe      src=\\\"https://www.youtube.com/embed/jqO8AQHj7Fw?rel=0\\\"      frameborder=\\\"0\\\"      webkitallowfullscreen      mozallowfullscreen      allowfullscreen      ></iframe></div><p class=\\\"intercom-align-left\\\"></p>\n\n\nThe Articles API is a central place to gather all information and take actions on your articles. Articles can live within collections and sections, or alternatively they can stand alone.\n\nFor collections and sections you should refer to the Help Center endpoint.\n\nArticle Object\nKey\tType\tDescription\ntype\tString\tThe type of object - article.\nid\tString\tThe unique identifier for the article which is given by Intercom.\nworkspace_id\tString\tThe id of the workspace which the article belongs to.\ntitle\tString\tThe title of the article.\nFor multilingual articles, this will be the title of the default language's content.\ndescription\tString\tThe description of the article.\nFor multilingual articles, this will be the description of the default language's content.\nbody\tString\tThe body of the article in HTML.\nFor multilingual articles, this will be the body of the default language's content.\nSee more on what we accept in the Supported HTML table below.\nauthor_id\tString\tThe id of the author of the article.\nFor multilingual articles, this will be the id of the author of the default language's content. Must be a teammate on the help center's workspace.\nstate\tString\tWhether the article is published or is a draft.\nFor multilingual articles, this will be the state of the default language's content.\ncreated_at\tTimestamp\tThe time when the article was created.\nFor multilingual articles, this will be the timestamp of creation of the default language's content.\nupdated_at\tTimestamp\tThe time when the article was last updated.\nFor multilingual articles, this will be the timestamp of last update of the default language's content.\nurl\tString\tThe URL of the article.\nFor multilingual articles, this will be the URL of the default language's content.\nparent_id\tString\tThe id of the article's parent collection or section. An article without this field stands alone.\nparent_type\tString\tThe type of parent, which can either be a collection or section.\ndefault_locale\tString\tThe default locale of the help center. This field is only returned for multilingual help centers.\ntranslated_content\tObject\tAn Article Translated Content Object for multilingual articles. This field is only returned for multilingual help centers.\nArticle Translated Content Object\nKey\tType\tWriteable?\tDescription\ntype\tString\tNo\tThe type of object - article_translated_content.\n<locale> ar, bg, bs, ca, cs, da, de, 'de-form', el, en, es, et, fi, fr, he, hr, hu, id, it, ja, ko, lt, lv, mn, nb, nl, pl, 'pt-BR', pt, ro, ru, sl, sr, sv, tr, vi, 'zh-CN', 'zh-TW'\tObject\tYes\tAn Article Content Object for each supported locale of the multilingual help center. The default locale's content and information will be contained in the initial Article Object. If there's no content for a locale, the value will be nil.\nArticle Content Object\nKey\tType\tWriteable?\tDescription\ntype\tString\tNo\tThe type of object - article_content.\ntitle\tString\tYes\tThe title of the article.\ndescription\tString\tYes\tThe description of the article.\nbody\tString\tYes\tThe body of the article in HTML.\nauthor\tString\tYes\tThe id of the author of the article.\nstate\tString\tYes\tWhether the article is published or is a draft.\ncreated_at\tTimestamp\tNo\tThe time when the article was created.\nupdated_at\tTimestamp\tNo\tThe time when the article was last updated.\nurl\tString\tNo\tThe URL of the article.\nArticle Statistics Object\nKey\tType\tWriteable?\tDescription\ntype\tString\tNo\tThe type of object - article_statistics.\nviews\tInteger\tNo\tThe number of total views the article has received.\nconversations\tInteger\tNo\tThe number of conversations started from the article.\nreactions\tInteger\tNo\tThe number of total reactions the article has received.\nhappy_reaction_percentage\tInteger\tNo\tThe percentage of happy reactions the article has received against other types of reaction.\nneutral_reaction_percentage\tInteger\tNo\tThe percentage of neutral reactions the article has received against other types of reaction.\nsad_reaction_percentage\tInteger\tNo\tThe percentage of sad reactions the article has received against other types of reaction.\nSupported HTML\n\nThe table below defines the subset of HTML accepted when creating or updating an Article. Over time we may add support for new HTML elements and attributes, since this will not constitute a breaking change, we advise any client code to support the full HTML specification when reading article content.\n\nRemoving element support, or otherwise changing the API in a way that causes previously supported HTML to become unsupported will be considered a breaking change.\n\nTag\tWhat does it do?\tAdditional Details\n<p>\tParagraph\tAll text must be placed within paragraph tags.\n<br>\tLine break\tSupported in-line.\n<hr>\tHorizontal rule\tNA\n<h1> <h2>\tHeading\tOnly these two header tags are supported. All others will be replaced with <h2>.\n<a>\tLink\tAn image can be placed in-between the link tags.\n<img>\tImage\tImages will be uploaded to Intercom and we'll use an Intercom link to display these.\nIf these fail to upload then we'll hard fail and return 400 Bad Request.\n<ul> <ol> <li>\tList\tLists must contain at least one non-empty <li> element.\n\n<li> elements can contain plain text, or any other supported HTML tags, except <table>.\n\nIf these criteria aren't met, then the article will hard fail and return 400 Bad request.\n<table>\tTable\tNeeds to have at least one row and one cell.\nCan contain any other supported HTML tags, except another <table> within.\nIf these criteria aren't met then it will hard fail and return 400 Bad request.\n<iframe>\tVideo\tsrc must be for a supported video embed link.\nOnly works for Youtube, Wistia, Vimeo, Loom, Vidyard or StreamIO.\n<pre> <code>\tPre-formatted code\t\n<b> <strong>\tBold\t\n<i> <em>\tItalic\t\nSupported CSS\nClass\tWhat does it do?\tWhere does it work?\nintercom-align-center\tCenter Alignment\tOn tag level: Headers, Paragraphs. On wrapping div: Images, Buttons.\nintercom-h2b-button\tButton\tOn tag level: Links\nUnsupported HTML\nTag\tWhat does it do?\tWhat do we do?\n<dl>\tDefinition List\tHard fail - 400 Bad Request\n<ul> or <ol>\tNested lists\tHard fail - 400 Bad Request\n<iframe>\tiFrame Unsupported video\tHard fail - 400 Bad Request\n<div> <span>\tContent division\tReplace with <p>\n<h3> to <h6>\tHeading\tReplace with <h2>\n<form>\tForm\tRemove from content\n<input> <textarea>\tInput\tRemove from content\n<script>\tJavascript Script\tRemove from content\n<head> <html> <footer> etc.\tAll other tags\tRemove from content Internals replaced with <p>"
  },
  {
    "title": "Delete a collection",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/help-center/delete-a-collection/",
    "html": "Delete a collection\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/collections/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can delete a single collection by making a DELETE request to https://api.intercom.io/help_center/collections/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the collection which is given by Intercom.\nResponse\nKey\tType\tDescription\nid\tString\tThe unique identifier for the collection which you provided in the URL.\nobject\tString\tThe type of object which was deleted - collection.\ndeleted\tBoolean\tWhether the collections was deleted successfully or not."
  },
  {
    "title": "List all data events",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/data-events/list-user-events/",
    "html": "List all data events\n\n🚧\n\nPlease note that you can only 'list' events that are less than 90 days old. Event counts and summaries will still include your events older than 90 days but you cannot 'list' these events individually if they are older than 90 days\n\nList all customer events\ncurlcurlrubyphpjava\n$ curl 'https://api.intercom.io/events?type=user&user_id=314159' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"event.list\\\",\\n  \\\"events\\\": [\\n      {\\n        \\\"event_name\\\" : \\\"ordered-item\\\",\\n        \\\"created_at\\\": 1391691571,\\n        \\\"user_id\\\" : \\\"314159\\\"\\n      },\\n      {\\n        \\\"event_name\\\" : \\\"invited-friend\\\",\\n        \\\"created_at\\\": 1389913941,\\n        \\\"user_id\\\" : \\\"314159\\\",\\n        \\\"metadata\\\": {\\n         \\\"invitee_email\\\": \\\"pi@example.org\\\",\\n         \\\"invite_code\\\": \\\"ADDAFRIEND\\\"\\n         }\\n      },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/events?type=user&intercom_user_id=55a3b&before=144474756550\\\"\\n  }\\n}\\n\\n# NB: Full event objects are returned\n\n\nThe events belonging to a customer can be listed by sending a GET request to https://api.intercom.io/events with a user or lead identifier along with a type parameter. The identifier parameter can be one of user_id, email or intercom_user_id. The type parameter value must be user.\n\nhttps://api.intercom.io/events?type=user&user_id={user_id}\nhttps://api.intercom.io/events?type=user&email={email}\nhttps://api.intercom.io/events?type=user&intercom_user_id={id} (this call can be used to list leads)\n\nThe email parameter value should be url encoded when sending.\n\nYou can optionally define the result page size as well with the per_page parameter.\n\nRequest Parameters\nParameter\tRequired\tDescription\ntype\tyes\tThe value must be user\nuser_id\tno\tThe user id you have defined for the user\nemail\tno\tThe email you have defined for the user\nintercom_user_id\tno\tThe Intercom defined id for the user\nper_page\tno\tHow many results to return per page defaults to 50.\nsummary\tno\tBoolean value. When set to true, event counts are returned grouped by event name.\nReturns\n\nA pageable list of events. The event list contains a pages object that indicates if more events exist for the customer via the next field, whose value is a URL that can be used to fetch the next page. If the next field is not present, that indicates there are no further events for the user. Clients should note that the parameters in the returned link are not assured to be the same as those sent in the request.\n\nThe event list is sorted by the created_at field and ordered descending, most recently created first.\n\nAs well as the fields that were supplied when the event was posted to Intercom (see Event model for details) the event payload will also contain an id field that uniquely identifies the event and may optionally contain an intercom_user_id containing the Intercom defined id representing the user.\n\nYou can use the API to get counts of users, leads and companies filtered by certain criteria.\n\nCounts are a good way to periodically obtain data for the purposes of tracking rates of change in user and company data."
  },
  {
    "title": "List all articles",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/articles/list-all-articles/",
    "html": "List all articles\nExample Request & Response (Single Language Help Center)\ncurlhttp\n$ curl https://api.intercom.io/articles \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can fetch a list of all articles by making a GET request to https://api.intercom.io/articles.\n\nResponse\nKey\tType\tDescription\ntype\tString\tThe type of object - list.\npages\tObject\tA Pages object with the information needed to paginate through Articles.\ntotal_count\tInteger\tA count of the total number of articles.\ndata\tArray\tAn array of Article Objects.\nHOW ARE THE ARTICLES SORTED AND ORDERED?\n\nArticles will be returned in descending order on the updated_at attribute. This means if you need to iterate through results then we'll show the most recently updated articles first."
  },
  {
    "title": "Retrieve a segment",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Segments/retrieveSegment/",
    "html": "You can fetch the details of a single segment."
  },
  {
    "title": "Assign a conversation",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/conversations/assign-a-conversation/",
    "html": "Assign a conversation\nExample Request & Response (Assigning to Admin)\ncurljson\n$ curl https://api.intercom.io/conversations/{id}/parts \\\\-X POST \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json' \\\\-H 'Content-Type:application/json' -d{  \\\"type\\\": \\\"admin\\\",  \\\"admin_id\\\": \\\"814860\\\",  \\\"assignee_id\\\": \\\"814860\\\",  \\\"message_type\\\": \\\"assignment\\\",  \\\"body\\\": \\\"Reassigning for X reason.\\\",}\n\nExample Request & Response (Auto Assignment)\ncurljson\n$ curl 'https://api.intercom.io/conversations/{id}/run_assignment_rules'-X POST -H 'Authorization: Bearer <Your access token>' -H 'Accept: application/json' -H 'Content-Type: application/json'\n\n\nYou can assign a conversation to an admin and/or team. You can also let it be automatically assigned following assignment rules.\n\nRequest Path Parameters\nParameter\tRequired?\tDescription\nid\tYes\tThe identifier for the conversation as given by Intercom.\nrun_assignment_rules\tNo\tRuns through all assignment rules created in the Intercom Inbox product for a given workspace.\nRequest Body Parameters\n\nNo body parameters are required when auto assigning conversations using the {id}/run_assignment_rules path parameter.\n\nArgument\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tAlways assignment.\ntype\tString\tYes\tAccepts admin or team.\nadmin_id\tString\tYes\tThe id of the admin who is performing the action.\nassignee_id\tString\tYes\tThe id of the admin or team which will be assigned the conversation. A conversation can be assigned both an admin and a team. Set 0 if you want this assign to no admin or team (ie. Unassigned).\nbody\tString\tNo\tOptionally you can leave a note in the conversation for additional context to other teammates.\nResponse\n\nThis will return the Conversation that has been assigned."
  },
  {
    "title": "List attached segments for contact",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Segments/listSegmentsForAContact/",
    "html": "You can fetch a list of segments that are associated to a contact."
  },
  {
    "title": "Delete an article",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/articles/delete-an-article/",
    "html": "Delete an article\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/articles/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can delete a single article by making a DELETE request to https://api.intercom.io/articles/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the article which is given by Intercom.\nResponse\nKey\tType\tDescription\nid\tString\tThe unique identifier for the article which you provided in the URL.\nobject\tString\tThe type of object which was deleted - article.\ndeleted\tBoolean\tWhether the article was deleted successfully or not."
  },
  {
    "title": "List all segments",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Segments/listSegments/",
    "html": "You can fetch a list of all segments."
  },
  {
    "title": "The segment model",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/segments/segment-model/",
    "html": "The segment model\nExample Segment Object\n{\\n  \\\"type\\\": \\\"segment\\\",\\n  \\\"id\\\": \\\"53203e244cba153d39000062\\\",\\n  \\\"name\\\": \\\"New\\\",\\n  \\\"created_at\\\": 1394621988,\\n  \\\"updated_at\\\": 1394622004\\n}\n\n\nA segment is a group of your contacts defined by rules that you set. Contacts are automatically added to the segment every time the contact updates to match those rules. You can use Search for contacts to find contacts that match the same rules.\n\nSegment Object\nKey\tType\tDescription\ntype\tstring\tvalue is segment'.\nid\tstring\tThe unique identifier representing the segment.\nname\tstring\tThe name of the segment.\ncreated_at\ttimestamp\tThe time the segment was created.\nupdated_at\ttimestamp\tThe time the segment was updated.\nperson_type\tstring\tType of the record: user or lead.\ncount\tinteger\tThe number of items in the user segment. It's returned when include_count=true is included in the request."
  },
  {
    "title": "List all messages",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/messages/list-all-messages/",
    "html": "List all messages\n\nTo list all messages, you will need to use our Export API and download the data in CSV format. This API is available in v2.5 and above.\n\nLearn more about Exporting Message Data | Learn more about Unstable API version"
  },
  {
    "title": "List all data attributes",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/data-attributes/list-data-attributes/",
    "html": "List all data attributes\nExample Request & Response\ncurlcurl\n$ curl https://api.intercom.io/data_attributes?model=contact\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\n{\\n  \\\"type\\\": \\\"list\\\",\\n  \\\"data\\\": [\\n    {\\n      \\\"type\\\": \\\"data_attribute\\\",\\n      \\\"model\\\": \\\"customer\\\",\\n      \\\"name\\\": \\\"paid_subscriber\\\",\\n      \\\"full_name\\\": \\\"custom_attributes.paid_subscriber\\\",\\n      \\\"label\\\": \\\"paid_subscriber\\\",\\n      \\\"description\\\": \\\"\\\",\\n      \\\"data_type\\\": \\\"string\\\",\\n      \\\"options\\\": [\\n        \\\"pick_value_1\\\",\\n        \\\"pick_value_2\\\"\\n      ],\\n      \\\"api_writable\\\": true,\\n      \\\"ui_writable\\\": true,\\n      \\\"custom\\\": true,\\n      \\\"archived\\\": false,\\n      \\\"admin_id\\\": \\\"1\\\",\\n      \\\"created_at\\\": 1392734388,\\n      \\\"updated_at\\\": 1392734388\\n    },\\n    {\\n      \\\"type\\\": \\\"data_attribute\\\",\\n      \\\"model\\\": \\\"customer\\\",\\n      \\\"name\\\": \\\"region_name\\\",\\n      \\\"full_name\\\": \\\"location_data.region_name\\\",\\n      \\\"label\\\": \\\"Region\\\",\\n      \\\"description\\\": \\\"\\\",\\n      \\\"data_type\\\": \\\"string\\\",\\n      \\\"api_writable\\\": false,\\n      \\\"ui_writable\\\": true,\\n      \\\"custom\\\": false,\\n      \\\"archived\\\": false\\n    },\\n    {\\n      \\\"type\\\": \\\"data_attribute\\\",\\n      \\\"model\\\": \\\"company\\\",\\n      \\\"name\\\": \\\"plan\\\",\\n      \\\"full_name\\\": \\\"plan\\\",\\n      \\\"label\\\": \\\"Plan\\\",\\n      \\\"description\\\": \\\"\\\",\\n      \\\"data_type\\\": \\\"string\\\",\\n      \\\"api_writable\\\": true,\\n      \\\"ui_writable\\\": true,\\n      \\\"custom\\\": false,\\n      \\\"archived\\\": false\\n    },\\n    {\\n      \\\"type\\\": \\\"data_attribute\\\",\\n      \\\"model\\\": \\\"conversation\\\",\\n      \\\"name\\\": \\\"priority\\\",\\n      \\\"full_name\\\": \\\"priority\\\",\\n      \\\"label\\\": \\\"Priority\\\",\\n      \\\"description\\\": \\\"\\\",\\n      \\\"data_type\\\": \\\"string\\\",\\n      \\\"api_writable\\\": true,\\n      \\\"ui_writable\\\": true,\\n      \\\"custom\\\": true,\\n      \\\"archived\\\": false\\n    }\\n  ]\\n}\\n\n\n\nYou can fetch a list of all data attributes belonging to a workspace for contacts, companies or conversations.\n\nRequest Query Parameters\nParameter\tType\tRequired?\tDescription\nmodel\tString\tNo\tSpecify the data attribute model to return. Possible values are contact, company and conversation.\ninclude_archived\tBoolean\tNo\tInclude archived attributes in the list.\nBy default we return only non archived data attributes.\nResponse\n\nThis will return a List of Data Attribute Models."
  },
  {
    "title": "Create a section",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/help-center/create-a-section/",
    "html": "Create a section\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/sections \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\\n\\n{\\n  \\\"name\\\": \\\"Section 1\\\",\\n  \\\"parent_id\\\": \\\"1\\\",\\n  \\\"translated_content\\\": {\\n  \\t\\\"type\\\": \\\"group_translated_content\\\",\\n    \\\"es\\\": {\\n      \\\"type\\\": \\\"group_content\\\",\\n      \\\"name\\\": \\\"Sección 1\\\",\\n      \\\"description\\\": \\\"Spanish description\\\"\\n    }\\n  }\\n}\n\n\nYou can create a new section by making a POST request to https://api.intercom.io/help_center/sections.\n\nRequest Body Parameters\nKey\tType\tRequired?\tDescription\nname\tString\tYes\tThe name of the collection.\nFor multilingual collections, this will be the name of the default language's content.\nparent_id\tString\tYes\tThe id for the collection this section will be within.\ntranslated_content\tString\tNo\tA Group Translated Content Object whereby you can specify multiple multilingual collections to be created.\nResponse\n\nThis will return a Section Model of the section you just created."
  },
  {
    "title": "Retrieve an article",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/articles/retrieve-an-article/",
    "html": "Retrieve an article\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/articles/<id> \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can fetch the details of a single article by making a GET request to https://api.intercom.io/articles/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the article which is given by Intercom.\nResponse\n\nThis will return an Article model."
  },
  {
    "title": "Delete a section",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/help-center/delete-a-section/",
    "html": "Delete a section\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/sections/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can delete a single section by making a DELETE request to https://api.intercom.io/help_center/sections/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the section which is given by Intercom.\nResponse\nKey\tType\tDescription\nid\tString\tThe unique identifier for the section which you provided in the URL.\nobject\tString\tThe type of object which was deleted - section.\ndeleted\tBoolean\tWhether the section was deleted successfully or not."
  },
  {
    "title": "Leads",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/leads/leads/",
    "html": "Leads\n\n📘\n\nContacts (for Leads only) is no longer available as a resource. In order to see information and take action on leads, you should be using the Contacts API."
  },
  {
    "title": "User Segment/Tag Count Model",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/counts/user-tag-counts/",
    "html": "User Segment/Tag Count Model\n\nThe count of tags and segments includes archived tags and segments.\n\nUser Segment/Tag Count Object\n\n🚧 Count Object includes count for users and leads.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nuser\tobject\tContains a field called segment containing segment counts\nuser.segment\tarray\tContains a list of segment counts\nuser.tag\tarray\tContains a list of tag counts\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"tag\": [\n        {\n          \"Independent\": 3\n        }\n    ]\n  }\n}\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"segment\": [\n      {\n        \"Active\": 1\n      },\n      {\n        \"New\": 0\n      },\n      {\n        \"VIP\": 0\n      },\n      {\n        \"Slipping Away\": 0\n      },\n      {\n        \"segment 1\": 1\n      }\n    ]\n  }\n}\n\n# User Tag Count\n$ curl 'https://api.intercom.io/counts?type=user&count=tag' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# User Segment Count\n$ curl 'https://api.intercom.io/counts?type=user&count=segment' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# User Tag Count\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"tag\": [\n        {\n          \"Independent\": 3\n        }\n    ]\n  }\n}\n\n# User Segment Count\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"segment\": [\n      {\n        \"Active\": 1\n      },\n      {\n        \"New\": 0\n      },\n      {\n        \"VIP\": 0\n      },\n      {\n        \"Slipping Away\": 0\n      },\n      {\n        \"segment 1\": 1\n      }\n    ]\n  }\n}\n\nintercom.counts.for_type(type: 'user', count: 'tag')\nintercom.counts.for_type(type: 'user', count: 'segment')\n\n<?php\n// User Tag Count\n$counts = $intercom->counts->getCounts([\"type\" => \"user\", \"count\" => \"tag\"]);\nprint_r($counts);\n\n// Company Segment Count\n$counts = $intercom->counts->getCounts([\"type\" => \"user\", \"count\" => \"segment\"]);\n?>\n\n// User Tag Count\nfinal List<Counts.CountItem> tags = Counts.userTags();\nfor (Counts.CountItem tag : tags) {\n  out.println(tag.getName() + \": \" + tag.getValue());\n}\n\n// User Segment Count\nfinal List<Counts.CountItem> segments = Counts.userSegments();\nfor (Counts.CountItem seg : segments) {\n  out.println(seg.getName() + \": \" + seg.getValue());\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nUser Segment Count\tuser\tsegment\nUser Tag Count\tuser\ttag"
  },
  {
    "title": "The data attribute model",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/data-attributes/data-attribute-model/",
    "html": "The data attribute model\nExample Data Attribute Object\n{\\n  \\\"type\\\": \\\"data_attribute\\\",\\n  \\\"model\\\": \\\"contact\\\",\\n  \\\"name\\\": \\\"paid_subscriber\\\",\\n  \\\"full_name\\\": \\\"custom_attributes.paid_subscriber\\\", \\n  \\\"label\\\": \\\"paid_subscriber\\\", \\n  \\\"description\\\": \\\"\\\",\\n  \\\"data_type\\\": \\\"string\\\", \\n  \\\"options\\\": [\\n    \\\"pick_value_1\\\",\\n    \\\"pick_value_2\\\"\\n  ],\\n  \\\"api_writable\\\": true, \\n  \\\"ui_writable\\\": true, \\n  \\\"custom\\\": true, \\n  \\\"archived\\\": false, \\n  \\\"admin_id\\\": \\\"1\\\",\\n  \\\"created_at\\\": 1392734388,\\n  \\\"updated_at\\\": 1392734388\\n}\n\n\nData Attributes are metadata used to describe your contact, company and conversation models. These include standard and custom attributes. By using the data attributes endpoint, you can get the global list of attributes for your workspace, as well as create and archive custom attributes.\n\nData Attribute Object\nKey\tType\tDescription\ntype\tstring\tValue is data_attribute\nid\tinteger\tThe unique identifier for the data attribute which is given by Intercom. Only available for custom attributes.\nmodel\tstring\tValue is contact for user/lead attributes, company for company attributes and conversation for conversation attributes.\nname\tstring\tName of the attribute\n\nExamples:\nemail\nregion_name for region_name stored in location_data object\nimage_url for image_url stored in avatar object\npaid_subscriber for CDA named paid_subscriber\nfull_name\tstring\tFull name of the attribute. Should match the name unless it's a nested attribute.\n\nExamples:\nemail\nlocation_data.region_name\navatar.image_url\ncustom_attributes.paid_subscriber\n\nWe can split full_name on . to access nested user object values.\nlabel\tstring\tReadable name of the attribute (i.e. name you see in the UI)\ndescription\tstring\tReadable description of the attribute\ndata_type\tstring\tType of data stored in the attribute.\nPossible values:\nstring\ninteger\nfloat\nboolean\ndate\noptions\tlist\tList of predefined options for attribute value\napi_writable\tboolean\tCan this attribute be updated through API\nui_writable\tboolean\tCan this attribute be updated in the UI\ncustom\tboolean\tSet to true if this is a CDA\narchived\tboolean\tOnly applicable to CDAs\ncreated_at\ttimestamp\tThe time the CDA was created.\nOnly applicable to CDAs.\nupdated_at\ttimestamp\tThe last time the CDA was updated.\nOnly applicable to CDAs\nadmin_id\tstring\tTeammate who created the attribute.\nOnly applicable to CDAs"
  },
  {
    "title": "Conversation Count Model",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/counts/conversation-counts/",
    "html": "Conversation Count Model\nConversation Count Object\n\nThe conversation count supplies global counts about your App's conversations\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nconversation\tobject\tContains counts related to conversations\nconversation.assigned\tnumber\tContains the number of assigned conversations\nconversation.closed\tnumber\tContains the number of closed conversations\nconversation.open\tnumber\tContains the number of open conversations\nconversation.unassigned\tnumber\tContains the number of unassigned conversations\n{\n    \"type\": \"count\",\n    \"conversation\": {\n        \"open\": 30,\n        \"closed\": 17,\n        \"unassigned\": 0,\n        \"assigned\": 30\n    }\n}\n\n# Conversation Counts\n$ curl 'https://api.intercom.io/counts?type=conversation' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# Conversation App Counts\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"count\",\n    \"conversation\": {\n        \"open\": 30,\n        \"closed\": 17,\n        \"unassigned\": 0,\n        \"assigned\": 30\n    }\n}\n\nintercom.counts.for_type(type: 'conversation')\n\n<?php\n$counts = $intercom->counts->getCounts([\"type\" => \"conversation\"]);\nprint_r($counts);\n?>\n\n// Conversation Counts\nfinal Counts.Conversation totals = Counts.conversationTotals();\ntotals.getAssigned();\ntotals.getClosed();\ntotals.getOpen();\ntotals.getUnassigned();\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nConversation Count\tconversation\tNone"
  },
  {
    "title": "App Total Count Model",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/counts/company-user-counts/",
    "html": "App Total Count Model\n\nYou can use the API to get counts of users and companies filtered by certain criteria.\n\nCounts are a legacy way to periodically obtain data for the purposes of tracking rates of change in contact and company data.\n\nWorkspace Total Count Object\n\nThe total count object contains the summary of the following fields in a workspace, -\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count.hash'\ncompany\tobject\tContains the number of companies in your App\nsegment\tobject\tContains the number of segments in your App\ntag\tobject\tContains the number of tags in your App\nuser\tobject\tContains the number of users in your App\nlead\tobject\tContains the number of leads in your App\n\nThe count of tags and segments includes archived tags and segments.\n\n{\n    \"type\": \"count.hash\",\n    \"company\": {\n        \"count\": 55\n    },\n    \"user\": {\n        \"count\": 54944\n    },\n    \"lead\": {\n        \"count\": 17\n    },\n    \"tag\": {\n        \"count\": 1012\n    },\n    \"segment\": {\n        \"count\": 7\n    }\n}\n\n# App Counts\n$ curl 'https://api.intercom.io/counts' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# App Total Counts\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"count.hash\",\n    \"company\": {\n        \"count\": 55\n    },\n    \"user\": {\n        \"count\": 54944\n    },\n    \"lead\": {\n        \"count\": 17\n    },\n    \"tag\": {\n        \"count\": 1012\n    },\n    \"segment\": {\n        \"count\": 7\n    }\n}\n\nintercom.counts.for_app\n\n<?php\n// Global App Counts\n$intercom->counts->getCounts([]);\n?>\n\n// Global App Counts\nfinal Counts.Totals appTotals = Counts.appTotals();\nappTotals.getCompany().getValue();\nappTotals.getSegment().getValue();\nappTotals.getTag().getValue();\nappTotals.getUser().getValue();\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nGlobal App Counts\tNone\tNone"
  },
  {
    "title": "Retrieve a visitor with ID",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/api.intercom.io/Visitors/retrieveVisitor/",
    "html": "You can fetch the details of a single visitor."
  },
  {
    "title": "List all data attributes",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Data-Attributes/lisDataAttributes/",
    "html": "You can fetch a list of all data attributes belonging to a workspace for contacts, companies or conversations."
  },
  {
    "title": "Update a data attribute",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Data-Attributes/updateDataAttribute/",
    "html": "You can update a data attribute.\n\n🚧 Updating the data type is not possible\n\nIt is currently a dangerous action to execute changing a data attribute's type via the API. You will need to update the type via the UI instead."
  },
  {
    "title": "Delete a visitor",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/api.intercom.io/Visitors/deleteVisitor/",
    "html": "You can delete a single visitor."
  },
  {
    "title": "Create a data attribute",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Data-Attributes/createDataAttribute/",
    "html": "You can create a data attributes for a contact or a company."
  },
  {
    "title": "Retrieve a visitor with User ID",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/api.intercom.io/Visitors/retrieveVisitorWithUserId/",
    "html": "You can fetch the details of a single visitor."
  },
  {
    "title": "Unarchive contact",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Contacts/UnarchiveContact/",
    "html": "You can unarchive a single contact."
  },
  {
    "title": "Create contact",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Contacts/CreateContact/",
    "html": "You can create a new contact (ie. user or lead)."
  },
  {
    "title": "Archive contact",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Contacts/ArchiveContact/",
    "html": "You can archive a single contact."
  },
  {
    "title": "List all contacts",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Contacts/ListContacts/",
    "html": "You can fetch a list of all contacts."
  },
  {
    "title": "Search contacts",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Contacts/SearchContacts/",
    "html": "You can search for multiple contacts by the value of their attributes in order to fetch exactly who you want.\n\nTo search for contacts, you need to send a POST request to https://api.intercom.io/contacts/search. This will accept a query object in the body which will define your filters in order to search for contacts.\n\n🚧 Why is there a delay when creating contacts and searching for them?\n\nIf a contact has recently been created, there is a possibility that it will not yet be available when searching. This means that it may not appear in the response. This delay can take a few minutes. If you need to be instantly notified then you could use webhooks instead, which you'd currently have to iterate on to see if they match your search filters.\n\n🚧 Nesting & Limitations\n\nYou can nest these filters in order to get even more granular insights that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4). There are some limitations to the amount of multiple's there can be:\n\nThere's a limit of max 2 nested filters\nThere's a limit of max 15 filters for each AND or OR group\n\n🚧 Searching for Timestamp Fields\n\nAll timestamp fields (created_at, updated_at etc.) are indexed as Dates for Contact Search queries; Datetime queries are not currently supported. This means you can only query for timestamp fields by day - not hour, minute or second. For example, if you search for all Contacts with a created_at value greater (>) than 1577869200 (the UNIX timestamp for January 1st, 2020 9:00 AM), that will be interpreted as 1577836800 (January 1st, 2020 12:00 AM). The search results will then include Contacts created from January 2nd, 2020 12:00 AM onwards. If you'd like to get contacts created on January 1st, 2020 you should search with a created_at value equal (=) to 1577836800 (January 1st, 2020 12:00 AM). This behaviour applies only to timestamps used in search queries. The search results will still contain the full UNIX timestamp and be sorted accordingly.\n\nAccepted Fields\n\nMost key listed as part of the Contacts Model are searchable, whether writeable or not. The value you search for has to match the accepted type, otherwise the query will fail (ie. as created_at accepts a date, the value cannot be a string such as \"foorbar\").\n\nField\tType\nid\tString\nrole\tString\nAccepts user or lead\nname\tString\navatar\tString\nowner_id\tInteger\nemail\tString\nphone\tString\nformatted_phone\tString\nexternal_id\tString\ncreated_at\tDate (UNIX Timestamp)\nsigned_up_at\tDate (UNIX Timestamp)\nupdated_at\tDate (UNIX Timestamp)\nlast_seen_at\tDate (UNIX Timestamp)\nlast_contacted_at\tDate (UNIX Timestamp)\nlast_replied_at\tDate (UNIX Timestamp)\nlast_email_opened_at\tDate (UNIX Timestamp)\nlast_email_clicked_at\tDate (UNIX Timestamp)\nlanguage_override\tString\nbrowser\tString\nbrowser_language\tString\nos\tString\nlocation.country\tString\nlocation.region\tString\nlocation.city\tString\nunsubscribed_from_emails\tBoolean\nmarked_email_as_spam\tBoolean\nhas_hard_bounced\tBoolean\nios_last_seen_at\tDate (UNIX Timestamp)\nios_app_version\tString\nios_device\tString\nios_app_device\tString\nios_os_version\tString\nios_app_name\tString\nios_sdk_version\tString\nandroid_last_seen_at\tDate (UNIX Timestamp)\nandroid_app_version\tString\nandroid_device\tString\nandroid_app_name\tString\nandoid_sdk_version\tString\nsegment_id\tString\ntag_id\tString\ncustom_attributes.{attribute_name}\tString"
  },
  {
    "title": "Merge a lead and a user",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Contacts/MergeContact/",
    "html": "You can merge a contact with a role of lead into a contact with a role of user."
  },
  {
    "title": "Update a contact",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Contacts/UpdateContact/",
    "html": "You can update an existing contact (ie. user or lead)."
  },
  {
    "title": "Delete a contact",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Contacts/DeleteContact/",
    "html": "You can delete a single contact."
  },
  {
    "title": "Get a contact",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Contacts/ShowContact/",
    "html": "You can fetch the details of a single contact."
  },
  {
    "title": "Attach a Contact to a Company",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Contacts/attachContactToACompany/",
    "html": "You can attach a company to a single contact."
  },
  {
    "title": "List all notes",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Contacts/listNotes/",
    "html": "You can fetch a list of notes that are associated to a contact."
  },
  {
    "title": "Create a note",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Contacts/createNote/",
    "html": "You can add a note to a single contact."
  },
  {
    "title": "Add subscription to a contact",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Contacts/attachSubscriptionTypeToContact/",
    "html": "You can add a specific subscription to a contact. In Intercom, we have two different subscription types based on user consent - opt-out and opt-in:\n\n1.Attaching a contact to an opt-out subscription type will opt that user out from receiving messages related to that subscription type.\n\n2.Attaching a contact to an opt-in subscription type will opt that user in to receiving messages related to that subscription type.\n\nThis will return a subscription type model for the subscription type that was added to the contact."
  },
  {
    "title": "List attached companies for contact",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Contacts/listCompaniesForAContact/",
    "html": "You can fetch a list of companies that are associated to a contact."
  },
  {
    "title": "Detach a contact from a company",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Contacts/detachContactFromACompany/",
    "html": "You can detach a company from a single contact."
  },
  {
    "title": "List attached segments for contact",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Contacts/listSegmentsForAContact/",
    "html": "You can fetch a list of segments that are associated to a contact."
  },
  {
    "title": "List subscriptions for a contact",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Contacts/listSubscriptionsForAContact/",
    "html": "You can fetch a list of subscription types that are attached to a contact. These can be subscriptions that a user has 'opted-in' to or has 'opted-out' from, depending on the subscription type. This will return a list of Subscription Type objects that the contact is associated with.\n\nThe data property will show a combined list of:\n\n1.Opt-out subscription types that the user has opted-out from. 2.Opt-in subscription types that the user has opted-in to receiving."
  },
  {
    "title": "List attached contacts",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Contacts/ListAttachedContacts/",
    "html": "You can fetch a list of all contacts that belong to a company."
  },
  {
    "title": "Retrieve an admin",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/admins/view-an-admin/",
    "html": "Retrieve an admin\nExample Request & Response\n$ curl https://api.intercom.io/admins/493881 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"type\": \"admin\",\n    \"id\": \"493881\",\n    \"name\": \"Hoban Washburne\",\n    \"email\": \"wash@serenity.io\",\n    \"away_mode_enabled\": false,\n    \"away_mode_reassign\": false,\n    \"team_ids\": [\n        814865\n    ]\n}\n\n<?php\n$admin = $intercom->admins->getAdmin(\"493881\");\n?>\n\nErrors for admins without inbox seats\n{\n    \"type\": \"error.list\",\n    \"request_id\": \"0002miv9og586ig3aln0\",\n    \"errors\": [\n        {\n            \"code\": \"action_forbidden\",\n            \"message\": \"This admin does not have Inbox access permissions\"\n        }\n    ]\n}\n\n\nYou can fetch the details of a single admin.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier of a given admin\nResponse\n\nThis will return an Admin object."
  },
  {
    "title": "Pagination",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/common-structures/pagination/",
    "html": "Pagination\n\nThe majority of list resources in the API are paginated to allow clients to traverse data over multiple requests.\n\nTheir responses are likely to contain a pages object that hosts pagination links which a client can use to paginate through the data without having to construct a query. The link relations for the pages field are as follows.\n\nPages Object\nParameter\tDescription\nnext\tA link to the next page of results. A response that does not contain a next link does not have further data to fetch.\nprev\tA link to the previous page of results.\nfirst\tA link to the first page of results.\nlast\tA link to the last page of results.\nWHAT ABOUT FOR CONTACTS AND SEARCHES?\n\nWhen listing any Contact objects, we will instead use a cursor-based approach.\n\nOur Search resources will instead use a POST-based approach."
  },
  {
    "title": "Pagination & Sorting (Search)",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/common-structures/pagination-sorting-search/",
    "html": "Pagination & Sorting (Search)\n\nWhen you use any Search resource, we require you to make a POST request that will not accept the common query params of GET requests. Therefore, the structure here has slight variations to our cursor-based approach.\n\n📘\n\nThis currently only applies to Searching for Contacts and Searching for Conversations.\n\nPagination\nExample Request Body with Pagination for first page\n{\\n \\\"query\\\":  {\\n    \\\"field\\\": \\\"name\\\",\\n    \\\"operator\\\": \\\"=\\\",\\n    \\\"value\\\": \\\"alex\\\"\\n  },\\n  \\\"pagination\\\": {\\n    \\\"per_page\\\": 5,\\n  } \\n}\n\n\nYou can specify how many items per page you want to fetch.\n\nDEFAULT PAGINATION AMOUNT\n\nIf pagination is not provided, the request defaults to 50 items.\n\nExample Initial Pages Object\n{\\n  \\\"pages\\\": {\\n  \\\"type\\\": \\\"pages\\\",\\n  \\\"next\\\": {\\n    \\\"page\\\": 4,\\n    \\\"starting_after\\\": \\\"1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\\\\nIncfQLD3ouPkZlCwJ86F\\\\n\\\"\\n  },\\n  \\\"page\\\": 3,\\n  \\\"per_page\\\": 5,\\n  \\\"total_pages\\\": 10\\n  }\\n}\n\n\nIn order to iterate through pages, you must parse the query response. A query with multiple response pages will include a next key in the pages hash. When a next value is provided, the starting_after value must be sent back in a new request to iterate to the next page.\n\n🚧 Paginating through all results\n\nThis method of pagination is used to iterate through a result set until all results have been fetched, not to directly go to page X of the results. This is not possible.\n\nExample Request Body with Pagination for next page\n{\\n \\\"query\\\":  {\\n    \\\"field\\\": \\\"name\\\",\\n    \\\"operator\\\": \\\"=\\\",\\n    \\\"value\\\": \\\"alex\\\"\\n  },\\n  \\\"pagination\\\": {\\n    \\\"per_page\\\": 5,\\n    \\\"starting_after\\\": \\\"1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\\\\nIncfQLD3ouPkZlCwJ86F\\\\n\\\"\\n  } \\n}\\n\n\n\n🚧 Warning about search context state\n\nThe starting_after context is stateless. Consequently, if items are updated between 2 paginated queries, this can lead to duplicate or missed records.\n\nFor example, if a query is sorting results by number of sessions and an item is updated from 1 session to 2 sessions during the pagination, they may be listed on page 1 of the results, but also on page 2.\n\nSorting\nExample Request Body with Sort\n{\n \"query\":  {\n    \"field\": \"name\",\n    \"operator\": \"=\",\n    \"value\": \"alex\"\n  },\n  \"sort\": {\n    \"field\": \"name\",\n    \"order\": \"ascending\"\n  } \n}\n\n\nThe Search resources can also sort query results by using the following parameters within the sort object:\n\nParameter\tRequired?\tDescription\nfield\tYes\tAny searchable attribute (available on the Simple Query \"Allowed fields\").\norder\tNo\tEither \"ascending\" or \"descending\" - default to \"descending\" if none is provided.\nDEFAULT SORT ORDER\n\nIf no sort pattern is provided, the query will use the default sorting parameter \"last_request_at\" with a descending value (e.g. listing most recent active items first)."
  },
  {
    "title": "Set an admin to away",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/admins/set-an-admin-to-away/",
    "html": "Set an admin to away\n\nYou can set an Admin as away for the Inbox.\n\nRequest Body Parameters\nAttribute\tType\tDescription\nid\tstring\tThe id of the admin you want to set away mode or re-assign conversations.\naway_mode_enabled\tboolean\tSet to 'true' to change the status of the admin to away.\naway_mode_reassign\tboolean\tSet to 'true' to assign any new conversation replies to your default inbox.\nExample Request & Response\ncurltext\n$ curl https://api.intercom.io/admins/814860/away \\\\\\n-X PUT \\\\\\n-H 'Authorization: Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'  \\\\\\n-H 'Content-Type: application/json' -d\\n\\n{\\n  \\\"away_mode_enabled\\\": true,\\n  \\\"away_mode_reassign\\\": false\\n\\n}\n\nExample Errors\nAdmin without seat\n{\\n    \\\"type\\\": \\\"error.list\\\",\\n    \\\"request_id\\\": \\\"0002miv9og586ig3aln0\\\",\\n    \\\"errors\\\": [\\n        {\\n            \\\"code\\\": \\\"action_forbidden\\\",\\n            \\\"message\\\": \\\"This admin does not have Inbox access permissions\\\"\\n        }\\n    ]\\n}\n\nResponse\n\nThis will return an Admin model of the admin set away."
  },
  {
    "title": "Pagination (Cursor)",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/common-structures/pagination-cursor/",
    "html": "Pagination (Cursor)\n\nWe're starting to adopt a cursor-based approach to pagination for certain list resources.\n\n📘\n\nThis currently only applies when listing Contacts.\n\nExample Initial Request\ncURL (Initial Request)\n$ curl https://api.intercom.io/contacts?per_page=5 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nInitial Request\n\nYou can initially specify how many items per_page you want to fetch.\n\nParameter\tType\tDescription\nper_page\tInteger\tThe number of items returned in a single response.\nDefault is 50.\nMax is 150.\nExample Initial Pages Object\nJSON\n{\\n  \\\"pages\\\": {\\n    \\\"type\\\": \\\"pages\\\",\\n    \\\"next\\\": {\\n      \\\"page\\\": 4,\\n      \\\"starting_after\\\": \\\"1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\\\\nIncfQLD3ouPkZlCwJ86F\\\\n\\\"\\n    },\\n    \\\"page\\\": 3,\\n    \\\"per_page\\\": 5,\\n    \\\"total_pages\\\": 10\\n   }\\n}\n\nResponse\n\nIn order to iterate through pages, you must parse the query response. A query with multiple response pages will include a next key in the pages object. When a next value is provided, the starting_after value must be sent back in a new request in order to iterate to the next page.\n\nParameter\tType\tDescription\nstarting_after\tString\tThe cursor used for pagination in order to fetch the next page of results.\n\n🚧 Paginating through all results\n\nThis method of pagination is used to iterate through a result set until all results have been fetched, not to directly go to page X of the results. This is not possible.\n\nExample Subsequent Requests\ncURL (Subsequent Requests)\n$ curl https://api.intercom.io/contacts?starting_after=\\\"1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\\\\nIncfQLD3ouPkZlCwJ86F\\\\n\\\" \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\n"
  },
  {
    "title": "List all admins",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/admins/list-all-admins/",
    "html": "List all admins\nExample Request & Response\n$ curl https://api.intercom.io/admins \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n{\n    \"type\": \"admin.list\",\n    \"admins\": [\n        {\n        \t\t\"type\": \"admin\",\n            \"id\": \"493881\",\n      \t\t\t\"name\": \"Hoban Washburne\",\n      \t\t\t\"email\": \"wash@serenity.io\"\n            \"away_mode_enabled\": false,\n            \"away_mode_reassign\": false,\n            \"team_ids\": [\n                814865\n            ]\n        },\n        {\n            \"type\": \"admin\",\n            \"email\": \"mal@serenity.io\",\n            \"id\": \"646303\",\n            \"name\": \"Malcolm Reynolds \",\n            \"away_mode_enabled\": true,\n            \"away_mode_reassign\": false,\n            \"team_ids\": [\n                814865\n            ]\n        },\n        {\n            \"type\": \"admin\",\n            \"email\": \"jayne@serenity.io\",\n            \"id\": \"1195856\",\n            \"name\": \"Jayne Cobb \",\n            \"away_mode_enabled\": false,\n            \"away_mode_reassign\": false,\n            \"team_ids\": [\n                814865\n            ]\n        },\n        {\n            \"type\": \"team\",\n            \"email\": null,\n            \"id\": \"814865\",\n            \"name\": \"SerenityTeam\",\n            \"away_mode_enabled\": false,\n            \"away_mode_reassign\": false,\n            \"admin_ids\": [\n                493881,\n                646303,\n                1195856\n            ]\n        }\n    ]\n}\n\nintercom.admins.all.each { ... }\n\n<?php\n$admins= $intercom->admins->getAdmins();\nforeach ($admins->admins as $admin) {\n    print_r($admin->id);\n}?>\n\nAdminCollection admins = Admin.list();\n// get first page...\nList<Admin> pageItems = admins.getPageItems();\n// ...or iterate over pages\nwhile (admins.hasNext()) {\n    System.out.println(admins.next().getName());\n}\n\n\nYou can fetch a list of admins for a given workspace.\n\nResponse\n\nThis will return a list of Admin Objects for a given workspace.\n\nAdmin List\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'admin.list'\nadmins\tarray\tA list of admin objects"
  },
  {
    "title": "Identifiers and URLs",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/common-structures/identifiers-and-urls/",
    "html": "Identifiers and URLs\n\nAll objects in the API have an id field indicating their logical identifier.\n\nParameter\tDescription\nid\tA string that identifies the object within the API. The id field will not be larger than 128 characters (in SQL it corresponds to a varchar(128)).\n\nThese fields must always be treated as opaque strings - no guarantees are made about the internal structure of the id fields for an object.\n\nThe id field is always defined by the API server and is guaranteed to be unique relative to the type field - this means no two user objects will have the same id field, but a user and a company may have the same value for their id fields. . Some object types (such as Contact), also support client defined identifiers.\n\nThe company and user objects deserve special mention when it comes to identity for two reasons -\n\nThey allow you send your own external identifiers\nThe contact id field is in some cases, aliased to intercom_user_id. This is done to distinguish it from other identifiers in the API and to avoid confusion as to which object type an id denotes."
  },
  {
    "title": "Encoding",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/common-structures/encoding/",
    "html": "Encoding\n\nData is encoded as defined by JSON in RFC4627. The default encoding for APIs is UTF-8. Certain characters, such as Emojji may be handled as surrogate unicode pairs (see section '2.5 Strings' of RFC4627).\n\nSome query parameters may need to be url encoded when sending - for example, the email parameter value used to query users should be encoded.\n\n❗️ HTML Encoding\n\nIt should be noted that the following identifiers are encoded to protect from potential cross-site scripting attacks: 'name', 'user_id', 'company_id' and 'email'. As a result you may see these identifiers in their encoded format when you retrieve them via the API. Note that the characters we encode are double quote, single quote, ampersand, less than and greater than symbols i.e \" ' & < >\n\nHTML Encoding example\n\\\"X&Ys\\\" == \\\"X&amp;Y&#39;s\\\"\n"
  },
  {
    "title": "Create event summaries",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Data-Events/dataEventSummaries/",
    "html": "Create event summaries for a user. Event summaries are used to track the number of times an event has occurred, the first time it occurred and the last time it occurred."
  },
  {
    "title": "Submit a data event",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Data-Events/createDataEvent/",
    "html": "You will need an Access Token that has write permissions to send Events. Once you have a key you can submit events via POST to the Events resource, which is located at https://api.intercom.io/events, or you can send events using one of the client libraries. When working with the HTTP API directly a client should send the event with a Content-Type of application/json.\n\nWhen using the JavaScript API, adding the code to your app makes the Events API available. Once added, you can submit an event using the trackEvent method. This will associate the event with the Lead or currently logged-in user or logged-out visitor/lead and send it to Intercom. The final parameter is a map that can be used to send optional metadata about the event.\n\nWith the Ruby client you pass a hash describing the event to Intercom::Event.create, or call the track_user method directly on the current user object (e.g. user.track_event).\n\nType\tDescription\tExample\nString\tThe value is a JSON String\t\"source\":\"desktop\"\nNumber\tThe value is a JSON Number\t\"load\": 3.67\nDate\tThe key ends with the String _date and the value is a Unix timestamp, assumed to be in the UTC timezone.\t\"contact_date\": 1392036272\nLink\tThe value is a HTTP or HTTPS URI.\t\"article\": \"https://example.org/ab1de.html\"\nRich Link\tThe value is a JSON object that contains url and value keys.\t\"article\": {\"url\": \"https://example.org/ab1de.html\", \"value\":\"the dude abides\"}\nMonetary Amount\tThe value is a JSON object that contains amount and currency keys. The amount key is a positive integer representing the amount in cents. The price in the example to the right denotes €349.99.\t\"price\": {\"amount\": 34999, \"currency\": \"eur\"}\n\nNB: For the JSON object types, please note that we do not currently support nested JSON structure.\n\n🚧 Lead Events\n\nWhen submitting events for Leads, you will need to specify the Lead's id.\n\n📘 Metadata behaviour\n\nWe currently limit the number of tracked metadata keys to 10 per event. Once the quota is reached, we ignore any further keys we receive. The first 10 metadata keys are determined by the order in which they are sent in with the event.\nIt is not possible to change the metadata keys once the event has been sent. A new event will need to be created with the new keys and you can archive the old one.\nThere might be up to 24 hrs delay when you send a new metadata for an existing event.\n\n📘 Event de-duplication\n\nThe API may detect and ignore duplicate events. Each event is uniquely identified as a combination of the following data - the Workspace identifier, the Contact external identifier, the Data Event name and the Data Event created time. As a result, it is strongly recommended to send a second granularity Unix timestamp in the created_at field.\n\nDuplicated events are responded to using the normal 202 Accepted code - an error is not thrown, however repeat requests will be counted against any rate limit that is in place.\n\nHTTP API Responses\nSuccessful responses to submitted events return 202 Accepted with an empty body.\nUnauthorised access will be rejected with a 401 Unauthorized or 403 Forbidden response code.\nEvents sent about users that cannot be found will return a 404 Not Found.\nEvent lists containing duplicate events will have those duplicates ignored.\nServer errors will return a 500 response code and may contain an error message in the body."
  },
  {
    "title": "Update Ticket Type Attribute Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/update_ticket_type_attribute_request/",
    "html": "You can update a Ticket Type Attribute"
  },
  {
    "title": "Ticket Types",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/ticket_type_list/",
    "html": "A list of ticket types associated with a given workspace."
  },
  {
    "title": "Update Contact Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/update_contact_request/",
    "html": "You can update a contact"
  },
  {
    "title": "Ticket Type Attributes",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/ticket_type_attribute_list/",
    "html": "A list of attributes associated with a given ticket type."
  },
  {
    "title": "Untag Company Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/untag_company_request/",
    "html": "You can tag a single company or a list of companies."
  },
  {
    "title": "Update Collection Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/update_collection_request/",
    "html": "You can update a collection"
  },
  {
    "title": "Translation",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/translation/",
    "html": "A translation object contains the localised details of a subscription type."
  },
  {
    "title": "A Ticket Part representing a note",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/ticket_note/",
    "html": "A Ticket Part representing a note in the ticket"
  },
  {
    "title": "Ticket Attributes",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/ticket_custom_attributes/",
    "html": "An object containing the different attributes associated to the ticket as key-value pairs. For the default title and description attributes, the keys are _default_title_ and _default_description_."
  },
  {
    "title": "Team List",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/team_list/",
    "html": "This will return a list of team objects for the App."
  },
  {
    "title": "Ticket Parts",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/ticket_parts/",
    "html": "A list of Ticket Part objects for each note and event in the ticket. There is a limit of 500 parts."
  },
  {
    "title": "Tags",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/tags/",
    "html": "A list of tags objects associated with a conversation"
  },
  {
    "title": "Team Priority Level",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/team_priority_level/",
    "html": "Admin priority levels for teams"
  },
  {
    "title": "Tag Users Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/tag_multiple_users_request/",
    "html": "You can tag a list of users."
  },
  {
    "title": "Tags",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/tag_list/",
    "html": "A list of tags objects in the workspace."
  },
  {
    "title": "Subscription Types",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/subscription_type_list/",
    "html": "A list of subscription type objects."
  },
  {
    "title": "Social Profile",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/social_profile/",
    "html": "A Social Profile allows you to label your contacts, companies, and conversations and list them using that Social Profile."
  },
  {
    "title": "Snooze Conversation Request",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/snooze_conversation_request/",
    "html": "Payload of the request to snooze a conversation"
  },
  {
    "title": "Applied SLA",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/sla_applied/",
    "html": "The SLA Applied object contains the details for which SLA has been applied to this conversation. Important: if there are any canceled sla_events for the conversation - meaning an SLA has been manually removed from a conversation, the sla_status will always be returned as null."
  },
  {
    "title": "Sections",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/section_list/",
    "html": "This will return a list of Sections for the App."
  },
  {
    "title": "single_filter_search_request",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/single_filter_search_request/",
    "html": "The Intercom defined id representing the company."
  },
  {
    "title": "redact_conversation_request",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/redact_conversation_request/",
    "html": "Payload of the request to redact a conversation part"
  },
  {
    "title": "Part attachment",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/part_attachment/",
    "html": "The file attached to a part"
  },
  {
    "title": "Phone Switch",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/phone_switch/",
    "html": "Phone Switch Response"
  },
  {
    "title": "Paginated Response",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/paginated_response/",
    "html": "Paginated Response"
  },
  {
    "title": "Paginated Response",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/note_list/",
    "html": "A paginated list of notes associated with a contact."
  },
  {
    "title": "Pagination Object",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/pages_link/",
    "html": "The majority of list resources in the API are paginated to allow clients to traverse data over multiple requests.\n\nTheir responses are likely to contain a pages object that hosts pagination links which a client can use to paginate through the data without having to construct a query. The link relations for the pages field are as follows."
  },
  {
    "title": "multiple_filter_search_request",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/multiple_filter_search_request/",
    "html": "An operator to allow boolean inspection between multiple fields."
  },
  {
    "title": "Create News Item Request",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/news_item_request/",
    "html": "A News Item is a content type in Intercom enabling you to announce product updates, company news, promotions, events and more with your customers."
  },
  {
    "title": "Merge contact data",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/merge_contacts_request/",
    "html": "Merge contact data."
  },
  {
    "title": "intercom_version",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/intercom_version/",
    "html": "Intercom API version.\nBy default, it's equal to the version set in the app package."
  },
  {
    "title": "Group Translated Content",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/group_translated_content/",
    "html": "The Translated Content of an Group. The keys are the locale codes and the values are the translated content of the Group."
  },
  {
    "title": "Group Content",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/group_content/",
    "html": "The Content of a Group."
  },
  {
    "title": "File",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/file_attribute/",
    "html": "The value describing a file upload set for a custom attribute"
  },
  {
    "title": "Deleted Object",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/deleted_object/",
    "html": "Response returned when an object is deleted"
  },
  {
    "title": "Deleted Section Object",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/deleted_section_object/",
    "html": "Response returned when an object is deleted"
  },
  {
    "title": "detach_contact_from_conversation_request",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/detach_contact_from_conversation_request/",
    "html": "The id of the admin who is performing the action."
  },
  {
    "title": "Deleted Article Object",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/deleted_article_object/",
    "html": "Response returned when an object is deleted"
  },
  {
    "title": "Data Event Summary Item",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/data_event_summary_item/",
    "html": "This will return a summary of a data event for the App."
  },
  {
    "title": "Data Event List",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/data_event_list/",
    "html": "This will return a list of data events for the App."
  },
  {
    "title": "Custom Object Instance",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/custom_object_instance/",
    "html": "An instance of a Custom Object Type."
  },
  {
    "title": "Data Event Summary",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/data_event_summary/",
    "html": "This will return a summary of data events for the App."
  },
  {
    "title": "Custom Attributes",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/custom_attributes/",
    "html": "An object containing the different custom attributes associated to the conversation as key-value pairs. For relationship attributes the value will be a list of custom object instance models."
  },
  {
    "title": "Create Ticket Type Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/create_ticket_type_request/",
    "html": "The request payload for creating a ticket type. You can copy the icon property for your ticket type from Twemoji Cheatsheet"
  },
  {
    "title": "Data Attribute List",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/data_attribute_list/",
    "html": "A list of all data attributes belonging to a workspace for contacts, companies or conversations."
  },
  {
    "title": "customer_request",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/customer_request/",
    "html": "The identifier for the contact as given by Intercom."
  },
  {
    "title": "Cursor based pages",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/cursor_pages/",
    "html": "Cursor-based pagination is a technique used in the Intercom API to navigate through large amounts of data. A \"cursor\" or pointer is used to keep track of the current position in the result set, allowing the API to return the data in small chunks or \"pages\" as needed."
  },
  {
    "title": "Create Or Update Company Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/create_or_update_company_request/",
    "html": "You can create or update a Company"
  },
  {
    "title": "Create Data Export Request",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/create_data_exports_request/",
    "html": "Request for creating a data export"
  },
  {
    "title": "Create Data Event Summaries Request",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/create_data_event_summaries_request/",
    "html": "You can send a list of event summaries for a user. Each event summary should contain the event name, the time the event occurred, and the number of times the event occurred. The event name should be a past tense \"verb-noun\" combination, to improve readability, for example updated-plan."
  },
  {
    "title": "Create or Update Tag Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/create_or_update_tag_request/",
    "html": "You can create or update an existing tag."
  },
  {
    "title": "Create Data Event Request",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/create_data_event_request/",
    "html": "The name of the event that occurred. This is presented to your App's admins when filtering and creating segments - a good event name is typically a past tense 'verb-noun' combination, to improve readability, for example updated-plan."
  },
  {
    "title": "Create Data Attribute Request",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/create_data_attribute_request/",
    "html": "The name of the data attribute."
  },
  {
    "title": "Create Conversation Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/create_conversation_request/",
    "html": "Conversations are how you can communicate with users in Intercom. They are created when a contact replies to an outbound message, or when one admin directly sends a message to a single contact."
  },
  {
    "title": "Create Article Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/create_article_request/",
    "html": "You can create an Article"
  },
  {
    "title": "Create Collection Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/create_collection_request/",
    "html": "You can create a collection"
  },
  {
    "title": "Create Contact Request Payload",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/create_contact_request/",
    "html": "Payload to create a contact"
  },
  {
    "title": "Conversation teammates",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/conversation_teammates/",
    "html": "The list of teammates who participated in the conversation (wrote at least one conversation part)."
  },
  {
    "title": "Conversation List",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/conversation_list/",
    "html": "Conversations are how you can communicate with users in Intercom. They are created when a contact replies to an outbound message, or when one admin directly sends a message to a single contact."
  },
  {
    "title": "Conversation Rating",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/conversation_rating/",
    "html": "The Conversation Rating object which contains information on the rating and/or remark added by a Contact and the Admin assigned to the conversation."
  },
  {
    "title": "Conversation part author",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/conversation_part_author/",
    "html": "The object who initiated the conversation, which can be a Contact, Admin or Team. Bots and campaigns send messages on behalf of Admins or Teams. For Twitter, this will be blank."
  },
  {
    "title": "Conversation Part",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/conversation_part/",
    "html": "A Conversation Part represents a message in the conversation."
  },
  {
    "title": "Contacts",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/conversation_contacts/",
    "html": "The list of contacts (users or leads) involved in this conversation. This will only contain one customer unless more were added via the group conversation feature."
  },
  {
    "title": "First contact reply",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/conversation_first_contact_reply/",
    "html": "An object containing information on the first users message. For a contact initiated message this will represent the users original message."
  },
  {
    "title": "Contact Subscription Types",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/contact_subscription_types/",
    "html": "An object containing Subscription Types meta data about the SubscriptionTypes that a contact has."
  },
  {
    "title": "Contact Unarchived",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/contact_unarchived/",
    "html": "unarchived contact object"
  },
  {
    "title": "Social Profile",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/contact_social_profiles/",
    "html": "An object containing social profiles that a contact has."
  },
  {
    "title": "Segments",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/contact_segments/",
    "html": "A list of segments objects attached to a specific contact."
  },
  {
    "title": "User ID",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/contact_reply_user_id_request/",
    "html": "Payload of the request to reply on behalf of a contact using their user_id"
  },
  {
    "title": "Email",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/contact_reply_email_request/",
    "html": "Payload of the request to reply on behalf of a contact using their email"
  },
  {
    "title": "Intercom User ID",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/contact_reply_intercom_user_id_request/",
    "html": "Payload of the request to reply on behalf of a contact using their intercom_user_id"
  },
  {
    "title": "Contact Reply",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/contact_reply_conversation_request/",
    "html": "Payload of the request to reply on behalf of a contact using their intercom_user_id"
  },
  {
    "title": "Contact Reference",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/contact_reference/",
    "html": "reference to contact object"
  },
  {
    "title": "Contact List",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/contact_list/",
    "html": "Contacts are your users in Intercom."
  },
  {
    "title": "Contact notes",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/contact_notes/",
    "html": "An object containing notes meta data about the notes that a contact has. Up to 10 will be displayed here. Use the url to get more."
  },
  {
    "title": "Contact Location",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/contact_location/",
    "html": "An object containing location meta data about a Intercom contact."
  },
  {
    "title": "Contact Deleted",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/contact_deleted/",
    "html": "deleted contact object"
  },
  {
    "title": "Contact Attached Companies",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/contact_attached_companies/",
    "html": "A list of Company Objects"
  },
  {
    "title": "Contact companies",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/contact_companies/",
    "html": "An object containing companies meta data about the companies that a contact has. Up to 10 will be displayed here. Use the url to get more."
  },
  {
    "title": "Contact Archived",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/contact_archived/",
    "html": "archived contact object"
  },
  {
    "title": "Company Scroll",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/company_scroll/",
    "html": "Companies allow you to represent organizations using your product. Each company will have its own description and be associated with contacts. You can fetch, create, update and list companies."
  },
  {
    "title": "Company Attached Segments",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/company_attached_segments/",
    "html": "A list of Segment Objects"
  },
  {
    "title": "Collections",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/collection_list/",
    "html": "This will return a list of Collections for the App."
  },
  {
    "title": "Company Attached Contacts",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/company_attached_contacts/",
    "html": "A list of Contact Objects"
  },
  {
    "title": "Assign Conversation Request",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/attach_contact_to_conversation_request/",
    "html": "Payload of the request to assign a conversation"
  },
  {
    "title": "Assign Conversation Request",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/assign_conversation_request/",
    "html": "Payload of the request to assign a conversation"
  },
  {
    "title": "Article Translated Content",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/article_translated_content/",
    "html": "The Translated Content of an Article. The keys are the locale codes and the values are the translated content of the article."
  },
  {
    "title": "Article Statistics",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/article_statistics/",
    "html": "The statistics of an article."
  },
  {
    "title": "Articles",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/article_list/",
    "html": "This will return a list of articles for the App."
  },
  {
    "title": "Article Content",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/article_content/",
    "html": "The Content of an Article."
  },
  {
    "title": "App",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/app/",
    "html": "App is a workspace on Intercom"
  },
  {
    "title": "Admin",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/admin_with_app/",
    "html": "Admins are the teammate accounts that have access to a workspace"
  },
  {
    "title": "Admin Reply",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/admin_reply_conversation_request/",
    "html": "Payload of the request to reply on behalf of an admin"
  },
  {
    "title": "Admin Priority Level",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/admin_priority_level/",
    "html": "Admin priority levels for the team"
  },
  {
    "title": "Admins",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/admin_list/",
    "html": "A list of admins associated with a given workspace."
  },
  {
    "title": "Addressable List",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/addressable_list/",
    "html": "A list used to access other resources from a parent model."
  },
  {
    "title": "Paginated Response",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/activity_log_list/",
    "html": "A paginated list of activity logs."
  },
  {
    "title": "Retrieve a newsfeed",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/api.intercom.io/News/retrieveNewsfeed/",
    "html": "You can fetch the details of a single newsfeed"
  },
  {
    "title": "List all newsfeeds",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/api.intercom.io/News/listNewsfeeds/",
    "html": "You can fetch a list of all newsfeeds"
  },
  {
    "title": "List all live newsfeed items",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/api.intercom.io/News/listLiveNewsfeedItems/",
    "html": "You can fetch a list of all news items that are live on a given newsfeed"
  },
  {
    "title": "Delete a news item",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/api.intercom.io/News/deleteNewsItem/",
    "html": "You can delete a single news item."
  },
  {
    "title": "Update a news item",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/api.intercom.io/News/updateNewsItem/",
    "html": "The unique identifier for the news item which is given by Intercom."
  },
  {
    "title": "Retrieve a news item",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/api.intercom.io/News/retrieveNewsItem/",
    "html": "You can fetch the details of a single news item."
  },
  {
    "title": "Create a news item",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/api.intercom.io/News/createNewsItem/",
    "html": "You can create a news item"
  },
  {
    "title": "Visitor Deleted Object",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Models/visitor_deleted_object/",
    "html": "Response returned when an object is deleted"
  },
  {
    "title": "List all news items",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/api.intercom.io/News/listNewsItems/",
    "html": "You can fetch a list of all news items"
  },
  {
    "title": "Rate Limiting",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/errors/rate-limiting/",
    "html": "Rate Limiting\n# Example with the default rate limit of 1000\n\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 100\nX-RateLimit-Reset: 1487332510\n\n# After another request:\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 99\nX-RateLimit-Reset: 1487332510\n\n# After window resets\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 100\nX-RateLimit-Reset: 1487332520\n\n# If you make more than the allowed requests\nHTTP/1.1 429 Too Many Requests\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 0\nX-RateLimit-Reset: 1487332520\n\nintercom.rate_limit_details\n#=> {:limit=>1000, :remaining=>999, :reset_at=>2019-08-05 14:59:00 +0100}\n\n\nAPI Rate Limits are in place to protect Intercom from API traffic spikes that could put our databases at risk. We therefore measure the amount of requests sent to the API in order to throttle these when they surpass the amount allowed. We will respond with '429 Too Many Requests' and the following headers:\n\nHeader Name\tHeader Description\nX-RateLimit-Limit\tMaximum number of requests allowed for the app.\nX-RateLimit-Remaining\tNumber of requests left in the current time.\nX-RateLimit-Reset\tTime when the number of requests will be reset to the maximum limit.\nShown as UNIX timestamp.\nWHAT ABOUT CANVAS KIT REQUESTS?\n\nRate Limits only apply to calls to the REST API, not to any webhook requests that are sent as part of the Canvas Kit capabilities.\n\nWhat is the default amount of requests?\n\nEvery app will have default rate limits. The amount we rate limit them by is different for apps which are privately built for your own usage, or for apps that are publicly installed by third-parties.\n\nPrivate\n\nPrivate apps have a default rate limit of 10,000 API calls per minute per app and 25,000 API calls per minute per workspace. This means that if a workspace has multiple private apps installed, every one contributes towards total number of requests.\n\nPublic\n\nPublic apps have a default rate limit of 10,000 API calls per minute for each app and 25,000 API calls per minute per workspace. This means that if a workspace has multiple public apps installed, each one has its own separate request limit without contributing to the others.\n\nHIGHER RATE LIMITS\n\nIf you require higher rate limits than the defaults, you can contact us using the messenger in the bottom right.\n\nWhen does the amount of requests reset?\n\nAlthough the permitted limit of requests lasts for 1 minute, we evenly distribute this into 10 second windows. This means that every 10 seconds, the amount of permitted requests resets. For example, a default rate limit of 1000 per minute means that you can send a maximum of 166 operations per 10 second period (1000/6).\n\nHow can I handle rate limits?\n\nTo prevent hitting the rate limits, here are a few options for handling within your code.\n\nUse the header information\n\nYou can find the number of requests allowed in your current window in the Intercom headers, or if you are using the Intercom Ruby SDK you can call your client's rate_limit_details which returns a Hash with information about your app's rate limit.\n\nYou can use the remaining number of requests allowed in your current window and when this is below a certain value you can rest until your rate limit is reset.\n\nIn the example below the app is restricted to a rate limit of 5 just to show the output returned — note that we’ve also shown what information is available in the Intercom client and the response for your current rate limits using the Ruby SDK.\n\nrequire 'intercom'\nrequire 'stringio'\n\nintercom = Intercom::Client.new(token: ENV['YOUR_TOKEN'])\n\nretries = 0\nmax_retries = 3\nbackoff_factor = 2\n\nfor num in 0..20\n  begin\n    puts(\"Request Number #{num+1}\")\n    email = 'contact' + num.to_s + '@example.com'\n    name = 'Mrs ' + num.to_s + \"Example\"\n    # Make a HTTP POST request to Intercom to create/update a user\n    response = intercom.contacts.create(:email => email, :name => name, :signed_up_at => Time.now.to_i)\n    # These are the headers we have access to when making requests\n    puts(\"Rate Limit: #{intercom.rate_limit_details[:limit]} \\n\")\n    puts(\"Remaining: #{intercom.rate_limit_details[:remaining]} \\n\")\n    puts(\"Reset Time: #{intercom.rate_limit_details[:reset_at]} \\n\")\n\n    # Check when request limit is under a certain number\n    if not intercom.rate_limit_details[:remaining].nil? and intercom.rate_limit_details[:remaining] < 2\n      sleep_time = intercom.rate_limit_details[:reset_at].to_i - Time.now.to_i\n      puts(\"Waiting for #{sleep_time} seconds to allow for rate limit to be reset\")\n      sleep sleep_time\n    end\n  rescue => error\n    raise(\"Received a general error so exiting: #{error}\")\n  end\nend\n\n\nThe output from the above code is below. You would not need to output all of this data, but this should offer an example of what to expect and how you might approach implementing a rest until the limit is reset.\n\nRequest Number 1\nRate Limit:\nRemaining:\nReset Time:\nRequest Number 2\nRate Limit: 5\nRemaining: 5\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 3\nRate Limit: 5\nRemaining: 4\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 4\nRate Limit: 5\nRemaining: 3\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 5\nRate Limit: 5\nRemaining: 2\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 6\nRate Limit: 5\nRemaining: 1\nReset Time: 2023-12-08 15:19:51 +0000 \nWaiting for 38 seconds to allow for rate limit to be reset\nRequest Number 7\nRate Limit: 5\nRemaining: 5\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 8\nRate Limit: 5\nRemaining: 4\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 9\nRate Limit: 5\nRemaining: 3\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 10\nRate Limit: 5\nRemaining: 2\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 11\nRate Limit: 5\nRemaining: 1\nReset Time: 2016-11-16 16:15:00 +0000\nWaiting for 58 seconds to allow for rate limit to be reset\n\nUse randomization\n\nWhile the reset option is one way to deal with rate limiting, you may want more granular control over your rate limit handling. For example, you might have a specific retry timeframe that you want to follow and not wait for the minute window to pass for your entire rate limit to be reset.\n\nIf you want more control over your rate limiting handling then you can check for the specific rate limit error returned and use some form of randomization in the backoff calculation.\n\nYou could change the retry code above to look like this to achieve some randomization:\n\nrequire 'intercom'\nrequire 'stringio'\n\nintercom = Intercom::Client.new(token: ENV['YOUR_TOKEN'])\n\nretries = 0\nmax_retries = 3\nbackoff_factor = 2\n\nfor num in 0..20\n  begin\n    puts(\"Request Number #{num+1}\")\n    email = 'contact' + num.to_s + '@example.com'\n    name = 'Mrs ' + num.to_s + \"Example\"\n    # Make a HTTP POST request to Intercom to create/update a user\n    response = intercom.contacts.create(:email => email, :name => name, :signed_up_at => Time.now.to_i)\n  rescue Intercom::RateLimitExceeded => error\n    #At this point we know we have encountered a limit\n    #So lets try for a few times and backoff a little in each case\n    puts(\"Error Msg: #{error.inspect} \\n\")\n    puts(\"http_code: #{error.http_code[:http_code]}\\n\" )\n    puts(\"http_code: #{error.http_code[:application_error_code]}\\n\" )\n    if retries <= max_retries\n      # Lets try it a few more times\n      retries += 1\n      # Set a range from num of retries to backoff and randomly sample from that\n      # You can pick any range you like here, this is just an example\n      backoff = rand(retries..(backoff_factor * retries))\n      puts(\"Backoff for #{backoff} seconds\")\n      sleep backoff\n    else\n      # Rasing error here so you can perform some action based on this event\n      raise(\"No longer retrying since we have retried #{retries} times.\\n\"\\\n              \"The error returned was: '#{error.message}'\")\n    end\n  rescue => error\n    raise(\"Received a general error so exiting: #{error}\")\n  end\nend\n\n\nAfter running this code, your output would look like this:\n\nRequest Number 1\nRequest Number 2\nRequest Number 3\nRequest Number 4\nRequest Number 5\nRequest Number 6\nRequest Number 7\nError Msg: #<Intercom::RateLimitExceeded: More than 5 requests received in 1 minute>\nhttp_code: 429\nhttp_code: rate_limit_exceeded\nBackoff for 2 seconds\nRequest Number 8\nError Msg: #<Intercom::RateLimitExceeded: More than 5 requests received in 1 minute>\nhttp_code: 429\nhttp_code: rate_limit_exceeded\nBackoff for 3 seconds\nRequest Number 9\nError Msg: #<Intercom::RateLimitExceeded: More than 5 requests received in 1 minute>\nhttp_code: 429\nhttp_code: rate_limit_exceeded\nBackoff for 3 seconds\nRequest Number 10\nError Msg: #<Intercom::RateLimitExceeded: More than 5 requests received in 1 minute>\nhttp_code: 429\nhttp_code: rate_limit_exceeded\nBackoff for 6 seconds\nRequest Number 11\nError Msg: #<Intercom::RateLimitExceeded: More than 5 requests received in 1 minute>\nhttp_code: 429\nhttp_code: rate_limit_exceeded\nadvanced_throttle.rb:32:in `rescue in block in <main>': No longer retrying since we have retried 4 times. (RuntimeError)\nThe error returned was: 'More than 5 requests received in 1 minute'\n\tfrom advanced_throttle.rb:9:in `block in <main>'\n\tfrom advanced_throttle.rb:8:in `each'\n\tfrom advanced_throttle.rb:8:in `<main>'\n\nUse a library for exponential backoff\n\nTo prevent having to implement your own backoff forumlas, you can use a library that will handle this for you. Some examples include:\n\nretry for Node.js\nbackoff for Python\nretries, a RubyGem which will be used for the below example\n\nWith retries, all you specify the number of retries you want and it will handle the rest.\n\nrequire 'intercom'\nrequire 'stringio'\nrequire 'retries'\n\nintercom = Intercom::Client.new(token: ENV['YOUR_TOKEN'])\n\nmax_retries = 3\n\nfor num in 0..20\n  handler = Proc.new do |exception, attempt_number, total_delay|\n    puts \"Handler saw a #{exception.class}; retry attempt #{attempt_number}; #{total_delay} seconds have passed.\"\n  end\n  with_retries(:max_tries => max_retries, :handler => handler, :rescue => [Intercom::RateLimitExceeded]) do |attempt|\n    puts(\"Request Number #{num+1}\")\n    # You can check for the max retry number and raise an error so you can take some action based on this event\n    if attempt >= max_retries\n      raise(\"No longer retrying since we have retried #{attempt} time.\\n\"\\\n    \"The error returned was: '#{Intercom::RateLimitExceeded}'\")\n    end\n    puts(\"Request Number #{num+1}\")\n    email = 'contact' + num.to_s + '@example.com'\n    name = 'Mrs ' + num.to_s + \"Example\"\n    # Make a HTTP POST request to Intercom to create/update a user\n    response = intercom.contacts.create(:email => email, :name => name, :signed_up_at => Time.now.to_i)\n  end\nend\n\n\nThe is what the output of the above example looks like using retries:\n\nRequest Number 1\nRequest Number 2\nRequest Number 3\nRequest Number 4\nRequest Number 5\nRequest Number 6\nHandler saw a Intercom::RateLimitExceeded; retry attempt 1; 0.328696139 seconds have passed.\nRequest Number 6\nHandler saw a Intercom::RateLimitExceeded; retry attempt 2; 1.194656588 seconds have passed.\nRequest Number 6\nthrottle_retries.rb:14:in `block (2 levels) in <main>': No longer retrying since we have retried 3 times. (RuntimeError)\nThe error returned was: 'Intercom::RateLimitExceeded'\n\tfrom /home/ec2-user/.rvm/gems/ruby-2.3.0/gems/retries-0.0.5/lib/retries.rb:46:in `with_retries'\n\tfrom throttle_retries.rb:11:in `block in <main>'\n\tfrom throttle_retries.rb:7:in `each'\n\tfrom throttle_retries.rb:7:in `<main>'\n[ec2-user@ip-10-0-2-162 ~]$\n"
  },
  {
    "title": "Newsfeed Assignment",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/api.intercom.io/News/newsfeed_assignment/",
    "html": "Assigns a news item to a newsfeed."
  },
  {
    "title": "HTTP Responses",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/errors/http-responses/",
    "html": "HTTP Responses\n\nThe API returns HTTP responses on each request to indicate the success or otherwise of API requests. The codes listed below are often used, and the API may use others. Note that 4xx and 5xx responses may be returned for any request and clients should cater for them.\n\nResponse Code\tDescription\n400\tBad Request -- General client error, possibly malformed data.\n401\tUnauthorized -- The API Key was not authorised (or no API Key was found).\n402\tPayment Required -- The API is not available on your current plan.\n403\tForbidden -- The request is not allowed.\n404\tNot Found -- The resource was not found.\n405\tMethod Not Allowed -- The resource does not accept the HTTP method.\n406\tNot Acceptable -- The resource cannot return the client's required content type.\n408\tRequest Timeout -- The server would not wait any longer for the client.\n409\tConflict - Multiple existing users match this email address - must be more specific using user_id\n415\tUnsupported Media Type - The server doesn't accept the submitted content-type.\n422\tUnprocessable Entity -- The data was well-formed but invalid.\n429\tToo Many Requests -- The client has reached or exceeded a rate limit, or the server is overloaded.\n500, 502, 503, 504\tServer errors - something went wrong with Intercom's servers.\n\nThese responses are most likely momentary operational errors (e.g. temporary unavailability), and, as a result, requests should be retried once."
  },
  {
    "title": "Newsfeed",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/api.intercom.io/News/newsfeed/",
    "html": "A newsfeed is a collection of news items, targeted to a specific audience.\n\nNewsfeeds currently cannot be edited through the API, please refer to this article to set up your newsfeeds in Intercom."
  },
  {
    "title": "Error Objects",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/errors/error-objects/",
    "html": "Error Objects\nError List Object\n{\n  \"type\": \"error.list\",\n  \"errors\": [\n    {\n      \"code\": \"not_found\",\n      \"message\": \"No such user_id[314159]\",\n      \"field\": \"user_id\"\n    },\n    {\n      \"code\": \"not_found\",\n      \"message\": \"No such email[pi@example.org]\",\n      \"field\": \"email\"\n    }\n  ]\n}\n\n// the JavaScript client doesn't directly expose error data\n\n# the Ruby client doesn't directly expose error data\n\n<?php\n// the PHP client doesn't directly expose error data\n?>\n\ntry {\n  UserCollection uc = User.list();\n} catch(IntercomException  ie) {\n  Error e = ie.getFirstError();\n  log.error(\"{}:{}\", e.getCode(), e.getMessage());\n}\n\n\nThe API will return an Error List for a failed request, which will contain one or more Error objects.\n\nError List Attributes\n\nEach error has the following attributes\n\nField\tDescription\ntype\tThe type is error.list\nerrors\tAn array of one or more error objects\nError Object Attributes\n\nEach Error Object has the following attributes\n\nField\tDescription\ncode\tA string indicating the kind of error, used to further qualify the HTTP response code\nmessage\tOptional. Human readable description of the error\nfield\tOptional. Used to identify a particular field or query parameter that was in error."
  },
  {
    "title": "Inbox Best Practices",
    "url": "https://developers.intercom.com/docs/canvas-kit/canvas-kit-inbox-best-practices/",
    "html": "Inbox Best Practices\n\nBelow, we've outlined the key considerations to think about when designing an app to be used by teammates in Inbox. It's important that you design your app with consideration of the other elements and context that it will appear within: your app is just one part of the Inbox interface and will sit alongside other features like the message list and conversation view.\n\nDesign the first canvas\n\nWhen a teammate loads a conversation, we send an initialize request to your server and your app responds with what we call the \"first canvas\". The first canvas is what is shown to a teammate when they first load a conversation.\n\nThe first canvas is important because it sets expectations for teammates and is the very beginning of their experience using your app. Before they click or interact with your app, this canvas is the very first thing they'll see.\n\nKeep the first canvas less than 400 pixels tall\nRule: The total height of your app's first canvas must not exceed 400 pixels.\nWhy? Your app appears next to other apps in a teammate's conversation details. It's important that your app not negatively impact the visibility and effectiveness of other Inbox apps.\n\nAfter a teammate interacts with your app's first canvas (with a button or list click, for example), the height of your app is up to your own discretion. We strongly urge you to avoid overloading your app with too much information at any one time.\n\nIn the above example for Stripe, only the two most recent payments are shown when a teammate first loads a conversation. That's because the two most recent payments are likely to be the most relevant for teammates. A teammate can click \"Show more payments\" to load a new canvas that displays more payments.\n\nThink about what the most important and relevant information is for your app to display for the first canvas, and put all other information on other canvases.\n\nRule: Avoid putting all of your app's content and information in the first canvas. Use interactive components like button or list to progressively reveal more information to teammates as they interact with your app.\nWhy? It's important to avoid overwhelming teammates with information, especially information they don't need to use right away. This may end up pushing more helpful information in other apps off the screen.\n\nWe suggest showing the minimum amount of information that a teammate absolutely needs to know in the first canvas. When teammates need more information, they can opt-in to seeing it if you use interactive components like button or list in your first canvas.\n\nDon't use the primary button style in the first canvas\nRule: Do not use primary styled buttons on your app's first canvas. Use secondary or link buttons on the first canvas instead.\nWhy? When your first canvas loads, teammates aren't immediately focusing on and using your app. The only primary call to action in the entire Inbox interface is the reply to conversation button. All other call to action buttons are secondary to this in order to avoid a teammate's screen being filled with primary buttons, all competing for attention.\n\nOnce a teammate starts interacting with your app, then you can use primary styled buttons in secondary canvases.\n\nFor example, once a user starts using the Trello app to create a new card, only then do they use a primary styled button. This is a better experience because the \"Create card\" button is the primary button within the flow that a user is actively using and focusing on.\n\nApply consistent navigation\n\nNavigating back and forth between canvases is a common pattern in apps for teammates. We encourage your app to apply these guidelines so that teammates have consistent experiences when they interact with apps.\n\nSeparate navigation from app content\nRules: Use divider and spacer components to visually separate the navigation components of your app from the other content your app is displaying. Position navigation actions to the bottom of the canvas with the link style.\nWhy? This helps your navigation stand out from the content of your app, which makes it clearer and easier for teammates to use.\n\nWe recommend that you position your navigation actions to the bottom of cards. You can use this JSON to style your navigation:\n\nStyle app navigation actions consistently\n\nRules: Actions to start new flows or perform actions should be styled as secondary buttons. If your app has a button to go back, we suggest you label it as \"Back\" and style it as a link button. On completion of a flow within your app, if no other actions can be taken, use a link button with the label \"Done\" to return a teammate to your app's first canvas.\nWhy? This creates a predictable and intuitive means for teammates to navigate your app and complete actions. When your users spend less time figuring out how to move around your app, they'll spend more time being engaged and taking productive action.\nUse primary and secondary button styles consistently\n\nHere's a quick reference guide showing all of our rules for styling buttons and links consistently throughout your app. Follow these rules to speed up the app review process and avoid having your app getting rejected from our App Store.\n\nStyle\tRules\nprimary\t- Don't use this style on your app's first canvas\n- Do use this style when a user interacts with your app to enter a flow where they might need to take a specific action, such as submitting information\n- Don't use this style for navigating between canvases within your app\nsecondary\t- Do use this style on the first canvas\n- Do use this style when a user starts a new flow\n- Do use this style as users take actions within your app\n- Don't use this style for navigation within your app\nlink\t- Do use this style for navigation that moves teammates between canvases in your app. For example: \"Back\", \"Cancel\", or \"Done\" actions.\n- Do use this style for any external links that open in a new window\nShow next steps and navigation in confirmation and success states\n\nThere may be scenarios in your app where you provide confirmation or other feedback to a teammate that an action they took was successful.\n\nRule: Use a visual indicator (such as a check mark: ✅) to show that an action was successful. Keep all text concise and clear.\nRule: Don't leave a teammate in a \"dead end\" where they can't proceed to another canvas in your app. Provide a link that gives teammates a way to return to a useful place in your app.\nWhy? This gives teammates confidence that the actions they took were successful. They shouldn't have to guess about whether or not they've completed any tasks in your app. Likewise, they should have a clear means for taking additional actions in your app, which is why it's important to provide a navigation link back to the first canvas or another useful state.\n\nAs you can see above, the Trello and Stripe apps provide teammates with clear confirmation messages that act as small, lightweight moments of celebration. They also give teammates a way to take next steps or return to canvases they saw earlier in the flow.\n\nMake empty states and error states clear and useful\n\nAn \"empty state\" is often shown in your app before a teammate has taken actions or entered information into your app. They may show up during a teammate's first use of your app or in other scenarios.\n\nLikewise, a similar \"error state\" may occur when something goes wrong and the user encounters a problem.\n\nRule: Don't center text or use any images in empty states or error states.\nRule: If your app can provide any useful actions or functionality, you should display this instead of an empty state or error state.\nRule: If your app needs to display an empty state or an error state, use a muted styled paragraph text block that is left-aligned. This treatment matches the style of other empty states in the conversation details sidebar.\nRule: Don't leave a teammate in a \"dead end\" where they can't proceed to another canvas in your app. Provide a link that gives teammates a way to return to a useful place in your app.\nWhy? These treatments provide the greatest amounts of clarity, readability, and usability in your app while also showing the least amount of distraction or disruption. They give teammates the confirmation they need and an understanding of what they should do next.\n\nIn the above example, you can see how the Stripe app provides teammates with clear information and actions to take without disrupting their experience.\n\nFormatting date and time\n\nDate and time are central to the messaging experience in Inbox and throughout Intercom. They help teammates prioritize their work and understand the context of conversations as they occur.\n\nRule: Do not use relative dates (such as \"1 minute ago\", \"3 hours ago\", \"last week\" and similar messages).\n\nWhy? Framework apps are unable to be updated dynamically, so we instead suggest you absolutely format date and time to prevent relative time from becoming outdated.\n\nRule: Format absolute dates and times to match how they're formatted elsewhere in Intercom:\n\nDate should be formatted as Jan 8, 2019 (an abbreviated month, a numeric day with no leading zeros, a comma, and a 4-digit year).\nTime should be formatted as 1:05PM (use a 12-hour format with no leading zero, a colon, show minutes that include a leading zero, and AM/PM in upper case)\nDate and time together should be formatted as Jan 8, 2019 at 1:05PM (follow the individual standards for date and time, use 'at' in between them)\n\nWhy? This reduces the amount of distraction and disruption for teammates because they won't have to interpret dates and times in different ways across their Intercom experience.\n\nRule: If your app is internationalised, make sure that your abbreviated month is appropriately translated. Also ensure that you display date and time in your user's local time zone.\n\nWhy? This provides the greatest clarity for teammates and helps them work more effectively."
  },
  {
    "title": "Results",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/responseobjects/results/",
    "html": "Results\nDescription\n\nThe results object should be sent when you want to end configuration of the app and trigger the Initialize request to be sent. You provide the key-value pairs of data you want access to and we will send these in the Initialize request within a card_creation_options object.\n\nExample Object\nresults: { \"key\": \"value\" } // Can be more than one pair\n"
  },
  {
    "title": "Event",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/responseobjects/event/",
    "html": "Event\nDescription\n\nThe event object enables Intercom to know more about the actions that took place in your app. Currently, you can only tell us when an app's flow has been completed.\n\nAttributes\nKey\tType\tDescription\ntype\tstring\tWhat action took place. The only value currently accepted is completed.\nExample Object\nevent: { \"type\": \"completed\" } // Optional. Recorded by Intercom.\n"
  },
  {
    "title": "Content",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/responseobjects/content/",
    "html": "Content\nDescription\n\nThe content object is where you specify the UI of your app. You provide us with a set of components in a components array that we then render.\n\nThe content object should usually be returned within the canvas object. If you're responding to a Live Canvas request however, then you should only respond with the content object.\n\nAttributes\nKey\tType\tDescription\ncomponents\tarray\tThe list of components to be rendered. See the components further in this reference.\nExample Object\n{\n  content: {\n    components: [\n      {\n        \"type\": \"text\",\n        \"id\": \"component-1\",\n        \"text\": \"This is the first component\",\n        \"align\": \"center\",\n        \"style\": \"header\"\n      },\n      {\n        \"type\": \"button\",\n        \"id\": \"component-2\",\n        \"label\": \"This is the second component\",\n        \"action\": {\n          \"type\": \"submit\"\n        }\n      }\n    ]\n  }\n}\n"
  },
  {
    "title": "Canvas",
    "url": "https://developers.intercom.com/docs/references/2.7/canvas-kit/responseobjects/canvas/",
    "html": "Canvas\nDescription\n\nYou have to respond to the majority of requests with a canvas object. This will tell us what UI to show for your app.\n\nA canvas can either be static (meaning we send you the next request only when an action takes place) or live (meaning we send you the next request when someone views the app).\n\nA static canvas needs a Content Object which will contain the components to show.\nA live canvas needs a content_url which we we will make the Live Canvas requests to when the app is viewed. This is only possible for apps viewed or used in the Messenger.\nAttributes\nKey\tType\tCanvas Type\tDescription\ncontent\tobject\tStatic\tThe Content that will be shown as the UI of the app. Max Size is 64KB.\ncontent_url\tstring\tLive\tThe URL which we make Live Canvas requests to. You must respond to these with a Content Object. Max size is 64KB.\nstored_data\tobject\tStatic, Live\tOptional Stored Data that you want to be returned in the next sent request. Max Size is 64KB.\nExample Objects\n{\n  canvas: {\n    content: {\n      components: [\n        {\n          \"type\": \"text\",\n          \"text\": \"This is a text component.\"\n        }\n      ]\n    },\n    stored_data: { \"key\": \"value\" } //Can be more than one pair \n  }\n}\n\n{\n  canvas: {\n    content_url: \"https://messengerapp.com/get-content-here\",\n    stored_data: { \"key\": \"value\" } //Can be more than one pair \n  }\n}\n"
  },
  {
    "title": "Canvas Kit Best Practices",
    "url": "https://developers.intercom.com/docs/canvas-kit/canvas-kit-overall-best-practices/",
    "html": "Canvas Kit Best Practices\nEnsure your app has a purpose within Intercom\n\nApps built with the Framework are intended to be extensions of your product. These may take users outside of Intercom in some scenarios, but they should always aim to successfully achieve an outcome by utilizing your service within Intercom first. Answer these questions to get a sense of the jobs you want your app to solve:\n\nWhat problems do my customers face when they're using my app alongside Intercom?\nWhat context would be beneficial for my customers / their end users to have?\nWhat information would be beneficial for my customers / their end users to know?\nWhat actions would be beneficial for my customers / their end users to take?\nStoryboard the flows of your app\n\nYour app's job is to guide your users toward a specific outcome, like starting a video call or subscribing to your newsletter. Before you start building your app, you should storyboard your app's interactions:\n\nMap out a clear start, middle and end state for your app.\nMinimize the number of steps users need to take to complete a task. For example, instead of showing a button that leads to a form, show the form from the start.\nConsider your grammar, language and tone\n\nWhen it comes to writing copy for your app, there are several things to take into consideration; who your users are, what prior knowledge of your product's concepts they have, and their level of English proficiency are to name but a few. Here's some guidance to avoid issues with your descriptive text:\n\nConsider if each term you use clearly describes the concept in the simplest way.\nAvoid synonyms for the same concept in place of a singular word or phrase.\nAvoid using terminology that's industry or product specific where it wouldn't naturally sit.\nUse simple, small, common words that everyone will understand, regardless of their native language.\nEnsure words are not repeated within the same text component.\nSteer clear of jargon or in-jokes that the majority of users won't grasp.\nFocus on making your text easy to understand on a first glance. For example, use bold text to highlight important aspects in larger paragraphs.\nGet others to read your copy - a second opinion will help to make it both more human and readable.\nDo not disguise your app as a human or company. Language can be empathetic, but identifiable as a non-human entity. Avoid \"I\" and \"We\".\n\nIt's also worth considering what your users are there to do - no matter the end goal, the bottom-line is that all apps on Intercom should get users to the outcome they desire. To achieve this, you need to ensure your actionable language follows some rules:\n\nMake your call to actions shorter, more direct, and super clear about what happens next when a user takes the action.\nBe brief and give the instructions your users need in as few words as possible.\nProvide all the context users need to complete each step in your app. For example, if you have an app that allows users to request a demo with your team, your button should say 'Request a demo' instead of 'Let's do this.'\n\nUse the active voice for when something needs to be done.\nSpeak authoritatively by beginning sentences with imperative verbs.\nCut permissive words and be direct with commands.\nEncourage action to take place.\nExamples: 'Book an appointment', 'Play podcast' or 'Check on your recent orders.'\n\nKeep the experience consistent\n\nYour app should be consistent across its entire flow, and keep consistency with other apps in our ecosystem. The experience should feel familiar without significant difference from one app, or section within an app, to another.\n\nComponents are designed to accommodate particular jobs. Think about what you're trying to achieve and use those that suit the experience best.\nConsistently use the same components to solve similar or common patterns and interactions throughout your app.\nLook at our App Store for examples on how existing apps within your given category achieve their workflows.\nUse the same terminology throughout to describe the same concepts.\nHandle errors correctly\n\nThere's bound to be times when your app runs into issues. It's important that the user of your app is both aware of the problem and can understand what's happened.\n\nBe as clear and as specific as possible by providing as much information in as few words.\n\nExplain any solutions, and provide guidance on next steps. This could be troubleshooting information, or an action which can solve the issue faster.\n\nKeep error messages close to where the issue lies, and always provide one.\n\nFor the text component, change the style to error. This will highlight the text in red.\n\nFor interactive components, change the style to failed. This will highlight the component in red.\n\nAuthenticate and provide settings in the appropriate place\n\nWhen your app requires users to authenticate with your service, or you want users of your app to select settings and customize certain features before using the app, there's a few things to consider:\n\nTeammates should authenticate with your service during installation. This should happen after they go through the Intercom OAuth flow, but it can also happen beforehand if there's a good use case.\nWhen a teammate installs your app, this will authenticate all teammates within the Intercom workspace to access and use your app.\nIf your service needs to individually authenticate each of the individual teammates in Intercom, you should:\nFirst use the Admin API and attempt to map Intercom teammates with your users.\nIf this won't work, allow the teammate to authenticate within the first canvas of your app upon adding it (ie. the configure flow for Messenger, and the initialize flow for Inbox).\nSettings which impact every user of the app in the workspace should never live directly within the app. Only provide settings specific to that teammate or single-use flow itself.\nConsider adding an onboarding flow after a user has authenticated and before you redirect back to the App Store, providing clarity and direction on how the app works, alongside any configurable settings."
  },
  {
    "title": "User, Lead or Visitor Initiated Conversation",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/conversations/user-or-contact-initiated-conversation/",
    "html": "User, Lead or Visitor Initiated Conversation\nUser Initiated Message\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/messages \\\\\\n-XPOST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d'\\n{\\n  \\\"from\\\": {\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"536e564f316c83104c000020\\\"\\n  },\\n  \\\"body\\\": \\\"Hey\\\"\\n}'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"user_message\\\",\\n  \\\"id\\\": \\\"2001\\\",\\n  \\\"created_at\\\": 1401917202,\\n  \\\"body\\\" : \\\"Hey, is the new thing in stock?\\\",\\n  \\\"message_type\\\": \\\"inapp\\\"\\n}\n\n\nYou can create a new user, lead or visitor initiated message by submitting a POST to https://api.intercom.io/messages along with a JSON message.\n\nThe sending user or lead is identified by their user_id, email or id values in the from field, along with a type field value of user or contact.\n\nYou can also send a message from a visitor by specifying their user_id or id value in the from field, along with a type field value of contact. This visitor will be automatically converted to a lead once the message is sent.\n\nThe message_type for a user initiated message is always treated as a inapp and will appear as a conversation inside Intercom. The email message type is not currently supported for a user initiated message.\n\nUser initiated messages can not be sent to specific admins, and as such, do not use the to field.\n\nAttributes\nAttribute\tType\tDescription\nbody\tstring\tThe content of the message. Plaintext only, HTML is not supported.\nfrom\tobject\tA user, lead or visitor object containing the user's id or user_id (or email if lead). The type field must have a value of user or contact.\nReturns\n\nThe created message object.\n\nHOW CAN I GET THE FULL CONVERSATION OBJECT?\n\nAs the id returned is the message_id, you'd need to make an additional call to the API afterwards to find the latest open conversation for the user you sent the message from.\n\nGetting the full conversation object\n last_convo = @intercom.conversations.find_all(:type => 'user', :intercom_user_id => \\\"ID OF THE USER\\\", :open => true).first\\n last_convo.id\n"
  },
  {
    "title": "Unsnoozing a conversation",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/conversations/unsnoozing-a-conversation/",
    "html": "Unsnoozing a conversation\nUnsnooze a conversation\n$ curl 'https://api.intercom.io/conversations/11055118659/reply' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"admin_id\": \"814860\",\n  \"message_type\":\"open\"\n}'\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"11055118659\",\n    \"created_at\": 1501496012,\n    \"updated_at\": 1501508752,\n    \"waiting_since\": 1501498931,\n    \"snoozed_until\": null,\n    \"conversation_message\": {\n        \"type\": \"conversation_message\",\n        \"id\": \"55951247\",\n        \"subject\": \"\",\n        \"body\": \"<p>Hi \\ud83d\\ude00 We hope you enjoy the example app. To get started just copy and paste some code into the JS editor. Let us know if you think this is useful? <br></p>\",\n        \"author\": {\n            \"type\": \"admin\",\n            \"id\": \"724865\"\n        },\n        \"attachments\": [],\n        \"url\": null\n    },\n    \"user\": {\n        \"type\": \"lead\",\n        \"id\": \"597f02cb22f4bb37597e0b7d\"\n    },\n    \"customers\": [\n        {\n            \"type\": \"lead\",\n            \"id\": \"597f02cb22f4bb37597e0b7d\"\n        },\n        {\n            \"type\": \"user\",\n            \"id\": \"58ff3f670f14ab4f1aa83750\"\n        }\n    ],\n    \"assignee\": {\n        \"type\": \"admin\",\n        \"id\": \"724860\"\n    },\n    \"conversation_parts\": {\n        \"type\": \"conversation_part.list\",\n        \"conversation_parts\": [\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712337945\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>test convo 1</p>\",\n                \"created_at\": 1501496025,\n                \"updated_at\": 1501496025,\n                \"notified_at\": 1501496025,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"user\",\n                    \"id\": \"597f02cb22f4bb37597e0b7d\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712338024\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>TestApp typically replies in a few hours. Don\\u2019t miss their reply.</p>\",\n                \"created_at\": 1501496028,\n                \"updated_at\": 1501496028,\n                \"notified_at\": 1501496028,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"bot\",\n                    \"id\": \"815309\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712338089\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p></p><p>Get notified by email</p>\",\n                \"created_at\": 1501496030,\n                \"updated_at\": 1501496030,\n                \"notified_at\": 1501496031,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"bot\",\n                    \"id\": \"815309\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712344562\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>group test two</p>\",\n                \"created_at\": 1501496290,\n                \"updated_at\": 1501496290,\n                \"notified_at\": 1501496291,\n                \"assigned_to\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712383990\",\n                \"part_type\": \"participant_added\",\n                \"body\": null,\n                \"created_at\": 1501497831,\n                \"updated_at\": 1501497831,\n                \"notified_at\": 1501497832,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712411349\",\n                \"part_type\": \"participant_added\",\n                \"body\": null,\n                \"created_at\": 1501498885,\n                \"updated_at\": 1501498885,\n                \"notified_at\": 1501498885,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712412506\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>group test</p>\",\n                \"created_at\": 1501498931,\n                \"updated_at\": 1501498931,\n                \"notified_at\": 1501498932,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"user\",\n                    \"id\": \"597f02cb22f4bb37597e0b7d\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712425169\",\n                \"part_type\": \"participant_removed\",\n                \"body\": null,\n                \"created_at\": 1501499414,\n                \"updated_at\": 1501499414,\n                \"notified_at\": 1501499414,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712728293\",\n                \"part_type\": \"snoozed\",\n                \"body\": null,\n                \"created_at\": 1501508752,\n                \"updated_at\": 1501508752,\n                \"notified_at\": 1501508752,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            }\n        ],\n        \"total_count\": 9\n    },\n    \"open\": true,\n    \"state\": \"snoozed\",\n    \"read\": false,\n    \"tags\": {\n        \"type\": \"tag.list\",\n        \"tags\": []\n    }\n}\n\nArguments\nArgument\tRequired\tDescription\nadmin_id\tYes\tOnly admins can snooze a conversation so you need to provide the admin_id\nmessage_type\tYes\tMust be open to re-open or 'unsnooze' the conversation"
  },
  {
    "title": "Snoozing a conversation",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/conversations/snoozing-a-conversation/",
    "html": "Snoozing a conversation\nSnooze a conversation\n$ curl 'https://api.intercom.io/conversations/11055118659/reply' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"admin_id\": \"724860\",\n  \"message_type\":\"snoozed\",\n  \"snoozed_until\":\"1501512795\"\n}'\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"11055118659\",\n    \"created_at\": 1501496012,\n    \"updated_at\": 1501508752,\n    \"waiting_since\": 1501498931,\n    \"snoozed_until\": null,\n    \"conversation_message\": {\n        \"type\": \"conversation_message\",\n        \"id\": \"55951247\",\n        \"subject\": \"\",\n        \"body\": \"<p>Hi \\ud83d\\ude00 We hope you enjoy the example app. To get started just copy and paste some code into the JS editor. Let us know if you think this is useful? <br></p>\",\n        \"author\": {\n            \"type\": \"admin\",\n            \"id\": \"724865\"\n        },\n        \"attachments\": [],\n        \"url\": null\n    },\n    \"user\": {\n        \"type\": \"lead\",\n        \"id\": \"597f02cb22f4bb37597e0b7d\"\n    },\n    \"customers\": [\n        {\n            \"type\": \"lead\",\n            \"id\": \"597f02cb22f4bb37597e0b7d\"\n        },\n        {\n            \"type\": \"user\",\n            \"id\": \"58ff3f670f14ab4f1aa83750\"\n        }\n    ],\n    \"assignee\": {\n        \"type\": \"admin\",\n        \"id\": \"724860\"\n    },\n    \"conversation_parts\": {\n        \"type\": \"conversation_part.list\",\n        \"conversation_parts\": [\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712337945\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>test convo 1</p>\",\n                \"created_at\": 1501496025,\n                \"updated_at\": 1501496025,\n                \"notified_at\": 1501496025,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"user\",\n                    \"id\": \"597f02cb22f4bb37597e0b7d\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712338024\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>TestApp typically replies in a few hours. Don\\u2019t miss their reply.</p>\",\n                \"created_at\": 1501496028,\n                \"updated_at\": 1501496028,\n                \"notified_at\": 1501496028,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"bot\",\n                    \"id\": \"815309\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712338089\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p></p><p>Get notified by email</p>\",\n                \"created_at\": 1501496030,\n                \"updated_at\": 1501496030,\n                \"notified_at\": 1501496031,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"bot\",\n                    \"id\": \"815309\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712344562\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>group test two</p>\",\n                \"created_at\": 1501496290,\n                \"updated_at\": 1501496290,\n                \"notified_at\": 1501496291,\n                \"assigned_to\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712383990\",\n                \"part_type\": \"participant_added\",\n                \"body\": null,\n                \"created_at\": 1501497831,\n                \"updated_at\": 1501497831,\n                \"notified_at\": 1501497832,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712411349\",\n                \"part_type\": \"participant_added\",\n                \"body\": null,\n                \"created_at\": 1501498885,\n                \"updated_at\": 1501498885,\n                \"notified_at\": 1501498885,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712412506\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>group test</p>\",\n                \"created_at\": 1501498931,\n                \"updated_at\": 1501498931,\n                \"notified_at\": 1501498932,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"user\",\n                    \"id\": \"597f02cb22f4bb37597e0b7d\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712425169\",\n                \"part_type\": \"participant_removed\",\n                \"body\": null,\n                \"created_at\": 1501499414,\n                \"updated_at\": 1501499414,\n                \"notified_at\": 1501499414,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712728293\",\n                \"part_type\": \"snoozed\",\n                \"body\": null,\n                \"created_at\": 1501508752,\n                \"updated_at\": 1501508752,\n                \"notified_at\": 1501508752,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            }\n        ],\n        \"total_count\": 9\n    },\n    \"open\": true,\n    \"state\": \"snoozed\",\n    \"read\": false,\n    \"tags\": {\n        \"type\": \"tag.list\",\n        \"tags\": []\n    }\n}\n\n\nCustomers can snooze a conversation via a POST method to https://api.intercom.io/conversations/{convo_id}/reply/, which accepts a JSON object identifying the time you want the conversation snoozed until.\n\nArguments\nArgument\tRequired\tDescription\nadmin_id\tYes\tOnly admins can snooze a conversation so you need to provide the admin_id\nmessage_type\tYes\tMust be snoozed\nsnooze_until\tYes\tThe time in Unix time (i.e. seconds) you want the conversation to reopen"
  },
  {
    "title": "Run assignment rules on a conversation",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/conversations/run-conversation-assignment-rules/",
    "html": "Run assignment rules on a conversation\n\nYou can set up assignment rules to assign conversations to the correct team or teammate.\n\nThis usually happens upon a new, user initiated conversation coming in. This API call allows you to trigger the assignment rules - whether that's during a conversation, or when a user responds to an admin initiated conversation.\n\nREQUIRED PRODUCT\n\nAssignment Rules are only available with Inbox Pro. You can upgrade here.\n\nAssign based on assignment rules\ncurlhttp\ncurl 'https://api.intercom.io/conversations/{convo_id}/run_assignment_rules' \\\\\\n-X POST \\\\\\n-H 'Authorization: Bearer <Acess Token>' \\\\ \\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json'\n"
  },
  {
    "title": "Attach a contact",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/tags/tag-contact/",
    "html": "Attach a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/tags \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' \\\\\\n-d '{\\\"id\\\": \\\"2084335\\\"}'\n\nExample Errors\nhttphtml\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can tag a single contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nRequest Body Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the tag which is given by Intercom\nResponse\n\nThis will return a Tag model for the tag that was added to the contact."
  },
  {
    "title": "The tag model",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/tags/tag-model/",
    "html": "The tag model\nExample Object\n{\\n  \\\"id\\\": \\\"17513\\\",\\n  \\\"name\\\": \\\"independent\\\",\\n  \\\"type\\\": \\\"tag\\\"\\n}\n\n\nA tag allows you to label your contacts and companies and list them using that tag.\n\nTag Object\nKey\tType\tDescription\ntype\tstring\tvalue is 'tag'\nid\tstring\tThe id of the tag\nname\tstring\tThe name of the tag"
  },
  {
    "title": "Submit a data event",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/data-events/submitting-events/",
    "html": "Submit a data event\nSubmit an Event\n$ curl https://api.intercom.io/events \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Content-Type: application/json\" -d'\n{\n  \"event_name\" : \"placed-order\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"314159\",\n  \"metadata\": {\n    \"order_date\": 1392036272,\n    \"stripe_invoice\": \"inv_3434343434\",\n    \"order_number\": {\n      \"value\":\"3434-3434\",\n      \"url\": \"https://example.org/orders/3434-3434\"\n    },\n    \"price\": {\n      \"currency\":\"usd\",\n      \"amount\": 2999\n    }\n  }\n}'\n\nvar more_metadata = {\n  order_date: 1392036272,\n  stripe_invoice: 'inv_3434343434',\n  order_number: {\n    value: \"3434-3434\",\n    url: 'https://example.org/orders/3434-3434'\n  },\n  price: {\n    currency: 'usd',\n    amount: 2999\n  }\n};\nIntercom('trackEvent', 'placed-order', more_metadata);\n\nmore_metadata = {\n  :order_date => Time.now.to_i,\n  :stripe_invoice => 'inv_3434343434',\n  :order_number => {\n    :value => '3434-3434',\n    :url => 'https://example.org/orders/3434-3434'\n  },\n  price: {\n    :currency => 'usd',\n    :amount => 2999\n  }\n}\nintercom.events.create({\n  :event_name => \"placed-order\",\n  :email => current_user.email,\n  :created_at => 1391691571,\n  :metadata => more_metadata\n})\n\n<?php\n$metadata = ([\n    \"order_date\" => time(),\n    \"stripe_invoice\" => \"inv_3434343434\",\n    \"order_number\" => ([\n        \"value\" => \"3434-3434\",\n        \"url\" => \"https://example.org/orders/3434-3434\"]),\n        \"price\" => ([\n            \"currency\" => \"usd\",\n            \"amount\" => 2999])\n]);\n\n$intercom->events->create([\n    \"event_name\" => \"placed-order\",\n    \"created_at\" => 1500907515,\n    \"user_id\" => \"20413\",\n    \"metadata\" => $metadata\n]);\n?>\n\nMap<String,Object> order = Maps.newHashMap();\norder.put(\"value\", \"3434-3434\");\norder.put(\"url\", \"https://example.org/orders/3434-3434\");\n\nMap<String,Object> price = Maps.newHashMap();\nprice.put(\"currency\", \"usd\");\nprice.put(\"amount\", 2999);\n\nMap<String,Object> meta = Maps.newHashMap();\nmeta.put(\"order_date\", currentTimeMillis()/1000L);\nmeta.put(\"stripe_invoice\", \"inv_3434343434\");\nmeta.put(\"price\", price);\nmeta.put(\"order_number\", order);\n\nEvent event = new Event()\n  .setEventName(\"placed-order\")\n  .setUserID(\"314159\")\n  .setMetadata(meta);\n\nEvent.create(event);\n\n\nYou will need an Access Token that has write permissions to send Events. Once you have a key you can submit events via POST to the Events resource, which is located at https://api.intercom.io/events, or you can send events using one of the client libraries. When working with the HTTP API directly a client should send the event with a Content-Type of application/json.\n\nWhen using the JavaScript API, adding the code to your app makes the Events API available. Once added, you can submit an event using the trackEvent method. This will associate the event with the Lead or currently logged-in user or logged-out visitor/lead and send it to Intercom. The final parameter is a map that can be used to send optional metadata about the event.\n\nWith the Ruby client you pass a hash describing the event to Intercom::Event.create, or call the track_user method directly on the current user object (e.g. user.track_event).\n\nMetadata Object\nType\tDescription\tExample\nString\tThe value is a JSON String\t\"source\":\"desktop\"\nNumber\tThe value is a JSON Number\t\"load\": 3.67\nDate\tThe key ends with the String _date or _at and the value is a Unix timestamp, assumed to be in the UTC timezone.\t\"contact_date\": 1392036272 or \"contacted_at\": 1392036272\nLink\tThe value is a HTTP or HTTPS URI.\t`\"article\": \"https://example.org/ab1de.html\"\nRich Link\tThe value is a JSON object that contains url and value keys.\t\"article\": {\"url\": \"https://example.org/ab1de.html\", \"value\":\"the dude abides\"}\nMonetary Amount\tThe value is a JSON object that contains amount and currency keys. The amount key is a positive integer representing the amount in cents. The price in the example to the right denotes €349.99.\t\"price\": {\"amount\": 34999, \"currency\": \"eur\"}\n\nNB: For the JSON object types, please note that we do not currently support nested JSON structure.\n\nLEAD EVENTS\n\nWhen submitting events for Leads, you will need to specify the Lead's id.\n\nMETADATA BEHAVIOUR\n\nWe currently limit the number of tracked metadata keys to 10 per event. Once the quota is reached, we ignore any further keys we receive. The first 10 metadata keys are determined by the order in which they are sent in with the event.\\n_ It is not possible to change the metadata keys once the event has been sent. A new event will need to be created with the new keys and you can archive the old one.\\n_ There might be up to 24 hrs delay when you send a new metadata for an existing event.\n\nEVENT DE-DUPLICATION\n\nThe API may detect and ignore duplicate events. Each event is uniquely identified as a combination of the following data - the Workspace identifier, the Contact external identifier, the Data Event name and the Data Event created time. As a result, it is strongly recommended to send a second granularity Unix timestamp in the created_at field.\\n\\nDuplicated events are responded to using the normal 202 Accepted code - an error is not thrown, however repeat requests will be counted against any rate limit that is in place.\n\nHTTP API Responses\nSuccessful responses to submitted events return 202 Accepted with an empty body.\nUnauthorised access will be rejected with a 401 Unauthorized or 403 Forbidden response code.\nEvents sent about users that cannot be found will return a 404 Not Found.\nEvent lists containing duplicate events will have those duplicates ignored.\nServer errors will return a 500 response code and may contain an error message in the body."
  },
  {
    "title": "Replying to Users Last Conversation",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/conversations/replying-to-users-last-conversation/",
    "html": "Replying to Users Last Conversation\n\nInstead of specifying a conversation id when replying, you can also reply to the most recent conversation for a user at https://api.intercom.io/conversations/last/reply:\n\nYou can identify the user via intercom_user_id, user_id or email.\n\nReplying to the Users Most Recent Conversation\n# Send a reply from admin 1234 to a user's last conversation\n$ curl https://api.intercom.io/conversations/last/reply \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"intercom_user_id\": \"536e564f316c83104c000020\",\n  \"body\": \"Let me know if you have any more questions!\",\n  \"type\": \"admin\",\n  \"admin_id\": \"1234\",\n  \"message_type\": \"comment\"\n}'\n\n<?php\n\n$intercom->conversations->replyToLastConversation([\n    \"intercom_user_id\" => \"5977303470ab497b1babb9ef\",\n    \"body\" => \"I am the wisest man alive, for I know one thing, and that is that I know nothing.\",\n    \"type\" => \"user\",\n    \"message_type\" => \"comment\"\n]);\n?>\n"
  },
  {
    "title": "Pagination",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/common-structures/pagination/",
    "html": "Pagination\n\nThe majority of list resources in the API are paginated to allow clients to traverse data over multiple requests.\n\nTheir responses are likely to contain a pages object that hosts pagination links which a client can use to paginate through the data without having to construct a query. The link relations for the pages field are as follows.\n\nPages Object\nParameter\tDescription\nnext\tA link to the next page of results. A response that does not contain a next link does not have further data to fetch.\nprev\tA link to the previous page of results.\nfirst\tA link to the first page of results.\nlast\tA link to the last page of results.\nWHAT ABOUT FOR CONTACTS AND SEARCHES?\n\nWhen listing any Contact objects, we will instead use a cursor-based approach.\n\nOur Search resources will instead use a POST-based approach."
  },
  {
    "title": "Rate Limiting",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/errors/rate-limiting/",
    "html": "Rate Limiting\n# Example with the default rate limit of 1000\n\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 100\nX-RateLimit-Reset: 1487332510\n\n# After another request:\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 99\nX-RateLimit-Reset: 1487332510\n\n# After window resets\nHTTP/1.1 200 OK\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 100\nX-RateLimit-Reset: 1487332520\n\n# If you make more than the allowed requests\nHTTP/1.1 429 Too Many Requests\nContent-Type: application/json\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 0\nX-RateLimit-Reset: 1487332520\n\nintercom.rate_limit_details\n#=> {:limit=>1000, :remaining=>999, :reset_at=>2019-08-05 14:59:00 +0100}\n\n\nAPI Rate Limits are in place to protect Intercom from API traffic spikes that could put our databases at risk. We therefore measure the amount of requests sent to the API in order to throttle these when they surpass the amount allowed. We will respond with '429 Too Many Requests' and the following headers:\n\nHeader Name\tHeader Description\nX-RateLimit-Limit\tMaximum number of requests allowed for the app.\nX-RateLimit-Remaining\tNumber of requests left in the current time.\nX-RateLimit-Reset\tTime when the number of requests will be reset to the maximum limit. Shown as UNIX timestamp.\nWHAT ABOUT CANVAS KIT REQUESTS?\n\nRate Limits only apply to calls to the REST API, not to any webhook requests that are sent as part of the Canvas Kit capabilities.\n\nWhat is the default amount of requests?\n\nEvery app will have default rate limits. The amount we rate limit them by is different for apps which are privately built for your own usage, or for apps that are publicly installed by third-parties.\n\nPrivate\n\nPrivate apps have a default rate limit of 10,000 API calls per minute per app and 25,000 API calls per minute per workspace. This means that if a workspace has multiple private apps installed, every one contributes towards total number of requests.\n\nPublic\n\nPublic apps have a default rate limit of 10,000 API calls per minute for each app and 25,000 API calls per minute per workspace. This means that if a workspace has multiple public apps installed, each one has its own separate request limit without contributing to the others.\n\nHIGHER RATE LIMITS\n\nIf you require higher rate limits than the defaults, you can contact us using the messenger in the bottom right.\n\nWhen does the amount of requests reset?\n\nAlthough the permitted limit of requests lasts for 1 minute, we evenly distribute this into 10 second windows. This means that every 10 seconds, the amount of permitted requests resets. For example, a default rate limit of 1000 per minute means that you can send a maximum of 166 operations per 10 second period (1000/6).\n\nHow can I handle rate limits?\n\nTo prevent hitting the rate limits, here are a few options for handling within your code.\n\nUse the header information\n\nYou can find the number of requests allowed in your current window in the Intercom headers, or if you are using the Intercom Ruby SDK you can call your client's rate_limit_details which returns a Hash with information about your app's rate limit.\n\nYou can use the remaining number of requests allowed in your current window and when this is below a certain value you can rest until your rate limit is reset.\n\nIn the example below the app is restricted to a rate limit of 5 just to show the output returned — note that we’ve also shown what information is available in the Intercom client and the response for your current rate limits using the Ruby SDK.\n\nrequire 'intercom'\nrequire 'stringio'\n\nintercom = Intercom::Client.new(token: ENV['YOUR_TOKEN'])\n\nretries = 0\nmax_retries = 3\nbackoff_factor = 2\n\nfor num in 0..20\n  begin\n    puts(\"Request Number #{num+1}\")\n    email = 'contact' + num.to_s + '@example.com'\n    name = 'Mrs ' + num.to_s + \"Example\"\n    # Make a HTTP POST request to Intercom to create/update a user\n    response = intercom.contacts.create(:email => email, :name => name, :signed_up_at => Time.now.to_i)\n    # These are the headers we have access to when making requests\n    puts(\"Rate Limit: #{intercom.rate_limit_details[:limit]} \\n\")\n    puts(\"Remaining: #{intercom.rate_limit_details[:remaining]} \\n\")\n    puts(\"Reset Time: #{intercom.rate_limit_details[:reset_at]} \\n\")\n\n    # Check when request limit is under a certain number\n    if not intercom.rate_limit_details[:remaining].nil? and intercom.rate_limit_details[:remaining] < 2\n      sleep_time = intercom.rate_limit_details[:reset_at].to_i - Time.now.to_i\n      puts(\"Waiting for #{sleep_time} seconds to allow for rate limit to be reset\")\n      sleep sleep_time\n    end\n  rescue => error\n    raise(\"Received a general error so exiting: #{error}\")\n  end\nend\n\n\nThe output from the above code is below. You would not need to output all of this data, but this should offer an example of what to expect and how you might approach implementing a rest until the limit is reset.\n\nRequest Number 1\nRate Limit:\nRemaining:\nReset Time:\nRequest Number 2\nRate Limit: 5\nRemaining: 5\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 3\nRate Limit: 5\nRemaining: 4\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 4\nRate Limit: 5\nRemaining: 3\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 5\nRate Limit: 5\nRemaining: 2\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 6\nRate Limit: 5\nRemaining: 1\nReset Time: 2023-12-08 15:19:51 +0000 \nWaiting for 38 seconds to allow for rate limit to be reset\nRequest Number 7\nRate Limit: 5\nRemaining: 5\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 8\nRate Limit: 5\nRemaining: 4\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 9\nRate Limit: 5\nRemaining: 3\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 10\nRate Limit: 5\nRemaining: 2\nReset Time: 2023-12-08 15:19:51 +0000 \nRequest Number 11\nRate Limit: 5\nRemaining: 1\nReset Time: 2016-11-16 16:15:00 +0000\nWaiting for 58 seconds to allow for rate limit to be reset\n\nUse randomization\n\nWhile the reset option is one way to deal with rate limiting, you may want more granular control over your rate limit handling. For example, you might have a specific retry timeframe that you want to follow and not wait for the minute window to pass for your entire rate limit to be reset.\n\nIf you want more control over your rate limiting handling then you can check for the specific rate limit error returned and use some form of randomization in the backoff calculation.\n\nYou could change the retry code above to look like this to achieve some randomization:\n\nrequire 'intercom'\nrequire 'stringio'\n\nintercom = Intercom::Client.new(token: ENV['YOUR_TOKEN'])\n\nretries = 0\nmax_retries = 3\nbackoff_factor = 2\n\nfor num in 0..20\n  begin\n    puts(\"Request Number #{num+1}\")\n    email = 'contact' + num.to_s + '@example.com'\n    name = 'Mrs ' + num.to_s + \"Example\"\n    # Make a HTTP POST request to Intercom to create/update a user\n    response = intercom.contacts.create(:email => email, :name => name, :signed_up_at => Time.now.to_i)\n  rescue Intercom::RateLimitExceeded => error\n    #At this point we know we have encountered a limit\n    #So lets try for a few times and backoff a little in each case\n    puts(\"Error Msg: #{error.inspect} \\n\")\n    puts(\"http_code: #{error.http_code[:http_code]}\\n\" )\n    puts(\"http_code: #{error.http_code[:application_error_code]}\\n\" )\n    if retries <= max_retries\n      # Lets try it a few more times\n      retries += 1\n      # Set a range from num of retries to backoff and randomly sample from that\n      # You can pick any range you like here, this is just an example\n      backoff = rand(retries..(backoff_factor * retries))\n      puts(\"Backoff for #{backoff} seconds\")\n      sleep backoff\n    else\n      # Rasing error here so you can perform some action based on this event\n      raise(\"No longer retrying since we have retried #{retries} times.\\n\"\\\n              \"The error returned was: '#{error.message}'\")\n    end\n  rescue => error\n    raise(\"Received a general error so exiting: #{error}\")\n  end\nend\n\n\nAfter running this code, your output would look like this:\n\nRequest Number 1\nRequest Number 2\nRequest Number 3\nRequest Number 4\nRequest Number 5\nRequest Number 6\nRequest Number 7\nError Msg: #<Intercom::RateLimitExceeded: More than 5 requests received in 1 minute>\nhttp_code: 429\nhttp_code: rate_limit_exceeded\nBackoff for 2 seconds\nRequest Number 8\nError Msg: #<Intercom::RateLimitExceeded: More than 5 requests received in 1 minute>\nhttp_code: 429\nhttp_code: rate_limit_exceeded\nBackoff for 3 seconds\nRequest Number 9\nError Msg: #<Intercom::RateLimitExceeded: More than 5 requests received in 1 minute>\nhttp_code: 429\nhttp_code: rate_limit_exceeded\nBackoff for 3 seconds\nRequest Number 10\nError Msg: #<Intercom::RateLimitExceeded: More than 5 requests received in 1 minute>\nhttp_code: 429\nhttp_code: rate_limit_exceeded\nBackoff for 6 seconds\nRequest Number 11\nError Msg: #<Intercom::RateLimitExceeded: More than 5 requests received in 1 minute>\nhttp_code: 429\nhttp_code: rate_limit_exceeded\nadvanced_throttle.rb:32:in `rescue in block in <main>': No longer retrying since we have retried 4 times. (RuntimeError)\nThe error returned was: 'More than 5 requests received in 1 minute'\n\tfrom advanced_throttle.rb:9:in `block in <main>'\n\tfrom advanced_throttle.rb:8:in `each'\n\tfrom advanced_throttle.rb:8:in `<main>'\n\nUse a library for exponential backoff\n\nTo prevent having to implement your own backoff forumlas, you can use a library that will handle this for you. Some examples include:\n\nretry for Node.js\nbackoff for Python\nretries, a RubyGem which will be used for the below example\n\nWith retries, all you specify the number of retries you want and it will handle the rest.\n\nrequire 'intercom'\nrequire 'stringio'\nrequire 'retries'\n\nintercom = Intercom::Client.new(token: ENV['YOUR_TOKEN'])\n\nmax_retries = 3\n\nfor num in 0..20\n  handler = Proc.new do |exception, attempt_number, total_delay|\n    puts \"Handler saw a #{exception.class}; retry attempt #{attempt_number}; #{total_delay} seconds have passed.\"\n  end\n  with_retries(:max_tries => max_retries, :handler => handler, :rescue => [Intercom::RateLimitExceeded]) do |attempt|\n    puts(\"Request Number #{num+1}\")\n    # You can check for the max retry number and raise an error so you can take some action based on this event\n    if attempt >= max_retries\n      raise(\"No longer retrying since we have retried #{attempt} time.\\n\"\\\n    \"The error returned was: '#{Intercom::RateLimitExceeded}'\")\n    end\n    puts(\"Request Number #{num+1}\")\n    email = 'contact' + num.to_s + '@example.com'\n    name = 'Mrs ' + num.to_s + \"Example\"\n    # Make a HTTP POST request to Intercom to create/update a user\n    response = intercom.contacts.create(:email => email, :name => name, :signed_up_at => Time.now.to_i)\n  end\nend\n\n\nThe is what the output of the above example looks like using retries:\n\nRequest Number 1\nRequest Number 2\nRequest Number 3\nRequest Number 4\nRequest Number 5\nRequest Number 6\nHandler saw a Intercom::RateLimitExceeded; retry attempt 1; 0.328696139 seconds have passed.\nRequest Number 6\nHandler saw a Intercom::RateLimitExceeded; retry attempt 2; 1.194656588 seconds have passed.\nRequest Number 6\nthrottle_retries.rb:14:in `block (2 levels) in <main>': No longer retrying since we have retried 3 times. (RuntimeError)\nThe error returned was: 'Intercom::RateLimitExceeded'\n\tfrom /home/ec2-user/.rvm/gems/ruby-2.3.0/gems/retries-0.0.5/lib/retries.rb:46:in `with_retries'\n\tfrom throttle_retries.rb:11:in `block in <main>'\n\tfrom throttle_retries.rb:7:in `each'\n\tfrom throttle_retries.rb:7:in `<main>'\n[ec2-user@ip-10-0-2-162 ~]$\n"
  },
  {
    "title": "Delete a section",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/help-center/delete-a-section/",
    "html": "Delete a section\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/sections/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can delete a single section by making a DELETE request to https://api.intercom.io/help_center/sections/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the section which is given by Intercom.\nResponse\nKey\tType\tDescription\nid\tString\tThe unique identifier for the section which you provided in the URL.\nobject\tString\tThe type of object which was deleted - section.\ndeleted\tBoolean\tWhether the section was deleted successfully or not."
  },
  {
    "title": "Retrieve a section",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/help-center/retrieve-a-section/",
    "html": "Retrieve a section\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/sections/<id> \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can fetch the details of a single section by making a GET request to https://api.intercom.io/help_center/sections/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the section which is given by Intercom.\nResponse\n\nThis will return a Section object."
  },
  {
    "title": "The contact model",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/contacts/contacts-model/",
    "html": "The contact model\nExample Contacts Object\nJSON\n{  \\\"type\\\": \\\"contact\\\",  \\\"id\\\": \\\"5ba682d23d7cf92bef87bfd4\\\",  \\\"workspace_id\\\": \\\"ecahpwf5\\\",  \\\"external_id\\\": \\\"25\\\",  \\\"role\\\": \\\"user\\\",  \\\"email\\\": \\\"wash@serenity.io\\\",  \\\"phone\\\": \\\"+1123456789\\\",  \\\"name\\\": \\\"Hoban Washburn\\\",  \\\"avatar\\\": \\\"https://example.org/128Wash.jpg\\\",  \\\"owner_id\\\": 127,  \\\"social_profiles\\\": {    \\\"type\\\": \\\"list\\\",    \\\"data\\\": [      {        \\\"type\\\": \\\"social_profile\\\",        \\\"name\\\": \\\"Twitter\\\",        \\\"url\\\": \\\"http://twitter.com/th1sland\\\"      }    ]  },  \\\"has_hard_bounced\\\": false,  \\\"marked_email_as_spam\\\": false,  \\\"unsubscribed_from_emails\\\": false,  \\\"created_at\\\": 1571672154,  \\\"updated_at\\\": 1571672158,  \\\"signed_up_at\\\": 1571069751,  \\\"last_seen_at\\\": 1571069751,  \\\"last_replied_at\\\": 1571672158,  \\\"last_contacted_at\\\": 1571672158,  \\\"last_email_opened_at\\\": 1571673478,  \\\"last_email_clicked_at\\\": 1571676789,  \\\"language_override\\\": null,  \\\"browser\\\": \\\"chrome\\\",  \\\"browser_version\\\": \\\"77.0.3865.90\\\",  \\\"browser_language\\\": \\\"en\\\",  \\\"os\\\": \\\"OS X 10.14.6\\\",  \\\"location\\\": {    \\\"type\\\": \\\"location\\\",    \\\"country\\\": \\\"Ireland\\\",    \\\"region\\\": \\\"Dublin\\\",    \\\"city\\\": \\\"Dublin\\\"  },  \\\"android_app_name\\\": null,  \\\"android_app_version\\\": null,  \\\"android_device\\\": null,  \\\"android_os_version\\\": null,  \\\"android_sdk_version\\\": null,  \\\"android_last_seen_at\\\": null,  \\\"ios_app_name\\\": null,  \\\"ios_app_version\\\": null,  \\\"ios_device\\\": null,  \\\"ios_os_version\\\": null,  \\\"ios_sdk_version\\\": null,  \\\"ios_last_seen_at\\\": null,  \\\"custom_attributes\\\": {    \\\"paid_subscriber\\\": true,    \\\"monthly_spend\\\": 155.5,    \\\"team_mates\\\": 1  },  \\\"tags\\\": {    \\\"type\\\": \\\"list\\\",    \\\"data\\\": [      {        \\\"type\\\": \\\"tag\\\",        \\\"id\\\": \\\"2\\\",        \\\"url\\\": \\\"/tags/2\\\"      },      {        \\\"type\\\": \\\"tag\\\",        \\\"id\\\": \\\"4\\\",        \\\"url\\\": \\\"/tags/4\\\"      },      {        \\\"type\\\": \\\"tag\\\",        \\\"id\\\": \\\"5\\\",        \\\"url\\\": \\\"/tags/5\\\"      }    ],    \\\"url\\\": \\\"/contacts/5ba682d23d7cf92bef87bfd4/tags\\\",    \\\"total_count\\\": 3,    \\\"has_more\\\": false  },  \\\"notes\\\": {    \\\"type\\\": \\\"list\\\",    \\\"data\\\": [      {        \\\"type\\\": \\\"note\\\",        \\\"id\\\": \\\"20114858\\\",        \\\"url\\\": \\\"/notes/20114858\\\"      }    ],    \\\"url\\\": \\\"/contacts/5ba682d23d7cf92bef87bfd4/notes\\\",    \\\"total_count\\\": 1,    \\\"has_more\\\": false  },  \\\"companies\\\": {    \\\"type\\\": \\\"list\\\",    \\\"data\\\": [      {        \\\"type\\\": \\\"company\\\",        \\\"id\\\": \\\"5ba686093d7cf93552a3dc99\\\",        \\\"url\\\": \\\"/companies/5ba686093d7cf93552a3dc99\\\"              },      {        \\\"type\\\": \\\"company\\\",        \\\"id\\\": \\\"5cee64a03d7cf90c51b36f19\\\",        \\\"url\\\": \\\"/companies/5cee64a03d7cf90c51b36f19\\\"      },      {        \\\"type\\\": \\\"company\\\",        \\\"id\\\": \\\"5d7668883d7cf944dbc5c791\\\",        \\\"url\\\": \\\"/companies/5d7668883d7cf944dbc5c791\\\"      }    ],    \\\"url\\\": \\\"/contacts/5ba682d23d7cf92bef87bfd4/companies\\\",    \\\"total_count\\\": 3,    \\\"has_more\\\": false  }}\n\n\nOur Contacts API is a central place to gather all information and take actions on your contacts (ie. users and leads), such as fetching, searching, creating, updating, and deleting.\n\nThe Contacts Model provides details on these contacts within Intercom, and will specify whether they are a user or lead through the role attribute.\n\nContact Object\nKey\tType\tDescription\ntype\tString\tThe type of object - contact.\nid\tString\tThe unique identifier for the contact which is given by Intercom.\nworkspace_id\tString\tThe id of the workspace which the contact belongs to.\nexternal_id\tString\tA unique identifier for the contact which is given to Intercom.\nrole\tString\tThe role of the contact - user or lead.\nemail\tString\tThe contacts email.\nphone\tString\tThe contacts phone.\nname\tString\tThe contacts name.\navatar\tString\tAn image URL containing the avatar of a contact.\nowner_id\tInteger\tThe id of an admin that has been assigned account ownership of the contact.\nsocial_profiles\tList\tA list of social profiles associated to the contact.\nhas_hard_bounced\tBoolean\tWhether the contact has had an email sent to them hard bounce.\nmarked_email_as_spam\tBoolean\tWhether the contact has marked an email sent to them as spam.\nunsubscribed_from_emails\tBoolean\tWhether the contact is unsubscribed from emails.\ncreated_at\tDate (UNIX timestamp)\tThe time when the contact was created.\nupdated_at\tDate (UNIX timestamp)\tThe time when the contact was last updated.\nsigned_up_at\tDate (UNIX timestamp)\tThe time specified for when a contact signed up.\nlast_seen_at\tDate (UNIX timestamp)\tThe time when the contact was last seen (either where the Intercom Messenger was installed or when specified manually).\nlast_replied_at\tDate (UNIX timestamp)\tThe time when the contact last messaged in.\nlast_contacted_at\tDate (UNIX timestamp)\tThe time when the contact was last messaged.\nlast_email_opened_at\tDate (UNIX timestamp)\tThe time when the contact last opened an email.\nlast_email_clicked_at\tDate (UNIX timestamp)\tThe time when the contact last clicked a link in an email.\nlanguage_override\tString\tA preferred language setting for the contact, used by the Intercom Messenger even if their browser settings change.\nbrowser\tString\tThe name of the browser which the contact is using.\nbrowser_version\tString\tThe version of the browser which the contact is using.\nbrowser_language\tString\tThe language set by the browser which the contact is using.\nos\tString\tThe operating system which the contact is using.\nlocation\tObject\tAn object showing location details of the contact.\nandroid_app_name\tString\tThe name of the Android app which the contact is using.\nandroid_app_version\tString\tThe version of the Android app which the contact is using.\nandroid_device\tString\tThe Android device which the contact is using.\nandroid_os_version\tString\tThe version of the Android OS which the contact is using.\nandroid_sdk_version\tString\tThe version of the Android SDK which the contact is using.\nandroid_last_seen_at\tDate (UNIX timestamp)\tThe last time the contact used the Android app.\nios_app_name\tString\tThe name of the iOS app which the contact is using.\nios_app_version\tString\tThe version of the iOS app which the contact is using.\nios_device\tString\tThe iOS device which the contact is using.\nios_os_version\tString\tThe version of iOS which the contact is using.\nios_sdk_version\tString\tThe version of the iOS SDK which the contact is using.\nios_last_seen_at\tDate (UNIX timestamp)\tThe last time the contact used the iOS app.\ncustom_attributes\tObject\tThe custom attributes which are set for the contact.\ntags\tAddressable List\tThe tags which have been added to the contact.\nnotes\tAddressable List\tThe notes which have been added to the contact.\ncompanies\tAddressable List\tThe companies which the contact belongs to.\nLocation Object\nKey\tType\tDescription\ntype\tString\tThe type of object - location.\ncountry\tString\tThe country where the contact is.\nregion\tString\tA subdivision of the country which the contact is in (ie. state, province, county, territory, etc).\ncity\tString\tThe city where the contact is.\nSocial Profile Object\nKey\tType\tDescription\ntype\tString\tThe type of object - social_profile.\nname\tString\tThe name of the service (ie. Twitter, Facebook, etc).\nurl\tString\tThe profile page for the contact on the service.\nAddressable List\nKey\tType\tDescription\ntype\tString\tThe type of object - list.\ndata\tArray\tAn array of Addressable Objects. Maximum of 10.\nurl\tString\tThe URL where the full list can be accessed (ie. /contacts/1234/companies).\ntotal_count\tInteger\tThe total amount of records.\nhas_more\tBoolean\tWhether there's more Addressable Objects to be viewed. If true, use the url to view all.\nAddressable Object\nKey\tType\tDescription\ntype\tString\tThe type of object - company, note, tag.\nid\tString\tThe id of the object.\nurl\tString\tThe URL where the object in question can be accessed (ie. /companies/45678)."
  },
  {
    "title": "Use of HTTP",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/common-structures/use-of-http/",
    "html": "Use of HTTP\n\nRequest methods are used in accordance with HTTP.\n\nGET is used to access resources and perform queries. The API does not allow modifications (creates, updates, deletes) to occur via GET.\nPOST is used to create or update resources. The preferred model for creation is to post JSON to a 'collections' resource - for example the collections resource for users is https://api.intercom.io/users.\nDELETE is used to delete resources.\n\nResponses use standard HTTP codes. Where there are client or server errors, a list of of one or more errors in JSON format is returned in the body - see Error Objects for more details.\n\nThe API may send cache directives where suitable, notably the ETag, Last-Modified and If-Modified-Since headers.\n\nThe Accept header must be used by a client used to indicate a preferred response for GET/HEAD requests. Requests without an Accept header of application/json may be rejected with a client error of 404 or 406.\n\nThe Content-Type header should be used by clients to indicate the submitted format for POST/PUT requests."
  },
  {
    "title": "Create a contact",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/contacts/create-contact/",
    "html": "Create a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts \\\\-X POST \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json'-H 'Content-Type: application/json' -d{\\t\\\"role\\\": \\\"user\\\",\\t\\\"external_id\\\": \\\"25\\\",\\t\\\"email\\\": \\\"wash@serenity.io\\\",\\t\\\"phone\\\": \\\"+1123456789\\\",\\t\\\"name\\\": \\\"Hoban Washburn\\\",\\t\\\"avatar\\\": \\\"https://example.org/128Wash.jpg\\\",\\t\\\"last_seen_at\\\": 1571069751,\\t\\\"signed_up_at\\\": 1571069751,\\t\\\"owner_id\\\": 127,\\t\\\"unsubscribed_from_emails\\\": false,\\t\\\"custom_attributes\\\": {\\t\\t\\\"paid_subscriber\\\": true,\\t\\t\\\"monthly_spend\\\": 155.5,\\t\\t\\\"team_mates\\\": 1\\t}}\n\nExample Errors\nhttphttp\nHTTP/1.1 409 CONFLICT{  \\\"type\\\": \\\"error.list\\\",  \\\"request_id\\\": \\\"80ec9d92-99ff-4da9-9a0e-c0ab7c42f7e7\\\",  \\\"errors\\\": [    {      \\\"code\\\": \\\"conflict\\\",      \\\"message\\\": \\\"A contact matching those details already exists with id=5da6f18e3d7cf967e4582d05\\\"    }  ]}\n\nHTTP/1.1 400 BAD REQUEST{  \\\"type\\\": \\\"error.list\\\",  \\\"request_id\\\": \\\"00043csj9iva7pl9mmmg\\\",  \\\"errors\\\": [    {      \\\"code\\\": \\\"parameter_invalid\\\",      \\\"message\\\": \\\"The owner specified is not a member of the workspace\\\"    }  ]}\n\n\nYou can create a new contact (ie. user or lead).\n\nRequest Body Parameters\nAttribute\tType\tRequired\tDescription\nrole\tString\tYes\tThe role of the contact. Accepted values are user or lead.\nexternal_id\tString\tYes - if role is user and email is blank\tA unique identifier for the contact which is given to Intercom\nemail\tString\tYes - if role is user and external_id is blank\tThe contacts email\nphone\tString\tNo\tThe contacts phone\nname\tString\tNo\tThe contacts name\navatar\tString\tNo\tAn image URL containing the avatar of a contact\nsigned_up_at\tTimestamp\tNo\tThe time specified for when a contact signed up\nlast_seen_at\tTimestamp\tNo\tThe time when the contact was last seen (either where the Intercom Messenger was installed or when specified manually)\nowner_id\tInteger\tNo\tThe id of an admin that has been assigned account ownership of the contact\nunsubscribed_from_emails\tBoolean\tNo\tWhether the contact is unsubscribed from emails\ncustom_attributes\tObject\tNo\tThe custom attributes which are set for the contact\nCREATING NEW CUSTOM DATA ATTRIBUTES\n\nYou can only write to custom data attributes that already exist on the workspace. If you need to create new attributes to write to, you should Create Data Attributes through the data Attributes API.\n\nResponse\n\nThis will return a Contact model of the contact you just created."
  },
  {
    "title": "Users",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/users/users/",
    "html": "Users\n\nUsers is no longer available as a resource. In order to see information and take action on users, you should use the Contacts API."
  },
  {
    "title": "Update a conversation",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/conversations/update-a-conversation/",
    "html": "Update a conversation\nExample Request & Response\n$ curl https://api.intercom.io/conversations/<id> \\\n-X PUT \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d\n\n{\n  \"read\": true\n}\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"1911149811\",\n    \"created_at\": 1539897198,\n    \"updated_at\": 1540393270,\n    \"source\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"contacts\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"teammates\": [\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    ],\n    \"admin_assignee_id\": \"814860\",\n    \"team_assignee_id\": null,\n    \"open\": true,\n    \"state\": \"open\",\n    \"read\": true,\n    \"waiting_since\": 64654125776\n    \"snoozed_until\": null,\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\",\n    },\n    \"first_contact_reply\": {\n    \t\"created_at\": 1539897198\n    \t\"type\": \"conversation\",\n    \t\"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"priority\": \"not_priority\",\n    \"sla_applied\": {\n    \t\"sla_name\": \"VIP customer <5m\",\n      \"sla_status\": \"missed\",\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"contact\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null,\n            \"name\": null,\n            \"email\": null\n        }\n    },\n    \"statistics\": {\n      \"time_to_assignment\": 2310,\n      \"time_to_admin_reply\": 2408,\n      \"time_to_first_close\": 4915 ,\n      \"time_to_last_close\": 5125,\n      \"median_time_to_reply\": 321,\n      \"first_contacat_reply_at\": 1539897200,\n      \"first_assignment_at\": 1539897200,\n      \"first_admin_reply_at\": 1539897200,\n      \"first_close_at\": 1539897200,\n      \"last_assignment_at\": 1539897200,\n      \"last_assignment_admin_reply_at\": 1539897200,\n      \"last_contact_reply_at\": 1539897200,\n      \"last_admin_reply_at\": 1539897200,\n      \"last_close_at\": 1539897200,\n      \"last_closed_by\": {\n      \t\"type\": \"admin\",\n        \"id\": \"325432652\",\n        \"name\": \"Tom Smith\",\n        \"email\": \"tom@example.com\"\n      },\n      \"count_reopens\": 3,\n      \"count_assignments\": 2,\n      \"count_conversation_parts\": 67\n    },   \n}\n\nconversation.read = true\nintercom.conversations.save(conversation)\n\n<?php\n$intercom->conversations->markConversationAsRead(\"10957850396\");\n?>\n\nAdmin admin = new Admin().setId(\"1\");\nAdminReply adminReply = new AdminReply(admin);\nadminReply.setMessageType(\"close\");\nConversation.reply(\"66\", adminReply);\n\n\nYou can update an existing conversation.\n\nIf you want to update a conversation with either a reply (or actions such as assign, unassign, open, close or snooze) then take a look at their own sections respectively as they currently require different endpoints and parameters.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\nread\tBoolean\tYes\tMark a conversation as read within Intercom.\nResponse\n\nThis will return the Conversation that has been updated."
  },
  {
    "title": "Snooze a conversation",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/conversations/snooze-a-conversation/",
    "html": "Snooze a conversation\nExample Request & Response\ncurltext\n$ curl 'https://api.intercom.io/conversations/<id>/reply' \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d\\n\\n{\\n  \\\"message_type\\\":\\\"snoozed\\\",\\n  \\\"admin_id\\\": \\\"724860\\\",\\n  \\\"snoozed_until\\\":\\\"1501512795\\\"\\n}\n\n\nYou can snooze a conversation to reopen on a future date.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Body Parameters\n\nTo snooze a conversation:\n\nParameter\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tAlways snoozed.\nadmin_id\tString\tYes\tThe id of the admin which is performing the action.\nsnooze_until\tUNIX Timestamp\tYes\tThe time you want the conversation to reopen.\nResponse\n\nThis will return the Conversation which was snoozed."
  },
  {
    "title": "Retrieve a team",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/teams/view-a-team/",
    "html": "Retrieve a team\nExample Request & Response\n$ curl https://api.intercom.io/teams/2744328 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"admin_ids\": [\n        646303,\n        814860\n    ],\n    \"id\": \"2744328\",\n    \"name\": \"the_a_team\",\n    \"type\": \"team\"\n}\n\n\nYou can fetch the details of a single team, containing an array of admins that belong to this team.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier of a given team.\nResponse\n\nThis will return a Team Object."
  },
  {
    "title": "Retrieve an article",
    "url": "https://developers.intercom.com/docs/references/2.3/rest-api/articles/retrieve-an-article/",
    "html": "Retrieve an article\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/articles/<id> \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can fetch the details of a single article by making a GET request to https://api.intercom.io/articles/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the article which is given by Intercom.\nResponse\n\nThis will return an Article model."
  },
  {
    "title": "Attach a contact to a conversation",
    "url": "https://developers.intercom.com/docs/references/2.2/rest-api/conversations/adding-to-group-conversations-as-admin/",
    "html": "Attach a contact to a conversation\nExample Request & Response\ncurlcurl\n$ curl 'https://api.intercom.io/conversations/<id>/customers' \\\\-X POST \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json' \\\\-H 'Content-Type:application/json' -d{  \\\"admin_id\\\": \\\"781236\\\",  \\\"customer\\\": {    \\\"intercom_user_id\\\": \\\"58c1c78946a0aa9ef45b098a\\\"  }}\n\nHTTP/1.1 200 OK{\\\"customers\\\":[  {\\\"type\\\":\\\"user\\\",\\\"id\\\":\\\"597f02cb22f4bb37597e0b7d\\\"},   {\\\"type\\\":\\\"lead\\\",\\\"id\\\":\\\"58ff3f670f14ab4f1aa83750\\\"}]}\n\n\nYou can add participants who are contacts to a conversation, on behalf of either another contact or an admin.\n\nRequest Path Parameter\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Body Parameter\nAdmin's adding a participant\nParameter\tType\tRequired?\tDescription\nadmin_id\tString\tYes\tThe id of the admin who is adding the new participant.\ncustomer\tObject\tYes\tSee Customer Object below for more.\nContact's adding a participant\nParameter\tType\tRequired?\tDescription\nintercom_user_id\tString\tYes, if no user_id or email\tThe identifier for the contact as given by Intercom.\nuser_id\tString\tYes, if no intercom_user_id or email\tThe external_id you have defined for the contact who is adding the new participant.\nemail\tString\tYes, if no intercom_user_id or user_id\tThe email you have defined for the contact who is adding the new participant.\ncustomer\tObject\tYes\tSee Contact Object below for more.\nCustomer Object\nAttribute\tType\tRequired?\tDescription\nintercom_user_id\tString\tYes, if no user_id or email\tThe identifier for the contact as given by Intercom.\nuser_id\tString\tYes, if no intercom_user_id or email\tThe external_id you have defined for the contact who is being added as a participant.\nemail\tString\tYes, if the contact's role is lead. Yes, if no intercom_user_id or user_id.\tThe email you have defined for the contact who is being added as a participant.\nNOTE ABOUT CONTACTS WITHOUT AN EMAIL\n\nIf you add a contact via the email parameter and there is no user/lead found on that workspace with he given email, then we will create a new contact with role set to lead.\n\nResponse\n\nThis will return a customers array containing objects listing the participants in the conversation:\n\nAttribute\tType\tDescription\ntype\tString\tThe role associated to the contact - user or lead.\nid\tString\tThe identifier for the contact as given by Intercom."
  },
  {
    "title": "HTTP Responses",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/errors/http-responses/",
    "html": "HTTP Responses\n\nThe API returns HTTP responses on each request to indicate the success or otherwise of API requests. The codes listed below are often used, and the API may use others. Note that 4xx and 5xx responses may be returned for any request and clients should cater for them.\n\nResponse Code\tDescription\n400\tBad Request -- General client error, possibly malformed data.\n401\tUnauthorized -- The API Key was not authorised (or no API Key was found).\n402\tPayment Required -- The API is not available on your current plan.\n403\tForbidden -- The request is not allowed.\n404\tNot Found -- The resource was not found.\n405\tMethod Not Allowed -- The resource does not accept the HTTP method.\n406\tNot Acceptable -- The resource cannot return the client's required content type.\n408\tRequest Timeout -- The server would not wait any longer for the client.\n409\tConflict - Multiple existing users match this email address - must be more specific using user_id\n415\tUnsupported Media Type - The server doesn't accept the submitted content-type.\n422\tUnprocessable Entity -- The data was well-formed but invalid.\n429\tToo Many Requests -- The client has reached or exceeded a rate limit, or the server is overloaded.\n500, 502, 503, 504\tServer errors - something went wrong with Intercom's servers. These responses are most likely momentary operational errors (e.g. temporary unavailability), and, as a result, requests should be retried once."
  },
  {
    "title": "Add tag to a conversation",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Conversations/attachTagToConversation/",
    "html": "You can tag a specific conversation. This will return a tag object for the tag that was added to the conversation."
  },
  {
    "title": "Delete tag",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Tags/deleteTag/",
    "html": "You can delete the details of tags that are on the workspace by passing in the id."
  },
  {
    "title": "List all notes",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/notes/list-notes-of-contact/",
    "html": "List all notes\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/notes \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can fetch a list of notes that are associated to a contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return a paginated list of Note objects.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - note.list\ndata\tArray\tAn array containing Note Objects\ntotal_count\tInteger\tThe total number of companies associated to this contact\npages\tPagination Object\tThe information needed to paginate through companies"
  },
  {
    "title": "Download content data export",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Data-Export/downloadDataExport/",
    "html": "When a job has a status of complete, and thus a filled download_url, you can download your data by hitting that provided URL, formatted like so: https://api.intercom.io/download/content/data/xyz1234.\n\nYour exported message data will be streamed continuously back down to you in a gzipped CSV format.\n\n📘 Octet header required\n\nYou will have to specify the header Accept: application/octet-stream when hitting this endpoint."
  },
  {
    "title": "Attach a contact to a conversation",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/conversations/adding-to-group-conversations-as-admin/",
    "html": "Attach a contact to a conversation\nExample Request & Response\ncurlcurl\n$ curl 'https://api.intercom.io/conversations/<id>/customers' \\\\-X POST \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json' \\\\-H 'Content-Type:application/json' -d{  \\\"admin_id\\\": \\\"781236\\\",  \\\"customer\\\": {    \\\"intercom_user_id\\\": \\\"58c1c78946a0aa9ef45b098a\\\"  }}\n\nHTTP/1.1 200 OK{\\\"customers\\\":[  {\\\"type\\\":\\\"user\\\",\\\"id\\\":\\\"597f02cb22f4bb37597e0b7d\\\"},   {\\\"type\\\":\\\"lead\\\",\\\"id\\\":\\\"58ff3f670f14ab4f1aa83750\\\"}]}\n\n\nYou can add participants who are contacts to a conversation, on behalf of either another contact or an admin.\n\nRequest Path Parameter\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Body Parameter\nAdmin's adding a participant\nParameter\tType\tRequired?\tDescription\nadmin_id\tString\tYes\tThe id of the admin who is adding the new participant.\ncustomer\tObject\tYes\tSee Customer Object below for more.\nContact's adding a participant\nParameter\tType\tRequired?\tDescription\nintercom_user_id\tString\tYes, if no user_id or email\tThe identifier for the contact as given by Intercom.\nuser_id\tString\tYes, if no intercom_user_id or email\tThe external_id you have defined for the contact who is adding the new participant.\nemail\tString\tYes, if no intercom_user_id or user_id\tThe email you have defined for the contact who is adding the new participant.\ncustomer\tObject\tYes\tSee Contact Object below for more.\nCustomer Object\nAttribute\tType\tRequired?\tDescription\nintercom_user_id\tString\tYes, if no user_id or email\tThe identifier for the contact as given by Intercom.\nuser_id\tString\tYes, if no intercom_user_id or email\tThe external_id you have defined for the contact who is being added as a participant.\nemail\tString\tYes, if the contact's role is lead. Yes, if no intercom_user_id or user_id.\tThe email you have defined for the contact who is being added as a participant.\nNOTE ABOUT CONTACTS WITHOUT AN EMAIL\n\nIf you add a contact via the email parameter and there is no user/lead found on that workspace with he given email, then we will create a new contact with role set to lead.\n\nResponse\n\nThis will return a customers array containing objects listing the participants in the conversation:\n\nAttribute\tType\tDescription\ntype\tString\tThe role associated to the contact - user or lead.\nid\tString\tThe identifier for the contact as given by Intercom."
  },
  {
    "title": "Reply to a conversation",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/conversations/reply-to-a-conversation/",
    "html": "Reply to a conversation\nExample Request & Response (Contact Reply)\n$ curl 'https://api.intercom.io/conversations/{id/last}/reply' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d \n\n{\n  \"message_type\": \"comment\",\n  \"type\": \"user\",\n  \"intercom_user_id\": \"536e564f316c83104c000020\",\n  \"body\": \"Thanks again :)\"\n}\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"1911149811\",\n    \"created_at\": 1539897198,\n    \"updated_at\": 1540393270,\n    \"source\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"contacts\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"teammates\": [\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    ],\n    \"admin_assignee_id\": \"814860\",\n    \"team_assignee_id\": null,\n    \"custom_attributes\": {\n      \"issue_type\": \"Billing\",\n      \"priority\": \"High\"\n    },\n    \"topics\": {\n        \"type\": \"topic.list\",\n        \"topics\": [\n            {\n                \"type\": \"topic\"\n                \"name\": \"Example Topic 1\",\n                \"id\": 839\n            }\n        ],\n        \"total_count\": 1\n    },\n    \"open\": true,\n    \"state\": \"open\",\n    \"read\": true,\n    \"waiting_since\": 64654125776\n    \"snoozed_until\": null,\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\",\n    },\n    \"first_contact_reply\": {\n    \t\"created_at\": 1539897198\n    \t\"type\": \"conversation\",\n    \t\"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"priority\": \"not_priority\",\n    \"sla_applied\": {\n    \t\"sla_name\": \"VIP customer <5m\",\n      \"sla_status\": \"missed\",\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"contact\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null,\n            \"name\": null,\n            \"email\": null\n        }\n    },\n    \"statistics\": {\n      \"time_to_assignment\": 2310,\n      \"time_to_admin_reply\": 2408,\n      \"time_to_first_close\": 4915 ,\n      \"time_to_last_close\": 5125,\n      \"median_time_to_reply\": 321,\n      \"first_contacat_reply_at\": 1539897200,\n      \"first_assignment_at\": 1539897200,\n      \"first_admin_reply_at\": 1539897200,\n      \"first_close_at\": 1539897200,\n      \"last_assignment_at\": 1539897200,\n      \"last_assignment_admin_reply_at\": 1539897200,\n      \"last_contact_reply_at\": 1539897200,\n      \"last_admin_reply_at\": 1539897200,\n      \"last_close_at\": 1539897200,\n      \"last_closed_by\": {\n      \t\"type\": \"admin\",\n        \"id\": \"325432652\",\n        \"name\": \"Tom Smith\",\n        \"email\": \"tom@example.com\"\n      },\n      \"count_reopens\": 3,\n      \"count_assignments\": 2,\n      \"count_conversation_parts\": 67\n    },  \n}\n\n#Reply without attachment\nintercom.conversations.reply(:id => conversation.id, :type => 'user', \n  :email => 'bob@example.com', :message_type => 'comment', :body => 'foo')\n\n#Reply with attachment\nintercom.conversations.reply(:id => conversation.id, :type => 'user', \n  :email => 'bob@example.com', :message_type => 'comment', \n  :body => 'foo', :attachment_urls => [\"http://www.example.com/attachment.jpg\"])\n\n<?php\n//Reply without attachment\n$intercom->conversations->replyToConversation(\"10957850396\", [\n    \"intercom_user_id\" => \"5977303470ab497b1babb9ef\",\n    \"body\" => \"Thinking: the talking of the soul with itself\",\n    \"type\" => \"user\",\n    \"message_type\" => \"comment\"\n]);\n\n\n//Reply with attachment\n$intercom->conversations->replyToConversation(\"10957850396\", [\n  \"intercom_user_id\" => \"5977303470ab497b1babb9ef\",\n  \"body\" => \"Thinking: the talking of the soul with itself\",\n  \"type\" => \"user\",\n  \"message_type\" => \"comment\",\n  \"attachment_urls\" => [\"http://www.example.com/attachment.jpg\"]\n]);\n?>\n\nUser user = new User().setId(\"5310d8e8598c9a0b24000005\");\nUserReply userReply = new UserReply(user);\nuserReply.setBody(\"Mighty fine shindig\");\n\nConversation.reply(\"66\", userReply);\n\nAdmin admin = new Admin().setId(\"1\");\nAdminReply adminReply = new AdminReply(admin);\nadminReply.setBody(\"These apples are healthsome\");\n\nConversation.reply(\"66\", adminReply);\n\nExample Request & Response (Admin Reply - Note)\ncurltext\n$ curl 'https://api.intercom.io/conversations/{id/last}/reply' \\\\\\n-X POST \\\\\\n-H 'Authorization: Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d\\n\\n{\\n  \\\"message_type\\\": \\\"note\\\",\\n  \\\"type\\\": \\\"admin\\\",\\n  \\\"admin_id\\\": \\\"814860\\\",\\n  \\\"body\\\": \\\"<html> <body>  <h2>An Unordered HTML List</h2>  <ul>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ul>    <h2>An Ordered HTML List</h2>  <ol>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ol>   </body> </html>\\\",\\n}\\n\n\n\nYou can reply to a conversation with a message from an admin or on behalf of a contact, or with a note for admins.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes, if not last\tThe identifier for the conversation as given by Intercom.\nlast\tString\tYes, if no id\tYou can also reply to the most recent conversation on a workspace by specifying last as the string.\nRequest Body Parameters\n\nFor a reply sent on behalf a contact:\n\nParameter\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tAlways comment.\ntype\tString\tYes\tAlways user.\nbody\tString\tYes\tThe text body of the comment.\nintercom_user_id\tString\tYes, if no user_id or email\tThe identifier for the contact as given by Intercom.\nuser_id\tString\tYes, if no intercom_user_id or email\tThe external_id you have defined for the contact.\nemail\tString\tYes, if no intercom_user_id or user_id\tThe email you have defined for the user.\nattachment_urls\tArray of Strings\tNo\tA list of image URLs that will be added as attachments. You can include up to 5 URLs.\n\nFor a reply sent on behalf of an admin:\n\nArgument\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tAccepts comment or note.\ntype\tString\tYes\tAlways admin.\nadmin_id\tString\tYes\tThe id of the admin who is authoring the comment.\nbody\tString\tYes\tThe text body of the reply. Notes accept some HTML formatting.\nattachment_urls\tArray of Strings\tNo\tA list of URLs of files that will be added as attachments. You can include up to 5 attachments.\nResponse\n\nThis will return the Conversation which was replied to."
  },
  {
    "title": "Identify an admin",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/admins/view-the-current-admin/",
    "html": "Identify an admin\nOAUTH ONLY\n\nThis feature is only available when using OAuth. This requires the \"Read admins\" permission.\n\nYou can view the name, email and app ID of the current authorised admin via a GET request to https://api.intercom.io/me.\n\nResponse\n\nThis will return an Admin object, with an embedded app object (a workspace in legacy terminology).\n\nApp Object (a workspace)\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'admin'\nid\tstring\tThe id of the admin\nname\tstring\tThe name of the admin\nemail\tstring\tThe email address of the admin\nemail_verified\tboolean\tThis field will indicate whether the Intercom user has verified their email or not\napp.type\tstring\tvalue is 'app'\napp.id_code\tstring\tThe id of the app\napp.name\tstring\tThe name of the app\napp.region\tstring\tthe intercom region the app is located in\napp.created_at\ttimestamp\tWhen the app was created\napp.identity_verification\tboolean\tWhether or not the app uses identity verification\nSINGLE SIGN ON\n\nIf you are building a custom \"Log in with Intercom\" flow for your site, and you call the /me endpoint to identify the user logging, in you should not accept any sign ins from users with unverified email addresses as it poses a potential impersonation security risk."
  },
  {
    "title": "List all activity logs",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/admins/view-admin-activity-logs/",
    "html": "List all activity logs\nExample Request & Response\ncurlhtml\ncurl https://api.intercom.io/admins/activity_logs?created_at_after=489222000&created_at_before=685695600 \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json'\n\n\nExample Errors\n\nhttphttp\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\" => \\\"error.list\\\",\\n  \\\"request_id\\\" => nil,\\n  \\\"errors\\\" => [{\\n\\t\\\"code\\\" => \\\"parameter_not_found\\\",\\n\\t\\\"message\\\" => \\\"Please provide the following parameters: created_at_after\\\"\\n  }]\\n}\\n\n\nHTTP/1.1 403 RESTRICTED\\n{\\n  \\\"type\\\" => \\\"error.list\\\",\\n  \\\"request_id\\\" => nil,\\n  \\\"errors\\\" => [{\\n\\t\\\"code\\\" => \\\"api_plan_restricted\\\",\\n\\t\\\"message\\\" => \\\"This feature is not yet available to your app\\\"\\n  }]\\n}\n\n\nYou can get a log of activities by all admins in an app by sending a GET request to the URL https://api.intercom.io/admins/activity_logs.\n\nActivity List\nAttribute\tType\tDescription\ntype\tstring\tValue is activity_log.list\nactivity_logs\tarray\tA list of activity objects\npages\tobject\tOptional. A pagination object which may be empty, indication no further pages to fetch\nActivity Object\nAttribute\tType\tDescription\nactivity_type\tstring\tThe type of activity - see Activity Types & Descriptions below.\nactivity_description\tstring\tA sentence or two describing the activity - see Activity Types & Descriptions below.\nmetadata\tobject\tAn object containing information on the activity and what it modified\ncreated_at\ttimestamp\tThe time the activity was performed\nperformed_by\tobject\tAn Admin object of the admin who performed the activity\nid\tstring\tThe id representing the activity\nActivity Types & Descriptions\nType\tDescription\nadmin_assignment_limit_change\tA teammate changed their assignment limit\nadmin_away_mode_change\tA teammate changed their away mode and conversation reassignment settings\nadmin_deletion\tA teammate was removed from your workspace\nadmin_deprovisioned\tA teammate was deprovisioned from your workspace via SCIM\nadmin_invite_change\tThe permissions for a teammate invite were changed\nadmin_invite_creation\tA teammate invite was created\nadmin_invite_deletion\tA teammate invite was deleted\nadmin_login_failure\tA teammate tried to login with the wrong credentials\nadmin_login_success\tA teammate logged in successfully\nadmin_logout\tA teammate logged out\nadmin_password_reset_request\tA teammate requested a password reset\nadmin_password_reset_success\tA teammate's password was successfully reset\nadmin_permission_change\tThe permissions for a teammate were changed\nadmin_provisioned\tA teammate was provisioned on your workspace via SCIM\napp_admin_join\tA teammate joined your workspace (i.e. accepted your invite)\napp_authentication_method_change\tYour workspace's authentication methods were changed\napp_data_deletion\tA user or lead was deleted from your workspace\napp_data_export\tMessage or conversation data was exported from your workspace\napp_google_sso_domain_change\tYour workspace's Google SSO domain was changed\napp_identity_verification_change\tYour workspace's identity verification setting was changed\napp_name_change\tThe name of your workspace was changed\napp_outbound_address_change\tThe outbound email address was changed for your workspace\napp_package_installation\tAn app package was installed on your workspace\napp_package_token_regeneration\tAn access token for a specific app package was updated\napp_package_uninstallation\tAn app package was uninstalled from your workspace\napp_team_creation\tA team was created\napp_team_deletion\tA team was deleted\napp_team_membership_modification\tA team's membership was modified\napp_timezone_change\tAn app package was installed in your workspace\napp_webhook_creation\tA webhook subscription was created\napp_webhook_deletion\tA webhook subscription was deleted\narticles_in_messenger_enabled_change\tThe Messenger search for articles setting was changed\nbulk_delete\tUser or lead data was deleted from your workspace\nbulk_export\tUser or lead data was exported from your workspace\ncampaign_deletion\tA campaign was deleted from your workspace\ncampaign_state_change\tA campaign was changed on your workspace\nconversation_topic_change\tA conversation topic was changed\nconversation_topic_creation\tA conversation topic was created\nconversation_topic_deletion\tA conversation topic was deleted\nhelp_center_settings_change\tYour Help Center was turned on or off\ninbound_conversations_change\tThe Messenger inbound conversations setting was changed\ninbox_access_change\tThe inbox access setting was changed\nmessage_deletion\tA team was deleted from your workspace\nmessage_state_change\tA message's state was changed\nmessenger_look_and_feel_change\tThe Messenger look and feel setting was changed\nmessenger_search_required_change\tThe Messenger search required setting was changed\noffice_hours_change\tThe office hours setting was changed\nrole_change\tA role was changed\nrole_creation\tA role was created\nrole_deletion\tA role was deleted\nseat_change\tA teammate's seat was changed\nseat_revoke\tA teammate's seat was revoked\nsecurity_settings_change\tYour workspace's security settings were changed\ntemporary_expectation_change\tThe Messenger special notice settings were changed\nupfront_email_collection_change\tThe Messenger upfront email collection settings were changed\nwelcome_message_change\tThe Messenger welcome message settings were changed\nRequest Query Parameters\nParameter\tRequired?\tDescription\ncreated_at_after\tYes\tThe start date that you request data for. It must be formatted as a UNIX timestamp.\ncreated_at_before\tNo\tThe end date that you request data for. It must be formatted as a UNIX timestamp.\nResponse\n\nThis will return an Activity List which will contain an array titled activity_logs, in turn containing multiple Activity Objects."
  },
  {
    "title": "Delete a visitor",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/visitors/delete-a-visitor/",
    "html": "Delete a visitor\nExample Request & Response\ncurlcurl\n$ curl \\\\\\nhttps://api.intercom.io/visitors/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"visitor\\\",\\n  \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n  \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  ...\\n}\\n\n\n\nYou can delete a single visitor.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the visitor which is given by Intercom.\nResponse\n\nThis will return a Visitor Model of the visitor you just deleted."
  },
  {
    "title": "Update a visitor",
    "url": "https://developers.intercom.com/docs/references/2.6/rest-api/visitors/update-a-visitor/",
    "html": "Update a visitor\nExample Request\n$ curl https://api.intercom.io/visitors \\\n-X PUT \\\n-H 'Authorization:Bearer <Your access token>'  \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"user_id\": \"124\",\n  \"name\": \"Winston Smith\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 9\n  }\n}'\n\nHTTP/1.1 200 OK\n\n{\n  \"user_id\": \"124\",\n  \"name\": \"Winston Smith\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 9\n  }\n  \n  # and the rest of the Visitor model\n}'\n\nvisitor.name = \"Winston Smith\"\nvisitor.custom_attribute[:foo] = 'bar'\nintercom.visitors.save(visitor)\n\n\nSending a PUT request to /visitors and passing identifiers (user_id or id) in the body will result in an update of an existing Visitor.\n\nRequest Body Parameters\nArgument\tType\tRequired?\tDescription\nid\tString\tOne of\tA unique identified for the visitor which is given by Intercom.\nuser_id\tString\tOne of\tA unique identified for the visitor which is given by you.\nname\tString\tNo\tThe visitor's name.\ncustom_attributes\tObject\tNo\tThe custom attributes which are set for the visitor.\nResponse\n\nThis will return a Visitor Model of the visitor you just updated."
  },
  {
    "title": "Translation",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Models/translation/",
    "html": "A translation object contains the localised details of a subscription type."
  },
  {
    "title": "User Segment/Tag Count Model",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/counts/user-tag-counts/",
    "html": "User Segment/Tag Count Model\n\nThe count of tags and segments includes archived tags and segments.\n\nUser Segment/Tag Count Object\n\nCount Object includes count for users and leads.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nuser\tobject\tContains a field called segment containing segment counts\nuser.segment\tarray\tContains a list of segment counts\nuser.tag\tarray\tContains a list of tag counts\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"tag\": [\n        {\n          \"Independent\": 3\n        }\n    ]\n  }\n}\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"segment\": [\n      {\n        \"Active\": 1\n      },\n      {\n        \"New\": 0\n      },\n      {\n        \"VIP\": 0\n      },\n      {\n        \"Slipping Away\": 0\n      },\n      {\n        \"segment 1\": 1\n      }\n    ]\n  }\n}\n\n# User Tag Count\n$ curl 'https://api.intercom.io/counts?type=user&count=tag' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# User Segment Count\n$ curl 'https://api.intercom.io/counts?type=user&count=segment' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# User Tag Count\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"tag\": [\n        {\n          \"Independent\": 3\n        }\n    ]\n  }\n}\n\n# User Segment Count\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"segment\": [\n      {\n        \"Active\": 1\n      },\n      {\n        \"New\": 0\n      },\n      {\n        \"VIP\": 0\n      },\n      {\n        \"Slipping Away\": 0\n      },\n      {\n        \"segment 1\": 1\n      }\n    ]\n  }\n}\n\nintercom.counts.for_type(type: 'user', count: 'tag')\nintercom.counts.for_type(type: 'user', count: 'segment')\n\n<?php\n// User Tag Count\n$counts = $intercom->counts->getCounts([\"type\" => \"user\", \"count\" => \"tag\"]);\nprint_r($counts);\n\n// Company Segment Count\n$counts = $intercom->counts->getCounts([\"type\" => \"user\", \"count\" => \"segment\"]);\n?>\n\n// User Tag Count\nfinal List<Counts.CountItem> tags = Counts.userTags();\nfor (Counts.CountItem tag : tags) {\n  out.println(tag.getName() + \": \" + tag.getValue());\n}\n\n// User Segment Count\nfinal List<Counts.CountItem> segments = Counts.userSegments();\nfor (Counts.CountItem seg : segments) {\n  out.println(seg.getName() + \": \" + seg.getValue());\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nUser Segment Count\tuser\tsegment\nUser Tag Count\tuser\ttag"
  },
  {
    "title": "Tags",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Models/tags/",
    "html": "A list of tags objects associated with a conversation"
  },
  {
    "title": "Retrieve a visitor with User ID",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Visitors/retrieveVisitorWithUserId/",
    "html": "You can fetch the details of a single visitor."
  },
  {
    "title": "List all tags",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Tags/listTags/",
    "html": "You can fetch a list of all tags for a given workspace."
  },
  {
    "title": "Archive a contact",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/contacts/archive-a-contact/",
    "html": "Archive a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/archive \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can archive a single contact.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return an object with details on the archived contact.\n\nAttribute\tType\tDescription\nid\tString\tThe unique identifier for the contact which is given by Intercom\nobject\tString\tThe type of object - contact\narchived\tBoolean\tWhether the contact has been archived - true"
  },
  {
    "title": "Add tag to a contact",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Tags/attachTagToContact/",
    "html": "You can tag a specific contact. This will return a tag object for the tag that was added to the contact."
  },
  {
    "title": "Find a specific tag",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Tags/findTag/",
    "html": "You can fetch the details of tags that are on the workspace by their id. This will return a tag object."
  },
  {
    "title": "List tags attached to a contact",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Tags/listTagsForAContact/",
    "html": "You can fetch a list of all tags that are attached to a specific contact."
  },
  {
    "title": "Segment List",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Models/segment_list/",
    "html": "This will return a list of Segment Objects. The result may also have a pages object if the response is paginated."
  },
  {
    "title": "Search data",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Models/search_request/",
    "html": "Search using Intercoms Search APIs."
  },
  {
    "title": "Get a Single Conversation",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/conversations/get-a-single-conversation/",
    "html": "Get a Single Conversation\nGet a Single Conversation\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/conversations/147 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"assignee\\\": {\\n        \\\"id\\\": \\\"814860\\\",\\n        \\\"type\\\": \\\"admin\\\"\\n    },\\n    \\\"conversation_message\\\": {\\n        \\\"attachments\\\": [],\\n        \\\"author\\\": {\\n            \\\"id\\\": \\\"5bc8f7421ae2d96695c18a\\\",\\n            \\\"type\\\": \\\"lead\\\"\\n        },\\n        \\\"body\\\": \\\"<p>Hi</p>\\\",\\n        \\\"delivered_as\\\": \\\"customer_initiated\\\",\\n        \\\"id\\\": \\\"269650473\\\",\\n        \\\"subject\\\": \\\"\\\",\\n        \\\"type\\\": \\\"conversation\\\",\\n        \\\"url\\\": \\\"https://intercom-survey-app.glitch.me/\\\"\\n    },\\n    \\\"conversation_parts\\\": {\\n        \\\"conversation_parts\\\": [\\n            {\\n                \\\"assigned_to\\\": null,\\n                \\\"attachments\\\": [],\\n                \\\"author\\\": {\\n                    \\\"id\\\": \\\"815309\\\",\\n                    \\\"type\\\": \\\"bot\\\"\\n                },\\n                \\\"body\\\": \\\"<p>Test_App typically replies in a few hours.</p>\\\",\\n                \\\"created_at\\\": 1539897200,\\n                \\\"external_id\\\": null,\\n                \\\"id\\\": \\\"2202737122\\\",\\n                \\\"notified_at\\\": 1539897200,\\n                \\\"part_type\\\": \\\"comment\\\",\\n                \\\"type\\\": \\\"conversation_part\\\",\\n                \\\"updated_at\\\": 1539897200\\n            },\\n          #List of conversation parts...\\n        ],\\n        \\\"total_count\\\": 25,\\n        \\\"type\\\": \\\"conversation_part.list\\\"\\n    },\\n    \\\"conversation_rating\\\": {\\n        \\\"created_at\\\": null,\\n        \\\"customer\\\": {\\n            \\\"id\\\": null,\\n            \\\"type\\\": null\\n        },\\n        \\\"rating\\\": null,\\n        \\\"remark\\\": null,\\n        \\\"teammate\\\": {\\n            \\\"id\\\": null,\\n            \\\"type\\\": null\\n        }\\n    },\\n    \\\"created_at\\\": 1539897198,\\n    \\\"customer_first_reply\\\": {\\n        \\\"created_at\\\": 1539897198,\\n        \\\"type\\\": \\\"conversation\\\",\\n        \\\"url\\\": \\\"https://intercom-survey-app.glitch.me/\\\"\\n    },\\n    \\\"customers\\\": [\\n        {\\n            \\\"id\\\": \\\"5bc8f7ae2d96695c18a\\\",\\n            \\\"type\\\": \\\"lead\\\"\\n        }\\n    ],\\n    \\\"id\\\": \\\"1911149811\\\",\\n    \\\"open\\\": true,\\n    \\\"read\\\": true,\\n    \\\"sent_at\\\": 1539897198,\\n    \\\"snoozed_until\\\": null,\\n    \\\"state\\\": \\\"open\\\",\\n    \\\"tags\\\": {\\n      \\\"type\\\": \\\"tag.list\\\",\\n      \\\"tags\\\": [\\n        {\\n          \\\"type\\\": \\\"tag\\\",\\n          \\\"id\\\": \\\"1\\\",\\n          \\\"name\\\": \\\"a tag\\\",\\n          \\\"applied_at\\\": 1542820819,\\n          \\\"applied_by\\\": {\\n            \\\"type\\\": \\\"admin\\\",\\n            \\\"id\\\": \\\"54\\\"\\n          }\\n        },\\n        {\\n          \\\"type\\\": \\\"tag\\\",\\n          \\\"id\\\": \\\"1\\\",\\n          \\\"name\\\": \\\"a tag\\\",\\n          \\\"applied_at\\\": 1542969954,\\n          \\\"applied_by\\\": {\\n            \\\"type\\\": \\\"admin\\\",\\n            \\\"id\\\": \\\"54\\\"\\n          }\\n        }\\n      ]\\n    },\\n    \\\"type\\\": \\\"conversation\\\",\\n    \\\"updated_at\\\": 1540393270,\\n    \\\"user\\\": {\\n        \\\"id\\\": \\\"5bc8f7421ffae2d96695c18a\\\",\\n        \\\"type\\\": \\\"lead\\\"\\n    },\\n    \\\"waiting_since\\\": 64654125776\\n}\n\nParameters\n\nSpecify the id of the conversation you wish to retrieve using the URL https://api.intercom.io/conversations/{id} URL structure where {id} is the id field of the conversation.\n\nParameter\tRequired\tDescription\ndisplay_as\tno\tSet to plaintext to retrieve conversation messages in plain text\nReturns\n\nA full Conversation object. This will include a list of tags as Tag objects, with two additional attributes:\n\nAttribute\tType\tDescription\napplied_at\tUNIX Timestamp\tThe date and time when the tag was applied to the conversation.\napplied_by\tObject\tContains the id of the admin that applied the tag.\n\nParts in the conversation_parts object are ordered by with the most recently created parts appearing at the end of the list.\n\nThe maximum number of conversation parts that can be returned via the API is 500. If you have more than that we will return the 500 most recent conversation parts."
  },
  {
    "title": "List Conversations",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/conversations/list-conversations/",
    "html": "List Conversations\nList Open Conversations for a Particular Admin\ncurlcurlrubyphpjava\n$ curl \\\\\\n\\\"https://api.intercom.io/conversations?type=admin&admin_id=25&open=true\\\" \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"conversation.list\\\",\\n  \\\"conversations\\\": [\\n    {\\n      \\\"assignee\\\": {\\n        \\\"id\\\": null,\\n        \\\"type\\\": \\\"nobody_admin\\\"\\n       },\\n       \\\"conversation_message\\\": {\\n         \\\"attachments\\\": [],\\n         \\\"author\\\": {\\n           \\\"id\\\": \\\"814865\\\",\\n           \\\"type\\\": \\\"admin\\\"\\n         },\\n       \\\"body\\\": \\\"<p>Hi \\\\ud83d\\\\ude00 We hope you enjoy the example app. To get started just copy and paste some code into the JS editor. Let us know if you think this is useful? <br></p>\\\",\\n       \\\"delivered_as\\\": \\\"automated\\\",\\n       \\\"id\\\": \\\"55951247\\\",\\n       \\\"subject\\\": \\\"\\\",\\n       \\\"type\\\": \\\"conversation\\\",\\n       \\\"url\\\": null\\n     },\\n     \\\"created_at\\\": 1543370554,\\n     \\\"customer_first_reply\\\": {\\n       \\\"created_at\\\": 1543370575,\\n       \\\"type\\\": \\\"conversation\\\",\\n       \\\"url\\\": \\\"https://s.codepen.io/boomerang/iFrameKey-fd6a7a17-5f52-3b6d-c3f6-8acc206fd174/index.html\\\"\\n     },\\n     \\\"customers\\\": [\\n       {\\n         \\\"id\\\": \\\"5bfdf73a1e1f0a940ef89995\\\",\\n         \\\"type\\\": \\\"lead\\\"\\n       }\\n     ],\\n     \\\"id\\\": \\\"19774381531\\\",\\n     \\\"open\\\": true,\\n     \\\"read\\\": true,\\n     \\\"sent_at\\\": 1543370554,\\n     \\\"snoozed_until\\\": null,\\n     \\\"state\\\": \\\"open\\\",\\n     \\\"tags\\\": {\\n       \\\"type\\\": \\\"tag.list\\\",\\n       \\\"tags\\\": [\\n         {\\n            \\\"type\\\": \\\"tag\\\",\\n            \\\"id\\\": \\\"1\\\",\\n            \\\"name\\\": \\\"a tag\\\",\\n            \\\"applied_at\\\": 1542820819,\\n            \\\"applied_by\\\": {\\n              \\\"type\\\": \\\"admin\\\",\\n              \\\"id\\\": \\\"54\\\"\\n            }\\n          },\\n          {\\n            \\\"type\\\": \\\"tag\\\",\\n            \\\"id\\\": \\\"1\\\",\\n            \\\"name\\\": \\\"a tag\\\",\\n            \\\"applied_at\\\": 1542969954,\\n            \\\"applied_by\\\": {\\n              \\\"type\\\": \\\"admin\\\",\\n              \\\"id\\\": \\\"54\\\"\\n            }\\n          }\\n        ]\\n      },\\n      \\\"type\\\": \\\"conversation\\\",\\n      \\\"updated_at\\\": 1543370587,\\n      \\\"user\\\": {\\n        \\\"id\\\": \\\"5bfdf73a1e1f0a940ef89995\\\",\\n        \\\"type\\\": \\\"lead\\\"\\n      },\\n      \\\"waiting_since\\\": 1543370575\\n    }\\n  ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/conversations?per_page=20&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 20,\\n    \\\"total_pages\\\": 77,\\n    \\\"type\\\": \\\"pages\\\"\\n  }\\n}\n\n\nConversation lists do not contain conversation_parts for brevity. The part list for an individual conversation can be fetched when retrieving the conversation itself.\n\nAll Conversations\n\nTo fetch a list of all conversations send a GET request to https://api.intercom.io/conversations with no parameters.\n\nConversations can be sorted with the following parameters:\n\nParameter\tRequired\tDescription\npage\tno\tWhich page of results to fetch. Defaults to first page.\nper_page\tno\tHow many results per page. Defaults to 20, max is 60.\norder\tno\tasc or desc. Return the conversations in ascending or descending order. defaults to desc unless an incorrect value is used i.e. not asc or desc. In these cases we do not throw an error and return the list in asc order.\nsort\tno\twhat field to sort the results by. Valid values: created_at, updated_at, waiting_since. defaults to updated_at.\nWHERE'D MY CONVERSATIONS GO?\n\nWhen sorting by waiting_since, not all conversations are returned. If a teammate was the last person to reply, or the conversation is closed then those conversations will not show up on this list. This is to ensure you have an easy way of identifying and prioritizing those customers who have been waiting longest.\n\nORDERING AND SORTING WITH FILTERS\n\nIt should be noted that the format for ordering and sorting is different when listing conversations for customers and admins as opposed to listing all conversations (i.e. without any filters). When you are using filters such as admin/customers 'order' refers to the fields you want to order the list by and 'sort' refers to whether you want it sorted asc or desc. The reverse is true when listing conversation without any filtering\n\nConversations by Admin / Team\n\nYou can send the following parameters to view a single Admin's conversations -\n\nParameter\tRequired\tDescription\ntype\tyes\tThe type of entity to query for. Value must be admin for admin queries.\nadmin_id or team_id\tyes\tThe id for the Admin or Team whose conversations are to be retrieve. To retrieve all unassigned conversations, set the id to be 'nobody'.\nopen\tno\tBoolean, when true fetches just open conversations, when false just closed conversations\ndisplay_as\tno\tSet to plaintext to retrieve conversation messages in plain text\npages\tno\tOptional. A pagination object, which may be empty, indicating no further conversations to fetch.\norder\tno\twhat field to sort the results by. Valid values: created_at, updated_at, waiting_since. defaults to updated_at.\nsort\tno\tasc or desc. Return the conversations in ascending or descending order. defaults to desc.\nConversations by Users\n\nYou can send the following parameters to view a single User's conversations -\n\nParameter\tRequired\tDescription\ntype\tyes\tThe type of entity to query for. Value must be user.\nintercom_user_id\tone of\tThe id of the User whose conversations to retrieve\nuser_id\tone of\tYour user_id for the user\nemail\tone of\tYour email for the user\nunread\tno\tBoolean, when true fetches just unread conversations\ndisplay_as\tno\tSet to plaintext to retrieve conversation messages in plain text\npages\tno\tOptional. A pagination object, which may be empty, indicating no further conversations to fetch.\norder\tno\twhat field to sort the results by. Valid values: created_at, updated_at. defaults to updated_at.\nsort\tno\tasc or desc. Return the conversations in ascending or descending order. defaults to desc.\n\nNote, this will only return conversations that the user was the initial/first participant of.\n\nLISTING LEADS USING TYPE 'USER'\n\nIf you want to list lead conversations you will need to set the type to 'user' and use the 'intercom_user_id' as the identifier. It will not work with 'user_id' or type contact for example.\n\nWhen querying the conversations for a particular User, we carry out message matching for that User and your existing Auto Messages, at most once per 15 minutes.\n\nReturns\n\nA Conversation List object is returned with an array of Conversation objects. These will include a list of tags as Tag objects, with two additional attributes:\n\nAttribute\tType\tDescription\napplied_at\tUNIX Timestamp\tThe date and time when the tag was applied to the conversation.\napplied_by\tObject\tContains the id of the admin that applied the tag."
  },
  {
    "title": "Marking a Conversation as Read",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/conversations/marking-a-conversation-as-read/",
    "html": "Marking a Conversation as Read\n\nYou can mark a conversation within Intercom as read.\n\nMark a Conversation as Read\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/conversations/147 \\\\\\n-X PUT \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d'\\n{\\n  \\\"read\\\": true\\n}'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"conversation\\\",\\n  \\\"id\\\": \\\"147\\\",\\n  \\\"created_at\\\": 1400850973,\\n  \\\"updated_at\\\": 1400857494,\\n  \\\"read\\\": true\\n  # ...\\n}\\n\\n# NB: Full Conversation Object returned\n"
  },
  {
    "title": "Untag companies",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/tags/untag-companies/",
    "html": "Untag companies\nExample Request & Response\n$ curl https://api.intercom.io/tags \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d'\n{\n  \"name\": \"Independent\",\n  \"companies\": [\n    {\n      \"id\" : \"53427b7ecce5722303000003\",\n      \"untag\": true\n    }\n  ]\n}\n\nHTTP/1.1 200 Ok\n\n{\n  \"type\": \"tag\",\n  \"name\": \"Follow Up\",\n  \"id\": \"17513\"\n}\n\n\nYou can untag a single or a list of companies.\n\nRequest Body Parameters\nParameters\tType\tRequired\tDescription\nname\tString\tYes\tThe name of the tag which will be untagged from the.\ncompanies\tObject\tYes\tAn array of objects with the unique id or company_id of the company to be untagged, and the untag boolean set to true.\nResponse\n\nThis will return a Tag model for the tag that was unapplied to the given company."
  },
  {
    "title": "Attach a contact",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/tags/tag-contact/",
    "html": "Attach a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/tags \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' -d\\n\\n{\\n\\t\\\"id\\\": \\\"2084335\\\"\\n}\n\nExample Errors\nhttphtml\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can tag a single contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nRequest Body Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the tag which is given by Intercom\nResponse\n\nThis will return a Tag model for the tag that was added to the contact."
  },
  {
    "title": "The tag model",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/tags/tag-model/",
    "html": "The tag model\nExample Object\n{\\n  \\\"id\\\": \\\"17513\\\",\\n  \\\"name\\\": \\\"independent\\\",\\n  \\\"type\\\": \\\"tag\\\"\\n}\n\n\nA tag allows you to label your contacts and companies and list them using that tag.\n\nTag Object\nKey\tType\tDescription\ntype\tstring\tvalue is 'tag'\nid\tstring\tThe id of the tag\nname\tstring\tThe name of the tag"
  },
  {
    "title": "Conversation Model",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/conversations/conversation-part-model/",
    "html": "Conversation Model\nExample Conversation Object\n{\n    \"assignee\": {\n        \"id\": \"814860\",\n        \"type\": \"admin\"\n    },\n    \"conversation_message\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"conversation_parts\": {\n        \"conversation_parts\": [\n            {\n                \"assigned_to\": null,\n                \"attachments\": [],\n                \"author\": {\n                    \"id\": \"815309\",\n                    \"type\": \"bot\"\n                },\n                \"body\": \"<p>Test_App typically replies in a few hours.</p>\",\n                \"created_at\": 1539897200,\n                \"external_id\": null,\n                \"id\": \"2202737122\",\n                \"notified_at\": 1539897200,\n                \"part_type\": \"comment\",\n                \"type\": \"conversation_part\",\n                \"updated_at\": 1539897200\n            },\n          #List of conversation parts...\n        ],\n        \"total_count\": 25,\n        \"type\": \"conversation_part.list\"\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"customer\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null\n        }\n    },\n    \"created_at\": 1539897198,\n    \"customer_first_reply\": {\n        \"created_at\": 1539897198,\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"customers\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"id\": \"1911149811\",\n    \"open\": true,\n    \"read\": true,\n    \"sent_at\": 1539897198,\n    \"snoozed_until\": null,\n    \"state\": \"open\",\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\"\n    },\n    \"type\": \"conversation\",\n    \"updated_at\": 1540393270,\n    \"user\": {\n        \"id\": \"5bc8f7421ffae2d96695c18a\",\n        \"type\": \"lead\"\n    },\n    \"waiting_since\": 64654125776\n}\n\n{\n   \"type\":\"conversation\",\n   \"id\":\"1122334455\",\n   \"created_at\":1567693209,\n   \"updated_at\":1568367881,\n   \"waiting_since\":1568367881,\n   \"snoozed_until\":null,\n   \"assignee\":{\n      \"type\":\"admin\",\n      \"id\":\"1223334\"\n   },\n   \"open\":true,\n   \"state\":\"open\",\n   \"read\":true,\n   \"tags\":{\n      \"type\":\"tag.list\",\n      \"tags\":[\n\n      ]\n   },\n   \"conversation_rating\":{\n      \"rating\":null,\n      \"remark\":null,\n      \"created_at\":null,\n      \"customer\":{\n         \"type\":null,\n         \"id\":null\n      },\n      \"teammate\":{\n         \"type\":null,\n         \"id\":null\n      }\n   },\n   \"conversation_parts\":{\n      \"type\":\"conversation_part.list\",\n      \"conversation_parts\":[\n         {\n            \"type\":\"conversation_part\",\n            \"id\":\"1223445555\",\n            \"part_type\":\"comment\",\n            \"body\":\"We've removed this part of the conversation to comply with Twitter's terms and conditions. You can view the complete conversation in Intercom.\",\n            \"created_at\":1567693273,\n            \"updated_at\":1567693273,\n            \"notified_at\":1567693273,\n            \"assigned_to\":null,\n             \"author\":{\n               \"type\":\"user\",\n               \"id\":\"5310d8e7598c9a0b24000002\",\n               \"name\":\"\",\n               \"email\":\"\"\n            },\n            \"attachments\":[\n\n            ],\n            \"external_id\":null\n         },\n      ],\n      \"total_count\":1\n   },\n   \"customer_first_reply\":{\n      \"created_at\":1567693209,\n      \"type\":\"twitter\",\n      \"url\":\"\"\n   },\n   \"conversation_message\":{\n      \"type\":\"twitter\",\n      \"id\":\"409820079\",\n      \"delivered_as\":\"customer_initiated\",\n      \"subject\":\"We've removed this part of the conversation to comply with Twitter's terms and conditions. You can view the complete conversation in Intercom.\",\n      \"body\":\"We've removed this part of the conversation to comply with Twitter's terms and conditions. You can view the complete conversation in Intercom.\",\n      \"author\":{\n         \"type\":\"user\",\n         \"id\":\"5310d8e7598c9a0b24000002\",\n         \"name\":\"\",\n         \"email\":\"\"\n      },\n      \"attachments\":[\n\n      ],\n      \"url\":\"\"\n   },\n   \"customers\":[\n      {\n         \"type\":\"user\",\n         \"id\":\"5310d8e7598c9a0b24000002\"\n      }\n   ],\n   \"user\":{\n      \"type\":\"user\",\n      \"id\":\"5310d8e7598c9a0b24000002\"\n   }\n}\n\n\nA conversation lets you track and describe communications with your users. Each conversation contains the message that initiated the conversation, the user involved, the admin assigned to the conversation and a list of parts describing the conversation thread. The open or closed status of the conversation is also provided.\n\nConversation Object\nAttribute\tType\tDescription\ntype\tstring\tAlways conversation.\nid\tstring\tThe id representing the conversation.\ncreated_at\ttimestamp\tThe time the conversation was created.\nupdated_at\ttimestamp\tThe last time the conversation was updated.\nwaiting_since\ttimestamp\tThe last time a customer responded to an admin. In other words, the time a customer started waiting for a response.\nsnoozed_until\ttimestamp\tIf set this is the time in the future when this conversation will be marked as open. i.e. it will be in a snoozed state until this time.\nconversation_message\tMessage\tThe message that started the conversation rendered for presentation.\nuser\tUser\tThe user the conversation concerns.\ncustomers\tList of customers objects\tThe list of customers (users or leads) involved in this conversation. This will only contain one customer unless more were added via the group conversation feature\ncustomer_first_reply\tObject\tAn object containing information on the first users message. For a user initiated message this will represent the users original message.\nassignee\tAdmin\tThe admin the conversation is currently assigned to. Note nobody_admin indicates the conversation is assigned to Nobody.\nconversation_parts\tObject\tA conversation part object with a list of conversation parts.\nopen\tBoolean\tIndicates whether a conversation is open (true) or closed (false).\nstate\tString\tCan be set to \"open\", \"closed\" or \"snoozed\".\nread\tBoolean\tIndicates whether a conversation has been read.\ntags\tList\tA list of tags associated with the conversation.\ntotal_count\tInteger\tThe number of conversation parts in this conversation.\nconversation_rating\tobject\tA conversation rating object which contains information on the rating and/or remark added by a customer and the admin assigned to the conversation.\nWAITING_SINCE 2000 YEARS IN THE FUTURE?\n\nWaiting since lets you identify how long a customer has been waiting for a response. This time, however, is not always relevant. For example, when the last person to respond was an admin, or the conversation was closed after a user response (e.g. \"thanks, bye\"). In these cases we will set the date to 2000 years in the future.\n\nMessage Object\nAttribute\tType\tDescription\ntype\tstring\tThis includes conversation, push, facebook, twitter and email.\nid\tstring\tThe id representing the message.\nsubject\tstring\tOptional. The message subject. For Twitter, this will show a generic message regarding why the subject is obscured.\nbody\tstring\tThe message body, which may contain HTML. For Twitter, this will show a generic message regarding why the body is obscured.\nauthor\tAdmin\tThe type of individual that sent the message (user, lead, admin or team) and their related id. For Twitter, this will be blank.\nattachments\tlist\tA list of attachments for the part\nurl\tstring\tThe URL where the conversation was started. For Twitter, Email, and Bots, this will be blank.\ndelivered_as\tString\tHow was the message delivered by Intercom. They types of delivery are customer_initiated, automated, campaigns_initiated, admin_initiated, and operator_initiated.\nNOTE\n\nPlease note that URLs for User uploaded images & files have a 30 minute expiration. Once the expiration has passed, the link will no longer be valid and result in a 404. This means that if a URL is copied, and then reused elsewhere, it will continue to work until the expiry threshold. A new URL can be generated by fetching the conversation data again.\n\nCustomers object\nAttribute\tType\tDescription\ntype\tString\tThis can be either a user or a lead.\nid\tString\tThe ID for the user or lead.\nCustomer first reply object\nAttribute\t\t\ntype\tstring\tOver which channel did the first reply occur. Options include conversation, push, facebook, twitter and email.\nurl\tstring\tThe URL where the first reply originated from. For Twitter and Email replies, this will be blank.\ncreated_at\ttimestamp\tThe time the users messages was created. This is in unix timestamp format.\nCUSTOMER_FIRST_REPLY SET TO NULL\n\nIf a user has not replied to an Intercom initiated message (e.g. auto messages, admin initiated messages, campaigns) then the customer_first_reply attribute will be null"
  },
  {
    "title": "List all tags",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/tags/list-tags-for-an-app/",
    "html": "List all tags\nExample List Tag Request\n$ curl https://api.intercom.io/tags \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n{\n  \"type\": \"tag.list\",\n  \"tags\": [\n    {\n      \"type\": \"tag\",\n      \"name\": \"Beta User\",\n      \"id\": 1\n    },\n    {\n      \"type\": \"tag\",\n      \"name\": \"Amazing User\",\n      \"id\": 2\n    },\n    {\n      \"type\": \"tag\",\n      \"name\": \"Epic User\",\n      \"id\": 3\n    }\n  ]\n}\n\nintercom.tags.all.each { ... }\n\n<?php\n$tags= $intercom->tags->getTags([]);\nforeach ($tags->tags as $tag) {\n    print \"id:\".$tag->id.\" name:\".$tag->name.\"\\n\";\n}?>\n\nTagCollection tags = Tag.list();\nwhile (tags.hasNext()) {\n    out.println(tags.next().getId());\n}\n\n\nYou can list all tags.\n\nResponse\n\nA list of tag objects.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'tag.list'\ntags\tarray\tA list of tag objects"
  },
  {
    "title": "Delete a tag",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/tags/delete-a-tag/",
    "html": "Delete a tag\nExample Delete Tag Request\n$ curl https://api.intercom.io/tags/17513 \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n# Not exposed in Ruby client\n\n<?php\n// Not exposed in PHP client\n?>\n\nTag.delete(tag);\n\n\nYou can delete a single tag.\n\nRequest Path Parameters\nParemeter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier of the tag.\nResponse\n\nThis will return a Tag Model of the tag you just deleted."
  },
  {
    "title": "Assigning a Conversation to Unassigned",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/conversations/assigning-a-conversation-to-unassigned/",
    "html": "Assigning a Conversation to Unassigned\n\nYou can assign a conversation to be unassigned when you reply to a conversation. You should do this if you do not want the conversation to remain in your own inbox. This will allow other people pick up the conversation when the user replies to it\n\nAssign to Unassigned\n#Assign converstion to unassigned\ncurl https://api.intercom.io/conversations/6167678340/reply \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"body\": \"Reassigning to no-one!\",\n  \"type\": \"admin\",\n  \"admin_id\": \"1234\",\n  \"assignee_id\": \"0\",\n  \"message_type\": \"assignment\"\n}'\n\n#Assign converstion to unassigned  \nintercom.conversations.reply({\n  :id => '10289052666', \n  :type => 'admin',\n  :admin_id => \"1234\",\n  :assignee_id => 0,\n  :message_type => 'assignment', \n  :body => 'reassigning to no-one!'\n})\n\n<?php\n$intercom->conversations->replyToConversation(\"10957850396\", [\n    \"intercom_user_id\" => \"5977303470ab497b1babb9ef\",\n    \"body\" => \"Reassigning to no-one, i.e. unassigned\", // appears as note\n    \"type\" => \"admin\",\n    \"admin_id\" => \"814860\",\n    \"message_type\" => \"assignment\",\n    \"assignee_id\" => \"0\" \n]);\n?>\n\nAssigning a conversation to another teammate\n\nYou can also assign a conversation to another admin. Just use the admin ID of the person you want to assign the conversation to instead of '0'. You POST body should look something like this:\n\nAssign to a teammate\n{\\n  \\\"body\\\": \\\"Reassigning to someone else\\\",\\n  \\\"type\\\": \\\"admin\\\",\\n  \\\"admin_id\\\": \\\"814860\\\",\\n  \\\"assignee_id\\\": \\\"530165\\\",\\n  \\\"message_type\\\": \\\"assignment\\\"\\n}\n\nASSIGN TO A TEAM\n\nRemember you can also assign a conversation to a team. Just replace the assignee ID with the team ID"
  },
  {
    "title": "Create or update a tag",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/tags/create-and-update-tags/",
    "html": "Create or update a tag\nExample Request & Response\n$ curl https://api.intercom.io/tags \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d'\n{\n  \"name\": \"Independent\"\n}'\n\nHTTP/1.1 200 Ok\n\n{\n  \"type\": \"tag\",\n  \"name\": \"Independent\",\n  \"id\": \"17513\"\n}\n\nintercom.tags.tag(name: 'Independent', users: [{ id: \"42ea2f1b93891f6a99000427\" }])\n\n<?php\n$intercom->tags->tag([\"name\" => \"php-tag\"]);\n?>\n\nTag t = new Tag().setName(\"Independent\");\nt = Tag.create(t);\n\n\nYou can create or update a tag.\n\nRequest Body Parameters\nAttribute\tRequired\tDescription\nname\tYes\tThe name of the tag, which will be created if not found, or the new name for the tag if this is an update request. Names are case insensitive.\nid\tOnly for update\tThe id of tag to updates.\nResponse\n\nThis will return a Tag Model of the tag you just created or updated."
  },
  {
    "title": "Admin Initiated Conversation",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/conversations/admin-initiated-conversation/",
    "html": "Admin Initiated Conversation\nEmail From Admin\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/messages \\\\\\n-XPOST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d'\\n{\\n  \\\"message_type\\\": \\\"email\\\",\\n  \\\"subject\\\": \\\"Hey\\\",\\n  \\\"body\\\": \\\"Ponies, cute small horses or something more sinister?\\\",\\n  \\\"template\\\": \\\"plain\\\",\\n  \\\"from\\\": {\\n    \\\"type\\\": \\\"admin\\\",\\n    \\\"id\\\": \\\"394051\\\"\\n  },\\n  \\\"to\\\": {\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"536e564f316c83104c000020\\\"\\n  }\\n}'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"admin_message\\\",\\n  \\\"id\\\": \\\"2001\\\",\\n  \\\"created_at\\\": 1401916877,\\n  \\\"message_type\\\": \\\"email\\\",\\n  \\\"subject\\\" : \\\"Hey\\\",\\n  \\\"body\\\" : \\\"Ponies, cute small horses or something more sinister?\\\",\\n  \\\"template\\\": \\\"plain\\\",\\n  \\\"owner\\\": {\\n    \\\"email\\\": \\\"wash@serenity.io\\\",\\n    \\\"id\\\": \\\"394051\\\",\\n    \\\"name\\\": \\\"Wash\\\",\\n    \\\"type\\\": \\\"admin\\\"\\n  }\\n}\n\n\nYou can create a new admin initiated message by submitting a POST to https://api.intercom.io/messages along with JSON message.\n\nAn admin initiated message can be delivered to a user as an In-App conversation or as an Email. The message_type field is used to determine which, with a value of either inapp or email. For admin initiated In-App messages, they will not trigger push notifications.\n\nReceiving Users are identified by a user_id, id, or email field in the to object.\n\nReceiving Contacts are identified by a user_id or id field in the to object.\n\nThe type field for the to object is then set to either contact or user.\n\nThe subject field is only used for email type messages and will not be used for inapp message types.\n\nA sending admin must be added using the from field, along with a type field value of admin and the corresponding Intercom id for that admin. The admin's Intercom id value may be obtained from the List Admins resource.\n\nCONVERSATION V MESSAGE\n\nNote that since creating an admin-initiated conversation hits the /messages endpoint, the response contains a message object rather than a conversation object. As a result you will not see the conversation ID in the returned message object. You may, however, retrieve the customers's conversations and iterate over them looking for the message_id value.\n\nAttributes\nAttribute\tType\tDescription\nmessage_type\tstring\tThe kind of message being created. Values: inapp or email\nsubject\tstring\tOptional unless message_type is email. The title of the email.\nbody\tstring\tThe content of the message. HTML or plaintext. Details of HTML support\ntemplate\tstring\tThe style of the outgoing message. Only valid for email messages. Possible values plain or personal.\nfrom\tobject\tRequired. An admin object containing the admin's id. The type field must have a value of admin.\nto\tobject\tRequired. A user object containing the user's id, email or user_id. The type field must have a value of user or of contact.\nReturns\n\nThe created message object.\n\nIf the from type was supplied with an admin's details, the owner field in the response will represent the admin in question.\n\nHOW CAN I GET THE FULL CONVERSATION OBJECT?\n\nAs the id returned is the message_id, you'd need to make an additional call to the API afterwards to find the latest open conversation for the user you sent the message to.\n\nGetting the full conversation object\n last_convo = @intercom.conversations.find_all(:type => 'user', :intercom_user_id => \\\"ID OF THE USER\\\", :open => true).first\\n last_convo.id\n"
  },
  {
    "title": "Viewing the current admin and app",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/admins/viewing-the-current-admin/",
    "html": "Viewing the current admin and app\nOAUTH ONLY\n\nThis feature is only available when using OAuth. This requires the \"Read admins\" permission.\n\nYou can view the name, email and app ID of the current authorised admin via a GET request to https://api.intercom.io/me.\n\nReturns\n\nAn Admin model, with an embedded App object.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'admin'\nid\tstring\tThe id of the admin\nname\tstring\tThe name of the admin\nemail\tstring\tThe email address of the admin\nemail_verified\tboolean\tThis field will indicate whether the Intercom user has verified their email or not\napp.type\tstring\tvalue is 'app'\napp.id_code\tstring\tThe id of the app\napp.name\tstring\tThe name of the app\napp.created_at\ttimestamp\tWhen the app was created\napp.identity_verification\tboolean\tWhether or not the app uses identity verification\nSINGLE SIGN ON\n\nIf you are building a custom \"Log in with Intercom\" flow for your site, and you call the /me endpoint to identify the user logging, in you should not accept any sign ins from users with unverified email addresses as it poses a potential impersonation security risk."
  },
  {
    "title": "Identify an admin",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/admins/view-the-current-admin/",
    "html": "Identify an admin\nOAUTH ONLY\n\nThis feature is only available when using OAuth. This requires the \"Read admins\" permission.\n\nYou can view the name, email and app ID of the current authorised admin via a GET request to https://api.intercom.io/me.\n\nResponse\n\nThis will return an Admin object, with an embedded app object (a workspace in legacy terminology).\n\nApp Object (a workspace)\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'admin'\nid\tstring\tThe id of the admin\nname\tstring\tThe name of the admin\nemail\tstring\tThe email address of the admin\nemail_verified\tboolean\tThis field will indicate whether the Intercom user has verified their email or not\napp.type\tstring\tvalue is 'app'\napp.id_code\tstring\tThe id of the app\napp.name\tstring\tThe name of the app\napp.region\tstring\tthe intercom region the app is located in\napp.created_at\ttimestamp\tWhen the app was created\napp.identity_verification\tboolean\tWhether or not the app uses identity verification\nSINGLE SIGN ON\n\nIf you are building a custom \"Log in with Intercom\" flow for your site, and you call the /me endpoint to identify the user logging, in you should not accept any sign ins from users with unverified email addresses as it poses a potential impersonation security risk."
  },
  {
    "title": "Users",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/users/users/",
    "html": "Users\n\nThe Users resource is the primary way of interacting with Intercom. You can create, update and delete your users, and add custom attributes describing them. Users can be viewed individually or as a list, and can be queried using tags or segments."
  },
  {
    "title": "Updating the Last Seen Time",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/users/updating-the-last-seen-time/",
    "html": "Updating the Last Seen Time\nExample Update for Last Seen Time\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/users \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"user_id\\\": \\\"25\\\",\\n  \\\"last_request_at\\\": 1480076371\\n}'\n\n{\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5714dd359a3fd47136000001\\\",\\n    \\\"user_id\\\": \\\"25\\\",\\n    \\\"anonymous\\\": false,\\n    \\\"email\\\": \\\"wash@serenity.io\\\",\\n    \\\"phone\\\": \\\"555671243\\\",\\n    \\\"name\\\": \\\"Hoban Washburne\\\",\\n    \\\"pseudonym\\\": null,\\n    \\\"avatar\\\": {\\n        \\\"type\\\": \\\"avatar\\\",\\n        \\\"image_url\\\": \\\"https://secure.gravatar.com/avatar/0c3c17fd49f45c43f482730782b36d36?s=24&d=identicon\\\"\\n    },\\n    \\\"app_id\\\": \\\"ja43hiec\\\",\\n    \\\"companies\\\": {\\n        \\\"type\\\": \\\"company.list\\\",\\n        \\\"companies\\\": [\\n            {\\n                \\\"type\\\": \\\"company\\\",\\n                \\\"company_id\\\": \\\"366\\\",\\n                \\\"id\\\": \\\"574854e3ecd0c547ae0000e4\\\",\\n                \\\"name\\\": \\\"Serenity\\\"\\n            }\\n        ]\\n    },\\n    \\\"location_data\\\": {\\n        ...\\n    },\\n    \\\"last_request_at\\\": 1480076371,\\n    \\\"last_seen_ip\\\": \\\"1.2.3.4\\\",\\n    \\\"created_at\\\": 1460985141,\\n    \\\"remote_created_at\\\": 1392731331,\\n    \\\"signed_up_at\\\": 1392731331,\\n    \\\"updated_at\\\": 1480076399,\\n    \\\"session_count\\\": 0,\\n    \\\"social_profiles\\\": {\\n        \\\"type\\\": \\\"social_profile.list\\\",\\n        \\\"social_profiles\\\": [\\n         ...\\n        ]\\n    },\\n    \\\"unsubscribed_from_emails\\\": false,\\n    \\\"user_agent_data\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9\\\",\\n    \\\"tags\\\": {\\n        \\\"type\\\": \\\"tag.list\\\",\\n        \\\"tags\\\": []\\n    },\\n    \\\"segments\\\": {\\n        \\\"type\\\": \\\"segment.list\\\",\\n        \\\"segments\\\": []\\n    },\\n    \\\"custom_attributes\\\": {\\n        \\\"paid_subscriber\\\": true,\\n        \\\"monthly_spend\\\": 155.5,\\n        \\\"team_mates\\\": 9,\\n        \\\"last_order_at\\\": 1475569818\\n    }\\n}\n\n\nTo update the last time the user was seen in your App, send the time in the last_request_at field in a user update request. You can also send update_last_request_at: true to tell the API to update the last request time to the time of your call (in UTC)."
  },
  {
    "title": "User Model",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/users/user-model/",
    "html": "User Model\nExample User Object (i.e. example JSON response)\n{\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n  \\\"user_id\\\": \\\"25\\\",\\n  \\\"email\\\": \\\"wash@serenity.io\\\",\\n  \\\"phone\\\": \\\"+1123456789\\\",\\n  \\\"name\\\": \\\"Hoban Washburne\\\",\\n  \\\"updated_at\\\": 1392734388,\\n  \\\"last_seen_ip\\\" : null,\\n  \\\"unsubscribed_from_emails\\\": false,\\n  \\\"last_request_at\\\": 1397574667,\\n  \\\"signed_up_at\\\": 1392731331,\\n  \\\"created_at\\\": 1392734388,\\n  \\\"session_count\\\": 179,\\n  \\\"user_agent_data\\\": null,\\n  \\\"pseudonym\\\": null,\\n  \\\"anonymous\\\": false,\\n  \\\"referrer\\\": \\\"https://example.org\\\",\\n  \\\"owner_id\\\": \\\"321452\\\",\\n  \\\"utm_campaign\\\": null,\\n  \\\"utm_content\\\": null,\\n  \\\"utm_medium\\\": null,\\n  \\\"utm_source\\\": null,\\n  \\\"utm_term\\\": null,\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"monthly_spend\\\": 155.5,\\n    \\\"team_mates\\\": 1\\n  },\\n  \\\"avatar\\\": {\\n    \\\"type\\\":\\\"avatar\\\",\\n    \\\"image_url\\\": \\\"https://example.org/128Wash.jpg\\\"\\n  },\\n  \\\"location_data\\\": {\\n      \\\"type\\\": \\\"location_data\\\",\\n      \\\"city_name\\\": \\\"Dublin\\\",\\n      \\\"continent_code\\\": \\\"EU\\\",\\n      \\\"country_code\\\": \\\"IRL\\\",\\n      \\\"country_name\\\": \\\"Ireland\\\",\\n      \\\"latitude\\\": null,\\n      \\\"longitude\\\": null,\\n      \\\"postal_code\\\": null,\\n      \\\"region_name\\\": \\\"Dublin\\\",\\n      \\\"timezone\\\": \\\"Europe/Dublin\\\"\\n  },\\n  \\\"social_profiles\\\": {\\n    \\\"type\\\":\\\"social_profile.list\\\",\\n    \\\"social_profiles\\\": [\\n      {\\n        \\\"name\\\": \\\"twitter\\\",\\n       \\\"id\\\": \\\"1235d3213\\\",\\n        \\\"username\\\": \\\"th1sland\\\",\\n        \\\"url\\\": \\\"http://twitter.com/th1sland\\\"\\n      }\\n    ]\\n  },\\n  \\\"companies\\\": {\\n    \\\"type\\\": \\\"company.list\\\",\\n    \\\"companies\\\": [\\n      {\\n        \\\"id\\\" : \\\"530370b477ad7120001e\\\"\\n      }\\n    ]\\n  },\\n  \\\"segments\\\": {\\n    \\\"type\\\": \\\"segment.list\\\",\\n    \\\"segments\\\": [ ]\\n  },\\n  \\\"tags\\\": {\\n    \\\"type\\\": \\\"tag.list\\\",\\n    \\\"tags\\\": [\\n      {\\n        \\\"id\\\": \\\"202\\\"\\n      }\\n    ]\\n  }\\n}\n\nExample List of Users\n{\\n  \\\"type\\\": \\\"user.list\\\",\\n  \\\"total_count\\\": 1, \\n  \\\"users\\\": [\\n    # an array of user objects\\n  ],\\n  \\\"pages\\\": {}\\n}\n\nUser Object\n\nA user object contains the following fields\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user' or 'contact'\nid\tstring\tThe Intercom defined id representing the user\ncreated_at\ttimestamp\tThe time (in seconds) the user was added to Intercom\nsigned_up_at\ttimestamp\tThe time (in seconds) the user signed up\nupdated_at\ttimestamp\tThe last time the user was updated\nuser_id\tstring\tThe user id you have defined for the user. (Max limit of 255 UTF-8 characters, and should not have trailing or leading spaces)\nemail\tstring\tThe email you have defined for the user. (Max limit of 255 UTF-8 characters, and should not have trailing or leading spaces)\nphone\tstring\tThe phone number of the user\ncustom_attributes\tobject\tThe custom attributes you have set on the user (case sensitive).\nlast_request_at\ttimestamp\tThe time the user last recorded making a request\nsession_count\tinteger\tHow many sessions the user has recorded\navatar\tobject\tAn avatar object for the user.\nunsubscribed_from_emails\tboolean\tWhether the user is unsubscribed from emails\nlocation_data\tobject\tA Location Object relating to the user\nuser_agent_data\tnull\tThis will return null as of V1.1 in an effort to remove PII from our API.\nlast_seen_ip\tnull\tThis will return null as of V1.1 in an effort to remove PII from our API.\npseudonym\tstring\tThe pseudonym used if this user was previously a Lead (https://www.intercom.com/help/en/Intercom-for-customer-communication/the-intercom-messenger)\nanonymous\tboolean\tWhether or not this is a Lead. Always false\ncompanies\tlist\tA list of companies for the user\nsocial_profiles\tlist\tA list of social profiles associated with the user\nsegments\tlist\tThis will return an empty list of segments as part of our effort to deprecate this attribute on the user model for performance and accuracy reasons.\ntags\tlist\tA list of tags associated with the user\nname\tstring\tThe full name of the user\nreferrer\tstring\tThe URL of the page the user was last on\nutm_source\tstring\tIdentifies which site sent the traffic\nutm_medium\tstring\tIdentifies what type of link was used\nutm_campaign\tstring\tIdentifies a specific product promotion or strategic campaign\nutm_term\tstring\tIdentifies search terms\nutm_content\tstring\tIdentifies what specifically was clicked to bring the user to the site\n\nNote that in some parts of the API, the user id field may be referred to using intercom_user_id.\nAny integer values in the user model are limited to the int32 range -2^31 to 2^31 -1\n\nSocial Profile Object\nAttribute\tType\tDescription\ntype\tstring\tValue is 'social_profile'\nname\tstring\tThe name of the service (e.g., twitter, facebook)\nusername\tstring\tUser name or handle on the service\nurl\tstring\tThe user homepage on the service\nid\tstring\tOptional. User ID on the service\n\nSocial data is read only and can not be updated via the API.\n\nAvatar Object\nAttribute\tType\tDescription\ntype\tstring\tValue is 'avatar'\nimage_url\tstring\tAn avatar image URL. note: the image url needs to be https.\nLocation Object\nAttribute\tType\tDescription\ntype\tstring\tValue is 'location_data'\ncity_name\tstring\tOptional. A city name\ncontinent_code\tstring\tOptional. A continent code\ncountry_code\tstring\tOptional. An ISO 3166 country code\ncountry_name\tstring\tOptional. The country name\nlatitude\tnumber\tOptional. The latitude\nlongitude\tnumber\tOptional. The longitude\npostal_code\tstring\tOptional. A postal code\nregion_name\tstring\tOptional. A region name\ntimezone\tstring\tOptional. An ISO 8601 timezone\n\nLocation data is read only and can not be updated via the API.\n\nUser List\nAttribute\tType\tDescription\ntype\tstring\tValue is 'user.list'\ntotal_count\tinteger\tThe number of users for this app\npages\tobject\tA Pagination object\nusers\tarray\tA list of users\n\nThe user list does not return Leads - this means all objects in the list will have an anonymous value of false. Any user in the list that was converted from a Lead will retain their pseudonym value."
  },
  {
    "title": "List by Tag, Segment, Company",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/users/list-by-tag-segment-company/",
    "html": "List by Tag, Segment, Company\nExample Tag Request\n$ curl https://api.intercom.io/users?tag_id=3142 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nintercom.users.find_all({ :tag_id => '30126' })\n\n<?php\n$user = $intercom->users->getUsers([\"tag_id\" => '730128']);\nprint_r($user->users[0]->email);\necho \"\\n\";\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"tag_id\", \"30126\");\nUserCollection users = User.list(params);\nwhile (users.hasNext()) {\n    out.println(users.next().getId());\n}\n\nExample Segment Request\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/users?segment_id=5926 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"user.list\\\",\\n  \\\"total_count\\\": 105,\\n  \\\"users\\\": [\\n    {\\n      \\\"type\\\": \\\"user\\\",\\n      \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n       ...\\n     },\\n     ...\\n  ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/users?tag_id=3142&per_page=50&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 50,\\n    \\\"total_pages\\\": 3\\n  }\\n}\\n\\n# NB: Full User objects are returned\n\n\nYou can fetch segmented users/leads by querying the users resource with a segment_id parameter, indicating the id of the segment to query with.\n\nTo fetch tagged users/leads, you can use a tag_id parameter to indicate the id of the tag. For information on tagging users see the section Tag or Untag Users, Companies & Leads (Contacts).\n\nNote that you can not combine tag and segment parameters in the same request.\n\nTo list users belonging to a company, you can use the companies API. See the section List Company Users for details.\n\nRequest Parameters\nParameter\tRequired\tDescription\ntag_id\tno\tThe id of the tag to filter by.\nsegment_id\tno\tThe id of the segment to filter by.\nReturns\n\nA pageable list of users and leads.\n\nLike a plain company list, the result contains a pages object that indicates if more users exist via the next field."
  },
  {
    "title": "Replying to a Conversation",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/conversations/replying-to-a-conversation/",
    "html": "Replying to a Conversation\nReply with and Without Attachments\ncurlcurlrubyphpjava\n# Reply without attachment\\n$ curl 'https://api.intercom.io/conversations/{conversation_id}/reply' \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d'\\n{\\n  \\\"intercom_user_id\\\": \\\"536e564f316c83104c000020\\\",\\n  \\\"body\\\": \\\"Thanks again :)\\\",\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"message_type\\\": \\\"comment\\\"\\n}'\\n\\n\\n\\n# Reply with attachment\\n$ curl https://api.intercom.io/conversations/{conversation_id}/reply \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d'\\n{\\n  \\\"intercom_user_id\\\": \\\"536e564f316c83104c000020\\\",\\n  \\\"body\\\": \\\"Thanks again :)\\\",\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"message_type\\\": \\\"comment\\\",\\n  \\\"attachment_urls\\\": [\\\"http://www.example.com/attachment.jpg\\\"]\\n}\n\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"conversation\\\",\\n    \\\"id\\\": \\\"{conversation_id}\\\",\\n    # ...\\n}\\n# NB: Full Conversation Object returned\n\nReply with a note\ncurltext\n# You can replay with a note also and use some HTML formatting such as bold, italics, and lists\\ncurl 'https://api.intercom.io/conversations/{conversation_id}/reply' \\\\\\n-X POST \\\\\\n-H 'Authorization: Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' \\\\\\n{\\n  \\\"admin_id\\\": \\\"814860\\\",\\n  \\\"body\\\": \\\"<html> <body>  <h2>An Unordered HTML List</h2>  <ul>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ul>    <h2>An Ordered HTML List</h2>  <ol>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ol>   </body> </html>\\\",\\n  \\\"type\\\": \\\"admin\\\",\\n  \\\"message_type\\\": \\\"note\\\"\\n}\\n\n\nArguments\n\nFor a User Reply:\n\nArgument\tRequired\tDescription\ntype\tYes\tuser\nmessage_type\tYes\tMust be comment\nbody\tYes\tThe text body of the comment\nintercom_user_id\tone of\tThe Intercom defined id representing the user\nuser_id\tone of\tThe user id you have defined for the user\nemail\tone of\tThe email you have defined for the user\nattachment_urls\tNo\tA list of URLs of (image only) files that will be added as attachments. You can include up to 5 attachments.\n\nor for an Admin Reply:\n\nArgument\tRequired\tDescription\ntype\tYes\tadmin\nmessage_type\tYes\tMust be comment, assignment, open, close, or note\nadmin_id\tYes\tThe id of the Admin who is authoring the comment\nbody\tNo\tThe text body of the comment. Must be set for comment and note\nassignee_id\tNo\tAssignments only: assigns the conversation to the given admin id. Note this must be \"0\" if you want to move it to unassigned\nattachment_urls\tNo\tA list of URLs of files that will be added as attachments. You can include up to 5 attachments..\n\nNotes are not visible to the end user.\n\nReturns\n\nA full Conversation object, with Conversation Parts."
  },
  {
    "title": "Retrieve an admin",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/admins/view-an-admin/",
    "html": "Retrieve an admin\nExample Request & Response\n$ curl https://api.intercom.io/admins/493881 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"type\": \"admin\",\n    \"id\": \"493881\",\n    \"name\": \"Hoban Washburne\",\n    \"email\": \"wash@serenity.io\",\n    \"away_mode_enabled\": false,\n    \"away_mode_reassign\": false,\n    \"team_ids\": [\n        814865\n    ]\n}\n\n<?php\n$admin = $intercom->admins->getAdmin(\"493881\");\n?>\n\nErrors for admins without inbox seats\n{\n    \"type\": \"error.list\",\n    \"request_id\": \"0002miv9og586ig3aln0\",\n    \"errors\": [\n        {\n            \"code\": \"action_forbidden\",\n            \"message\": \"This admin does not have Inbox access permissions\"\n        }\n    ]\n}\n\n\nYou can fetch the details of a single admin.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier of a given admin\nResponse\n\nThis will return an Admin object."
  },
  {
    "title": "Scroll over all users",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/users/iterating-over-all-users/",
    "html": "Scroll over all users\n\nThe List Users functionality does not work well for huge datasets, and can result in errors and performance problems when paging deeply. The Scroll API provides an efficient mechanism for iterating over all users in a dataset.\n\nEach workspace can only have 1 scroll open at a time. You'll get an error message if you try to have more than one open per workspace.\nIf the scroll isn't used for 1 minute, it expires and calls with that scroll param will fail\nIf the end of the scroll is reached, \"users\" will be empty and the scroll parameter will expire\n# Send a GET request to get the first page of users\n$ curl \\\n'https://api.intercom.io/users/scroll' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n# To get the next page use the scroll param returned in the response\n$ curl \\\n'https://api.intercom.io/users/scroll?scroll_param=562bc29f-ea55-4823-aaaf-f3faadceaa59' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"user.list\",\n  \"users\": [\n    {\n      \"type\": \"user\",\n      \"id\": \"530370b477ad7120001d\",\n       ...\n     },\n     ...\n   ],\n  \"scroll_param\": \"25b649f7-4d33-4ef6-88f5-60e5b8244309\"\n}\n\n# You can use the scroll method to list all your users\nintercom.users.scroll.each { |user| puts user.name}\n# Alternatively you can use the scroll.next method to get 100 users with each request\nresult = intercom.users.scroll.next\nresult.scroll_param\n=> \"0730e341-63ef-44da-ab9c-9113f886326d\"\nresult = intercom.users.scroll.next(\"0730e341-63ef-44da-ab9c-9113f886326d\");\n\nSCROLL PARAMETER\n\nYou can get the first page of users by simply sending a GET request to the scroll endpoint. For subsequent requests you will need to use the scroll parameter from the response.\n\n❗️ Scroll network timeouts\n\nSince scroll is often used on large datasets network errors such as timeouts can be encountered. When this occurs you will need to restart your scroll query as it is not possible to continue from a specific point when using scroll.\n\nWhen this occurs you will see a HTTP 500 error with the following message:\n\"Request failed due to an internal network error. Please restart the scroll operation.\""
  },
  {
    "title": "List by Email",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/users/list-by-email-1/",
    "html": "List by Email\nList Users by Email\n$ curl https://api.intercom.io/users?email=test@test.com \\\n-H 'Authorization: Bearer YOUR_ACCESS_TOKEN' \\\n-H 'Accept: application/json' \\\n-H 'Intercom-Version: 1.1'\n\nHTTP/1.1 200 OK\n\n{\n    \"limited\": false,\n    \"pages\": {\n        \"next\": null,\n        \"page\": 1,\n        \"per_page\": 50,\n        \"total_pages\": 1,\n        \"type\": \"pages\"\n    },\n    \"total_count\": 3,\n    \"type\": \"user.list\",\n    \"users\": [\n        {\n            \"anonymous\": false,\n            \"app_id\": \"fyq3wodw\",\n            \"created_at\": 1506339558,\n            \"custom_attributes\": {},\n            \"do_not_track\": null,\n            \"email\": \"test@test.com\",\n            \"has_hard_bounced\": false,\n            \"id\": \"45c8eae6fac10f5584e7508e\",\n            \"last_request_at\": 1529737920,\n            \"last_seen_ip\": \"78.144.182.179\",\n            ....\n            ....\n        },\n        {\n            \"anonymous\": true,\n            \"app_id\": \"fyq3wodw\",\n            \"created_at\": 1503488750,\n            \"custom_attributes\": {},\n            \"do_not_track\": null,\n            \"email\": \"test@test.com\",\n            \"has_hard_bounced\": false,\n            \"id\": \"5123d6aeeda850883ed8ba7c2\",\n            \"last_request_at\": 1503488749,\n            ....\n            ....\n        },\n        {\n            \"anonymous\": false,\n            \"app_id\": \"fyq3wodw\",\n            \"created_at\": 1494940172,\n            \"custom_attributes\": {},\n            \"do_not_track\": null,\n            \"email\": \"test@test.com\",\n            \"has_hard_bounced\": false,\n            \"id\": \"789afa0cb781d52fd3044ecc\",\n            \"last_request_at\": 1494940211,\n            ....\n            ....\n        }\n    ]\n}\n\n{\n    \"limited\": false,\n    \"pages\": {\n        \"next\": null,\n        \"page\": 1,\n        \"per_page\": 50,\n        \"total_pages\": 0,\n        \"type\": \"pages\"\n    },\n    \"total_count\": 0,\n    \"type\": \"user.list\",\n    \"users\": []\n}\n\n\nYou can list users by email to find all users with the same email address.\n\nRequest Parameters\n\nYou can optionally request the result page size and which page to fetch as follows -\n\nParameter\tRequired\tDescription\npage\tno\twhat page of results to fetch defaults to first page.\nper_page\tno\thow many results per page defaults to 50, max is 60.\nReturns\n\nA pageable list of users and contacts. (This functionality has been changed in version 1.2 to return users only. See Changelog for more detail) The user list contains a pages object that indicates if more users exist via the next field, whose value is a URL that can be used to fetch the next page. If the next field is not present, that indicates there are no further users in the list."
  },
  {
    "title": "List all activity logs",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/admins/view-admin-activity-logs/",
    "html": "List all activity logs\nExample Request & Response\ncurlhtml\ncurl https://api.intercom.io/admins/activity_logs?created_at_after=489222000&created_at_before=685695600 \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json'\n\n\nExample Errors\n\nhttphttp\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\" => \\\"error.list\\\",\\n  \\\"request_id\\\" => nil,\\n  \\\"errors\\\" => [{\\n\\t\\\"code\\\" => \\\"parameter_not_found\\\",\\n\\t\\\"message\\\" => \\\"Please provide the following parameters: created_at_after\\\"\\n  }]\\n}\\n\n\nHTTP/1.1 403 RESTRICTED\\n{\\n  \\\"type\\\" => \\\"error.list\\\",\\n  \\\"request_id\\\" => nil,\\n  \\\"errors\\\" => [{\\n\\t\\\"code\\\" => \\\"api_plan_restricted\\\",\\n\\t\\\"message\\\" => \\\"This feature is not yet available to your app\\\"\\n  }]\\n}\n\n\nYou can get a log of activities by all admins in an app by sending a GET request to the URL https://api.intercom.io/admins/activity_logs.\n\nActivity List\nAttribute\tType\tDescription\ntype\tstring\tValue is activity_log.list\nactivity_logs\tarray\tA list of activity objects\npages\tobject\tOptional. A pagination object which may be empty, indication no further pages to fetch\nActivity Object\nAttribute\tType\tDescription\nactivity_type\tstring\tThe type of activity - see Activity Types & Descriptions below.\nactivity_description\tstring\tA sentence or two describing the activity - see Activity Types & Descriptions below.\nmetadata\tobject\tAn object containing information on the activity and what it modified\ncreated_at\ttimestamp\tThe time the activity was performed\nperformed_by\tobject\tAn Admin object of the admin who performed the activity\nid\tstring\tThe id representing the activity\nActivity Types & Descriptions\nType\tDescription\nadmin_assignment_limit_change\tA teammate changed their assignment limit\nadmin_away_mode_change\tA teammate changed their away mode and conversation reassignment settings\nadmin_deletion\tA teammate was removed from your workspace\nadmin_deprovisioned\tA teammate was deprovisioned from your workspace via SCIM\nadmin_invite_change\tThe permissions for a teammate invite were changed\nadmin_invite_creation\tA teammate invite was created\nadmin_invite_deletion\tA teammate invite was deleted\nadmin_login_failure\tA teammate tried to login with the wrong credentials\nadmin_login_success\tA teammate logged in successfully\nadmin_logout\tA teammate logged out\nadmin_password_reset_request\tA teammate requested a password reset\nadmin_password_reset_success\tA teammate's password was successfully reset\nadmin_permission_change\tThe permissions for a teammate were changed\nadmin_provisioned\tA teammate was provisioned on your workspace via SCIM\napp_admin_join\tA teammate joined your workspace (i.e. accepted your invite)\napp_authentication_method_change\tYour workspace's authentication methods were changed\napp_data_deletion\tA user or lead was deleted from your workspace\napp_data_export\tMessage or conversation data was exported from your workspace\napp_google_sso_domain_change\tYour workspace's Google SSO domain was changed\napp_identity_verification_change\tYour workspace's identity verification setting was changed\napp_name_change\tThe name of your workspace was changed\napp_outbound_address_change\tThe outbound email address was changed for your workspace\napp_package_installation\tAn app package was installed on your workspace\napp_package_token_regeneration\tAn access token for a specific app package was updated\napp_package_uninstallation\tAn app package was uninstalled from your workspace\napp_team_creation\tA team was created\napp_team_deletion\tA team was deleted\napp_team_membership_modification\tA team's membership was modified\napp_timezone_change\tAn app package was installed in your workspace\napp_webhook_creation\tA webhook subscription was created\napp_webhook_deletion\tA webhook subscription was deleted\narticles_in_messenger_enabled_change\tThe Messenger search for articles setting was changed\nbulk_delete\tUser or lead data was deleted from your workspace\nbulk_export\tUser or lead data was exported from your workspace\ncampaign_deletion\tA campaign was deleted from your workspace\ncampaign_state_change\tA campaign was changed on your workspace\nconversation_topic_change\tA conversation topic was changed\nconversation_topic_creation\tA conversation topic was created\nconversation_topic_deletion\tA conversation topic was deleted\nhelp_center_settings_change\tYour Help Center was turned on or off\ninbound_conversations_change\tThe Messenger inbound conversations setting was changed\ninbox_access_change\tThe inbox access setting was changed\nmessage_deletion\tA team was deleted from your workspace\nmessage_state_change\tA message's state was changed\nmessenger_look_and_feel_change\tThe Messenger look and feel setting was changed\nmessenger_search_required_change\tThe Messenger search required setting was changed\noffice_hours_change\tThe office hours setting was changed\nrole_change\tA role was changed\nrole_creation\tA role was created\nrole_deletion\tA role was deleted\nseat_change\tA teammate's seat was changed\nseat_revoke\tA teammate's seat was revoked\nsecurity_settings_change\tYour workspace's security settings were changed\ntemporary_expectation_change\tThe Messenger special notice settings were changed\nupfront_email_collection_change\tThe Messenger upfront email collection settings were changed\nwelcome_message_change\tThe Messenger welcome message settings were changed\nRequest Query Parameters\nParameter\tRequired?\tDescription\ncreated_at_after\tYes\tThe start date that you request data for. It must be formatted as a UNIX timestamp.\ncreated_at_before\tNo\tThe end date that you request data for. It must be formatted as a UNIX timestamp.\nResponse\n\nThis will return an Activity List which will contain an array titled activity_logs, in turn containing multiple Activity Objects."
  },
  {
    "title": "Incrementing User Sessions",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/users/incrementing-user-sessions/",
    "html": "Incrementing User Sessions\n\nTo indicate the update is part of an active session pass new_session: true when you update the user. The API will then follow the rules for web sessions outlined in our session docs to decide whether the session count should be updated for the user."
  },
  {
    "title": "Set away an admin",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/admins/set-admin-away-mode/",
    "html": "Set away an admin\n\nYou can set an Admin as away for the Inbox.\n\nRequest Body Parameters\nAttribute\tType\tDescription\nid\tstring\tThe id of the admin you want to set away mode or re-assign conversations.\naway_mode_enabled\tboolean\tSet to 'true' to change the status of the admin to away.\naway_mode_reassign\tboolean\tSet to 'true' to assign any new conversation replies to your default inbox.\nExample Request & Response\ncurltext\n$ curl https://api.intercom.io/admins/814860/away \\\\\\n-X PUT \\\\\\n-H 'Authorization: Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'  \\\\\\n-H 'Content-Type: application/json' \\\\\\n-d \\t'\\n{\\n  \\\"away_mode_enabled\\\": true,\\n  \\\"away_mode_reassign\\\": false\\n\\n}'\n\nExample Errors\nAdmin without seat\n{\\n    \\\"type\\\": \\\"error.list\\\",\\n    \\\"request_id\\\": \\\"0002miv9og586ig3aln0\\\",\\n    \\\"errors\\\": [\\n        {\\n            \\\"code\\\": \\\"action_forbidden\\\",\\n            \\\"message\\\": \\\"This admin does not have Inbox access permissions\\\"\\n        }\\n    ]\\n}\n\nResponse\n\nThis will return an Admin model of the admin set away."
  },
  {
    "title": "View an Admin",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/admins/view-an-admin/",
    "html": "View an Admin\nRetrieve a single admin\n$ curl https://api.intercom.io/admins/493881 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"type\": \"admin\",\n    \"id\": \"493881\",\n    \"name\": \"Hoban Washburne\",\n    \"email\": \"wash@serenity.io\",\n    \"away_mode_enabled\": false,\n    \"away_mode_reassign\": false,\n    \"team_ids\": [\n        814865\n    ]\n}\n\n<?php\n$admin = $intercom->admins->getAdmin(\"493881\");\n?>\n\n\nEach admin object has its own URL, where the {id} is the value of the admins id field:\n\nhttps://api.intercom.io/admins/{id}"
  },
  {
    "title": "Permanently delete a user",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/users/delete-users/",
    "html": "Permanently delete a user\n\nUser Delete Requests allow you to irrevocably remove data about a User. After creating a User Delete Request, the User's data will be hard-deleted within 90 days. This deletion cannot be cancelled or reversed.\n\nUser Delete Requests can be created via a POST to\nhttps://api.intercom.io/user_delete_requests\nThis endpoint accepts an internal Intercom ID as described below.\n\nAttributes\nParameter\tRequired\tDescription\nintercom_user_id\tYes\tThe internal ID of the User to irrevocably delete\nReturns\n\nThe ID of the User Delete Request, for your reference.\nUser Delete Requests cannot be altered.\n\nHARD DELETE\n\nImportant: If you delete a user/lead by mistake, contact us within 7 days (via the Messenger) and we can retrieve the information. After 7 days this data will be permanently destroyed.\n\nPermanently delete users\ncurlhttp\ncurl https://api.intercom.io/user_delete_requests \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"intercom_user_id\\\": \\\"530370b477ad7120001d\\\"\\n}'\n"
  },
  {
    "title": "List Admins",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/admins/list-admins/",
    "html": "List Admins\nList Admins\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/admins \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\\n{\\n    \\\"type\\\": \\\"admin.list\\\",\\n    \\\"admins\\\": [\\n        {\\n        \\t\\t\\\"type\\\": \\\"admin\\\",\\n            \\\"id\\\": \\\"493881\\\",\\n      \\t\\t\\t\\\"name\\\": \\\"Hoban Washburne\\\",\\n      \\t\\t\\t\\\"email\\\": \\\"wash@serenity.io\\\"\\n            \\\"away_mode_enabled\\\": false,\\n            \\\"away_mode_reassign\\\": false,\\n            \\\"team_ids\\\": [\\n                814865\\n            ]\\n        },\\n        {\\n            \\\"type\\\": \\\"admin\\\",\\n            \\\"email\\\": \\\"mal@serenity.io\\\",\\n            \\\"id\\\": \\\"646303\\\",\\n            \\\"name\\\": \\\"Malcolm Reynolds \\\",\\n            \\\"away_mode_enabled\\\": true,\\n            \\\"away_mode_reassign\\\": false,\\n            \\\"team_ids\\\": [\\n                814865\\n            ]\\n        },\\n        {\\n            \\\"type\\\": \\\"admin\\\",\\n            \\\"email\\\": \\\"jayne@serenity.io\\\",\\n            \\\"id\\\": \\\"1195856\\\",\\n            \\\"name\\\": \\\"Jayne Cobb \\\",\\n            \\\"away_mode_enabled\\\": false,\\n            \\\"away_mode_reassign\\\": false,\\n            \\\"team_ids\\\": [\\n                814865\\n            ]\\n        },\\n        {\\n            \\\"type\\\": \\\"team\\\",\\n            \\\"email\\\": null,\\n            \\\"id\\\": \\\"814865\\\",\\n            \\\"name\\\": \\\"SerenityTeam\\\",\\n            \\\"away_mode_enabled\\\": false,\\n            \\\"away_mode_reassign\\\": false,\\n            \\\"admin_ids\\\": [\\n                493881,\\n                646303,\\n                1195856\\n            ]\\n        }\\n    ]\\n}\n\n\nAn App's admins can be fetched by sending a GET request to https://api.intercom.io/admins/.\n\nAdmin List\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'admin.list'\nadmins\tarray\tA list of admin objects\npages\tobject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch.\nRequest Parameters\n\nNone.\n\nReturns\n\nA list of admin objects for the App."
  },
  {
    "title": "Admins",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/admins/admins/",
    "html": "Admins\n\nAdmins are how you can view your teammates within Intercom.\n\nThe API currently only supports viewing the admins already created. Creating and managing admins must be done through the Intercom App."
  },
  {
    "title": "Create or Update User",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/users/create-or-update-user/",
    "html": "Create or Update User\nCreate or Update Users\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/users \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d '\\n{\\n  \\\"user_id\\\": \\\"25\\\",\\n  \\\"email\\\": \\\"wash@serenity.io\\\",\\n  \\\"name\\\": \\\"Hoban Washburne\\\",\\n  \\\"phone\\\": \\\"555671243\\\",\\n  \\\"signed_up_at\\\": 1392731331,\\n  \\\"custom_attributes\\\": {\\n    \\\"paid_subscriber\\\" : true,\\n    \\\"monthly_spend\\\": 155.5,\\n    \\\"team_mates\\\": 9,\\n    \\\"last_order_at\\\":1475569818\\n  },\\n  \\\"companies\\\": [\\n    {\\n      \\\"company_id\\\" : \\\"366\\\",\\n      \\\"name\\\" : \\\"Serenity\\\",\\n      \\\"monthly_spend\\\" : 500\\n    }\\n  ]\\n}\n\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5714dd359a3fd47136000001\\\",\\n    \\\"user_id\\\": \\\"25\\\",\\n    \\\"anonymous\\\": false,\\n    \\\"email\\\": \\\"wash@serenity.io\\\",\\n    \\\"phone\\\": \\\"555671243\\\",\\n    \\\"name\\\": \\\"Hoban Washburne\\\",\\n    \\\"pseudonym\\\": null,\\n    \\\"avatar\\\": {\\n        \\\"type\\\": \\\"avatar\\\",\\n        \\\"image_url\\\": \\\"https://secure.gravatar.com/avatar/0c3c17fd49f45c43f482730782b36d36?s=24&d=identicon\\\"\\n    },\\n    \\\"app_id\\\": \\\"ja43hiec\\\",\\n    \\\"companies\\\": {\\n        \\\"type\\\": \\\"company.list\\\",\\n        \\\"companies\\\": [\\n            {\\n                \\\"type\\\": \\\"company\\\",\\n                \\\"company_id\\\": \\\"366\\\",\\n                \\\"id\\\": \\\"574854e3ecd0c547ae0000e4\\\",\\n                \\\"name\\\": \\\"Serenity\\\"\\n            }\\n        ]\\n    },\\n    \\\"location_data\\\": {\\n\\t\\t...\\n    },\\n    \\\"last_request_at\\\": null,\\n    \\\"last_seen_ip\\\": null,\\n    \\\"created_at\\\": 1460985141,\\n    \\\"remote_created_at\\\": 1392731331,\\n    \\\"signed_up_at\\\": 1392731331,\\n    \\\"updated_at\\\": 1480075457,\\n    \\\"session_count\\\": 0,\\n    \\\"social_profiles\\\": {\\n        \\\"type\\\": \\\"social_profile.list\\\",\\n        \\\"social_profiles\\\": [\\n            ...\\n        ]\\n    },\\n    \\\"unsubscribed_from_emails\\\": false,\\n    \\\"user_agent_data\\\": null,\\n    \\\"tags\\\": {\\n        \\\"type\\\": \\\"tag.list\\\",\\n        \\\"tags\\\": []\\n    },\\n    \\\"segments\\\": {\\n        \\\"type\\\": \\\"segment.list\\\",\\n        \\\"segments\\\": []\\n    },\\n    \\\"custom_attributes\\\": {\\n        \\\"paid_subscriber\\\": true,\\n        \\\"monthly_spend\\\": 155.5,\\n        \\\"team_mates\\\": 9,\\n        \\\"last_order_at\\\": 1475569818\\n    }\\n}\n\n\nUsers can be created or updated via a POST method to https://api.intercom.io/users, which accepts a JSON object describing the user.\n\nUsers not found via email or user_id will be created, and those that are found will be updated.\n\nNote that the following lookup order applies when updating users - id then user_id then email, and results in the following logic:\n\nid is matched - the user_id and email will be updated if they are sent.\nuser_id match - the email will be updated, the id is not updated.\nemail match where no user_id set on the matching user - the user_id will be set to the value sent in the request, the id is not updated.\nemail match where there is a user_id set on the matching user - a new unique record with new id will be created if a new value for user_id is sent in the request.\n\nNote that email values are downcased after they have been submitted to our API.\n\nAttributes\n\nThe table below shows the fields you can create or update for a user:\n\nParameter\tRequired\tDescription\nuser_id\tRequired if no email is supplied.\tA unique string identifier for the user. It is required on creation if an email is not supplied.\nemail\tRequired if no user_id is supplied.\tThe user's email address. It is required on creation if a user_id is not supplied.\nphone\tno\tThe user's phone number.\nid\tno\tThe id may be used for user updates.\nsigned_up_at\tno\tThe time the user signed up\nname\tno\tThe user's full name\ncustom_attributes\tno\tA hash of key/value pairs containing any other data about the user you want Intercom to store.\ncompanies\tno\tIdentifies the companies this user belongs to.\nlast_request_at\tno\tA UNIX timestamp (in seconds) representing the date the user last visited your application.\nunsubscribed_from_emails\tno\tA boolean value representing the users unsubscribed status. default value if not sent is false.\nupdate_last_request_at\tno\tA boolean value, which if true, instructs Intercom to update the users' last_request_at value to the current API service time in UTC. default value if not sent is false.\nnew_session\tno\tA boolean value, which if true, instructs Intercom to register the request as a session.\n\nIn particular, please note that location data and social profiles are computed by the server and can not be updated via the API.\n\nCustom Attributes\n\nThe custom_attributes object allows you to send any information you wish about a user with the following restrictions\n\nField names must not contain Periods ('.') or Dollar ('$') characters:\n\nField names must be no longer than 190 characters.\nField values must be JSON Strings, Numbers or Booleans - Objects and Arrays will be rejected.\nString field values must be no longer than 255 characters.\nMaximum of 250 fields.\nCUSTOM ATTRIBUTE AS DATE\n\nYou can send dates as custom attributes by sending a unix timestamp. If the name of your custom attribute ends with _at then we'll automatically treat it as a date, rather than a number. See here for more info\n\nReturns\n\nA created or updated user object.\n\nNew user objects will be provided with an id field - this value cannot be created or edited by clients. Social profiles, location data and avatars are processed asynchronously, and may require a subsequent call to fetch their details."
  },
  {
    "title": "Companies and Users",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/users/companies-and-users/",
    "html": "Companies and Users\nAssociate a Company with a User\n$ curl https://api.intercom.io/users \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"id\": \"531ee472cce572a6ec000005\",\n  \"companies\": [\n    {\n    \"company_id\" : \"366\",\n    \"name\" : \"Serenity\"\n    }\n  ]\n}\n\nintercom.users.create(user_id: 111, companies: [{company_id: 10}])\n\n<?php\n$intercom->users->create([\n    \"user_id\" => \"111\",\n    \"companies\" => [\n        [\n            \"company_id\" => \"10\"\n        ]\n    ]\n]);\n?>\n\nUser user = User.find(\"541a144b201ebf2ec5000001\");\nuser.addCompany(company);\nUser.update(user);\n\nRemove a User from a Company\n$ curl https://api.intercom.io/users \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"id\": \"531ee472cce572a6ec000005\",\n  \"companies\": [\n    {\n      \"company_id\" : \"3\",\n     \"remove\" : true\n    }\n  ]\n}\n\nuser.companies = [{ :company_id => \"1234\", :remove => true}]\n\n<?php\n$intercom->users->create([\n    \"email\" => \"plato@phil.com\",\n    \"companies\" => [\n        [\n            \"company_id\" => \"9\",\n            \"remove\" => true\n        ]\n    ]\n]);\n?>\n\nCOMPANIES FIELD IS AN ARRAY\n\nNote that when associating a company with a user, the companies field used is an array, not an object (as is the case when the user is being fetched)\n\nCREATE OR UPDATE COMPANIES?\n\nUsers may be created or updated with a company object. If the company object does not already exist, it will be created for you. This saves having to create a company or check it exists before creating or updating a user.\n\nTo remove a company from a user add the field remove with a value of true to the embedded company object and submit the user as a update request. You must also submit the id of the company.\n\nNote: the \"id\" to be used for the \"companies\" object is the company\\_id."
  },
  {
    "title": "Archive a user",
    "url": "https://developers.intercom.com/docs/references/1.1/rest-api/users/archive-a-user/",
    "html": "Archive a user\nPERMANENTLY DELETE A USER\n\nThe archive action will not perform a 'hard' delete. If you want to permanently delete your user then you will need to use the Permanently delete a user endpoint.\n\nExample ID Archive Request\ncurlcurlrubyphpjava\n$ curl \\\\\\n-s https://api.intercom.io/users/5321a20f72cdbb4192000013 \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\\n\\n{\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"5714dd359a3fd47136000001\\\",\\n    \\\"user_id\\\": \\\"25\\\",\\n    \\\"anonymous\\\": false,\\n    \\\"email\\\": \\\"wash@serenity.io\\\",\\n    \\\"phone\\\": \\\"555671243\\\",\\n    \\\"name\\\": \\\"Hoban Washburne\\\",\\n    \\\"pseudonym\\\": null,\\n  ...\\n}\\n# NB: Full User objects are returned\n\nExample User ID Archive Request\n$ curl \\\n-s https://api.intercom.io/users?user_id=25 \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"type\": \"user\",\n    \"id\": \"5714dd359a3fd47136000001\",\n    \"user_id\": \"25\",\n    \"anonymous\": false,\n    \"email\": \"wash@serenity.io\",\n    \"phone\": \"555671243\",\n    \"name\": \"Hoban Washburne\",\n    \"pseudonym\": null,\n  ...\n}\n# NB: Full User objects are returned\n\nuser = intercom.users.find(:user_id => \"1\")\nintercom.users.delete(user)\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"user_id\", \"1\");\nuser = User.find(params);\nUser.delete(user.getId());\n\n<?php\n$intercom->users->deleteUser(\"\", [\"user_id\" => \"5087\"]);\n?>\n\nExample User Email Archive Request\n$ curl \\\n-s https://api.intercom.io/users?email=wash%40serenity.io \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"type\": \"user\",\n    \"id\": \"5714dd359a3fd47136000001\",\n    \"user_id\": \"25\",\n    \"anonymous\": false,\n    \"email\": \"wash@serenity.io\",\n    \"phone\": \"555671243\",\n    \"name\": \"Hoban Washburne\",\n    \"pseudonym\": null,\n  ...\n}\n# NB: Full User objects are returned\n\nuser = intercom.users.find(:email => \"foo@bar.com\")\nintercom.users.delete(user)\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"email\", \"malcolm@serenity.io\");\nuser = User.find(params);\nUser.delete(user.getId());\n\n<?php\n$intercom->users->deleteUser(\"\", [\"email\" => \"test@example.com\"]);\n?>\n\n\nA user can be archived by sending a DELETE request to its URL using the user's id field as part of the path -\n\nhttps://api.intercom.io/users/{id}\n\nAlternatively, you can archive a user by sending a DELETE request using the email or user_id as query parameters -\n\nhttps://api.intercom.io/users?email={email}\nhttps://api.intercom.io/users?user_id={user_id}\nRequest Parameters\nParameter\tRequired\tDescription\nemail\tno\tThe email you have defined for the user\nuser_id\tno\tThe user id you have defined for the user\n\nPlease note that when a user is archived, all of their conversations and message history will also be archived.\n\nReturns\n\nA User object."
  },
  {
    "title": "Snooze a conversation",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/conversations/snooze-a-conversation/",
    "html": "Snooze a conversation\nExample Request & Response\ncurltext\n$ curl 'https://api.intercom.io/conversations/<id>/reply' \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d\\n\\n{\\n  \\\"message_type\\\":\\\"snoozed\\\",\\n  \\\"admin_id\\\": \\\"724860\\\",\\n  \\\"snoozed_until\\\":\\\"1501512795\\\"\\n}\n\n\nYou can snooze a conversation to reopen on a future date.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Body Parameters\n\nTo snooze a conversation:\n\nParameter\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tAlways snoozed.\nadmin_id\tString\tYes\tThe id of the admin which is performing the action.\nsnoozed_until\tUNIX Timestamp\tYes\tThe time you want the conversation to reopen.\nResponse\n\nThis will return the Conversation which was snoozed."
  },
  {
    "title": "Retrieve a conversation",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/conversations/retrieve-a-conversation/",
    "html": "Retrieve a conversation\nExample Request & Response\n$ curl https://api.intercom.io/conversations/<id> \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"1911149811\",\n    \"created_at\": 1539897198,\n    \"updated_at\": 1540393270,\n    \"source\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"contacts\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"teammates\": [\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    ],\n    \"assignee\": {\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    },\n    \"open\": true,\n    \"state\": \"open\",\n    \"read\": true,\n    \"waiting_since\": 64654125776\n    \"snoozed_until\": null,\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\",\n    },\n    \"first_contact_reply\": {\n    \t\"created_at\": 1539897198\n    \t\"type\": \"conversation\",\n    \t\"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"priority\": \"not_priority\",\n    \"sla_applied\": {\n    \t\"sla_name\": \"VIP customer <5m\",\n      \"sla_status\": \"missed\",\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"contact\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null,\n            \"name\": null,\n            \"email\": null\n        }\n    },\n    \"statistics\": {\n      \"time_to_assignment\": 2310,\n      \"time_to_admin_reply\": 2408,\n      \"time_to_first_close\": 4915 ,\n      \"time_to_last_close\": 5125,\n      \"median_time_to_reply\": 321,\n      \"first_contacat_reply_at\": 1539897200,\n      \"first_assignment_at\": 1539897200,\n      \"first_admin_reply_at\": 1539897200,\n      \"first_close_at\": 1539897200,\n      \"last_assignment_at\": 1539897200,\n      \"last_assignment_admin_reply_at\": 1539897200,\n      \"last_contact_reply_at\": 1539897200,\n      \"last_admin_reply_at\": 1539897200,\n      \"last_close_at\": 1539897200,\n      \"last_closed_by\": {\n      \t\"type\": \"admin\",\n        \"id\": \"325432652\",\n        \"name\": \"Tom Smith\",\n        \"email\": \"tom@example.com\"\n      },\n      \"count_reopens\": 3,\n      \"count_assignments\": 2,\n      \"count_conversation_parts\": 67\n    },\n    \"conversation_parts\": {\n        \"conversation_parts\": [\n            {\n                \"assigned_to\": null,\n                \"attachments\": [],\n                \"author\": {\n                    \"id\": \"815309\",\n                    \"type\": \"bot\"\n                },\n                \"body\": \"<p>Test_App typically replies in a few hours.</p>\",\n                \"created_at\": 1539897200,\n                \"external_id\": null,\n                \"id\": \"2202737122\",\n                \"notified_at\": 1539897200,\n                \"part_type\": \"comment\",\n                \"type\": \"conversation_part\",\n                \"updated_at\": 1539897200\n            },\n          #List of conversation parts...\n        ],\n        \"total_count\": 67,\n        \"type\": \"conversation_part.list\"\n    }    \n}\n\nintercom.conversations.find(:id => '147')\n\n<?php\n$intercom->conversations->getConversation(\"10957850396\");\n?>\n\nConversation conversation = Conversation.find(\"147\");\n\nConversationMessage message =\n  conversation.getConversationMessage();\n\nConversationPartCollection parts =\n  conversation.getConversationPartCollection();\n\nList<ConversationPart> list = parts.getPageItems();\n\nfor (ConversationPart part : list) {\n  String partType = part.getPartType();\n  Author author = part.getAuthor();\n  String body = part.getBody();\n}\n\nConversationPart recent =\n  conversation.getMostRecentConversationPart();\n\nAdmin assignee =\n  conversation.getAssignee();\n\nUser user =\n  conversation.getUser();\n\n\nYou can fetch the details of a single conversation.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Query Parameters\nParameter\tType\tRequired?\tDescription\ndisplay_as\tString\tNo\tSet to plaintext to retrieve conversation messages in plain text.\nResponse\n\nThis will return a single Conversation model with all its conversation parts.\n\nHARD LIMIT OF 500 PARTS\n\nThe maximum number of conversation parts that can be returned via the API is 500. If you have more than that we will return the 500 most recent conversation parts."
  },
  {
    "title": "Reply to a conversation",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/conversations/reply-to-a-conversation/",
    "html": "Reply to a conversation\nExample Request & Response (Contact Reply)\n$ curl 'https://api.intercom.io/conversations/{id/last}/reply' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d \n\n{\n  \"message_type\": \"comment\",\n  \"type\": \"user\",\n  \"intercom_user_id\": \"536e564f316c83104c000020\",\n  \"body\": \"Thanks again :)\"\n}\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"1911149811\",\n    \"created_at\": 1539897198,\n    \"updated_at\": 1540393270,\n    \"source\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"contacts\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"teammates\": [\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    ],\n    \"assignee\": {\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    },\n    \"open\": true,\n    \"state\": \"open\",\n    \"read\": true,\n    \"waiting_since\": 64654125776\n    \"snoozed_until\": null,\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\",\n    },\n    \"first_contact_reply\": {\n    \t\"created_at\": 1539897198\n    \t\"type\": \"conversation\",\n    \t\"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"priority\": \"not_priority\",\n    \"sla_applied\": {\n    \t\"sla_name\": \"VIP customer <5m\",\n      \"sla_status\": \"missed\",\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"contact\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null,\n            \"name\": null,\n            \"email\": null\n        }\n    },\n    \"statistics\": {\n      \"time_to_assignment\": 2310,\n      \"time_to_admin_reply\": 2408,\n      \"time_to_first_close\": 4915 ,\n      \"time_to_last_close\": 5125,\n      \"median_time_to_reply\": 321,\n      \"first_contacat_reply_at\": 1539897200,\n      \"first_assignment_at\": 1539897200,\n      \"first_admin_reply_at\": 1539897200,\n      \"first_close_at\": 1539897200,\n      \"last_assignment_at\": 1539897200,\n      \"last_assignment_admin_reply_at\": 1539897200,\n      \"last_contact_reply_at\": 1539897200,\n      \"last_admin_reply_at\": 1539897200,\n      \"last_close_at\": 1539897200,\n      \"last_closed_by\": {\n      \t\"type\": \"admin\",\n        \"id\": \"325432652\",\n        \"name\": \"Tom Smith\",\n        \"email\": \"tom@example.com\"\n      },\n      \"count_reopens\": 3,\n      \"count_assignments\": 2,\n      \"count_conversation_parts\": 67\n    },  \n}\n\n#Reply without attachment\nintercom.conversations.reply(:id => conversation.id, :type => 'user', \n  :email => 'bob@example.com', :message_type => 'comment', :body => 'foo')\n\n#Reply with attachment\nintercom.conversations.reply(:id => conversation.id, :type => 'user', \n  :email => 'bob@example.com', :message_type => 'comment', \n  :body => 'foo', :attachment_urls => [\"http://www.example.com/attachment.jpg\"])\n\n<?php\n//Reply without attachment\n$intercom->conversations->replyToConversation(\"10957850396\", [\n    \"intercom_user_id\" => \"5977303470ab497b1babb9ef\",\n    \"body\" => \"Thinking: the talking of the soul with itself\",\n    \"type\" => \"user\",\n    \"message_type\" => \"comment\"\n]);\n\n\n//Reply with attachment\n$intercom->conversations->replyToConversation(\"10957850396\", [\n  \"intercom_user_id\" => \"5977303470ab497b1babb9ef\",\n  \"body\" => \"Thinking: the talking of the soul with itself\",\n  \"type\" => \"user\",\n  \"message_type\" => \"comment\",\n  \"attachment_urls\" => [\"http://www.example.com/attachment.jpg\"]\n]);\n?>\n\nUser user = new User().setId(\"5310d8e8598c9a0b24000005\");\nUserReply userReply = new UserReply(user);\nuserReply.setBody(\"Mighty fine shindig\");\n\nConversation.reply(\"66\", userReply);\n\nAdmin admin = new Admin().setId(\"1\");\nAdminReply adminReply = new AdminReply(admin);\nadminReply.setBody(\"These apples are healthsome\");\n\nConversation.reply(\"66\", adminReply);\n\nExample Request & Response (Admin Reply - Note)\ncurltext\n$ curl 'https://api.intercom.io/conversations/{id/last}/reply' \\\\-X POST \\\\-H 'Authorization: Bearer <Your access token>' \\\\-H 'Accept: application/json' \\\\-H 'Content-Type: application/json' -d{  \\\"message_type\\\": \\\"note\\\",  \\\"type\\\": \\\"admin\\\",  \\\"intercom_user_id\\\": \\\"536e564f316c83104c000020\\\",  \\\"admin_id\\\": \\\"814860\\\",  \\\"body\\\": \\\"<html> <body>  <h2>An Unordered HTML List</h2>  <ul>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ul>    <h2>An Ordered HTML List</h2>  <ol>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ol>   </body> </html>\\\",}\n\n\nYou can reply to a conversation with a message from an admin or on behalf of a contact, or with a note for admins.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes, if not last\tThe identifier for the conversation as given by Intercom.\nlast\tString\tYes, if no id\tYou can also reply to the most recent conversation for a user by specifying last as the string.\nRequest Body Parameters\n\nFor a reply sent on behalf a contact:\n\nParameter\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tAlways comment.\ntype\tString\tYes\tAlways user.\nbody\tString\tYes\tThe text body of the comment.\nintercom_user_id\tString\tYes, if no user_id or email\tThe identifier for the contact as given by Intercom.\nuser_id\tString\tYes, if no intercom_user_id or email\tThe external_id you have defined for the contact.\nemail\tString\tYes, if no intercom_user_id or user_id\tThe email you have defined for the user.\nattachment_urls\tArray of Strings\tNo\tA list of image URLs that will be added as attachments. You can include up to 5 URLs.\n\nFor a reply sent on behalf of an admin:\n\nArgument\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tAccepts comment or note.\ntype\tString\tYes\tAlways admin.\nadmin_id\tString\tYes\tThe id of the admin who is authoring the comment.\nbody\tString\tYes\tThe text body of the reply. Notes accept some HTML formatting.\nintercom_user_id\tString\tYes, if using the last request path and no user_id or email\tThe identifier for the contact as given by Intercom.\nuser_id\tString\tYes, if using the last request path and no intercom_user_id or email\tThe external_id you have defined for the contact.\nemail\tString\tYes, if using the last request path and no intercom_user_id or user_id\tThe email you have defined for the user.\nattachment_urls\tArray of Strings\tNo\tA list of URLs of files that will be added as attachments. You can include up to 5 attachments.\nResponse\n\nThis will return the Conversation which was replied to."
  },
  {
    "title": "List all conversations",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/conversations/list-conversations/",
    "html": "List all conversations\nExample Request & Response\n$ curl \\\"https://api.intercom.io/conversations?order=desc&sort=updated_at\" \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"conversation.list\",\n  \"conversations\": [\n    {\n    \"type\": \"conversation\",\n    \"id\": \"1911149811\",\n    \"created_at\": 1539897198,\n    \"updated_at\": 1540393270,\n    \"source\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"contacts\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"teammates\": [\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    ],\n    \"assignee\": {\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    },\n    \"open\": true,\n    \"state\": \"open\",\n    \"read\": true,\n    \"waiting_since\": 64654125776\n    \"snoozed_until\": null,\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\",\n    },\n    \"first_contact_reply\": {\n    \t\"created_at\": 1539897198\n    \t\"type\": \"conversation\",\n    \t\"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"priority\": \"not_priority\",\n    \"sla_applied\": {\n    \t\"sla_name\": \"VIP customer <5m\",\n      \"sla_status\": \"missed\",\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"contact\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null,\n            \"name\": null,\n            \"email\": null\n        }\n    },\n    \"statistics\": {\n      \"time_to_assignment\": 2310,\n      \"time_to_admin_reply\": 2408,\n      \"time_to_first_close\": 4915 ,\n      \"time_to_last_close\": 5125,\n      \"median_time_to_reply\": 321,\n      \"first_contacat_reply_at\": 1539897200,\n      \"first_assignment_at\": 1539897200,\n      \"first_admin_reply_at\": 1539897200,\n      \"first_close_at\": 1539897200,\n      \"last_assignment_at\": 1539897200,\n      \"last_assignment_admin_reply_at\": 1539897200,\n      \"last_contact_reply_at\": 1539897200,\n      \"last_admin_reply_at\": 1539897200,\n      \"last_close_at\": 1539897200,\n      \"last_closed_by\": {\n      \t\"type\": \"admin\",\n        \"id\": \"325432652\",\n        \"name\": \"Tom Smith\",\n        \"email\": \"tom@example.com\"\n      },\n      \"count_reopens\": 3,\n      \"count_assignments\": 2,\n      \"count_conversation_parts\": 67\n    }, \n    \n    # list of conversaionts\n\n  ],\n  \"pages\": {\n    \"next\": \"https://api.intercom.io/conversations?per_page=20&page=2\",\n    \"page\": 1,\n    \"per_page\": 20,\n    \"total_pages\": 77,\n    \"type\": \"pages\"\n  }\n}\n\nintercom.conversations.find_all(:type => 'admin', :id => 25, :open => true)\n\n<?php\n$intercom->conversations->getConversations([\n    \"type\" => \"admin\",\n    \"admin_id\" => \"891290\",\n    \"open\" => false\n]);\n?>\n\nMap<String, String> params = Maps.newHashMap();\nparams.put(\"type\", \"admin\");\nparams.put(\"admin_id\", \"1\");\nConversationCollection conversations = Conversation.list(params);\nwhile (conversations.hasNext()) {\n  Conversation conversation = conversations.next();\n}\n\n\nYou can fetch a list of all conversations.\n\nRequest Query Parameters\nParameter\tType\tRequired?\tDescription\norder\tString\tNo\tReturn the conversations in ascending (asc) or descending (desc) order. Defaults to desc. If you provide an invalid value, we default to asc.\nsort\tString\tNo\tReturn the conversation sorted by their created_at, updated_at, or waiting_since timestamp values. Defaults to updated_at.\nCONVERSATIONS NOT SHOWING WITH WAITING_SINCE SORTING\n\nIf a teammate was the last person to reply, or the conversation is closed, then those conversations will not show up on this list. This is to ensure you have an easy way of identifying and prioritizing those customers who have been waiting longest.\n\nResponse\n\nA paginated list of Conversations is returned, without the conversation_parts object.\n\nRETRIEVING CONVERSATION PARTS\n\nYou must retrieve a single conversation using the conversation's id to return a conversation with the conversation_part array and objects included."
  },
  {
    "title": "Detach a contact from a group conversation",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/conversations/deleting-from-group-conversations/",
    "html": "Detach a contact from a group conversation\nExample Request & Response\ncurlhttp\n$ curl 'https://api.intercom.io/conversations/<conversation_id>/customers/<contact_id>' \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d\\n\\n{\\n  \\\"admin_id\\\": \\\"781345\\\"\\n}\n\n\nRemoves a Contact from a group conversation.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nconversation_id\tString\tYes\tThe identifier for the conversation as given by Intercom.\ncontact_id\tString\tYes\tThe identifier for the contact as given by Intercom.\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\nadmin_id\tString\tYes\tThe id of the admin who is performing the action.\nResponse\n\nThis will return the Contact who was detached from the conversation."
  },
  {
    "title": "Create a conversation",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/conversations/create-a-conversation/",
    "html": "Create a conversation\nExample Request & Response\n$ curl https://api.intercom.io/conversations \\\n-XPOST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d\n\n{\n  \"from\": {\n    \"type\": \"contact\",\n    \"id\": \"536e564f316c83104c000020\"\n  },\n  \"body\": \"Hey\"\n}\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"user_message\",\n  \"id\": \"2001\",\n  \"created_at\": 1401917202,\n  \"body\" : \"Hey, is the new thing in stock?\",\n  \"message_type\": \"inapp\"\n}\n\nintercom.messages.create(\n  :from => {\n    :type => \"user\",\n    :id => \"536e564f316c83104c000020\"\n  },\n  :body => \"Hey\"\n)\n\n<?php\n$intercom->messages->create([\n    \"message_type\" => \"inapp\",\n    \"body\" => \"Surely, I said, knowledge is the food of the soul\",\n    \"from\" => [\n        \"type\" => \"user\",\n        \"id\" => \"5989303470da497b1babb9ef\"\n    ]\n]);\n?>\n\nUserMessage userMessage = new UserMessage()\n  .setBody(\"Hey! Is there, is there a reward?\")\n  .setUser(user);\nConversation.create(userMessage);\n\n\nYou can create a conversation that has been initiated by a contact (ie. user or lead). The conversation can be an in-app message only.\n\nSENDING FOR VISITORS\n\nYou can also send a message from a visitor by specifying their user_id or id value in the from field, along with a type field value of contact. This visitor will be automatically converted to a contact with a lead role once the conversation is created.\n\nRequest Body Parameters\nParameter\tType\tRequired?\tDescription\nfrom\tObject\tYes\tSee From Object below for more.\nbody\tString\tYes\tThe content of the message. HTML is not supported.\nFrom Object\nAttribute\tType\tRequired?\tDescription\ntype\tString\tYes\tYou can pass in contact for both users and leads.\nid\tString\tYes\tThe identifier for the contact which is given by Intercom.\nResponse\n\nThis will return the Message model that has been created."
  },
  {
    "title": "Close a conversation",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/conversations/close-a-conversation/",
    "html": "Close a conversation\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/conversations/<id>/parts\\n-X POST\\n-H 'Authorization:Bearer <Your access token>'\\n-H 'Accept:application/json'\\n-H 'Content-Type:application/json' -d\\n\\n{ \\n  \\\"message_type\\\": \\\"close\\\",\\n  \\\"type\\\": \\\"admin\\\",\\n  \\\"admin_id\\\": 5784329,\\n  \\\"body\\\": \\\"Closed conversation because of X.\\\"\\n}\n\n\nYou can close a conversation.\n\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Body Parameters\nParameter\tType\tRequired?\tDescripton\nmessage_type\tString\tYes\tAlways close.\ntype\tString\tYes\tAlways admin.\nadmin_id\tString\tYes\tThe id of the admin who is performing the action.\nbody\tString\tNo\tOptionally you can leave a message in the conversation to provide additional context to the user and other teammates.\nResponse\n\nThis will return the Conversation that has been closed."
  },
  {
    "title": "Assign a conversation",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/conversations/assign-a-conversation/",
    "html": "Assign a conversation\nExample Request & Response (Assigning to Admin)\ncurlhttp\n$ curl https://api.intercom.io/conversations/{id}/parts \\\\-X POST \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json' \\\\-H 'Content-Type:application/json' -d{  \\\"type\\\": \\\"admin\\\",  \\\"admin_id\\\": \\\"814860\\\",  \\\"assignee_id\\\": \\\"530165\\\",  \\\"message_type\\\": \\\"assignment\\\",  \\\"body\\\": \\\"Reassigning for X reason.\\\",}\n\nExample Request & Response (Auto Assignment)\ncurlhttp\n$ curl 'https://api.intercom.io/conversations/{id}/run_assignment_rules'-X POST -H 'Authorization: Bearer <Your access token>' -H 'Accept: application/json' -H 'Content-Type: application/json'\n\n\nYou can assign a conversation to an admin or team. You can also let it be automatically assigned following assignment rules.\n\nRequest Path Parameters\nParameter\tRequired?\tDescription\nid\tYes\tThe identifier for the conversation as given by Intercom.\nrun_assignment_rules\tNo\tRuns through all assignment rules created in the Intercom Inbox product for a given workspace.\nRequest Body Parameters\n\nNo body parameters are required when auto assigning conversations using the {id}/run_assignment_rules path parameter.\n\nArgument\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tAlways assignment.\ntype\tString\tYes\tAccepts admin or team.\nadmin_id\tString\tYes\tThe id of the admin who is performing the action.\nassignee_id\tString\tYes\tThe id of the admin or team which will be assigned the conversation. Set to 0 if you want to assign it to no-one (ie. Unassigned).\nbody\tString\tNo\tOptionally you can leave a note in the conversation for additional context to other teammates.\nResponse\n\nThis will return the Conversation that has been assigned."
  },
  {
    "title": "The data event model",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/data-events/event-model/",
    "html": "The data event model\nEvent Object\n{\n  \"event_name\" : \"invited-friend\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"342311\"\n}\n\n// Sufficient to send just the event name\nIntercom('trackEvent', 'invited-friend');\n\n# create an event as a hash\nevent = {\n  :event_name => \"invited-friend\",\n  :email => current_user.email,\n  :created_at => 1391691571\n}\nintercom.events.create event\n\n<?php\n$event = array(\n  \"event_name\" => \"invited-friend\",\n  \"created_at\" => 1391691571,\n  \"user_id\" => \"314159\"\n);\n$intercom->events->create($event);\n?>\n\nEvent event = new Event()\n  .setEventName(\"invited-friend\")\n  .setUserID(\"1314159\");\n  .setCreatedAt(currentTimeMillis()/1000L);\n\nEvent.create(event);\n\n\nEvents are how you can submit user activity to Intercom. Once you're sending Intercom event data, you can filter your user base with those events and create Auto Messages to send whenever an event occurs. Every event is associated with an event name, the time it happened, the user that caused the event, and optionally some extra metadata. Events record the count, first and last occurrence of an event.\n\nEvents are different to Custom Attributes in that events are information on what Users did and when they did it, whereas Custom Attributes represent the User's current state as seen in their profile. For example, the first time they subscribed to a paid plan, or the most recent time they changed their plan would be represented by events, whereas a User Attribute would be used to record their current plan.\n\nBecause Events are used for filtering and messaging, and event names are used directly in Intercom by your App's Admins we recommend sending high-level activity about your users that you would like to message on, rather than raw clickstream or user interface actions. For example an order action is a good candidate for an Event, versus all the clicks and actions that were taken to get to that point. We also recommend sending event names that combine a past tense verb and nouns, such as 'created-project'.\n\nThe Events API varies slightly from the rest of the APIs as follows -\n\nYou can submit events using JavaScript using the trackEvent method.\nWhen there's an error or errors, a list structure is returned instead of a single error.\nEvent Object\nAttribute\tRequired\tDescription\nevent_name\tyes\tThe name of the event that occurred. This is presented to your App's admins when filtering and creating segments - a good event name is typically a past tense 'verb-noun' combination, to improve readability, for example updated-plan.\ncreated_at\tyes\tThe time the event occurred as a UTC Unix timestamp\nuser_id\tyes if no email\tYour identifier for the user.\nid\tyes if no email or user_id.\tYour identifier for a lead or a user.\nemail\tyes if no user_id\tAn email address for your user. An email should only be used where your application uses email to uniquely identify users\nmetadata\tno\toptional metadata about the event.\n\nThe event_name field is processed as follows -\n\nNames are treated as case insensitive - 'Completed-Order' and 'completed-order' will be considered the same event for your application.\nPeriods (.) and dollars ($) in event names are replaced with hyphens. e.g., 'completed.order' will be stored as 'completed-order'.\n\nTo avoid confusion we recommend submitting lower case event names that do not contain periods or dollars!\n\nMetadata Object\n\nSending an event with metadata\n\n$ curl https://api.intercom.io/events \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Content-Type: application/json\" -d'\n{\n  \"event_name\" : \"invited-friend\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"314159\",\n  \"metadata\": {\n     \"invitee_email\": \"pi@example.org\",\n     \"invite_code\": \"ADDAFRIEND\"\n  }\n}'\n\nvar metadata = {\n  invitee_email: 'pi@example.org',\n  invite_code: 'ADDAFRIEND'\n};\nIntercom('trackEvent', 'invited-friend', metadata);\n\nmetadata = {\n  :invitee_email => 'pi@example.org',\n  :invite_code => 'ADDAFRIEND'\n}\nintercom.events.create {\n  :event_name => \"invited-friend\",\n  :email => current_user.email,\n  :created_at => 1391691571,\n  :metadata => metadata\n}\n\n<?php\n$metadata = array(\n  \"invitee_email\" => \"pi@example.org\",\n  \"invite_code\" => \"ADDAFRIEND\"\n);\n$intercom->events->create(array(\n  \"event_name\" => \"invited-friend\",\n  \"created_at\" => 1391691571,\n  \"user_id\" => \"314159\",\n  \"metadata\" => $metadata\n));\n?>\n\nEvent event = new Event()\n  .setEventName(\"invited-friend\")\n  .setUserID(\"314159\")\n  .putMetadata(\"invite_mail\", \"pi@example.org\")\n  .putMetadata(\"invite_code\", \"ADDAFRIEND\")\n  .putMetadata(\"found_date\", currentTimeMillis()/1000L);\n\nEvent.create(event);\n\n\nMetadata can be used to submit an event with extra key value data. Each event can contain up to ten metadata key values.\n\nSome use cases for event metadata are -\n\nLinking an event back to a page in your website.\nDescribing before and after values for a subscription plan change.\nSending contextual information about an online order, a booking.\n\nYou can now trigger messages to your users based on event and event metadata and also include the metadata in the messages. For more information on how this works, learn more about event based messaging\n\nSee the section 'Metadata Types' for more information on the kinds of metadata you can send."
  },
  {
    "title": "User Segment/Tag Count Model",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/counts/user-tag-counts/",
    "html": "User Segment/Tag Count Model\n\nThe count of tags and segments includes archived tags and segments.\n\nUser Segment/Tag Count Object\n\nCount Object includes count for users and leads.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nuser\tobject\tContains a field called segment containing segment counts\nuser.segment\tarray\tContains a list of segment counts\nuser.tag\tarray\tContains a list of tag counts\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"tag\": [\n        {\n          \"Independent\": 3\n        }\n    ]\n  }\n}\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"segment\": [\n      {\n        \"Active\": 1\n      },\n      {\n        \"New\": 0\n      },\n      {\n        \"VIP\": 0\n      },\n      {\n        \"Slipping Away\": 0\n      },\n      {\n        \"segment 1\": 1\n      }\n    ]\n  }\n}\n\n# User Tag Count\n$ curl 'https://api.intercom.io/counts?type=user&count=tag' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# User Segment Count\n$ curl 'https://api.intercom.io/counts?type=user&count=segment' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# User Tag Count\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"tag\": [\n        {\n          \"Independent\": 3\n        }\n    ]\n  }\n}\n\n# User Segment Count\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"segment\": [\n      {\n        \"Active\": 1\n      },\n      {\n        \"New\": 0\n      },\n      {\n        \"VIP\": 0\n      },\n      {\n        \"Slipping Away\": 0\n      },\n      {\n        \"segment 1\": 1\n      }\n    ]\n  }\n}\n\nintercom.counts.for_type(type: 'user', count: 'tag')\nintercom.counts.for_type(type: 'user', count: 'segment')\n\n<?php\n// User Tag Count\n$counts = $intercom->counts->getCounts([\"type\" => \"user\", \"count\" => \"tag\"]);\nprint_r($counts);\n\n// Company Segment Count\n$counts = $intercom->counts->getCounts([\"type\" => \"user\", \"count\" => \"segment\"]);\n?>\n\n// User Tag Count\nfinal List<Counts.CountItem> tags = Counts.userTags();\nfor (Counts.CountItem tag : tags) {\n  out.println(tag.getName() + \": \" + tag.getValue());\n}\n\n// User Segment Count\nfinal List<Counts.CountItem> segments = Counts.userSegments();\nfor (Counts.CountItem seg : segments) {\n  out.println(seg.getName() + \": \" + seg.getValue());\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nUser Segment Count\tuser\tsegment\nUser Tag Count\tuser\ttag"
  },
  {
    "title": "List all data attributes",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/data-attributes/list-data-attributes/",
    "html": "List all data attributes\nExample Request & Response\ncurlcurl\n$ curl https://api.intercom.io/data_attributes?model=contact-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json'\n\n{  \\\"type\\\": \\\"list\\\",  \\\"data\\\": [    {      \\\"type\\\": \\\"data_attribute\\\",      \\\"model\\\": \\\"customer\\\",      \\\"name\\\": \\\"paid_subscriber\\\",      \\\"full_name\\\": \\\"custom_attributes.paid_subscriber\\\",      \\\"label\\\": \\\"paid_subscriber\\\",      \\\"description\\\": \\\"\\\",      \\\"data_type\\\": \\\"string\\\",      \\\"options\\\": [        \\\"pick_value_1\\\",        \\\"pick_value_2\\\"      ],      \\\"api_writable\\\": true,      \\\"ui_writable\\\": true,      \\\"custom\\\": true,      \\\"archived\\\": false,      \\\"admin_id\\\": \\\"1\\\",      \\\"created_at\\\": 1392734388,      \\\"updated_at\\\": 1392734388    },    {      \\\"type\\\": \\\"data_attribute\\\",      \\\"model\\\": \\\"customer\\\",      \\\"name\\\": \\\"region_name\\\",      \\\"full_name\\\": \\\"location_data.region_name\\\",      \\\"label\\\": \\\"Region\\\",      \\\"description\\\": \\\"\\\",      \\\"data_type\\\": \\\"string\\\",      \\\"api_writable\\\": false,      \\\"ui_writable\\\": true,      \\\"custom\\\": false,      \\\"archived\\\": false    },    {      \\\"type\\\": \\\"data_attribute\\\",      \\\"model\\\": \\\"company\\\",      \\\"name\\\": \\\"plan\\\",      \\\"full_name\\\": \\\"plan\\\",      \\\"label\\\": \\\"Plan\\\",      \\\"description\\\": \\\"\\\",      \\\"data_type\\\": \\\"string\\\",      \\\"api_writable\\\": true,      \\\"ui_writable\\\": true,      \\\"custom\\\": false,      \\\"archived\\\": false    }  ]}\n\n\nYou can fetch a list of all data attributes belonging to a workspace contacts or companies.\n\nRequest Query Parameters\nParameter\tType\tRequired?\tDescription\nmodel\tString\tNo\tSpecify the data attribute model to return. Possible values are contact and company.\ninclude_archived\tBoolean\tNo\tInclude archived attributes in the list.By default we return only non archived data attributes.\nResponse\n\nThis will return a List of Data Attribute Models."
  },
  {
    "title": "Attach a contact to a conversation",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/conversations/adding-to-group-conversations-as-admin/",
    "html": "Attach a contact to a conversation\nExample Request & Response\ncurlcurl\n$ curl 'https://api.intercom.io/conversations/<id>/customers' \\\\-X POST \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json' \\\\-H 'Content-Type:application/json' -d{  \\\"admin_id\\\": \\\"781236\\\",  \\\"customer\\\": {    \\\"intercom_user_id\\\": \\\"58c1c78946a0aa9ef45b098a\\\"  }}\n\nHTTP/1.1 200 OK{\\\"customers\\\":[  {\\\"type\\\":\\\"user\\\",\\\"id\\\":\\\"597f02cb22f4bb37597e0b7d\\\"},   {\\\"type\\\":\\\"lead\\\",\\\"id\\\":\\\"58ff3f670f14ab4f1aa83750\\\"}]}\n\n\nYou can add participants who are contacts to a conversation, on behalf of either another contact or an admin.\n\nRequest Path Parameter\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Body Parameter\nAdmin's adding a participant\nParameter\tType\tRequired?\tDescription\nadmin_id\tString\tYes\tThe id of the admin who is adding the new participant.\ncustomer\tObject\tYes\tSee Customer Object below for more.\nContact's adding a participant\nParameter\tType\tRequired?\tDescription\nintercom_user_id\tString\tYes, if no user_id or email\tThe identifier for the contact as given by Intercom.\nuser_id\tString\tYes, if no intercom_user_id or email\tThe external_id you have defined for the contact who is adding the new participant.\nemail\tString\tYes, if no intercom_user_id or user_id\tThe email you have defined for the contact who is adding the new participant.\ncustomer\tObject\tYes\tSee Contact Object below for more.\nCustomer Object\nAttribute\tType\tRequired?\tDescription\nintercom_user_id\tString\tYes, if no user_id or email\tThe identifier for the contact as given by Intercom.\nuser_id\tString\tYes, if no intercom_user_id or email\tThe external_id you have defined for the contact who is being added as a participant.\nemail\tString\tYes, if the contact's role is lead. Yes, if no intercom_user_id or user_id.\tThe email you have defined for the contact who is being added as a participant.\nNOTE ABOUT CONTACTS WITHOUT AN EMAIL\n\nIf you add a contact via the email parameter and there is no user/lead found on that workspace with he given email, then we will create a new contact with role set to lead.\n\nResponse\n\nThis will return a customers array containing objects listing the participants in the conversation:\n\nAttribute\tType\tDescription\ntype\tString\tThe role associated to the contact - user or lead.\nid\tString\tThe identifier for the contact as given by Intercom."
  },
  {
    "title": "User or Lead Initiated Conversation",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/conversations/user-or-contact-initiated-conversation/",
    "html": "User or Lead Initiated Conversation\nUser Initiated Message\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/messages \\\\\\n-XPOST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d'\\n{\\n  \\\"from\\\": {\\n    \\\"type\\\": \\\"user\\\",\\n    \\\"id\\\": \\\"536e564f316c83104c000020\\\"\\n  },\\n  \\\"body\\\": \\\"Hey\\\"\\n}'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"user_message\\\",\\n  \\\"id\\\": \\\"2001\\\",\\n  \\\"created_at\\\": 1401917202,\\n  \\\"body\\\" : \\\"Hey, is the new thing in stock?\\\",\\n  \\\"message_type\\\": \\\"inapp\\\"\\n}\n\n\nYou can create a new user or lead initiated message by submitting a POST to https://api.intercom.io/messages along with a JSON message.\n\nThe sending user or lead is identified by their user_id, email or id values in the from field, along with a type field value of user or contact.\n\nYou can also send a message from a visitor by specifying their user_id or id value in the from field, along with a type field value of contact. This visitor will be automatically converted to a lead once the message is sent.\n\nThe message_type for a user initiated message is always treated as a inapp and will appear as a conversation inside Intercom. The email message type is not currently supported for a user initiated message.\n\nUser initiated messages can not be sent to specific admins, and as such, do not use the to field.\n\nAttributes\nAttribute\tType\tDescription\nbody\tstring\tThe content of the message. Plaintext only, HTML is not supported.\nfrom\tobject\tA user or lead object containing the user's id or user_id (or email if lead). The type field must have a value of user or contact.\nReturns\n\nThe created message object."
  },
  {
    "title": "Snoozing a conversation",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/conversations/snoozing-a-conversation/",
    "html": "Snoozing a conversation\nSnooze a conversation\n$ curl 'https://api.intercom.io/conversations/11055118659/reply' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"admin_id\": \"724860\",\n  \"message_type\":\"snoozed\",\n  \"snoozed_until\":\"1501512795\"\n}'\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"11055118659\",\n    \"created_at\": 1501496012,\n    \"updated_at\": 1501508752,\n    \"waiting_since\": 1501498931,\n    \"snoozed_until\": null,\n    \"conversation_message\": {\n        \"type\": \"conversation_message\",\n        \"id\": \"55951247\",\n        \"subject\": \"\",\n        \"body\": \"<p>Hi \\ud83d\\ude00 We hope you enjoy the example app. To get started just copy and paste some code into the JS editor. Let us know if you think this is useful? <br></p>\",\n        \"author\": {\n            \"type\": \"admin\",\n            \"id\": \"724865\"\n        },\n        \"attachments\": [],\n        \"url\": null\n    },\n    \"user\": {\n        \"type\": \"lead\",\n        \"id\": \"597f02cb22f4bb37597e0b7d\"\n    },\n    \"customers\": [\n        {\n            \"type\": \"lead\",\n            \"id\": \"597f02cb22f4bb37597e0b7d\"\n        },\n        {\n            \"type\": \"user\",\n            \"id\": \"58ff3f670f14ab4f1aa83750\"\n        }\n    ],\n    \"assignee\": {\n        \"type\": \"admin\",\n        \"id\": \"724860\"\n    },\n    \"conversation_parts\": {\n        \"type\": \"conversation_part.list\",\n        \"conversation_parts\": [\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712337945\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>test convo 1</p>\",\n                \"created_at\": 1501496025,\n                \"updated_at\": 1501496025,\n                \"notified_at\": 1501496025,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"user\",\n                    \"id\": \"597f02cb22f4bb37597e0b7d\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712338024\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>TestApp typically replies in a few hours. Don\\u2019t miss their reply.</p>\",\n                \"created_at\": 1501496028,\n                \"updated_at\": 1501496028,\n                \"notified_at\": 1501496028,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"bot\",\n                    \"id\": \"815309\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712338089\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p></p><p>Get notified by email</p>\",\n                \"created_at\": 1501496030,\n                \"updated_at\": 1501496030,\n                \"notified_at\": 1501496031,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"bot\",\n                    \"id\": \"815309\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712344562\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>group test two</p>\",\n                \"created_at\": 1501496290,\n                \"updated_at\": 1501496290,\n                \"notified_at\": 1501496291,\n                \"assigned_to\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712383990\",\n                \"part_type\": \"participant_added\",\n                \"body\": null,\n                \"created_at\": 1501497831,\n                \"updated_at\": 1501497831,\n                \"notified_at\": 1501497832,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712411349\",\n                \"part_type\": \"participant_added\",\n                \"body\": null,\n                \"created_at\": 1501498885,\n                \"updated_at\": 1501498885,\n                \"notified_at\": 1501498885,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712412506\",\n                \"part_type\": \"comment\",\n                \"body\": \"<p>group test</p>\",\n                \"created_at\": 1501498931,\n                \"updated_at\": 1501498931,\n                \"notified_at\": 1501498932,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"user\",\n                    \"id\": \"597f02cb22f4bb37597e0b7d\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712425169\",\n                \"part_type\": \"participant_removed\",\n                \"body\": null,\n                \"created_at\": 1501499414,\n                \"updated_at\": 1501499414,\n                \"notified_at\": 1501499414,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            },\n            {\n                \"type\": \"conversation_part\",\n                \"id\": \"712728293\",\n                \"part_type\": \"snoozed\",\n                \"body\": null,\n                \"created_at\": 1501508752,\n                \"updated_at\": 1501508752,\n                \"notified_at\": 1501508752,\n                \"assigned_to\": null,\n                \"author\": {\n                    \"type\": \"admin\",\n                    \"id\": \"724860\"\n                },\n                \"attachments\": [],\n                \"external_id\": null\n            }\n        ],\n        \"total_count\": 9\n    },\n    \"open\": true,\n    \"state\": \"snoozed\",\n    \"read\": false,\n    \"tags\": {\n        \"type\": \"tag.list\",\n        \"tags\": []\n    }\n}\n\n\nCustomers can snooze a conversation via a POST method to https://api.intercom.io/conversations/{convo_id}/reply/, which accepts a JSON object identifying the time you want the conversation snoozed until.\n\nArguments\nArgument\tRequired\tDescription\nadmin_id\tYes\tOnly admins can snooze a conversation so you need to provide the admin_id\nmessage_type\tYes\tMust be snoozed\nsnooze_until\tYes\tThe time in Unix time (i.e. seconds) you want the conversation to reopen"
  },
  {
    "title": "Update a contact",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/contacts/update-contact/",
    "html": "Update a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id> \\\\-X PUT \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json' \\\\-H 'Content-Type:application/json' -d{\\t\\\"role\\\": \\\"user\\\",\\t\\\"external_id\\\": \\\"25\\\",\\t\\\"email\\\": \\\"wash@serenity.io\\\",\\t\\\"phone\\\": \\\"+1123456789\\\",\\t\\\"name\\\": \\\"Hoban Washburn\\\",\\t\\\"avatar\\\": \\\"https://example.org/128Wash.jpg\\\",\\t\\\"last_seen_at\\\": 1571069751,\\t\\\"signed_up_at\\\": 1571069751,\\t\\\"owner_id\\\": 127,\\t\\\"unsubscribed_from_emails\\\": false,\\t\\\"custom_attributes\\\": {\\t\\t\\\"paid_subscriber\\\": true,\\t\\t\\\"monthly_spend\\\": 155.5,\\t\\t\\\"team_mates\\\": 1\\t}}\n\nExample Errors\nHTTP/1.1 404 FOUND\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"9a3d0816-9707-4598-977e-c009ba630148\",\n  \"errors\": [\n    {\n      \"code\": \"not_found\",\n      \"message\": \"Contact Not Found\"\n    }\n  ]\n}\n\nHTTP/1.1 409 CONFLICT\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"80ec9d92-99ff-4da9-9a0e-c0ab7c42f7e7\",\n  \"errors\": [\n    {\n      \"code\": \"conflict\",\n      \"message\": \"A contact matching those details already exists with id=5da6f18e3d7cf967e4582d05\"\n    }\n  ]\n}\n\nHTTP/1.1 400 UNPROCESSABLE ENTITY\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"00043csj9iva7pl9mmmg\",\n  \"errors\": [\n    {\n      \"code\": \"client_error\",\n      \"message\": \"Contact with user role can't be converted to a lead\"\n    }\n  ]\n}\n\nHTTP/1.1 400 BAD REQUEST\n{\n  \"type\": \"error.list\",\n  \"request_id\": \"00043csj9iva7pl9mmmg\",\n  \"errors\": [\n    {\n      \"code\": \"parameter_invalid\",\n      \"message\": \"The owner specified is not a member of the workspace\"\n    }\n  ]\n}\n\n\nYou can update an existing contact (ie. user or lead).\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nRequest Body Parameters\nAttribute\tType\tRequired?\tDescription\nrole\tString\tYes\tThe role of the contact. Accepted values are user or lead (only if lead already).\nexternal_id\tString\tYes - if role is user and email is blank\tA unique identifier for the contact which is given to Intercom.\nemail\tString\tYes - if role is lead, or if role is user and external_id is blank\tThe contacts email.\nphone\tString\tNo\tThe contacts phone.\nname\tString\tNo\tThe contacts name.\navatar\tString\tNo\tAn image URL containing the avatar of a contact.\nsigned_up_at\tDate (UNIX timestamp)\tNo\tThe time specified for when a contact signed up.\nlast_seen_at\tDate (UNIX timestamp)\tNo\tThe time when the contact was last seen (either where the Intercom Messenger was installed or when specified manually).\nowner_id\tInteger\tNo\tThe id of an admin that has been assigned account ownership of the contact.\nunsubscribed_from_emails\tBoolean\tNo\tWhether the contact is unsubscribed from emails.\ncustom_attributes\tObject\tNo\tThe custom attributes which are set for the contact.\nCREATING NEW CUSTOM DATA ATTRIBUTES\n\nYou can only write to custom data attributes that already exist on the workspace. If you need to create new attributes to write to, you should Create Data Attributes through the data Attributes API.\n\nResponse\n\nThis will return a Contact model of the contact you just update."
  },
  {
    "title": "Unarchive a contact",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/contacts/unarchive-a-contact/",
    "html": "Unarchive a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/unarchive \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can unarchive a single contact.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return an object with details on the unarchived contact.\n\nAttribute\tType\tDescription\nid\tString\tThe unique identifier for the contact which is given by Intercom\nobject\tString\tThe type of object - contact\narchived\tBoolean\tWhether the contact has been archived - false"
  },
  {
    "title": "Deleting from group conversations",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/conversations/deleting-from-group-conversations/",
    "html": "Deleting from group conversations\nDeleting a customer from a group conversation\nCUSTOMERS\n\nNote that customers refers to both users and leads.\n\n$ curl 'https://api.intercom.io/conversations/11055118659/customers/58c1c72246a0aa9ef45a098e' \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"admin_id\": \"781345\"\n}'\n\nHTTP/1.1 200 OK\n\n{\"customers\":[\n  {\"type\":\"user\",\"id\":\"597f02cb22f4bb37597e0b7d\"}]\n}x§\n\n\nCustomers can be removed from a conversation via a DELETE method to https://api.intercom.io/conversations/{convo_id}/customers/{id}, which accepts a JSON object describing the customer.\n\nArguments\nArgument\tRequired\tDescription\nadmin_id\tYes\tYou must provide the ID of a valid admin to remove a customer to the conversation"
  },
  {
    "title": "List Conversations",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/conversations/list-conversations/",
    "html": "List Conversations\nList Open Conversations for a Particular Admin\ncurlcurlrubyphpjava\n$ curl \\\\\\n\\\"https://api.intercom.io/conversations?type=admin&admin_id=25&open=true\\\" \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"conversation.list\\\",\\n  \\\"conversations\\\": [\\n    {\\n      \\\"assignee\\\": {\\n        \\\"id\\\": null,\\n        \\\"type\\\": \\\"nobody_admin\\\"\\n       },\\n       \\\"conversation_message\\\": {\\n         \\\"attachments\\\": [],\\n         \\\"author\\\": {\\n           \\\"id\\\": \\\"814865\\\",\\n           \\\"type\\\": \\\"admin\\\"\\n         },\\n       \\\"body\\\": \\\"<p>Hi \\\\ud83d\\\\ude00 We hope you enjoy the example app. To get started just copy and paste some code into the JS editor. Let us know if you think this is useful? <br></p>\\\",\\n       \\\"delivered_as\\\": \\\"automated\\\",\\n       \\\"id\\\": \\\"55951247\\\",\\n       \\\"subject\\\": \\\"\\\",\\n       \\\"type\\\": \\\"conversation\\\",\\n       \\\"url\\\": null\\n     },\\n     \\\"created_at\\\": 1543370554,\\n     \\\"customer_first_reply\\\": {\\n       \\\"created_at\\\": 1543370575,\\n       \\\"type\\\": \\\"conversation\\\",\\n       \\\"url\\\": \\\"https://s.codepen.io/boomerang/iFrameKey-fd6a7a17-5f52-3b6d-c3f6-8acc206fd174/index.html\\\"\\n     },\\n     \\\"customers\\\": [\\n       {\\n         \\\"id\\\": \\\"5bfdf73a1e1f0a940ef89995\\\",\\n         \\\"type\\\": \\\"lead\\\"\\n       }\\n     ],\\n     \\\"id\\\": \\\"19774381531\\\",\\n     \\\"open\\\": true,\\n     \\\"read\\\": true,\\n     \\\"sent_at\\\": 1543370554,\\n     \\\"snoozed_until\\\": null,\\n     \\\"state\\\": \\\"open\\\",\\n     \\\"tags\\\": {\\n       \\\"type\\\": \\\"tag.list\\\",\\n       \\\"tags\\\": [\\n         {\\n            \\\"type\\\": \\\"tag\\\",\\n            \\\"id\\\": \\\"1\\\",\\n            \\\"name\\\": \\\"a tag\\\",\\n            \\\"applied_at\\\": 1542820819,\\n            \\\"applied_by\\\": {\\n              \\\"type\\\": \\\"admin\\\",\\n              \\\"id\\\": \\\"54\\\"\\n            }\\n          },\\n          {\\n            \\\"type\\\": \\\"tag\\\",\\n            \\\"id\\\": \\\"1\\\",\\n            \\\"name\\\": \\\"a tag\\\",\\n            \\\"applied_at\\\": 1542969954,\\n            \\\"applied_by\\\": {\\n              \\\"type\\\": \\\"admin\\\",\\n              \\\"id\\\": \\\"54\\\"\\n            }\\n          }\\n        ]\\n      },\\n      \\\"type\\\": \\\"conversation\\\",\\n      \\\"updated_at\\\": 1543370587,\\n      \\\"user\\\": {\\n        \\\"id\\\": \\\"5bfdf73a1e1f0a940ef89995\\\",\\n        \\\"type\\\": \\\"lead\\\"\\n      },\\n      \\\"waiting_since\\\": 1543370575\\n    }\\n  ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/conversations?per_page=20&page=2\\\",\\n    \\\"page\\\": 1,\\n    \\\"per_page\\\": 20,\\n    \\\"total_pages\\\": 77,\\n    \\\"type\\\": \\\"pages\\\"\\n  }\\n}\n\n\nConversation lists do not contain conversation_parts for brevity. The part list for an individual conversation can be fetched when retrieving the conversation itself.\n\nAll Conversations\n\nTo fetch a list of all conversations send a GET request to https://api.intercom.io/conversations with no parameters.\n\nConversations can be sorted with the following parameters:\n\nParameter\tRequired\tDescription\norder\tno\tasc or desc. Return the conversations in ascending or descending order. defaults to desc unless an incorrect value is used i.e. not asc or desc. In these cases we do not throw an error and return the list in asc order.\nsort\tno\twhat field to sort the results by. Valid values: created_at, updated_at, waiting_since. defaults to updated_at.\nWHERE'D MY CONVERSATIONS GO?\n\nWhen sorting by waiting_since, not all conversations are returned. If a teammate was the last person to reply, or the conversation is closed then those conversations will not show up on this list. This is to ensure you have an easy way of identifying and prioritizing those customers who have been waiting longest.\n\nORDERING AND SORTING WITH FILTERS\n\nIt should be noted that the format for ordering and sorting is different when listing conversations for customers and admins as opposed to listing all conversations (i.e. without any filters). When you are using filters such as admin/customers 'order' refers to the fields you want to order the list by and 'sort' refers to whether you want it sorted asc or desc. The reverse is true when listing conversation without any filtering\n\nConversations by Admin\n\nYou can send the following parameters to view a single Admin's conversations -\n\nParameter\tRequired\tDescription\ntype\tyes\tThe type of entity to query for. Value must be admin for admin queries.\nadmin_id\tyes\tThe id for the Admin whose conversations to retrieve. To retrieve all unassigned conversations, set the id to be 'nobody'.\nopen\tno\tBoolean, when true fetches just open conversations, when false just closed conversations\ndisplay_as\tno\tSet to plaintext to retrieve conversation messages in plain text\npages\tno\tOptional. A pagination object, which may be empty, indicating no further conversations to fetch.\norder\tno\twhat field to sort the results by. Valid values: created_at, updated_at, waiting_since. defaults to updated_at.\nsort\tno\tasc or desc. Return the conversations in ascending or descending order. defaults to desc.\nConversations by Customers\n\nYou can send the following parameters to view a single Customer's conversations -\n\nParameter\tRequired\tDescription\ntype\tyes\tThe type of entity to query for. Value must be user.\nintercom_user_id\tone of\tThe id of the User whose conversations to retrieve\nuser_id\tone of\tYour user_id for the user\nemail\tone of\tYour email for the user\nunread\tno\tBoolean, when true fetches just unread conversations\ndisplay_as\tno\tSet to plaintext to retrieve conversation messages in plain text\npages\tno\tOptional. A pagination object, which may be empty, indicating no further conversations to fetch.\norder\tno\twhat field to sort the results by. Valid values: created_at, updated_at. defaults to updated_at.\nsort\tno\tasc or desc. Return the conversations in ascending or descending order. defaults to desc.\nLISTING LEADS USING TYPE 'USER'\n\nIf you want to list lead conversations you will need to set the type to 'user' and use the 'intercom_user_id' as the identifier. It will not work with 'user_id' or type contact for example.\n\nWhen querying the conversations for a particular User, we carry out message matching for that User and your existing Auto Messages, at most once per 15 minutes.\n\nReturns\n\nA Conversation List object is returned with an array of Conversation objects. These will include a list of tags as Tag objects, with two additional attributes:\n\nAttribute\tType\tDescription\napplied_at\tUNIX Timestamp\tThe date and time when the tag was applied to the conversation.\napplied_by\tObject\tContains the id of the admin that applied the tag."
  },
  {
    "title": "Get a Single Conversation",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/conversations/get-a-single-conversation/",
    "html": "Get a Single Conversation\nGet a Single Conversation\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/conversations/147 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\\n\n\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"assignee\\\": {\\n        \\\"id\\\": \\\"814860\\\",\\n        \\\"type\\\": \\\"admin\\\"\\n    },\\n    \\\"conversation_message\\\": {\\n        \\\"attachments\\\": [],\\n        \\\"author\\\": {\\n            \\\"id\\\": \\\"5bc8f7421ae2d96695c18a\\\",\\n            \\\"type\\\": \\\"lead\\\"\\n        },\\n        \\\"body\\\": \\\"<p>Hi</p>\\\",\\n        \\\"delivered_as\\\": \\\"customer_initiated\\\",\\n        \\\"id\\\": \\\"269650473\\\",\\n        \\\"subject\\\": \\\"\\\",\\n        \\\"type\\\": \\\"conversation\\\",\\n        \\\"url\\\": \\\"https://intercom-survey-app.glitch.me/\\\"\\n    },\\n    \\\"conversation_parts\\\": {\\n        \\\"conversation_parts\\\": [\\n            {\\n                \\\"assigned_to\\\": null,\\n                \\\"attachments\\\": [],\\n                \\\"author\\\": {\\n                    \\\"id\\\": \\\"815309\\\",\\n                    \\\"type\\\": \\\"bot\\\"\\n                },\\n                \\\"body\\\": \\\"<p>Test_App typically replies in a few hours.</p>\\\",\\n                \\\"created_at\\\": 1539897200,\\n                \\\"external_id\\\": null,\\n                \\\"id\\\": \\\"2202737122\\\",\\n                \\\"notified_at\\\": 1539897200,\\n                \\\"part_type\\\": \\\"comment\\\",\\n                \\\"type\\\": \\\"conversation_part\\\",\\n                \\\"updated_at\\\": 1539897200\\n            },\\n          #List of conversation parts...\\n        ],\\n        \\\"total_count\\\": 25,\\n        \\\"type\\\": \\\"conversation_part.list\\\"\\n    },\\n    \\\"conversation_rating\\\": {\\n        \\\"created_at\\\": null,\\n        \\\"customer\\\": {\\n            \\\"id\\\": null,\\n            \\\"type\\\": null\\n        },\\n        \\\"rating\\\": null,\\n        \\\"remark\\\": null,\\n        \\\"teammate\\\": {\\n            \\\"id\\\": null,\\n            \\\"type\\\": null\\n        }\\n    },\\n    \\\"created_at\\\": 1539897198,\\n    \\\"customer_first_reply\\\": {\\n        \\\"created_at\\\": 1539897198,\\n        \\\"type\\\": \\\"conversation\\\",\\n        \\\"url\\\": \\\"https://intercom-survey-app.glitch.me/\\\"\\n    },\\n    \\\"customers\\\": [\\n        {\\n            \\\"id\\\": \\\"5bc8f7ae2d96695c18a\\\",\\n            \\\"type\\\": \\\"lead\\\"\\n        }\\n    ],\\n    \\\"id\\\": \\\"1911149811\\\",\\n    \\\"open\\\": true,\\n    \\\"read\\\": true,\\n    \\\"sent_at\\\": 1539897198,\\n    \\\"snoozed_until\\\": null,\\n    \\\"state\\\": \\\"open\\\",\\n    \\\"tags\\\": {\\n      \\\"type\\\": \\\"tag.list\\\",\\n      \\\"tags\\\": [\\n        {\\n          \\\"type\\\": \\\"tag\\\",\\n          \\\"id\\\": \\\"1\\\",\\n          \\\"name\\\": \\\"a tag\\\",\\n          \\\"applied_at\\\": 1542820819,\\n          \\\"applied_by\\\": {\\n            \\\"type\\\": \\\"admin\\\",\\n            \\\"id\\\": \\\"54\\\"\\n          }\\n        },\\n        {\\n          \\\"type\\\": \\\"tag\\\",\\n          \\\"id\\\": \\\"1\\\",\\n          \\\"name\\\": \\\"a tag\\\",\\n          \\\"applied_at\\\": 1542969954,\\n          \\\"applied_by\\\": {\\n            \\\"type\\\": \\\"admin\\\",\\n            \\\"id\\\": \\\"54\\\"\\n          }\\n        }\\n      ]\\n    },\\n    \\\"type\\\": \\\"conversation\\\",\\n    \\\"updated_at\\\": 1540393270,\\n    \\\"user\\\": {\\n        \\\"id\\\": \\\"5bc8f7421ffae2d96695c18a\\\",\\n        \\\"type\\\": \\\"lead\\\"\\n    },\\n    \\\"waiting_since\\\": 64654125776\\n}\n\nParameters\n\nSpecify the id of the conversation you wish to retrieve using the URL https://api.intercom.io/conversations/{id} URL structure where {id} is the id field of the conversation.\n\nParameter\tRequired\tDescription\ndisplay_as\tno\tSet to plaintext to retrieve conversation messages in plain text\nReturns\n\nA full Conversation object. This will include a list of tags as Tag objects, with two additional attributes:\n\nAttribute\tType\tDescription\napplied_at\tUNIX Timestamp\tThe date and time when the tag was applied to the conversation.\napplied_by\tObject\tContains the id of the admin that applied the tag.\n\nParts in the conversation_parts object are ordered by with the most recently created parts appearing at the end of the list.\n\nThe maximum number of conversation parts that can be returned via the API is 500. If you have more than that we will return the 500 most recent conversation parts."
  },
  {
    "title": "Conversations",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/conversations/conversations/",
    "html": "Conversations\n\nConversation are how you can communicate with users in Intercom.\n\nTo start a conversation you and your users can send messages. The API supports two ways to start a conversation -\n\nFrom a user to you, called a 'user initiated' conversation.\nFrom a team member to a single user called an 'admin initiated' conversation.\n\nThe API does not currently support sending admin initiated messages to multiple users, creating auto messages or sending from teams, but we'd be interested in hearing your usecases - please contact team@intercom.io.\n\nOnce a message has been sent the conversation can begin! Users and Admins can reply to any conversation via the API - see the section \"Replying to a Conversation\" for details.\n\n🚧\n\nThe Conversations API is only available to Apps with a trial or an active subscription.\n\nNOTE\n\nThere may be a short delay between user creation and a user becoming available for messaging through the API. A 404 will be returned in this case, and you should retry the request after a delay.\n\nNOTE\n\nIf you try to send an email to a user who has unsubscribed, we will return a 403 and the message \"This user is unsubscribed from emails\"."
  },
  {
    "title": "Merge two contacts",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/contacts/merge-contact/",
    "html": "Merge two contacts\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/merge \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' -d \\\\\\n-H 'Content-Type:application/json' -d \\\\\\n\\n{\\n  \\\"from\\\": \\\"5d70dd30de4efd54f42fd526\\\",\\n  \\\"into\\\": \\\"5ba682d23d7cf92bef87bfd4\\\"\\n}\\n\n\nExample Errors\nhttphttp\nHTTP/1.1 404 FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\\n\n\nHTTP/1.1 400 UNPROCESSABLE ENTITY\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"0019c4t1derm7namdon0\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"invalid_merge\\\",\\n      \\\"message\\\": \\\"Merging can only be performed on a lead into a user\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can merge a contact with a role of lead into a contact with a role of user.\n\nWHAT HAPPENS UPON A CONTACT BEING MERGED?\n\nThe contact that's specified as from will be deleted after being merged into the contact specified as into. Attributes that don't exist on the contact specified as into will be copied over.\n\nRequest Body Parameters\nParameter\tType\tRequired\tDescription\nfrom\tString\tYes\tThe unique identifier for the contact to merge away from. Must be a lead.\ninto\tString\tYes\tThe unique identifier for the contact to merge into. Must be a user.\nResponse\n\nThis will return a Contact model for the contact who's been merged into."
  },
  {
    "title": "Conversation Rating Model",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/conversations/conversation-rating-model/",
    "html": "Conversation Rating Model\nExample Conversation Part Object\n    \\\"conversation_rating\\\": {\\n        \\\"rating\\\": null,\\n        \\\"remark\\\": null,\\n        \\\"created_at\\\": null,\\n        \\\"customer\\\": {\\n            \\\"type\\\": null,\\n            \\\"id\\\": null\\n        },\\n        \\\"teammate\\\": {\\n            \\\"type\\\": null,\\n            \\\"id\\\": null\\n        }\\n    }\n\n\nA conversation rating contains information relating to a customer's satisfaction with their interaction with your team. For more info on conversation ratings please see here\n\nConversation Rating Object\nAttribute\tType\tDescription\nrating\tinteger\tThe rating, between 1 and 5, for the conversation\nremark\tstring\tAn optional field to add a remark to correspond to the number rating\ncreated_at\ttimestamp\tThe time the rating was requested in the conversation being rated\ncustomer\tobject\tAn object containing the ID and type of the customer (e.g. it could be a user or lead)\nteammate\tobject\tAn object containing the ID and type of the Intercom teammate associated with the conversation when it was rated\nCustomer Object\nAttribute\tType\tDescription\ntype\tstring\tA conversation can be rated by either a user or a lead. This will default to null when there is no rating on a conversation.\nid\tstring\tThe Intercom ID of the customer rating the conversation. This defaults to null.\nTeammate Object\nAttribute\tType\tDescription\ntype\tstring\tCurrently this will always be of type admin. It will be null by default if the conversation has not been rated\nid\tstring\tThis is the ID of the teammate being rated. This will default to null."
  },
  {
    "title": "List all contacts",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/contacts/list-contacts/",
    "html": "List all contacts\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nInvalid starting_after param\nHTTP/1.1 400 BAD REQUEST\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"000nbboasf1qqab6b910\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"client_error\\\",\\n      \\\"message\\\": \\\"Invalid starting_after param. Please try again using a starting_after value from a paginated response\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can fetch a list of all contacts.\n\nResponse\n\nThis will return a paginated list of Contact objects.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - list\ndata\tArray\tAn array containing Contact Objects\ntotal_count\tInteger\tThe total number of contacts\npages\tPagination Object\tThe information needed to paginate through contacts"
  },
  {
    "title": "List attached tags",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/contacts/list-tags-of-contact/",
    "html": "List attached tags\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/tags \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can fetch a list of tags that are associated to a contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return a list of Tag objects.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - tag.list\ntags\tArray\tAn array containing Tag Objects"
  },
  {
    "title": "Closing or reopening a conversation",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/conversations/closing-a-conversation/",
    "html": "Closing or reopening a conversation\n\nYou can close or reopen a conversation with or without a reply, via a POST method to https://api.intercom.io/conversations/{convo_id}/reply/, which accepts a JSON object identifying whether you want to close or reopen.\n\nArgument\tRequired\tDescription\ntype\tyes\tMust be admin\nmessage_type\tyes\tMust be open or close\nadmin_id\tyes\tID of the admin the close or open will be attributed to\nClosing a Conversation Without Reply\ncurl https://api.intercom.io/conversations/xxx/reply\n-X POST\n-H 'Authorization:Bearer <Your access token>'\n-H 'Accept:application/json'\n-H 'Content-Type:application/json'\n-d '{ \"admin_id\": CLOSING_ADMIN_ID, \"message_type\": \"close\", \"type\": \"admin\"}'\n\n<?php\n\n$intercom->conversations->replyToConversation(\"10957850396\", [\n    \"type\" => \"admin\",\n    \"admin_id\" => \"814860\",\n    \"message_type\" => \"close\"\n]);\n?>\n\nClosing a Conversation With Reply\ncurl https://api.intercom.io/conversations/xxx/reply\n-X POST\n-H 'Authorization:Bearer <Your access token>'\n-H 'Accept:application/json'\n-H 'Content-Type:application/json'\n-d '{ \"body\":\"closing this convo\", \"admin_id\": CLOSING_ADMIN_ID, \"message_type\": \"close\", \"type\": \"admin\"}'\n\n<?php\n\n$convo = $intercom->conversations->replyToConversation(\"10957850396\", [\n    \"body\" => \"The beginning is the most important part of the work, but this is the end ... of the conversation!\",\n    \"type\" => \"admin\",\n    \"admin_id\" => \"814860\",\n    \"message_type\" => \"close\"\n]);\n?>\n"
  },
  {
    "title": "Conversation Part Model",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/conversations/conversation-part-model/",
    "html": "Conversation Part Model\nExample Conversation Part Object\n{\n    \"type\": \"conversation_part\",\n    \"id\": \"4412\",\n    \"part_type\": \"comment\",\n    \"body\": \"<p>Hi Jane, it's all great thanks!</p>\",\n    \"created_at\": 1400857494,\n    \"updated_at\": 1400857494,\n    \"notified_at\": 1400857587,\n    \"assigned_to\": null,\n    \"author\": {\n      \"type\": \"user\",\n      \"id\": \"536e564f316c83104c000020\"\n    },\n    \"attachments\": []\n}\n\n{\n    \"type\":\"conversation_part\",\n    \"id\":\"1223445555\",\n    \"part_type\":\"comment\",\n    \"body\":\"We've removed this part of the conversation to comply with Twitter's terms and conditions. You can view the complete conversation in Intercom.\",\n    \"created_at\":1567693273,\n    \"updated_at\":1567693273,\n    \"notified_at\":1567693273,\n    \"assigned_to\":null,\n    \"author\":{\n      \"type\":\"user\",\n      \"id\":\"5310d8e7598c9a0b24000002\",\n      \"name\":\"\",\n      \"email\":\"\"\n    },\n    \"attachments\": []\n}\n\n\nA conversation part describes an element of the conversation.\n\nA conversation part has a html encoded body, an author, and may have an attachments list. Conversation parts have created, updated and notified timestamps. Each conversation part also has a part type - these types are described below.\n\nConversation Part Object\nAttribute\tType\tDescription\ntype\tstring\tAlways conversation_part.\nid\tstring\tThe id representing the conversation part.\npart_type\tstring\tThe type of conversation part.\nbody\tstring\tThe message body, which may contain HTML. For Twitter, this will show a generic message regarding why the body is obscured.\ncreated_at\ttimestamp\tThe time the conversation part was created.\nupdated_at\ttimestamp\tThe last time the conversation part was updated.\nnotified_at\ttimestamp\tThe time the user was notified with the conversation part.\nassigned_to\tstring\tThe id of the admin that was assigned the conversation by this conversation_part (null if there has been no change in assignment.)\nauthor\tstring\tThe type of individual that sent the message (user, admin or bot) and their related id. For Twitter, this will be blank.\nattachments\tList\tA list of attachments for the part.\nConversation Part Types\nType\tDescription\ncomment\tStandard reply from customer or admin to a conversation\nnote\tA note created by an admin on the conversation. A note will only be viewable as an admin\nnote_and_reopen\tAdd a note and reopen the conversations in the one action\nassignment\tAn assignment of the conversation to an admin, or Nobody\nopen\tIdentifies a conversation has been opened\nclose\tIdentifies a conversation has been closed\naway_mode_assignment\tConversation has been assigned due to the admin being in away mode\nparticipant_added\tA participant has been added to a group conversation\nparticipant_removed\tA participant has been removed from a group conversation\nconversation_rating_changed\tA conversation rating has been changed, not this can only occur before the rating has been submitted. Once it has been submitted it cannot be changed\nconversation_rating_remark_added\tA conversation remark has been added to the converation\nsnoozed\tA conversation has been snoozed\nunsnoozed\tA conversation has been unsnoozed\nassign_and_unsnooze\tAssign a conversation and unsnooze it in one action.\ntimer_unsnooze\tUnsnooze a conversation after a set time"
  },
  {
    "title": "List attached companies",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/contacts/list-companies-of-contact/",
    "html": "List attached companies\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/companies \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can fetch a list of companies that are associated to a contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return a paginated list of Company objects.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - company.list\ncompanies\tArray\tAn array containing Company Objects\ntotal_count\tInteger\tThe total number of companies associated to this contact\npages\tPagination Object\tThe information needed to paginate through companies"
  },
  {
    "title": "Retrieve a contact",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/contacts/get-contact/",
    "html": "Retrieve a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id> \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can fetch the details of a single contact.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return a Contact model."
  },
  {
    "title": "Assigning a Conversation to Unassigned",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/conversations/assigning-a-conversation-to-unassigned/",
    "html": "Assigning a Conversation to Unassigned\n\nYou can assign a conversation to be unassigned when you reply to a conversation. You should do this if you do not want the conversation to remain in your own inbox. This will allow other people pick up the conversation when the user replies to it\n\nAssign to Unassigned\n#Assign converstion to unassigned\ncurl https://api.intercom.io/conversations/6167678340/reply \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"body\": \"Reassigning to no-one!\",\n  \"type\": \"admin\",\n  \"admin_id\": \"1234\",\n  \"assignee_id\": \"0\",\n  \"message_type\": \"assignment\"\n}'\n\n#Assign converstion to unassigned  \nintercom.conversations.reply({\n  :id => '10289052666', \n  :type => 'admin',\n  :admin_id => \"1234\",\n  :assignee_id => 0,\n  :message_type => 'assignment', \n  :body => 'reassigning to no-one!'\n})\n\n<?php\n$intercom->conversations->replyToConversation(\"10957850396\", [\n    \"intercom_user_id\" => \"5977303470ab497b1babb9ef\",\n    \"body\" => \"Reassigning to no-one, i.e. unassigned\", // appears as note\n    \"type\" => \"admin\",\n    \"admin_id\" => \"814860\",\n    \"message_type\" => \"assignment\",\n    \"assignee_id\" => \"0\" \n]);\n?>\n\nAssigning a conversation to another teammate\n\nYou can also assign a conversation to another admin. Just use the admin ID of the person you want to assign the conversation to instead of '0'. You POST body should look something like this:\n\nAssign to a teammate\n{\\n  \\\"body\\\": \\\"Reassigning to someone else\\\",\\n  \\\"type\\\": \\\"admin\\\",\\n  \\\"admin_id\\\": \\\"814860\\\",\\n  \\\"assignee_id\\\": \\\"530165\\\",\\n  \\\"message_type\\\": \\\"assignment\\\"\\n}\n\nASSIGN TO A TEAM\n\nRemember you can also assign a conversation to a team. Just replace the admin ID with the team ID"
  },
  {
    "title": "Delete a contact",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/contacts/delete-contact/",
    "html": "Delete a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can delete a single contact.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return an object with details on the deleted contact.\n\nAttribute\tType\tDescription\nid\tString\tThe unique identifier for the contact which is given by Intercom\nobject\tString\tThe type of object - contact\ndeleted\tBoolean\tWhether the contact has been deleted - true"
  },
  {
    "title": "Attach a contact to a conversation",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/conversations/adding-to-group-conversations-as-admin/",
    "html": "Attach a contact to a conversation\nExample Request & Response\ncurlcurl\n$ curl 'https://api.intercom.io/conversations/<id>/customers' \\\\-X POST \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json' \\\\-H 'Content-Type:application/json' -d{  \\\"admin_id\\\": \\\"781236\\\",  \\\"customer\\\": {    \\\"intercom_user_id\\\": \\\"58c1c78946a0aa9ef45b098a\\\"  }}\n\nHTTP/1.1 200 OK{\\\"customers\\\":[  {\\\"type\\\":\\\"user\\\",\\\"id\\\":\\\"597f02cb22f4bb37597e0b7d\\\"},   {\\\"type\\\":\\\"lead\\\",\\\"id\\\":\\\"58ff3f670f14ab4f1aa83750\\\"}]}\n\n\nYou can add participants who are contacts to a conversation, on behalf of either another contact or an admin.\n\nRequest Path Parameter\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe identifier for the conversation as given by Intercom.\nRequest Body Parameter\nAdmin's adding a participant\nParameter\tType\tRequired?\tDescription\nadmin_id\tString\tYes\tThe id of the admin who is adding the new participant.\ncustomer\tObject\tYes\tSee Customer Object below for more.\nContact's adding a participant\nParameter\tType\tRequired?\tDescription\nintercom_user_id\tString\tYes, if no user_id or email\tThe identifier for the contact as given by Intercom.\nuser_id\tString\tYes, if no intercom_user_id or email\tThe external_id you have defined for the contact who is adding the new participant.\nemail\tString\tYes, if no intercom_user_id or user_id\tThe email you have defined for the contact who is adding the new participant.\ncustomer\tObject\tYes\tSee Contact Object below for more.\nCustomer Object\nAttribute\tType\tRequired?\tDescription\nintercom_user_id\tString\tYes, if no user_id or email\tThe identifier for the contact as given by Intercom.\nuser_id\tString\tYes, if no intercom_user_id or email\tThe external_id you have defined for the contact who is being added as a participant.\nemail\tString\tYes, if the contact's role is lead. Yes, if no intercom_user_id or user_id.\tThe email you have defined for the contact who is being added as a participant.\nNOTE ABOUT CONTACTS WITHOUT AN EMAIL\n\nIf you add a contact via the email parameter and there is no user/lead found on that workspace with he given email, then we will create a new contact with role set to lead.\n\nResponse\n\nThis will return a customers array containing objects listing the participants in the conversation:\n\nAttribute\tType\tDescription\ntype\tString\tThe role associated to the contact - user or lead.\nid\tString\tThe identifier for the contact as given by Intercom."
  },
  {
    "title": "Adding to group conversations as customer",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/conversations/adding-to-group-conversations-as-customer/",
    "html": "Adding to group conversations as customer\nAdding a customer to a group conversation as customer\n$ curl 'https://api.intercom.io/conversations/11055118659/customers' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"intercom_user_id\": \"55c1c78946b0aa9ef45b09ff\",\n  \"customer\":{\n    \"intercom_user_id\": \"58c1c78946a0aa9ef45b098a\"\n  }\n}'\n\nHTTP/1.1 200 OK\n\n{\"customers\":[\n  {\"type\":\"user\",\"id\":\"597f02cb22f4bb37597e0b7d\"}, \n  {\"type\":\"lead\",\"id\":\"58ff3f670f14ab4f1aa83750\"}]\n}\n\n\nCustomers can also be added by other customer that's already part of the conversation.\n\nArguments\nArgument\tRequired\tDescription\nintercom_user_id\tone of\tThe Intercom defined id representing the user (in the URL)\nuser_id\tone of\tThe user id you have defined for the user (or auto defined in the case of leads)\nemail\tone of\tThe email you have defined for the user\ncustomer\tYes\tJSON object describing the customer that you want to add to the conversation."
  },
  {
    "title": "Adding to group conversations as admin",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/conversations/adding-to-group-conversations-as-admin/",
    "html": "Adding to group conversations as admin\nAdding a customer to a group conversation\nCUSTOMERS\n\nNote that customers refers to both users and leads.\n\n$ curl 'https://api.intercom.io/conversations/11055118659/customers' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"admin_id\": \"781236\",\n  \"customer\":{\n    \"intercom_user_id\": \"58c1c78946a0aa9ef45b098a\"\n  }\n}'\n\nHTTP/1.1 200 OK\n\n{\"customers\":[\n  {\"type\":\"user\",\"id\":\"597f02cb22f4bb37597e0b7d\"}, \n  {\"type\":\"lead\",\"id\":\"58ff3f670f14ab4f1aa83750\"}]\n}\n\n\nCustomers can be added to a conversation via a POST method to https://api.intercom.io/conversations/{convo_id}/customers/, which accepts a JSON object describing the customer.\n\nArguments\nArgument\tRequired\tDescription\nadmin_id\tYes\tYou must provide the ID of a valid admin to add a customer to the conversation\ncustomer\tYes\tJSON object describing the customer that you want to add to the conversation.\n\nCustomer object\n\nArgument\tRequired\tDescription\nintercom_user_id\tone of\tThe Intercom defined id representing the user (in the URL)\nuser_id\tone of\tThe user id you have defined for the user (or auto defined in the case of leads)\nemail\tone of\tThe email you have defined for the user\nNOTE ABOUT CUSTOMERS WITHOUT AN EMAIL\n\nIf you try to add a customer via intercom_user_id or user_id which does not have an email you will receive an error. Alternatively, If you add a customer via the email parameter and there is no user/lead in the system for that customer then we will create a new lead."
  },
  {
    "title": "Replying to a Conversation",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/conversations/replying-to-a-conversation/",
    "html": "Replying to a Conversation\nReply with and Without Attachments\n# Reply without attachment\n$ curl 'https://api.intercom.io/conversations/{conversation_id}/reply' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"intercom_user_id\": \"536e564f316c83104c000020\",\n  \"body\": \"Thanks again :)\",\n  \"type\": \"user\",\n  \"message_type\": \"comment\"\n}'\n\n\n\n# Reply with attachment\n$ curl https://api.intercom.io/conversations/{conversation_id}/reply \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"intercom_user_id\": \"536e564f316c83104c000020\",\n  \"body\": \"Thanks again :)\",\n  \"type\": \"user\",\n  \"message_type\": \"comment\",\n  \"attachment_urls\": [\"http://www.example.com/attachment.jpg\"]\n}\n\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"{conversation_id}\",\n    # ...\n}\n# NB: Full Conversation Object returned\n\n#Reply without attachment\nintercom.conversations.reply(:id => conversation.id, :type => 'user', \n  :email => 'bob@example.com', :message_type => 'comment', :body => 'foo')\n\n#Reply with attachment\nintercom.conversations.reply(:id => conversation.id, :type => 'user', \n  :email => 'bob@example.com', :message_type => 'comment', \n  :body => 'foo', :attachment_urls => [\"http://www.example.com/attachment.jpg\"])\n\n<?php\n//Reply without attachment\n$intercom->conversations->replyToConversation(\"10957850396\", [\n    \"intercom_user_id\" => \"5977303470ab497b1babb9ef\",\n    \"body\" => \"Thinking: the talking of the soul with itself\",\n    \"type\" => \"user\",\n    \"message_type\" => \"comment\"\n]);\n\n\n//Reply with attachment\n$intercom->conversations->replyToConversation(\"10957850396\", [\n  \"intercom_user_id\" => \"5977303470ab497b1babb9ef\",\n  \"body\" => \"Thinking: the talking of the soul with itself\",\n  \"type\" => \"user\",\n  \"message_type\" => \"comment\",\n  \"attachment_urls\" => [\"http://www.example.com/attachment.jpg\"]\n]);\n?>\n\nUser user = new User().setId(\"5310d8e8598c9a0b24000005\");\nUserReply userReply = new UserReply(user);\nuserReply.setBody(\"Mighty fine shindig\");\n\nConversation.reply(\"66\", userReply);\n\nAdmin admin = new Admin().setId(\"1\");\nAdminReply adminReply = new AdminReply(admin);\nadminReply.setBody(\"These apples are healthsome\");\n\nConversation.reply(\"66\", adminReply);\n\nReply with a note\n# You can replay with a note also and use some HTML formatting such as bold, italics, and lists\ncurl 'https://api.intercom.io/conversations/{conversation_id}/reply' \\\n-X POST \\\n-H 'Authorization: Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' \\\n{\n  \"admin_id\": \"814860\",\n  \"body\": \"<html> <body>  <h2>An Unordered HTML List</h2>  <ul>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ul>    <h2>An Ordered HTML List</h2>  <ol>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ol>   </body> </html>\",\n  \"type\": \"admin\",\n  \"message_type\": \"note\"\n}\n\nHTTP/1.1 200 OK\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"{conversation_id}\",\n    # ...\n}\n# NB: Full Conversation Object returned\n\nArguments\n\nFor a User Reply:\n\nArgument\tRequired\tDescription\ntype\tYes\tuser\nmessage_type\tYes\tMust be comment\nbody\tYes\tThe text body of the comment\nintercom_user_id\tone of\tThe Intercom defined id representing the user\nuser_id\tone of\tThe user id you have defined for the user\nemail\tone of\tThe email you have defined for the user\nattachment_urls\tNo\tA list of URLs of (image only) files that will be added as attachments. You can include up to 5 attachments.\n\nor for an Admin Reply:\n\nArgument\tRequired\tDescription\ntype\tYes\tadmin\nmessage_type\tYes\tMust be comment, assignment, open, close, or note\nadmin_id\tYes\tThe id of the Admin who is authoring the comment\nbody\tNo\tThe text body of the comment. Must be set for comment and note\nassignee_id\tNo\tAssignments only: assigns the conversation to the given admin id. Note this must be \"0\" if you want to move it to unassigned\nattachment_urls\tNo\tA list of URLs of files that will be added as attachments. You can include up to 5 attachments..\n\nNotes are not visible to the end user.\n\nReturns\n\nA full Conversation object, with Conversation Parts."
  },
  {
    "title": "Reply to a conversation",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/conversations/reply-to-a-conversation/",
    "html": "Reply to a conversation\nExample Request & Response (Contact Reply)\n$ curl 'https://api.intercom.io/conversations/{id/last}/reply' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d \n\n{\n  \"message_type\": \"comment\",\n  \"type\": \"user\",\n  \"intercom_user_id\": \"536e564f316c83104c000020\",\n  \"body\": \"Thanks again :)\"\n}\n\n{\n    \"type\": \"conversation\",\n    \"id\": \"1911149811\",\n    \"created_at\": 1539897198,\n    \"updated_at\": 1540393270,\n    \"source\": {\n        \"attachments\": [],\n        \"author\": {\n            \"id\": \"5bc8f7421ae2d96695c18a\",\n            \"type\": \"lead\"\n        },\n        \"body\": \"<p>Hi</p>\",\n        \"delivered_as\": \"customer_initiated\",\n        \"id\": \"269650473\",\n        \"subject\": \"\",\n        \"type\": \"conversation\",\n        \"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"contacts\": [\n        {\n            \"id\": \"5bc8f7ae2d96695c18a\",\n            \"type\": \"lead\"\n        }\n    ],\n    \"teammates\": [\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    ],\n    \"assignee\": {\n        {\n            \"id\": \"814860\",\n            \"type\": \"admin\",\n          \t\"name\": \"Mark Strong\",\n          \t\"email\": \"mk@acmeinc.org\"\n        }\n    },\n    \"open\": true,\n    \"state\": \"open\",\n    \"read\": true,\n    \"waiting_since\": 64654125776\n    \"snoozed_until\": null,\n    \"tags\": {\n        \"tags\": [],\n        \"type\": \"tag.list\",\n    },\n    \"first_contact_reply\": {\n    \t\"created_at\": 1539897198\n    \t\"type\": \"conversation\",\n    \t\"url\": \"https://intercom-survey-app.glitch.me/\"\n    },\n    \"priority\": \"not_priority\",\n    \"sla_applied\": {\n    \t\"sla_name\": \"VIP customer <5m\",\n      \"sla_status\": \"missed\",\n    },\n    \"conversation_rating\": {\n        \"created_at\": null,\n        \"contact\": {\n            \"id\": null,\n            \"type\": null\n        },\n        \"rating\": null,\n        \"remark\": null,\n        \"teammate\": {\n            \"id\": null,\n            \"type\": null,\n            \"name\": null,\n            \"email\": null\n        }\n    },\n    \"statistics\": {\n      \"time_to_assignment\": 2310,\n      \"time_to_admin_reply\": 2408,\n      \"time_to_first_close\": 4915 ,\n      \"time_to_last_close\": 5125,\n      \"median_time_to_reply\": 321,\n      \"first_contacat_reply_at\": 1539897200,\n      \"first_assignment_at\": 1539897200,\n      \"first_admin_reply_at\": 1539897200,\n      \"first_close_at\": 1539897200,\n      \"last_assignment_at\": 1539897200,\n      \"last_assignment_admin_reply_at\": 1539897200,\n      \"last_contact_reply_at\": 1539897200,\n      \"last_admin_reply_at\": 1539897200,\n      \"last_close_at\": 1539897200,\n      \"last_closed_by\": {\n      \t\"type\": \"admin\",\n        \"id\": \"325432652\",\n        \"name\": \"Tom Smith\",\n        \"email\": \"tom@example.com\"\n      },\n      \"count_reopens\": 3,\n      \"count_assignments\": 2,\n      \"count_conversation_parts\": 67\n    },  \n}\n\n#Reply without attachment\nintercom.conversations.reply(:id => conversation.id, :type => 'user', \n  :email => 'bob@example.com', :message_type => 'comment', :body => 'foo')\n\n#Reply with attachment\nintercom.conversations.reply(:id => conversation.id, :type => 'user', \n  :email => 'bob@example.com', :message_type => 'comment', \n  :body => 'foo', :attachment_urls => [\"http://www.example.com/attachment.jpg\"])\n\n<?php\n//Reply without attachment\n$intercom->conversations->replyToConversation(\"10957850396\", [\n    \"intercom_user_id\" => \"5977303470ab497b1babb9ef\",\n    \"body\" => \"Thinking: the talking of the soul with itself\",\n    \"type\" => \"user\",\n    \"message_type\" => \"comment\"\n]);\n\n\n//Reply with attachment\n$intercom->conversations->replyToConversation(\"10957850396\", [\n  \"intercom_user_id\" => \"5977303470ab497b1babb9ef\",\n  \"body\" => \"Thinking: the talking of the soul with itself\",\n  \"type\" => \"user\",\n  \"message_type\" => \"comment\",\n  \"attachment_urls\" => [\"http://www.example.com/attachment.jpg\"]\n]);\n?>\n\nUser user = new User().setId(\"5310d8e8598c9a0b24000005\");\nUserReply userReply = new UserReply(user);\nuserReply.setBody(\"Mighty fine shindig\");\n\nConversation.reply(\"66\", userReply);\n\nAdmin admin = new Admin().setId(\"1\");\nAdminReply adminReply = new AdminReply(admin);\nadminReply.setBody(\"These apples are healthsome\");\n\nConversation.reply(\"66\", adminReply);\n\nExample Request & Response (Admin Reply - Note)\ncurltext\n$ curl 'https://api.intercom.io/conversations/{id/last}/reply' \\\\\\n-X POST \\\\\\n-H 'Authorization: Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' -d\\n\\n{\\n  \\\"message_type\\\": \\\"note\\\",\\n  \\\"type\\\": \\\"admin\\\",\\n  \\\"admin_id\\\": \\\"814860\\\",\\n  \\\"body\\\": \\\"<html> <body>  <h2>An Unordered HTML List</h2>  <ul>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ul>    <h2>An Ordered HTML List</h2>  <ol>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ol>   </body> </html>\\\",\\n}\\n\n\n\nYou can reply to a conversation with a message from an admin or on behalf of a contact, or with a note for admins.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes, if not last\tThe identifier for the conversation as given by Intercom.\nlast\tString\tYes, if no id\tYou can also reply to the most recent conversation on a workspace by specifying last as the string.\nRequest Body Parameters\n\nFor a reply sent on behalf a contact:\n\nParameter\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tAlways comment.\ntype\tString\tYes\tAlways user.\nbody\tString\tYes\tThe text body of the comment.\nintercom_user_id\tString\tYes, if no user_id or email\tThe identifier for the contact as given by Intercom.\nuser_id\tString\tYes, if no intercom_user_id or email\tThe external_id you have defined for the contact.\nemail\tString\tYes, if no intercom_user_id or user_id\tThe email you have defined for the user.\nattachment_urls\tArray of Strings\tNo\tA list of image URLs that will be added as attachments. You can include up to 5 URLs.\n\nFor a reply sent on behalf of an admin:\n\nArgument\tType\tRequired?\tDescription\nmessage_type\tString\tYes\tAccepts comment or note.\ntype\tString\tYes\tAlways admin.\nadmin_id\tString\tYes\tThe id of the admin who is authoring the comment.\nbody\tString\tYes\tThe text body of the reply. Notes accept some HTML formatting.\nattachment_urls\tArray of Strings\tNo\tA list of URLs of files that will be added as attachments. You can include up to 5 attachments.\nMENTIONING ADMINS IN A NOTE\n\nIf you want to @mention an admin in a note during a conversation, you can insert the following HTML into the body of your request (as long as the message_type is note). You'll need to edit this to include your workspace's app ID, and the admin ID of who you want to mention:\\n<a class=\\\"entity_mention\\\" href=\\\"//app.intercom.io/apps/APP_ID/admin/ADMIN_ID\\\" rel=\\\"nofollow noopener noreferrer\\\" target=\\\"_blank\\\">Insert any text here\n\nResponse\n\nThis will return the Conversation which was replied to."
  },
  {
    "title": "Create a contact",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/contacts/create-contact/",
    "html": "Create a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts \\\\-X POST \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json'-H 'Content-Type: application/json' -d{\\t\\\"role\\\": \\\"user\\\",\\t\\\"external_id\\\": \\\"25\\\",\\t\\\"email\\\": \\\"wash@serenity.io\\\",\\t\\\"phone\\\": \\\"+1123456789\\\",\\t\\\"name\\\": \\\"Hoban Washburn\\\",\\t\\\"avatar\\\": \\\"https://example.org/128Wash.jpg\\\",\\t\\\"last_seen_at\\\": 1571069751,\\t\\\"signed_up_at\\\": 1571069751,\\t\\\"owner_id\\\": 127,\\t\\\"unsubscribed_from_emails\\\": false,\\t\\\"custom_attributes\\\": {\\t\\t\\\"paid_subscriber\\\": true,\\t\\t\\\"monthly_spend\\\": 155.5,\\t\\t\\\"team_mates\\\": 1\\t}}\n\nExample Errors\nhttphttp\nHTTP/1.1 409 CONFLICT{  \\\"type\\\": \\\"error.list\\\",  \\\"request_id\\\": \\\"80ec9d92-99ff-4da9-9a0e-c0ab7c42f7e7\\\",  \\\"errors\\\": [    {      \\\"code\\\": \\\"conflict\\\",      \\\"message\\\": \\\"A contact matching those details already exists with id=5da6f18e3d7cf967e4582d05\\\"    }  ]}\n\nHTTP/1.1 400 BAD REQUEST{  \\\"type\\\": \\\"error.list\\\",  \\\"request_id\\\": \\\"00043csj9iva7pl9mmmg\\\",  \\\"errors\\\": [    {      \\\"code\\\": \\\"parameter_invalid\\\",      \\\"message\\\": \\\"The owner specified is not a member of the workspace\\\"    }  ]}\n\n\nYou can create a new contact (ie. user or lead).\n\nRequest Body Parameters\nAttribute\tType\tRequired\tDescription\nrole\tString\tYes\tThe role of the contact. Accepted values are user or lead.\nexternal_id\tString\tYes - if role is user and email is blank\tA unique identifier for the contact which is given to Intercom\nemail\tString\tYes - if role is user and external_id is blank\tThe contacts email\nphone\tString\tNo\tThe contacts phone\nname\tString\tNo\tThe contacts name\navatar\tString\tNo\tAn image URL containing the avatar of a contact\nsigned_up_at\tTimestamp\tNo\tThe time specified for when a contact signed up\nlast_seen_at\tTimestamp\tNo\tThe time when the contact was last seen (either where the Intercom Messenger was installed or when specified manually)\nowner_id\tInteger\tNo\tThe id of an admin that has been assigned account ownership of the contact\nunsubscribed_from_emails\tBoolean\tNo\tWhether the contact is unsubscribed from emails\ncustom_attributes\tObject\tNo\tThe custom attributes which are set for the contact\nCREATING NEW CUSTOM DATA ATTRIBUTES\n\nYou can only write to custom data attributes that already exist on the workspace. If you need to create new attributes to write to, you should Create Data Attributes through the data Attributes API.\n\nResponse\n\nThis will return a Contact model of the contact you just created."
  },
  {
    "title": "Identify an admin",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/admins/view-the-current-admin/",
    "html": "Identify an admin\nOAUTH ONLY\n\nThis feature is only available when using OAuth. This requires the \"Read admins\" permission.\n\nYou can view the name, email and app ID of the current authorised admin via a GET request to https://api.intercom.io/me.\n\nResponse\n\nThis will return an Admin object, with an embedded app object (a workspace in legacy terminology).\n\nApp Object (a workspace)\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'admin'\nid\tstring\tThe id of the admin\nname\tstring\tThe name of the admin\nemail\tstring\tThe email address of the admin\nemail_verified\tboolean\tThis field will indicate whether the Intercom user has verified their email or not\napp.type\tstring\tvalue is 'app'\napp.id_code\tstring\tThe id of the app\napp.name\tstring\tThe name of the app\napp.region\tstring\tthe intercom region the app is located in\napp.created_at\ttimestamp\tWhen the app was created\napp.identity_verification\tboolean\tWhether or not the app uses identity verification\nSINGLE SIGN ON\n\nIf you are building a custom \"Log in with Intercom\" flow for your site, and you call the /me endpoint to identify the user logging, in you should not accept any sign ins from users with unverified email addresses as it poses a potential impersonation security risk."
  },
  {
    "title": "Retrieve an admin",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/admins/view-an-admin/",
    "html": "Retrieve an admin\nExample Request & Response\n$ curl https://api.intercom.io/admins/493881 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"type\": \"admin\",\n    \"id\": \"493881\",\n    \"name\": \"Hoban Washburne\",\n    \"email\": \"wash@serenity.io\",\n    \"away_mode_enabled\": false,\n    \"away_mode_reassign\": false,\n    \"team_ids\": [\n        814865\n    ]\n}\n\n<?php\n$admin = $intercom->admins->getAdmin(\"493881\");\n?>\n\nErrors for admins without inbox seats\n{\n    \"type\": \"error.list\",\n    \"request_id\": \"0002miv9og586ig3aln0\",\n    \"errors\": [\n        {\n            \"code\": \"action_forbidden\",\n            \"message\": \"This admin does not have Inbox access permissions\"\n        }\n    ]\n}\n\n\nYou can fetch the details of a single admin.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier of a given admin\nResponse\n\nThis will return an Admin object."
  },
  {
    "title": "Viewing the current admin and app",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/admins/viewing-the-current-admin/",
    "html": "Viewing the current admin and app\nOAUTH ONLY\n\nThis feature is only available when using OAuth. This requires the \"Read admins\" permission.\n\nYou can view the name, email and app ID of the current authorised admin via a GET request to https://api.intercom.io/me.\n\nReturns\n\nAn Admin model, with an embedded App object.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'admin'\nid\tstring\tThe id of the admin\nname\tstring\tThe name of the admin\nemail\tstring\tThe email address of the admin\nemail_verified\tboolean\tThis field will indicate whether the Intercom user has verified their email or not\napp.type\tstring\tvalue is 'app'\napp.id_code\tstring\tThe id of the app\napp.name\tstring\tThe name of the app\napp.created_at\ttimestamp\tWhen the app was created\napp.identity_verification\tboolean\tWhether or not the app uses identity verification\nSINGLE SIGN ON\n\nIf you are building a custom \"Log in with Intercom\" flow for your site, and you call the /me endpoint to identify the user logging, in you should not accept any sign ins from users with unverified email addresses as it poses a potential impersonation security risk."
  },
  {
    "title": "List all activity logs",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/admins/view-admin-activity-logs/",
    "html": "List all activity logs\nExample Request & Response\ncurlhtml\ncurl https://api.intercom.io/admins/activity_logs?created_at_after=489222000&created_at_before=685695600 \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json'\n\n\nExample Errors\n\nhttphttp\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\" => \\\"error.list\\\",\\n  \\\"request_id\\\" => nil,\\n  \\\"errors\\\" => [{\\n\\t\\\"code\\\" => \\\"parameter_not_found\\\",\\n\\t\\\"message\\\" => \\\"Please provide the following parameters: created_at_after\\\"\\n  }]\\n}\\n\n\nHTTP/1.1 403 RESTRICTED\\n{\\n  \\\"type\\\" => \\\"error.list\\\",\\n  \\\"request_id\\\" => nil,\\n  \\\"errors\\\" => [{\\n\\t\\\"code\\\" => \\\"api_plan_restricted\\\",\\n\\t\\\"message\\\" => \\\"This feature is not yet available to your app\\\"\\n  }]\\n}\n\n\nYou can get a log of activities by all admins in an app by sending a GET request to the URL https://api.intercom.io/admins/activity_logs.\n\nActivity List\nAttribute\tType\tDescription\ntype\tstring\tValue is activity_log.list\nactivity_logs\tarray\tA list of activity objects\npages\tobject\tOptional. A pagination object which may be empty, indication no further pages to fetch\nActivity Object\nAttribute\tType\tDescription\nactivity_type\tstring\tThe type of activity - see Activity Types & Descriptions below.\nactivity_description\tstring\tA sentence or two describing the activity - see Activity Types & Descriptions below.\nmetadata\tobject\tAn object containing information on the activity and what it modified\ncreated_at\ttimestamp\tThe time the activity was performed\nperformed_by\tobject\tAn Admin object of the admin who performed the activity\nid\tstring\tThe id representing the activity\nActivity Types & Descriptions\nType\tDescription\nadmin_assignment_limit_change\tA teammate changed their assignment limit\nadmin_away_mode_change\tA teammate changed their away mode and conversation reassignment settings\nadmin_deletion\tA teammate was removed from your workspace\nadmin_deprovisioned\tA teammate was deprovisioned from your workspace via SCIM\nadmin_invite_change\tThe permissions for a teammate invite were changed\nadmin_invite_creation\tA teammate invite was created\nadmin_invite_deletion\tA teammate invite was deleted\nadmin_login_failure\tA teammate tried to login with the wrong credentials\nadmin_login_success\tA teammate logged in successfully\nadmin_logout\tA teammate logged out\nadmin_password_reset_request\tA teammate requested a password reset\nadmin_password_reset_success\tA teammate's password was successfully reset\nadmin_permission_change\tThe permissions for a teammate were changed\nadmin_provisioned\tA teammate was provisioned on your workspace via SCIM\napp_admin_join\tA teammate joined your workspace (i.e. accepted your invite)\napp_authentication_method_change\tYour workspace's authentication methods were changed\napp_data_deletion\tA user or lead was deleted from your workspace\napp_data_export\tMessage or conversation data was exported from your workspace\napp_google_sso_domain_change\tYour workspace's Google SSO domain was changed\napp_identity_verification_change\tYour workspace's identity verification setting was changed\napp_name_change\tThe name of your workspace was changed\napp_outbound_address_change\tThe outbound email address was changed for your workspace\napp_package_installation\tAn app package was installed on your workspace\napp_package_token_regeneration\tAn access token for a specific app package was updated\napp_package_uninstallation\tAn app package was uninstalled from your workspace\napp_team_creation\tA team was created\napp_team_deletion\tA team was deleted\napp_team_membership_modification\tA team's membership was modified\napp_timezone_change\tAn app package was installed in your workspace\napp_webhook_creation\tA webhook subscription was created\napp_webhook_deletion\tA webhook subscription was deleted\narticles_in_messenger_enabled_change\tThe Messenger search for articles setting was changed\nbulk_delete\tUser or lead data was deleted from your workspace\nbulk_export\tUser or lead data was exported from your workspace\ncampaign_deletion\tA campaign was deleted from your workspace\ncampaign_state_change\tA campaign was changed on your workspace\nconversation_topic_change\tA conversation topic was changed\nconversation_topic_creation\tA conversation topic was created\nconversation_topic_deletion\tA conversation topic was deleted\nhelp_center_settings_change\tYour Help Center was turned on or off\ninbound_conversations_change\tThe Messenger inbound conversations setting was changed\ninbox_access_change\tThe inbox access setting was changed\nmessage_deletion\tA team was deleted from your workspace\nmessage_state_change\tA message's state was changed\nmessenger_look_and_feel_change\tThe Messenger look and feel setting was changed\nmessenger_search_required_change\tThe Messenger search required setting was changed\noffice_hours_change\tThe office hours setting was changed\nrole_change\tA role was changed\nrole_creation\tA role was created\nrole_deletion\tA role was deleted\nseat_change\tA teammate's seat was changed\nseat_revoke\tA teammate's seat was revoked\nsecurity_settings_change\tYour workspace's security settings were changed\ntemporary_expectation_change\tThe Messenger special notice settings were changed\nupfront_email_collection_change\tThe Messenger upfront email collection settings were changed\nwelcome_message_change\tThe Messenger welcome message settings were changed\nRequest Query Parameters\nParameter\tRequired?\tDescription\ncreated_at_after\tYes\tThe start date that you request data for. It must be formatted as a UNIX timestamp.\ncreated_at_before\tNo\tThe end date that you request data for. It must be formatted as a UNIX timestamp.\nResponse\n\nThis will return an Activity List which will contain an array titled activity_logs, in turn containing multiple Activity Objects."
  },
  {
    "title": "Adding to group conversations as admin",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/conversations/adding-to-group-conversations-as-admin/",
    "html": "Adding to group conversations as admin\nAdding a customer to a group conversation\nCUSTOMERS\n\nNote that customers refers to both users and leads.\n\n$ curl 'https://api.intercom.io/conversations/11055118659/customers' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"admin_id\": \"781236\",\n  \"customer\":{\n    \"intercom_user_id\": \"58c1c78946a0aa9ef45b098a\"\n  }\n}'\n\nHTTP/1.1 200 OK\n\n{\"customers\":[\n  {\"type\":\"user\",\"id\":\"597f02cb22f4bb37597e0b7d\"}, \n  {\"type\":\"lead\",\"id\":\"58ff3f670f14ab4f1aa83750\"}]\n}\n\n\nCustomers can be added to a conversation via a POST method to https://api.intercom.io/conversations/{convo_id}/customers/, which accepts a JSON object describing the customer.\n\nArguments\nArgument\tRequired\tDescription\nadmin_id\tYes\tYou must provide the ID of a valid admin to add a customer to the conversation\ncustomer\tYes\tJSON object describing the customer that you want to add to the conversation.\n\nCustomer object\n\nArgument\tRequired\tDescription\nintercom_user_id\tone of\tThe Intercom defined id representing the user (in the URL)\nuser_id\tone of\tThe user id you have defined for the user (or auto defined in the case of leads)\nemail\tone of\tThe email you have defined for the user\nNOTE ABOUT CUSTOMERS WITHOUT AN EMAIL\n\nIf you try to add a customer via intercom_user_id or user_id which does not have an email you will receive an error. Alternatively, If you add a customer via the email parameter and there is no user/lead in the system for that customer then we will create a new lead."
  },
  {
    "title": "Set an admin to away",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/admins/set-admin-away-mode/",
    "html": "Set an admin to away\n\nYou can set an Admin as away for the Inbox.\n\nRequest Body Parameters\nAttribute\tType\tDescription\nid\tstring\tThe id of the admin you want to set away mode or re-assign conversations.\naway_mode_enabled\tboolean\tSet to 'true' to change the status of the admin to away.\naway_mode_reassign\tboolean\tSet to 'true' to assign any new conversation replies to your default inbox.\nExample Request & Response\ncurltext\n$ curl https://api.intercom.io/admins/814860/away \\\\\\n-X PUT \\\\\\n-H 'Authorization: Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'  \\\\\\n-H 'Content-Type: application/json' -d\\n\\n{\\n  \\\"away_mode_enabled\\\": true,\\n  \\\"away_mode_reassign\\\": false\\n\\n}\n\nExample Errors\nAdmin without seat\n{\\n    \\\"type\\\": \\\"error.list\\\",\\n    \\\"request_id\\\": \\\"0002miv9og586ig3aln0\\\",\\n    \\\"errors\\\": [\\n        {\\n            \\\"code\\\": \\\"action_forbidden\\\",\\n            \\\"message\\\": \\\"This admin does not have Inbox access permissions\\\"\\n        }\\n    ]\\n}\n\nResponse\n\nThis will return an Admin model of the admin set away."
  },
  {
    "title": "List all admins",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/admins/list-admins/",
    "html": "List all admins\nExample Request & Response\n$ curl https://api.intercom.io/admins \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n{\n    \"type\": \"admin.list\",\n    \"admins\": [\n        {\n        \t\t\"type\": \"admin\",\n            \"id\": \"493881\",\n      \t\t\t\"name\": \"Hoban Washburne\",\n      \t\t\t\"email\": \"wash@serenity.io\"\n            \"away_mode_enabled\": false,\n            \"away_mode_reassign\": false,\n            \"team_ids\": [\n                814865\n            ]\n        },\n        {\n            \"type\": \"admin\",\n            \"email\": \"mal@serenity.io\",\n            \"id\": \"646303\",\n            \"name\": \"Malcolm Reynolds \",\n            \"away_mode_enabled\": true,\n            \"away_mode_reassign\": false,\n            \"team_ids\": [\n                814865\n            ]\n        },\n        {\n            \"type\": \"admin\",\n            \"email\": \"jayne@serenity.io\",\n            \"id\": \"1195856\",\n            \"name\": \"Jayne Cobb \",\n            \"away_mode_enabled\": false,\n            \"away_mode_reassign\": false,\n            \"team_ids\": [\n                814865\n            ]\n        },\n        {\n            \"type\": \"team\",\n            \"email\": null,\n            \"id\": \"814865\",\n            \"name\": \"SerenityTeam\",\n            \"away_mode_enabled\": false,\n            \"away_mode_reassign\": false,\n            \"admin_ids\": [\n                493881,\n                646303,\n                1195856\n            ]\n        }\n    ]\n}\n\nintercom.admins.all.each { ... }\n\n<?php\n$admins= $intercom->admins->getAdmins();\nforeach ($admins->admins as $admin) {\n    print_r($admin->id);\n}?>\n\nAdminCollection admins = Admin.list();\n// get first page...\nList<Admin> pageItems = admins.getPageItems();\n// ...or iterate over pages\nwhile (admins.hasNext()) {\n    System.out.println(admins.next().getName());\n}\n\n\nYou can fetch a list of admins for a given workspace.\n\nResponse\n\nThis will return a list of Admin Objects for a given workspace.\n\nAdmin List\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'admin.list'\nadmins\tarray\tA list of admin objects"
  },
  {
    "title": "View the current admin and app",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/admins/view-the-current-admin/",
    "html": "View the current admin and app\nOAUTH ONLY\n\nThis feature is only available when using OAuth. This requires the \"Read admins\" permission.\n\nYou can view the name, email and app ID of the current authorised admin via a GET request to https://api.intercom.io/me.\n\nReturns\n\nAn Admin object, with an embedded App object.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'admin'\nid\tstring\tThe id of the admin\nname\tstring\tThe name of the admin\nemail\tstring\tThe email address of the admin\nemail_verified\tboolean\tThis field will indicate whether the Intercom user has verified their email or not\napp.type\tstring\tvalue is 'app'\napp.id_code\tstring\tThe id of the app\napp.name\tstring\tThe name of the app\napp.region\tstring\tThe Intercom region the app is located in\napp.created_at\ttimestamp\tWhen the app was created\napp.identity_verification\tboolean\tWhether or not the app uses identity verification\nSINGLE SIGN ON\n\nIf you are building a custom \"Log in with Intercom\" flow for your site, and you call the /me endpoint to identify the user logging, in you should not accept any sign ins from users with unverified email addresses as it poses a potential impersonation security risk."
  },
  {
    "title": "Set admin away mode",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/admins/set-admin-away-mode/",
    "html": "Set admin away mode\n\nSet away mode\nIf you want to set an admin in away mode you can do this via a PUT request. You can also choose whether you want conversation replies to be automatically reassigned to your default inbox if you like. For more about away mode please see here.\n\nAttribute\tType\tDescription\nid\tstring\tThe id of the admin you want to set away mode or re-assign conversations.\naway_mode_enabled\tboolean\tSet to 'true' to change the status of the admin to away.\naway_mode_reassign\tboolean\tSet to 'true' to assign any new conversation replies to your default inbox.\ncurltext\n$ curl https://api.intercom.io/admins/814860/away \\\\\\n-X PUT \\\\\\n-H 'Authorization: Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'  \\\\\\n-H 'Content-Type: application/json' \\\\\\n-d \\t'\\n{\\n  \\\"away_mode_enabled\\\": true,\\n  \\\"away_mode_reassign\\\": false\\n\\n}'\n"
  },
  {
    "title": "View an Admin",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/admins/view-an-admin/",
    "html": "View an Admin\nRetrieve a single admin\n$ curl https://api.intercom.io/admins/493881 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"type\": \"admin\",\n    \"id\": \"493881\",\n    \"name\": \"Hoban Washburne\",\n    \"email\": \"wash@serenity.io\",\n    \"away_mode_enabled\": false,\n    \"away_mode_reassign\": false,\n    \"team_ids\": [\n        814865\n    ]\n}\n\n<?php\n$admin = $intercom->admins->getAdmin(\"493881\");\n?>\n\n\nEach admin object has its own URL, where the {id} is the value of the admins id field:\n\nhttps://api.intercom.io/admins/{id}"
  },
  {
    "title": "View an Admin",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/admins/view-an-admin/",
    "html": "View an Admin\nRetrieve a single admin\n$ curl https://api.intercom.io/admins/493881 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"type\": \"admin\",\n    \"id\": \"493881\",\n    \"name\": \"Hoban Washburne\",\n    \"email\": \"wash@serenity.io\",\n    \"away_mode_enabled\": false,\n    \"away_mode_reassign\": false,\n    \"team_ids\": [\n        814865\n    ]\n}\n\n<?php\n$admin = $intercom->admins->getAdmin(\"493881\");\n?>\n\n\nEach admin object has its own URL, where the {id} is the value of the admins id field:\n\nhttps://api.intercom.io/admins/{id}"
  },
  {
    "title": "Archive a contact",
    "url": "https://developers.intercom.com/docs/references/2.0/rest-api/contacts/archive-a-contact/",
    "html": "Archive a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/archive \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\\n\n\n\nYou can archive a single contact.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return an object with details on the archived contact.\n\nAttribute\tType\tDescription\nid\tString\tThe unique identifier for the contact which is given by Intercom\nobject\tString\tThe type of object - contact\narchived\tBoolean\tWhether the contact has been archived - true"
  },
  {
    "title": "Set admin away mode",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/admins/set-admin-away-mode/",
    "html": "Set admin away mode\n\nSet away mode\nIf you want to set an admin in away mode you can do this via a PUT request. You can also choose whether you want conversation replies to be automatically reassigned to your default inbox if you like. For more about away mode please see here.\n\nAttribute\tType\tDescription\nid\tstring\tThe id of the admin you want to set away mode or re-assign conversations.\naway_mode_enabled\tboolean\tSet to 'true' to change the status of the admin to away.\naway_mode_reassign\tboolean\tSet to 'true' to assign any new conversation replies to your default inbox.\n$ curl https://api.intercom.io/admins/814860/away \\\n-X PUT \\\n-H 'Authorization: Bearer <Your access token>' \\\n-H 'Accept: application/json'  \\\n-H 'Content-Type: application/json' \\\n-d \t'\n{\n  \"id\": 814860,\n  \"away_mode_enabled\": true,\n  \"away_mode_reassign\": false\n\n}'\n\nHTTP/1.1 200 Ok\n\n{\n    \"type\": \"admin\",\n    \"id\": \"814860\",\n    \"name\": \"Hoban Washburne\",\n    \"email\": \"wash@serenity.io\",\n    \"away_mode_enabled\": true,\n    \"away_mode_reassign\": false,\n    \"team_ids\": [\n        814865\n    ]\n}\n"
  },
  {
    "title": "Admins",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/admins/admins/",
    "html": "Admins\n\nAdmins are how you can view your teammates within Intercom.\n\nThe API currently only supports viewing the admins already created. Creating and managing admins must be done through the Intercom App."
  },
  {
    "title": "List Admins",
    "url": "https://developers.intercom.com/docs/references/1.0/rest-api/admins/list-admins/",
    "html": "List Admins\nList Admins\n$ curl https://api.intercom.io/admins \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n{\n    \"type\": \"admin.list\",\n    \"admins\": [\n        {\n        \t\t\"type\": \"admin\",\n            \"id\": \"493881\",\n      \t\t\t\"name\": \"Hoban Washburne\",\n      \t\t\t\"email\": \"wash@serenity.io\"\n            \"away_mode_enabled\": false,\n            \"away_mode_reassign\": false,\n            \"team_ids\": [\n                814865\n            ]\n        },\n        {\n            \"type\": \"admin\",\n            \"email\": \"mal@serenity.io\",\n            \"id\": \"646303\",\n            \"name\": \"Malcolm Reynolds \",\n            \"away_mode_enabled\": true,\n            \"away_mode_reassign\": false,\n            \"team_ids\": [\n                814865\n            ]\n        },\n        {\n            \"type\": \"admin\",\n            \"email\": \"jayne@serenity.io\",\n            \"id\": \"1195856\",\n            \"name\": \"Jayne Cobb \",\n            \"away_mode_enabled\": false,\n            \"away_mode_reassign\": false,\n            \"team_ids\": [\n                814865\n            ]\n        },\n        {\n            \"type\": \"team\",\n            \"email\": null,\n            \"id\": \"814865\",\n            \"name\": \"SerenityTeam\",\n            \"away_mode_enabled\": false,\n            \"away_mode_reassign\": false,\n            \"admin_ids\": [\n                493881,\n                646303,\n                1195856\n            ]\n        }\n    ]\n}\n\nintercom.admins.all.each { ... }\n\n<?php\n$admins= $intercom->admins->getAdmins();\nforeach ($admins->admins as $admin) {\n    print_r($admin->id);\n}?>\n\nAdminCollection admins = Admin.list();\n// get first page...\nList<Admin> pageItems = admins.getPageItems();\n// ...or iterate over pages\nwhile (admins.hasNext()) {\n    System.out.println(admins.next().getName());\n}\n\n\nAn App's admins can be fetched by sending a GET request to https://api.intercom.io/admins/.\n\nAdmin List\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'admin.list'\nadmins\tarray\tA list of admin objects\npages\tobject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch.\nRequest Parameters\n\nNone.\n\nReturns\n\nA list of admin objects for the App. The result may also have a pages object if the response is paginated."
  },
  {
    "title": "Admins",
    "url": "https://developers.intercom.com/docs/references/1.2/rest-api/admins/admins/",
    "html": "Admins\n\nAdmins are how you can view your teammates within Intercom.\n\nThe API currently only supports viewing the admins already created. Creating and managing admins must be done through the Intercom App."
  },
  {
    "title": "Delete an article",
    "url": "https://developers.intercom.com/docs/references/2.1/rest-api/articles/delete-an-article/",
    "html": "Delete an article\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/articles/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can delete a single article by making a DELETE request to https://api.intercom.io/articles/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the article which is given by Intercom.\nResponse\nKey\tType\tDescription\nid\tString\tThe unique identifier for the article which you provided in the URL.\nobject\tString\tThe type of object which was deleted - article.\ndeleted\tBoolean\tWhether the article was deleted successfully or not."
  },
  {
    "title": "Card Creation Options",
    "url": "https://developers.intercom.com/docs/references/canvas-kit/requestobjects/card-creation-options/#card-creation-options",
    "html": "Card Creation Options\nDescription\n\nThe card_creation_options object is a JSON hash containing key-value pairs. These key-value pairs either represent:\n\nData that was sent within the results object in response to the Configure request.\nData that was sent within the card_creation_options object in response to the Submit request.\nExample Object\ncard_creation_options: { \"key\": \"value\" } //Can be more than one pair\n"
  },
  {
    "title": "Users",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/users/users/",
    "html": "Users\n\nUsers is no longer available as a resource. In order to see information and take action on users, you should use the Contacts API."
  },
  {
    "title": "Submit action",
    "url": "https://developers.intercom.com/docs/references/unstable/canvas-kit/actioncomponents/submit-action/",
    "html": "Submit action\n\nA submit action triggers a Submit Request to be sent. This request will include all values which have been entered into all the interactive components on the current canvas.\n\nParameters\nParameters\nParameters\tPossible Values\tRequired\tDescription\ntype\tsubmit\tYes\tThe type of action you are attaching to a component.\nExample Object\naction: {\n  \"type\": \"submit\"\n}\n"
  },
  {
    "title": "Retrieve a visitor",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/visitors/view-a-visitor/",
    "html": "Retrieve a visitor\nExample ID Request\n$ curl \\\n-s https://api.intercom.io/visitors/<id> \\   \n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nor \n\n$ curl \\\n-s https://api.intercom.io/visitors\\?user_id\\=16e690c0-485a-4e87-ae98-a326e788a4f7 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"visitor\",\n  \"id\": \"573479f784c5acde6a000575\",\n  \"user_id\": \"16e690c0-485a-4e87-ae98-a326e788a4f7\",\n  \"email\": \"winstonsmith@truth.org\",\n  \"name\": \"Winston Smith\",\n  ...\n}\n# NB: Full Visitor objects are returned\n\nvisitor = intercom.visitors.find(:id => \"530370b477ad7120001d\")\nvisitor = intercom.visitors.find(:user_id => \"8a88a590-e1c3-41e2-a502-e0649dbf721c\")\n\n\nYou can fetch the details of a single visitor.\n\nRequest Path Parameters\nParameter\tRequired?\tDescription\nid\tOne of\tId provided by Intercom.\n?user_id=\tOne of\tTo get the visitor user_id from the browser you can use the Intercom JS SDK following method : Intercom('getVisitorId').\nResponse\n\nThis will return a Visitor Model."
  },
  {
    "title": "Attach a contact",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/tags/tag-contact/",
    "html": "Attach a contact\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/tags \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' -d\\n\\n{\\n\\t\\\"id\\\": \\\"2084335\\\"\\n}\n\nExample Errors\nhttphtml\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can tag a single contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nRequest Body Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the tag which is given by Intercom\nResponse\n\nThis will return a Tag model for the tag that was added to the contact."
  },
  {
    "title": "The translation model",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/subscription-types/the-translation-model/",
    "html": "The translation model\nExample translation Object\nJSON\n{\\n  \\\"name\\\": \\\"Announcements\\\",\\n  \\\"description\\\": \\\"Offers, product and feature announcements\\\",\\n  \\\"locale\\\": \\\"en\\\"\\n}\n\n\nA translation object contains the localised details of a subscription type.\n\nTranslation Object\nKey\tType\tDescription\nname\tString\tThe localised name of the subscription type.\ndescription\tString\tThe localised description of the subscription type.\nlocale\tString\tThe two character identifier for the language of the translation object."
  },
  {
    "title": "The visitor model",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/visitors/visitor-object/",
    "html": "The visitor model\n\nVisitors are useful for representing anonymous people that have not yet been identified. They usually represent website visitors. Visitors are not visible in Intercom platform.\nThe Visitors resource provides methods to fetch, update, convert and delete.\n\nVisitor Object\nAttribute\tType\tDescription\ntype\tString\tValue is 'visitor'.\nid\tString\tThe Intercom defined id representing the Visitor.\ncreated_at\tDate (UNIX timestamp)\tThe time the Visitor was added to Intercom.\nupdated_at\tDate (UNIX timestamp)\tThe last time the Visitor was updated.\nuser_id\tString\tAutomatically generated identifier for the Visitor.\nname\tString\tThe name of the Visitor.\ncustom_attributes\tObject\tThe custom attributes you have set on the Visitor.\nlast_request_at\tDate (UNIX timestamp)\tThe time the Lead last recorded making a request.\navatar\tObject\tAn avatar object for the Visitor.\nunsubscribed_from_emails\tBoolean\tWhether the Visitor is unsubscribed from emails.\nlocation_data\tObject\tA Location Object relating to the Visitor.\nsocial_profiles\tList\tA list of social profiles associated with the Visitor.\nsegments\tList\tA list of segments the Visitor.\ntags\tList\tA list of tags associated with the Visitor."
  },
  {
    "title": "The tag model",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/tags/tag-model/",
    "html": "The tag model\nExample Object\n{\\n  \\\"id\\\": \\\"17513\\\",\\n  \\\"name\\\": \\\"independent\\\",\\n  \\\"type\\\": \\\"tag\\\"\\n}\n\n\nA tag allows you to label your contacts and companies and list them using that tag.\n\nTag Object\nKey\tType\tDescription\ntype\tstring\tvalue is 'tag'\nid\tstring\tThe id of the tag\nname\tstring\tThe name of the tag"
  },
  {
    "title": "Tag companies",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/tags/tag-companies/",
    "html": "Tag companies\nExample Request & Response\n$ curl https://api.intercom.io/tags \\\n-XPOST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d'\n{\n  \"name\": \"Independent\",\n  \"companies\": [\n    {\n      \"id\" : \"53427b7ecce5722303000003\"\n    }\n  ]\n}\n\nHTTP/1.1 200 Ok\n\n{\n  \"type\": \"tag\",\n  \"name\": \"Independent\",\n  \"id\": \"17513\"\n}\n\nintercom.tags.tag(name: 'Independent', users: [{ id: \"42ea2f1b93891f6a99000427\" }, { email: \"foo@bar.com\" }])\n\n<?php\n# Note that you can use either id, user_id or email to tag a user.\n# You only need to use one per user, e.g. the below will tag\n# three users if each identifier is for a different, unique user\n$intercom->tags->tag([\n    \"name\" => \"VIPs\",\n    \"users\" => [\n        [\"id\" => \"5977e20941abfc5aae4552d1\"],\n        [\"user_id\" => \"12345\"],\n        [\"email\" => \"camus@phil.com\"]\n    ]\n]);\n?>\n\nUser one = new User().setEmail(\"river@serenity.io\");\nUser two = new User().setEmail(\"simon@serenity.io\")\nList<User> users = Lists.newArrayList(one, two);\nTag.tag(tag, new UserCollection(users));\n\n\nYou can tag a single or a list of companies.\n\nRequest Body Parameters\nParameters\tType\tRequired\tDescription\nname\tString\tYes\tThe name of the tag, which will be created if not found.\ncompanies\tObject\tYes\tAn array of objects with the unique id or company_id of the company to be tagged.\nResponse\n\nThis will return a Tag Model for the tag that was applied to the given company."
  },
  {
    "title": "Untag companies",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/tags/untag-companies/",
    "html": "Untag companies\nExample Request & Response\n$ curl https://api.intercom.io/tags \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d'\n{\n  \"name\": \"Independent\",\n  \"companies\": [\n    {\n      \"id\" : \"53427b7ecce5722303000003\",\n      \"untag\": true\n    }\n  ]\n}\n\nHTTP/1.1 200 Ok\n\n{\n  \"type\": \"tag\",\n  \"name\": \"Follow Up\",\n  \"id\": \"17513\"\n}\n\n\nYou can untag a single or a list of companies.\n\nRequest Body Parameters\nParameters\tType\tRequired\tDescription\nname\tString\tYes\tThe name of the tag which will be untagged from the.\ncompanies\tObject\tYes\tAn array of objects with the unique id or company_id of the company to be untagged, and the untag boolean set to true.\nResponse\n\nThis will return a Tag model for the tag that was unapplied to the given company."
  },
  {
    "title": "The subscription type model",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/subscription-types/the-subscription-type-model/",
    "html": "The subscription type model\nExample Subscription type Object\nJSON\n{\\n  \\\"type\\\": \\\"subscription\\\",\\n  \\\"id\\\": \\\"1\\\",\\n  \\\"state\\\": \\\"live\\\",\\n  \\\"consent_type\\\": \\\"opt_out\\\",\\n  \\\"default_translation\\\": {\\n    \\\"name\\\": \\\"Announcements\\\",\\n    \\\"description\\\": \\\"Offers, product and feature announcements\\\",\\n    \\\"locale\\\": \\\"en\\\"\\n  },\\n  \\\"translations\\\": [\\n    {\\n      \\\"name\\\": \\\"Ankündigungen\\\",\\n      \\\"description\\\": \\\"Angebote, Produkt- und Funktionsankündigungen\\\",\\n      \\\"locale\\\": \\\"de\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Announcements\\\",\\n      \\\"description\\\": \\\"Offers, product and feature announcements\\\",\\n      \\\"locale\\\": \\\"en\\\"\\n    }\\n  ]\\n}\n\n\nA subscription type lets customers easily opt out of non-essential communications without missing what's important to them.\n\nSubscription type Object\nKey\tType\tDescription\ntype\tString\tThe type of the object - subscription\nid\tString\tThe unique identifier representing the subscription type.\nstate\tString\tThe state of the subscription type: live, draft, archived.\ndefault_translation\tObject\tA translation object with the localised version of the subscription type in the default language for the workspace.\ntranslations\tArray\tAn array of translations objects with the localised version of the subscription type in each available locale within your translation settings.\nconsent_type\tString\tDescribes the type of consent, this is always opt_out."
  },
  {
    "title": "Update a visitor",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/visitors/update-a-visitor/",
    "html": "Update a visitor\nExample Request\n$ curl https://api.intercom.io/visitors \\\n-X PUT \\\n-H 'Authorization:Bearer <Your access token>'  \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d '\n{\n  \"user_id\": \"124\",\n  \"name\": \"Winston Smith\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 9\n  }\n}'\n\nHTTP/1.1 200 OK\n\n{\n  \"user_id\": \"124\",\n  \"name\": \"Winston Smith\",\n  \"custom_attributes\": {\n    \"paid_subscriber\" : true,\n    \"monthly_spend\": 155.5,\n    \"team_mates\": 9\n  }\n  \n  # and the rest of the Visitor model\n}'\n\nvisitor.name = \"Winston Smith\"\nvisitor.custom_attribute[:foo] = 'bar'\nintercom.visitors.save(visitor)\n\n\nSending a PUT request to /visitors and passing identifiers (user_id or id) in the body will result in an update of an existing Visitor.\n\nRequest Body Parameters\nArgument\tType\tRequired?\tDescription\nid\tString\tOne of\tA unique identified for the visitor which is given by Intercom.\nuser_id\tString\tOne of\tA unique identified for the visitor which is given by you.\nname\tString\tNo\tThe visitor's name.\ncustom_attributes\tObject\tNo\tThe custom attributes which are set for the visitor.\nResponse\n\nThis will return a Visitor Model of the visitor you just updated."
  },
  {
    "title": "List all tags",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/tags/list-tags-for-an-app/",
    "html": "List all tags\nExample List Tag Request\n$ curl https://api.intercom.io/tags \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n{\n  \"type\": \"list\",\n  \"data\": [\n    {\n      \"type\": \"tag\",\n      \"name\": \"Beta User\",\n      \"id\": 1\n    },\n    {\n      \"type\": \"tag\",\n      \"name\": \"Amazing User\",\n      \"id\": 2\n    },\n    {\n      \"type\": \"tag\",\n      \"name\": \"Epic User\",\n      \"id\": 3\n    }\n  ]\n}\n\nintercom.tags.all.each { ... }\n\n<?php\n$tags= $intercom->tags->getTags([]);\nforeach ($tags->tags as $tag) {\n    print \"id:\".$tag->id.\" name:\".$tag->name.\"\\n\";\n}?>\n\nTagCollection tags = Tag.list();\nwhile (tags.hasNext()) {\n    out.println(tags.next().getId());\n}\n\n\nYou can list all tags.\n\nResponse\n\nA list of tag objects.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'list'\ntags\tarray\tA list of tag objects"
  },
  {
    "title": "Delete a visitor",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/visitors/delete-a-visitor/",
    "html": "Delete a visitor\nExample Request & Response\ncurlcurl\n$ curl \\\\\\nhttps://api.intercom.io/visitors/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 Ok\\n\\n{\\n  \\\"type\\\": \\\"visitor\\\",\\n  \\\"id\\\": \\\"530370b477ad7120001d\\\",\\n  \\\"user_id\\\": \\\"8a88a590-e1c3-41e2-a502-e0649dbf721c\\\"\\n  ...\\n}\\n\n\n\nYou can delete a single visitor.\n\nRequest Path Parameters\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the visitor which is given by Intercom.\nResponse\n\nThis will return a Visitor Model of the visitor you just deleted."
  },
  {
    "title": "Detach a conversation",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/tags/detach-a-tag-from-a-conversation/",
    "html": "Detach a conversation\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/conversations/<id>/tags/<tag_id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' -d\\n\\n{\\n  \\\"admin_id\\\": \\\"123\\\"\\n}\\n\n\nExample Errors\nhttphtml\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can untag a single conversation.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the conversation which is given by Intercom\ntag_id\tString\tYes\tThe unique identifier for the tag which is given by Intercom\nRequest Body Parameter\nParameter\tType\tRequired\tDescription\nadmin_id\tString\tYes\tThe unique identifier for the admin who is removing the tag.\nResponse\n\nThis will return a Tag model for the tag that was removed from the conversation."
  },
  {
    "title": "Create or update a tag",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/tags/create-and-update-tags/",
    "html": "Create or update a tag\nExample Request & Response\n$ curl https://api.intercom.io/tags \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json' \\\n-H 'Content-Type: application/json' -d'\n{\n  \"name\": \"Independent\"\n}'\n\nHTTP/1.1 200 Ok\n\n{\n  \"type\": \"tag\",\n  \"name\": \"Independent\",\n  \"id\": \"17513\"\n}\n\nintercom.tags.tag(name: 'Independent', users: [{ id: \"42ea2f1b93891f6a99000427\" }])\n\n<?php\n$intercom->tags->tag([\"name\" => \"php-tag\"]);\n?>\n\nTag t = new Tag().setName(\"Independent\");\nt = Tag.create(t);\n\n\nYou can create or update a tag.\n\nRequest Body Parameters\nAttribute\tRequired\tDescription\nname\tYes\tThe name of the tag, which will be created if not found, or the new name for the tag if this is an update request. Names are case insensitive.\nid\tOnly for update\tThe id of tag to updates.\nResponse\n\nThis will return a Tag Model of the tag you just created or updated."
  },
  {
    "title": "List all subscription types",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/subscription-types/list-all-subscription-types/",
    "html": "List all subscription types\nExample List Subscription Types Request\n$ curl https://api.intercom.io/subscription_types \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\n{\n  \"type\": \"list\",\n  \"data\": [\n    {\n      \"type\": \"subscription\",\n      \"id\": \"1\",\n      \"state\": \"live\",\n      \"consent_type\": \"opt_out\",\n      \"default_translation\": {\n        \"name\": \"Announcements\",\n        \"description\": \"Offers, product and feature announcements\",\n        \"locale\": \"en\"\n      },\n      \"translations\": [\n        {\n          \"name\": \"Ankündigungen\",\n          \"description\": \"Angebote, Produkt- und Funktionsankündigungen\",\n          \"locale\": \"de\"\n        },\n        {\n          \"name\": \"Announcements\",\n          \"description\": \"Offers, product and feature announcements\",\n          \"locale\": \"en\"\n        }\n      ]\n    },\n    {\n      \"type\": \"subscription\",\n      \"id\": \"2\",\n      \"state\": \"live\",\n      \"consent_type\": \"opt_out\",\n      \"default_translation\": {\n        \"name\": \"Newsletter\",\n        \"description\": \"The latest news and updates, on a regular basis\",\n        \"locale\": \"en\"\n      },\n      \"translations\": [\n        {\n          \"name\": \"Newsletter\",\n          \"description\": \"Regelmäßig die neuesten Nachrichten und Updates\",\n          \"locale\": \"de\"\n        },\n        {\n          \"name\": \"Newsletter\",\n          \"description\": \"The latest news and updates, on a regular basis\",\n          \"locale\": \"en\"\n        }\n      ]\n    },\n    {\n      \"type\": \"subscription\",\n      \"id\": \"3\",\n      \"state\": \"live\",\n      \"consent_type\": \"opt_out\",\n      \"default_translation\": {\n        \"name\": \"Best practices\",\n        \"description\": \"Tips, tricks and recommendations\",\n        \"locale\": \"en\"\n      },\n      \"translations\": [\n        {\n          \"name\": \"Best Practices\",\n          \"description\": \"Tipps, Tricks und Empfehlungen\",\n          \"locale\": \"de\"\n        },\n        {\n          \"name\": \"Best practices\",\n          \"description\": \"Tips, tricks and recommendations\",\n          \"locale\": \"en\"\n        }\n      ]\n    }\n  ]\n}\n\n\nYou can list all subscription types.\n\nResponse\n\nA list of subscription type objects.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'list'\ndata\tarray\tA list of subscription type objects"
  },
  {
    "title": "Delete a tag",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/tags/delete-a-tag/",
    "html": "Delete a tag\nExample Delete Tag Request\n$ curl https://api.intercom.io/tags/17513 \\\n-X DELETE \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n# Not exposed in Ruby client\n\n<?php\n// Not exposed in PHP client\n?>\n\nTag.delete(tag);\n\n\nYou can delete a single tag.\n\nRequest Path Parameters\nParemeter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier of the tag.\nResponse\n\nThis will return a Tag Model of the tag you just deleted."
  },
  {
    "title": "Detach a contact from a tag",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/tags/untag-contact/",
    "html": "Detach a contact from a tag\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<contact_id>/tags/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\n\nExample Errors\nhttphtml\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can untag a single contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\ncontact_id\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nid\tString\tYes\tThe unique identifier for the tag which is given by Intercom\nResponse\n\nThis will return a Tag model for the tag that was removed from the contact."
  },
  {
    "title": "Retrieve a note",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/notes/view-a-note/",
    "html": "Retrieve a note\nExample Request\n$ curl https://api.intercom.io/notes/<id> \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"note\",\n  \"id\": \"2\",\n  \"created_at\": 1389913951,\n  \"body\": \"<p>Text for my note</p>\",\n  \"user\": {\n      \"id\": \"5310d8e8598c9a0b24000005\",\n      \"type\": \"user\"\n    },\n  \"author\": {\n    \"type\": \"admin\",\n    \"id\": \"21\",\n    \"name\": \"Jayne Cobb\",\n    \"email\": \"jayne@serenity.io\",\n    \"avatar\" : {\n       \"type\":\"avatar\",\n      \"image_url\": \"http://example.org/128Jayne.jpg\"\n    },\n    \"companies\": []\n  }\n}\n\nintercom.notes.find(:id => note)\n\n<?php\n$note = $intercom->notes->getNote(\"9259097\");\n?>\n\nNote note = Note.find(\"2\");\n\n\nYou can fetch the details of a single note.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier of a given note.\nResponse\n\nThis will return a Note model."
  },
  {
    "title": "Retrieve a team",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/teams/view-a-team/",
    "html": "Retrieve a team\nExample Request & Response\n$ curl https://api.intercom.io/teams/2744328 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"admin_ids\": [\n        646303,\n        814860\n    ],\n    \"id\": \"2744328\",\n    \"name\": \"the_a_team\",\n    \"type\": \"team\"\n}\n\n\nYou can fetch the details of a single team, containing an array of admins that belong to this team.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier of a given team.\nResponse\n\nThis will return a Team Object."
  },
  {
    "title": "Retrieve a segment",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/segments/view-a-segment/",
    "html": "Retrieve a segment\nExample Request & Response\n$ curl https://api.intercom.io/segments/53203e244cba153d39000062 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"segment\",\n  \"id\": \"53203e244cba153d39000062\",\n  \"name\": \"New\",\n  \"created_at\": 1394621988,\n  \"updated_at\": 1394622004\n}\n\nintercom.segments.find(:id => '1234')\n\nSegment segment = Segment.find(\"1234\");\n\n\nYou can fetch the details of a single segment.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identified of a given segment.\nRequest Query Parameters\nParameter\tType\tRequired?\tDescription\ninclude_count\tBoolean\tNo\tIncludes the count of contacts that belong to a given segment.\nResponse\n\nThis will return a Segment Model."
  },
  {
    "title": "Leads",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/leads/leads/",
    "html": "Leads\n\nContacts (for Leads only) is no longer available as a resource. In order to see information and take action on leads, you should be using the Contacts API."
  },
  {
    "title": "The segment model",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/segments/segment-model/",
    "html": "The segment model\nExample Segment Object\n{\\n  \\\"type\\\": \\\"segment\\\",\\n  \\\"id\\\": \\\"53203e244cba153d39000062\\\",\\n  \\\"name\\\": \\\"New\\\",\\n  \\\"created_at\\\": 1394621988,\\n  \\\"updated_at\\\": 1394622004\\n}\n\n\nA segment is a group of your contacts defined by rules that you set. Contacts are automatically added to the segment every time the contact updates to match those rules. You can use Search for contacts to find contacts that match the same rules.\n\nSegment Object\nKey\tType\tDescription\ntype\tstring\tvalue is segment'.\nid\tstring\tThe unique identifier representing the segment.\nname\tstring\tThe name of the segment.\ncreated_at\ttimestamp\tThe time the segment was created.\nupdated_at\ttimestamp\tThe time the segment was updated.\nperson_type\tstring\tType of the record: user or lead.\ncount\tinteger\tThe number of items in the user segment. It's returned when include_count=true is included in the request."
  },
  {
    "title": "The message model",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/messages/messages-model/",
    "html": "The message model\nExample Message Object\n{\n    \"type\": \"message\",\n    \"id\": \"489373052\",\n    \"created_at\": 1539897198,\n    \"subject\": \"This is the subject - if it's an email\",\n    \"body\": \"<p>Hello</p>\",\n    \"message_type\": \"email\"\n}\n\n\nMessage are how you reach out to contacts in Intercom. They are created when an admin sends an outbound message to a contact.\n\nMessage Object\nKey\tType\tDescription\ntype\tString\tAlways message.\nid\tString\tThe id representing the message.\ncreated_at\tUNIX Timestamp\tThe time the conversation was created.\nsubject\tString\tThe subject of the message. Only present if message_type: email.\nbody\tString\tThe message body, which may contain HTML.\nmessage_type\tString\tThe type of message that was sent. Can be email, inapp, facebook or twitter.\nconversation_id\tString\tThe associated conversation_id. Only returned when creating a conversation."
  },
  {
    "title": "Conversation Parts",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Models/conversation_parts/",
    "html": "A list of Conversation Part objects for each part message in the conversation. This is only returned when Retrieving a Conversation, and ignored when Listing all Conversations. There is a limit of 500 parts."
  },
  {
    "title": "Phone Switch",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/api.intercom.io/Models/phone_switch/",
    "html": "Phone Switch Response"
  },
  {
    "title": "Company Scroll",
    "url": "https://developers.intercom.com/docs/references/2.7/rest-api/api.intercom.io/Models/company_scroll/",
    "html": "Companies allow you to represent organizations using your product. Each company will have its own description and be associated with contacts. You can fetch, create, update and list companies."
  },
  {
    "title": "Group Content",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/api.intercom.io/Models/group_content/",
    "html": "The Content of a Group."
  },
  {
    "title": "Pagination & Sorting (Search)",
    "url": "https://developers.intercom.com/docs/references/2.5/rest-api/common-structures/pagination-search/",
    "html": "Pagination & Sorting (Search)\n\nWhen you use any Search resource, we require you to make a POST request that will not accept the common query params of GET requests. Therefore, the structure here has slight variations to our cursor-based approach.\n\n📘\n\nThis currently only applies to Searching for Contacts and Searching for Conversations.\n\nPagination\nExample Request Body with Pagination for first page\n{\\n \\\"query\\\":  {\\n    \\\"field\\\": \\\"name\\\",\\n    \\\"operator\\\": \\\"=\\\",\\n    \\\"value\\\": \\\"alex\\\"\\n  },\\n  \\\"pagination\\\": {\\n    \\\"per_page\\\": 5,\\n  } \\n}\n\n\nYou can specify how many items per page you want to fetch.\n\nDEFAULT PAGINATION AMOUNT\n\nIf pagination is not provided, the request defaults to 50 items.\n\nExample Initial Pages Object\n{\\n  \\\"pages\\\": {\\n  \\\"type\\\": \\\"pages\\\",\\n  \\\"next\\\": {\\n    \\\"page\\\": 4,\\n    \\\"starting_after\\\": \\\"1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\\\\nIncfQLD3ouPkZlCwJ86F\\\\n\\\"\\n  },\\n  \\\"page\\\": 3,\\n  \\\"per_page\\\": 5,\\n  \\\"total_pages\\\": 10\\n  }\\n}\n\n\nIn order to iterate through pages, you must parse the query response. A query with multiple response pages will include a next key in the pages hash. When a next value is provided, the starting_after value must be sent back in a new request to iterate to the next page.\n\n🚧 Paginating through all results\n\nThis method of pagination is used to iterate through a result set until all results have been fetched, not to directly go to page X of the results. This is not possible.\n\nExample Request Body with Pagination for next page\n{\\n \\\"query\\\":  {\\n    \\\"field\\\": \\\"name\\\",\\n    \\\"operator\\\": \\\"=\\\",\\n    \\\"value\\\": \\\"alex\\\"\\n  },\\n  \\\"pagination\\\": {\\n    \\\"per_page\\\": 5,\\n    \\\"starting_after\\\": \\\"1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\\\\nIncfQLD3ouPkZlCwJ86F\\\\n\\\"\\n  } \\n}\\n\n\n\n🚧 Warning about search context state\n\nThe starting_after context is stateless. Consequently, if items are updated between 2 paginated queries, this can lead to duplicate or missed records.\n\nFor example, if a query is sorting results by number of sessions and an item is updated from 1 session to 2 sessions during the pagination, they may be listed on page 1 of the results, but also on page 2.\n\nSorting\nExample Request Body with Sort\n{\n \"query\":  {\n    \"field\": \"name\",\n    \"operator\": \"=\",\n    \"value\": \"alex\"\n  },\n  \"sort\": {\n    \"field\": \"name\",\n    \"order\": \"ascending\"\n  } \n}\n\n\nThe Search resources can also sort query results by using the following parameters within the sort object:\n\nParameter\tRequired?\tDescription\nfield\tYes\tAny searchable attribute (available on the Simple Query \"Allowed fields\").\norder\tNo\tEither \"ascending\" or \"descending\" - default to \"descending\" if none is provided.\nDEFAULT SORT ORDER\n\nIf no sort pattern is provided, the query will use the default sorting parameter \"last_request_at\" with a descending value (e.g. listing most recent active items first)."
  },
  {
    "title": "Open Conversation Request",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/api.intercom.io/Models/open_conversation_request/",
    "html": "Payload of the request to open a conversation"
  },
  {
    "title": "User ID",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/api.intercom.io/Models/contact_reply_user_id_request/",
    "html": "Payload of the request to reply on behalf of a contact using their user_id"
  },
  {
    "title": "Addressable List",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/api.intercom.io/Models/addressable_list/",
    "html": "A list used to access other resources from a parent model."
  },
  {
    "title": "Delete tag",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/api.intercom.io/Tags/deleteTag/",
    "html": "You can delete the details of tags that are on the workspace by passing in the id."
  },
  {
    "title": "Image",
    "url": "https://developers.intercom.com/docs/references/1.3/canvas-kit/presentationcomponents/image/",
    "html": "Image\n\nAn image component is used to display an image.\n\n🚧 HTTPS Images\n\nIf your request URLs (or website URLs) are over HTTPS, you will need to ensure that images are loaded over HTTPS likewise. Otherwise, they will not work.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\timage\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nurl\tA valid HTTPS URL\tYes\tThe URL where the image is located.\nalign\tleft``center``right``full_width\tNo\tAligns the image inside the component.Default is left.\nwidth\tAny integer\tYes\tThe exact width of the image in pixels.\nheight\tAny integer\tYes\tThe exact height of the image in pixels.\nrounded\ttrue``false\tNo\tRounds the corners of the image. Default is false.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\naction\tAction Object\tNo\tThis can be a URL Action only.\nPreview"
  },
  {
    "title": "Article Content",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/api.intercom.io/Models/article_content/",
    "html": "The Content of an Article."
  },
  {
    "title": "Spacer",
    "url": "https://developers.intercom.com/docs/references/1.3/canvas-kit/presentationcomponents/spacer/",
    "html": "Spacer\n\nA spacer component is used to create empty space between components.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tspacer\t\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nsize\txs``s``m``l``xl\tNo\tThe amount of space between components.Default is s.\nPreview"
  },
  {
    "title": "Text",
    "url": "https://developers.intercom.com/docs/references/1.3/canvas-kit/presentationcomponents/text/",
    "html": "Text\n\nThe text component is used for rendering blocks of text. Links and bold font can be rendered through Markdown. There are different styles provided which edit the color, weight, and font size. These cannot be edited through Markdown.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttext\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\ntext\tAny stringMarkdown Links []()Markdown Bold **\tYes\tThe text that will be rendered.\nalign\tleft``center``right\tNo\tAligns the text. Default is left.\nstyle\theader``paragraph``muted``error\tNo\tStyles the text. Default is paragraph.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "Divider",
    "url": "https://developers.intercom.com/docs/references/1.3/canvas-kit/presentationcomponents/divider/",
    "html": "Divider\n\nA divider component is used to separate components with a line.\n\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\tdivider\tYes\tThe type of component you are rendering.\nid\tAny string\tNo\tA unique identifier for the component.\nbottom_margin\tnone\tNo\tDisables a component’s margin-bottom of 10px.\nPreview"
  },
  {
    "title": "List all segments",
    "url": "https://developers.intercom.com/docs/references/2.8/rest-api/api.intercom.io/Segments/listSegments/",
    "html": "You can fetch a list of all segments."
  },
  {
    "title": "Create a section",
    "url": "https://developers.intercom.com/docs/references/2.9/rest-api/api.intercom.io/Help-Center/createSection/",
    "html": "You can create a new section by making a POST request to https://api.intercom.io/help_center/sections."
  },
  {
    "title": "List all messages",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/messages/list-all-messages/",
    "html": "List all messages\n\nTo list all messages, you will need to use our Export API and download the data in CSV format. This API is available in v2.5 and above."
  },
  {
    "title": "Text Area",
    "url": "https://developers.intercom.com/docs/references/1.3/canvas-kit/interactivecomponents/text-area/",
    "html": "Text Area\n\nA text area component is used to capture a large amount of text as input with a multi-line text box. You can submit the value of the text area by:\n\nUsing a button component (which will submit all interactive components in the canvas)\nParameters\nParameter\tPossible Values\tRequired\tDescription\ntype\ttextarea\tYes\tThe type of component you are rendering\nid\tAny string\tYes\tA unique identifier for the component.\nlabel\tAny string\tNo\tThe text shown above the text area.\nplaceholder\tAny string\tNo\tAn example value shown inside the component when it’s empty.\nvalue\tAny string\tNo\tAn entered value which is already inside the component.\nerror\tfalse``true\tNo\tStyles the input as failed.Default is false.\ndisabled\tfalse``true\tNo\tStyles the input and prevents the action.Default is false.\nPreview"
  },
  {
    "title": "List all notes",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/notes/list-notes-of-contact/",
    "html": "List all notes\nExample Request & Response\ncurlhttp\n$ curl https://api.intercom.io/contacts/<id>/notes \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nExample Errors\nContact not found\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\": \\\"error.list\\\",\\n  \\\"request_id\\\": \\\"9a3d0816-9707-4598-977e-c009ba630148\\\",\\n  \\\"errors\\\": [\\n    {\\n      \\\"code\\\": \\\"not_found\\\",\\n      \\\"message\\\": \\\"Contact Not Found\\\"\\n    }\\n  ]\\n}\n\n\nYou can fetch a list of notes that are associated to a contact.\n\nRequest Path Parameter\nParameter\tType\tRequired\tDescription\nid\tString\tYes\tThe unique identifier for the contact which is given by Intercom\nResponse\n\nThis will return a paginated list of Note objects.\n\nAttribute\tType\tDescription\ntype\tString\tThe type of object - note.list\ndata\tArray\tAn array containing Note Objects\ntotal_count\tInteger\tThe total number of companies associated to this contact\npages\tPagination Object\tThe information needed to paginate through companies"
  },
  {
    "title": "Replying to a Conversation",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/conversations/replying-to-a-conversation/",
    "html": "Replying to a Conversation\nReply with and Without Attachments\ncurlcurlrubyphpjava\n# Reply without attachment\\n$ curl 'https://api.intercom.io/conversations/{conversation_id}/reply' \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d'\\n{\\n  \\\"intercom_user_id\\\": \\\"536e564f316c83104c000020\\\",\\n  \\\"body\\\": \\\"Thanks again :)\\\",\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"message_type\\\": \\\"comment\\\"\\n}'\\n\\n\\n\\n# Reply with attachment\\n$ curl https://api.intercom.io/conversations/{conversation_id}/reply \\\\\\n-X POST \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json' \\\\\\n-H 'Content-Type:application/json' -d'\\n{\\n  \\\"intercom_user_id\\\": \\\"536e564f316c83104c000020\\\",\\n  \\\"body\\\": \\\"Thanks again :)\\\",\\n  \\\"type\\\": \\\"user\\\",\\n  \\\"message_type\\\": \\\"comment\\\",\\n  \\\"attachment_urls\\\": [\\\"http://www.example.com/attachment.jpg\\\"]\\n}\n\nHTTP/1.1 200 OK\\n\\n{\\n    \\\"type\\\": \\\"conversation\\\",\\n    \\\"id\\\": \\\"{conversation_id}\\\",\\n    # ...\\n}\\n# NB: Full Conversation Object returned\n\nReply with a note\ncurltext\n# You can replay with a note also and use some HTML formatting such as bold, italics, and lists\\ncurl 'https://api.intercom.io/conversations/{conversation_id}/reply' \\\\\\n-X POST \\\\\\n-H 'Authorization: Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json' \\\\\\n{\\n  \\\"admin_id\\\": \\\"814860\\\",\\n  \\\"body\\\": \\\"<html> <body>  <h2>An Unordered HTML List</h2>  <ul>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ul>    <h2>An Ordered HTML List</h2>  <ol>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ol>   </body> </html>\\\",\\n  \\\"type\\\": \\\"admin\\\",\\n  \\\"message_type\\\": \\\"note\\\"\\n}\\n\n\nArguments\n\nFor a User Reply:\n\nArgument\tRequired\tDescription\ntype\tYes\tuser\nmessage_type\tYes\tMust be comment\nbody\tYes\tThe text body of the comment\nintercom_user_id\tone of\tThe Intercom defined id representing the user\nuser_id\tone of\tThe user id you have defined for the user\nemail\tone of\tThe email you have defined for the user\nattachment_urls\tNo\tA list of URLs of (image only) files that will be added as attachments. You can include up to 5 attachments.\n\nor for an Admin Reply:\n\nArgument\tRequired\tDescription\ntype\tYes\tadmin\nmessage_type\tYes\tMust be comment, assignment, open, close, or note\nadmin_id\tYes\tThe id of the Admin who is authoring the comment\nbody\tNo\tThe text body of the comment. Must be set for comment and note\nassignee_id\tNo\tAssignments only: assigns the conversation to the given admin id. Note this must be \"0\" if you want to move it to unassigned\nattachment_urls\tNo\tA list of URLs of files that will be added as attachments. You can include up to 5 attachments..\n\nNotes are not visible to the end user.\n\nReturns\n\nA full Conversation object, with Conversation Parts."
  },
  {
    "title": "Adding to group conversations as admin",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/conversations/adding-to-group-conversations-as-admin/",
    "html": "Adding to group conversations as admin\nAdding a customer to a group conversation\nCUSTOMERS\n\nNote that customers refers to both users and leads.\n\n$ curl 'https://api.intercom.io/conversations/11055118659/customers' \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json' \\\n-H 'Content-Type:application/json' -d'\n{\n  \"admin_id\": \"781236\",\n  \"customer\":{\n    \"intercom_user_id\": \"58c1c78946a0aa9ef45b098a\"\n  }\n}'\n\nHTTP/1.1 200 OK\n\n{\"customers\":[\n  {\"type\":\"user\",\"id\":\"597f02cb22f4bb37597e0b7d\"}, \n  {\"type\":\"lead\",\"id\":\"58ff3f670f14ab4f1aa83750\"}]\n}\n\n\nCustomers can be added to a conversation via a POST method to https://api.intercom.io/conversations/{convo_id}/customers/, which accepts a JSON object describing the customer.\n\nArguments\nArgument\tRequired\tDescription\nadmin_id\tYes\tYou must provide the ID of a valid admin to add a customer to the conversation\ncustomer\tYes\tJSON object describing the customer that you want to add to the conversation.\n\nCustomer object\n\nArgument\tRequired\tDescription\nintercom_user_id\tone of\tThe Intercom defined id representing the user (in the URL)\nuser_id\tone of\tThe user id you have defined for the user (or auto defined in the case of leads)\nemail\tone of\tThe email you have defined for the user\nNOTE ABOUT CUSTOMERS WITHOUT AN EMAIL\n\nIf you try to add a customer via intercom_user_id or user_id which does not have an email you will receive an error. Alternatively, If you add a customer via the email parameter and there is no user/lead in the system for that customer then we will create a new lead."
  },
  {
    "title": "View the current admin and app",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/admins/view-the-current-admin/",
    "html": "View the current admin and app\nOAUTH ONLY\n\nThis feature is only available when using OAuth. This requires the \"Read admins\" permission.\n\nYou can view the name, email and app ID of the current authorised admin via a GET request to https://api.intercom.io/me.\n\nReturns\n\nAn Admin object, with an embedded App object.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'admin'\nid\tstring\tThe id of the admin\nname\tstring\tThe name of the admin\nemail\tstring\tThe email address of the admin\nemail_verified\tboolean\tThis field will indicate whether the Intercom user has verified their email or not\napp.type\tstring\tvalue is 'app'\napp.id_code\tstring\tThe id of the app\napp.name\tstring\tThe name of the app\napp.region\tstring\tThe Intercom region the app is located in\napp.created_at\ttimestamp\tWhen the app was created\napp.identity_verification\tboolean\tWhether or not the app uses identity verification\nSINGLE SIGN ON\n\nIf you are building a custom \"Log in with Intercom\" flow for your site, and you call the /me endpoint to identify the user logging, in you should not accept any sign ins from users with unverified email addresses as it poses a potential impersonation security risk."
  },
  {
    "title": "View admin activity logs",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/admins/view-admin-activity-logs/",
    "html": "View admin activity logs\nExample Request\ncURL\ncurl https://api.intercom.io/admins/activity_logs?created_at_after=489222000&created_at_before=685695600 \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json'\n\nExample Response\nHTTP/1.1 200 OK\n{\n\t\"type\": \"activity_log.list\",\n  \"pages\": {\n\t\t\"type\": \"pages\",\n\t\t\"next\": nil,\n\t\t\"page\": 1,\n\t\t\"per_page\": 20,\n\t\t\"total_pages\": 1\n\t},\n  \"activity_logs\": [{\n  \t\"id\": \"6\",\n  \t\"performed_by\": {\n    \t\"type\": \"admin\",\n    \t\"id\": \"123456\",\n    \t\"email\": \"jane.doe@company.com\",\n    \t\"ip\": \"127.0.0.1\"\n  \t},\n  \t\"metadata\": {\n    \t\"message\"; {\n      \t\"id\": 123,\n      \t\"title\": \"salt&vinegar\"\n        },\n       \"before\": \"before\",\n       \"after\": \"after\"\n    \t},\n  \t\"created_at\": 1547669358,\n  \t\"activity_type\": \"message_state_change\",\n  \t\"activity_description\"\" \"Jane Doe changed your salt&vinegar message from before to after.\"\n  }]\n}\n\nExample Errors\nhttphttp\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\" => \\\"error.list\\\",\\n  \\\"request_id\\\" => nil,\\n  \\\"errors\\\" => [{\\n\\t\\\"code\\\" => \\\"parameter_not_found\\\",\\n\\t\\\"message\\\" => \\\"Please provide the following parameters: created_at_after\\\"\\n  }]\\n}\\n\n\nHTTP/1.1 403 RESTRICTED\\n{\\n  \\\"type\\\" => \\\"error.list\\\",\\n  \\\"request_id\\\" => nil,\\n  \\\"errors\\\" => [{\\n\\t\\\"code\\\" => \\\"api_plan_restricted\\\",\\n\\t\\\"message\\\" => \\\"This feature is not yet available to your app\\\"\\n  }]\\n}\n\n\nYou can get a log of activities by all admins in an app by sending a GET request to the URL https://api.intercom.io/admins/activity_logs.\n\nActivity List\nAttribute\tType\tDescription\ntype\tstring\tValue is activity_log.list\nactivity_logs\tarray\tA list of activity objects\npages\tobject\tOptional. A pagination object which may be empty, indication no further pages to fetch\nActivity Object\nAttribute\tType\tDescription\nactivity_type\tstring\tThe type of activity - see Activity Types & Descriptions below.\nactivity_description\tstring\tA sentence or two describing the activity - see Activity Types & Descriptions below.\nmetadata\tobject\tAn object containing information on the activity and what it modified\ncreated_at\ttimestamp\tThe time the activity was performed\nperformed_by\tobject\tAn Admin object of the admin who performed the activity\nid\tstring\tThe id representing the activity\nActivity Types & Descriptions\nType\tDescription\nadmin_deletion\tAn admin was removed from your app\nadmin_invite_change\tThe permissions for an invited person to be an admin on your app were changed\nadmin_invite_creation\tSomeone was invited to be an admin on your app\nadmin_invite_deletion\tSomeone is no longer invited to be an admin on your app\nadmin_login_failure\tAn admin tried to login with the wrong credentials\nadmin_login_success\tAn admin logged in successfully\nadmin_logout\tAn admin logged out\nadmin_permission_change\tThe permissions for an admin were changed\napp_name_change\tThe name of your app was changed\nadmin_away_mode\tAn admin changed their away mode and conversation reassignment settings\napp_timezone_change\tThe timezone of your app was changed\nbulk_export\tUser or lead data was exported from your app\nmessage_deletion\tA message was deleted from your app\nmessage_state_change\tA message was changed on your app\ncampaign_deletion\tA campaign was deleted from your app\nRequest Parameters\nParameter\tRequired?\tDescription\ncreated_at_after\tYes\tThe start date that you request data for. It must be formatted as a UNIX timestamp.\ncreated_at_before\tNo\tThe end date that you request data for. It must be formatted as a UNIX timestamp.\nReturns\n\nThis will return an Activity List which will contain an array titled activity_logs, in turn containing multiple Activity Objects."
  },
  {
    "title": "Set admin away mode",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/admins/set-admin-away-mode/",
    "html": "Set admin away mode\n\nSet away mode\nIf you want to set an admin in away mode you can do this via a PUT request. You can also choose whether you want conversation replies to be automatically reassigned to your default inbox if you like. For more about away mode please see here.\n\nAttribute\tType\tDescription\nid\tstring\tThe id of the admin you want to set away mode or re-assign conversations.\naway_mode_enabled\tboolean\tSet to 'true' to change the status of the admin to away.\naway_mode_reassign\tboolean\tSet to 'true' to assign any new conversation replies to your default inbox.\ncurltext\n$ curl https://api.intercom.io/admins/814860/away \\\\\\n-X PUT \\\\\\n-H 'Authorization: Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'  \\\\\\n-H 'Content-Type: application/json' \\\\\\n-d \\t'\\n{\\n  \\\"away_mode_enabled\\\": true,\\n  \\\"away_mode_reassign\\\": false\\n\\n}'\n"
  },
  {
    "title": "List Admins",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/admins/list-admins/",
    "html": "List Admins\nList Admins\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/admins \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\\n{\\n    \\\"type\\\": \\\"admin.list\\\",\\n    \\\"admins\\\": [\\n        {\\n        \\t\\t\\\"type\\\": \\\"admin\\\",\\n            \\\"id\\\": \\\"493881\\\",\\n      \\t\\t\\t\\\"name\\\": \\\"Hoban Washburne\\\",\\n      \\t\\t\\t\\\"email\\\": \\\"wash@serenity.io\\\"\\n            \\\"away_mode_enabled\\\": false,\\n            \\\"away_mode_reassign\\\": false,\\n            \\\"team_ids\\\": [\\n                814865\\n            ]\\n        },\\n        {\\n            \\\"type\\\": \\\"admin\\\",\\n            \\\"email\\\": \\\"mal@serenity.io\\\",\\n            \\\"id\\\": \\\"646303\\\",\\n            \\\"name\\\": \\\"Malcolm Reynolds \\\",\\n            \\\"away_mode_enabled\\\": true,\\n            \\\"away_mode_reassign\\\": false,\\n            \\\"team_ids\\\": [\\n                814865\\n            ]\\n        },\\n        {\\n            \\\"type\\\": \\\"admin\\\",\\n            \\\"email\\\": \\\"jayne@serenity.io\\\",\\n            \\\"id\\\": \\\"1195856\\\",\\n            \\\"name\\\": \\\"Jayne Cobb \\\",\\n            \\\"away_mode_enabled\\\": false,\\n            \\\"away_mode_reassign\\\": false,\\n            \\\"team_ids\\\": [\\n                814865\\n            ]\\n        },\\n        {\\n            \\\"type\\\": \\\"team\\\",\\n            \\\"email\\\": null,\\n            \\\"id\\\": \\\"814865\\\",\\n            \\\"name\\\": \\\"SerenityTeam\\\",\\n            \\\"away_mode_enabled\\\": false,\\n            \\\"away_mode_reassign\\\": false,\\n            \\\"admin_ids\\\": [\\n                493881,\\n                646303,\\n                1195856\\n            ]\\n        }\\n    ]\\n}\n\n\nAn App's admins can be fetched by sending a GET request to https://api.intercom.io/admins/.\n\nAdmin List\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'admin.list'\nadmins\tarray\tA list of admin objects\npages\tobject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch.\nRequest Parameters\n\nNone.\n\nReturns\n\nA list of admin objects for the App. The result may also have a pages object if the response is paginated."
  },
  {
    "title": "Admins",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/admins/admins/",
    "html": "Admins\n\nAdmins are how you can view your teammates within Intercom.\n\nThe API currently only supports viewing the admins already created. Creating and managing admins must be done through the Intercom App."
  },
  {
    "title": "Retrieve a section",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/help-center/retrieve-a-section/",
    "html": "Retrieve a section\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/sections/<id> \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can fetch the details of a single section by making a GET request to https://api.intercom.io/help_center/sections/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the section which is given by Intercom.\nResponse\n\nThis will return a Section object."
  },
  {
    "title": "Update a collection",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/help-center/update-a-collection/",
    "html": "Update a collection\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/collection/<id> \\\\-X PUT \\\\-H 'Authorization:Bearer <Your access token>' \\\\-H 'Accept:application/json'-H 'Content-Type: application/json' -d{  \\\"name\\\": \\\"New title\\\",  \\\"translated_content\\\": {    \\\"es\\\": {      \\\"name\\\": \\\"Nuevo título\\\"    }  }}\n\n\nYou can update the details of a single collection by making a PUT request to https://api.intercom.io/help_center/collection/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the collection which is given by Intercom.\nRequest Body Parameters\nAttribute\tType\tRequired?\tDescription\nname\tString\tNo\tThe name of the collection. For multilingual collections, this will be the name of the default language's content.\ndescription\tString\tNo\tThe description of the collection. For multilingual articles, this will be the description of the default language's content.\ntranslated_content\tObject\tNo\tA Group Translated Content Object whereby you can specify multiple multilingual collections to be created.\nResponse\n\nThis will return a Collection Model of the collection you just updated."
  },
  {
    "title": "The collection & section models",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/help-center/the-collection-section-models/",
    "html": "The collection & section models\nExample Collection Object\nJSON\n{  \\\"id\\\": 1,  \\\"type\\\": \\\"collection\\\",  \\\"workspace_id\\\": \\\"abcdef\\\",  \\\"name\\\": \\\"Default language name\\\",  \\\"description\\\": \\\"Default language description\\\",   \\\"created_at\\\": 123456,  \\\"updated_at\\\": 123456,  \\\"url\\\": \\\"http://intercom.test/help/collection/name\\\",  \\\"icon\\\": \\\"http://intercom/help_center/icon-1\\\",  \\\"order\\\": 0,  \\\"default_locale\\\": \\\"en\\\",  \\\"translated_content\\\": {    \\\"type\\\": \\\"group_translated_content\\\",    \\\"fr\\\": {      \\\"type\\\": \\\"group_content\\\",      \\\"name\\\": \\\"French name\\\",      \\\"description\\\": \\\"French description\\\"    }  }}\n\nExample Section Object\n{\n  \"id\": 1,\n  \"type\": \"section\",\n  \"workspace_id\": \"abcdef\",\n  \"name\": \"Default language name\",\n  \"created_at\": 123456,\n  \"updated_at\": 123456,\n  \"url\": \"http://intercom.test/help/section/name\",\n  \"icon\": \"http://intercom/help_center/icon-1\",\n  \"order\": 0,\n  \"collection_id\": \"1\",\n  \"default_locale\": \"en\",\n  \"translated_content\": {\n    \"type\": \"group_translated_content\",\n    \"fr\": {\n      \"type\": \"group_content\",\n      \"name\": \"French name\"\n    }\n  }\n}\n\n\nThe Help Center API is a central place to gather all information and take actions on those elements within a Help Center - namely the collections and sections. Collections are top level containers for Articles within the Help Center. Sections are subdivisions of a collection, with a collection potentially having multiple sections.\n\nFor articles you should refer to the Articles endpoint.\n\nCollection Object\nKey\tType\tDescription\ntype\tString\tThe type of object - collection.\nid\tString\tThe unique identifier for the collection which is given by Intercom.\nworkspace_id\tString\tThe id of the workspace which the collection belongs to.\nname\tString\tThe name of the collection. For multilingual help centers, this will be the title of the default language's content.\ndescription\tString\tThe description of the collection. For multilingual help centers, this will be the description of the collection for the default language.\ncreated_at\tTimestamp\tThe time when the article was created. For multilingual articles, this will be the timestamp of creation of the default language's content.\nupdated_at\tTimestamp\tThe time when the article was last updated. For multilingual articles, this will be the timestamp of last update of the default language's content.\nurl\tString\tThe URL of the collection. For multilingual help centers, this will be the URL of the collection for the default language.\nicon\tString\tThe icon for the collection.\norder\tInteger\tThe order of the section in relation to others sections within a collection. Values go from 0 upwards. 0 is the default if there's no order.\ndefault_locale\tString\tThe default locale of the help center. This field is only returned for multilingual help centers.\ntranslated_content\tObject\tAn Group Translated Content Object for multilingual articles. This field is only returned for multilingual help centers.\nSection Object\nKey\tType\tDescription\ntype\tString\tThe type of object - section.\nid\tString\tThe unique identifier for the section which is given by Intercom.\nworkspace_id\tString\tThe id of the workspace which the section belongs to.\nname\tString\tThe name of the section. For multilingual help centers, this will be the name of the section for the default language.\ncreated_at\tTimestamp\tThe time when the section was created. For multilingual help centers, this will be the timestamp of the section's creation for the default language.\nupdated_at\tTimestamp\tThe time when the section was last updated. For multilingual help centers, this will be the timestamp of the section's last update for the default language.\nurl\tString\tThe URL of the section. For multilingual help centers, this will be the URL of the section for the default language.\nicon\tString\tThe icon for the section.\norder\tInteger\tThe order of the section in relation to others sections within a collection. Values go from 0 upwards. 0 is the default if there's no order.\nparent_id\tString\tThe id of the collection to which this section belongs to.\ndefault_locale\tString\tThe default locale of the help center. This field is only returned for multilingual help centers.\ntranslated_content\tObject\tAn Group Translated Content Object for multilingual articles. This field is only returned for multilingual help centers.\nGroup Translated Content Object\nKey\tType\tWriteable?\tDescription\ntype\tString\tNo\tThe type of object - group_translated_content.\n<locale> ar, bg, bs, ca, cs, da, de, 'de-form', el, en, es, et, fi, fr, he, hr, hu, id, it, ja, ko, lt, lv, mn, nb, nl, pl, 'pt-BR', pt, ro, ru, sl, sr, sv, tr, vi, 'zh-CN', 'zh-TW'\tObject\tYes\tAn Group Content Object for each supported locale of the multilingual help center. The default locale's content and information will be contained in the initial Collection Object or Section Object respectively. If there's no content for a locale, the value will be nil.\nGroup Content Object\nKey\tType\tWriteable?\tDescription\ntype\tString\tNo\tThe type of object - group_content.\nname\tString\tYes\tThe name of the collection or section.\ndescription\tString\tYes\tThe description of the collection. Only available for collections."
  },
  {
    "title": "Update a section",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/help-center/update-a-section/",
    "html": "Update a section\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/sections/<id> \\\\\\n-X PUT \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\\n\\n{\\n  \\\"name\\\": \\\"New title\\\",\\n  \\\"translated_content\\\": {\\n    \\\"type\\\": \\\"group_translated_content\\\",\\n    \\\"es\\\": {\\n      \\\"type\\\": \\\"group_content\\\",\\n      \\\"name\\\": \\\"Nuevo título\\\"\\n    }\\n  }\\n}\n\n\nYou can update the details of a single section by making a PUT request to https://api.intercom.io/help_center/sections/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the section which is given by Intercom.\nRequest Body Parameters\nAttribute\tType\tRequired?\tDescription\nname\tString\tNo\tThe name of the section. For multilingual collections, this will be the name of the default language's content.\nparent_id\tString\tNo\tThe id for the collection this section will be within.\ntranslated_content\tObject\tNo\tA Group Translated Content Object whereby you can specify multiple multilingual collections to be created.\nResponse\n\nThis will return a Section object of the section you just updated."
  },
  {
    "title": "List all sections",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/help-center/list-all-sections/",
    "html": "List all sections\nExample Request & Response (Single Language Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/sections \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can fetch a list of all sections by making a GET request to https://api.intercom.io/help_center/sections.\n\nResponse\nKey\tType\tDescription\ntype\tString\tThe type of object - list.\npages\tObject\tA Pages object with the information needed to paginate through sections.\ntotal_count\tInteger\tA count of the total number of sections.\ndata\tArray\tAn array of Section objects\nHOW ARE THE SECTIONS SORTED AND ORDERED?\n\nSections will be returned in descending order on the updated_at attribute. This means if you need to iterate through results then we'll show the most recently updated sections first."
  },
  {
    "title": "Retrieve a collection",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/help-center/retrieve-a-collection/",
    "html": "Retrieve a collection\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/collections/<id> \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can fetch the details of a single collection by making a GET request to https://api.intercom.io/help_center/collections/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the collection which is given by Intercom.\nResponse\n\nThis will return a Collection Model."
  },
  {
    "title": "View the current admin and app",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/admins/view-the-current-admin/",
    "html": "View the current admin and app\nOAUTH ONLY\n\nThis feature is only available when using OAuth. This requires the \"Read admins\" permission.\n\nYou can view the name, email and app ID of the current authorised admin via a GET request to https://api.intercom.io/me.\n\nReturns\n\nAn Admin object, with an embedded App object.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'admin'\nid\tstring\tThe id of the admin\nname\tstring\tThe name of the admin\nemail\tstring\tThe email address of the admin\nemail_verified\tboolean\tThis field will indicate whether the Intercom user has verified their email or not\napp.type\tstring\tvalue is 'app'\napp.id_code\tstring\tThe id of the app\napp.name\tstring\tThe name of the app\napp.region\tstring\tThe Intercom region the app is located in\napp.created_at\ttimestamp\tWhen the app was created\napp.identity_verification\tboolean\tWhether or not the app uses identity verification\nSINGLE SIGN ON\n\nIf you are building a custom \"Log in with Intercom\" flow for your site, and you call the /me endpoint to identify the user logging, in you should not accept any sign ins from users with unverified email addresses as it poses a potential impersonation security risk."
  },
  {
    "title": "View admin activity logs",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/admins/view-admin-activity-logs/",
    "html": "View admin activity logs\nExample Request\ncURL\ncurl https://api.intercom.io/admins/activity_logs?created_at_after=489222000&created_at_before=685695600 \\\\\\n-X GET \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json' \\\\\\n-H 'Content-Type: application/json'\n\nExample Response\nHTTP/1.1 200 OK\n{\n\t\"type\": \"activity_log.list\",\n  \"pages\": {\n\t\t\"type\": \"pages\",\n\t\t\"next\": nil,\n\t\t\"page\": 1,\n\t\t\"per_page\": 20,\n\t\t\"total_pages\": 1\n\t},\n  \"activity_logs\": [{\n  \t\"id\": \"6\",\n  \t\"performed_by\": {\n    \t\"type\": \"admin\",\n    \t\"id\": \"123456\",\n    \t\"email\": \"jane.doe@company.com\",\n    \t\"ip\": \"127.0.0.1\"\n  \t},\n  \t\"metadata\": {\n    \t\"message\"; {\n      \t\"id\": 123,\n      \t\"title\": \"salt&vinegar\"\n        },\n       \"before\": \"before\",\n       \"after\": \"after\"\n    \t},\n  \t\"created_at\": 1547669358,\n  \t\"activity_type\": \"message_state_change\",\n  \t\"activity_description\"\" \"Jane Doe changed your salt&vinegar message from before to after.\"\n  }]\n}\n\nExample Errors\nhttphttp\nHTTP/1.1 404 NOT FOUND\\n{\\n  \\\"type\\\" => \\\"error.list\\\",\\n  \\\"request_id\\\" => nil,\\n  \\\"errors\\\" => [{\\n\\t\\\"code\\\" => \\\"parameter_not_found\\\",\\n\\t\\\"message\\\" => \\\"Please provide the following parameters: created_at_after\\\"\\n  }]\\n}\\n\n\nHTTP/1.1 403 RESTRICTED\\n{\\n  \\\"type\\\" => \\\"error.list\\\",\\n  \\\"request_id\\\" => nil,\\n  \\\"errors\\\" => [{\\n\\t\\\"code\\\" => \\\"api_plan_restricted\\\",\\n\\t\\\"message\\\" => \\\"This feature is not yet available to your app\\\"\\n  }]\\n}\n\n\nYou can get a log of activities by all admins in an app by sending a GET request to the URL https://api.intercom.io/admins/activity_logs.\n\nActivity List\nAttribute\tType\tDescription\ntype\tstring\tValue is activity_log.list\nactivity_logs\tarray\tA list of activity objects\npages\tobject\tOptional. A pagination object which may be empty, indication no further pages to fetch\nActivity Object\nAttribute\tType\tDescription\nactivity_type\tstring\tThe type of activity - see Activity Types & Descriptions below.\nactivity_description\tstring\tA sentence or two describing the activity - see Activity Types & Descriptions below.\nmetadata\tobject\tAn object containing information on the activity and what it modified\ncreated_at\ttimestamp\tThe time the activity was performed\nperformed_by\tobject\tAn Admin object of the admin who performed the activity\nid\tstring\tThe id representing the activity\nActivity Types & Descriptions\nType\tDescription\nadmin_deletion\tAn admin was removed from your app\nadmin_invite_change\tThe permissions for an invited person to be an admin on your app were changed\nadmin_invite_creation\tSomeone was invited to be an admin on your app\nadmin_invite_deletion\tSomeone is no longer invited to be an admin on your app\nadmin_login_failure\tAn admin tried to login with the wrong credentials\nadmin_login_success\tAn admin logged in successfully\nadmin_logout\tAn admin logged out\nadmin_permission_change\tThe permissions for an admin were changed\napp_name_change\tThe name of your app was changed\nadmin_away_mode\tAn admin changed their away mode and conversation reassignment settings\napp_timezone_change\tThe timezone of your app was changed\nbulk_export\tUser or lead data was exported from your app\nmessage_deletion\tA message was deleted from your app\nmessage_state_change\tA message was changed on your app\ncampaign_deletion\tA campaign was deleted from your app\napp_identity_verification_change\tThe identity verification setting was changed on your app\napp_package_token_regeneration\tAn access token for a specific app package was updated\napp_authentication_method_change\tThe authentication methods were changed for you app\napp_data_deletion\tA user or lead was deleted from your app\napp_outbound_address_change\tThe outbound email address was changed for your app\napp_webhook_creation\tA webhook subscription was created for your app\napp_webhook_deletion\tA webhook subscription was deleted for your app\napp_admin_join\tAn admin joined your app (i.e., accepted your invite)\ncampaign_state_change\tA campaign was changed on your app\napp_team_creation\tA team was created for your app\napp_team_deletion\tA team was deleted from you app\napp_package_installation\tAn app package was installed on your app\napp_package_uninstallation\tAn app package was uninstalled from your app\napp_data_export\tMessage or conversation data was exported from your app\nhelp_center_settings_change\tYour help center was turned on or off\nRequest Parameters\nParameter\tRequired?\tDescription\ncreated_at_after\tYes\tThe start date that you request data for. It must be formatted as a UNIX timestamp.\ncreated_at_before\tNo\tThe end date that you request data for. It must be formatted as a UNIX timestamp.\nReturns\n\nThis will return an Activity List which will contain an array titled activity_logs, in turn containing multiple Activity Objects."
  },
  {
    "title": "Delete a section",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/help-center/delete-a-section/",
    "html": "Delete a section\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/sections/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can delete a single section by making a DELETE request to https://api.intercom.io/help_center/sections/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the section which is given by Intercom.\nResponse\nKey\tType\tDescription\nid\tString\tThe unique identifier for the section which you provided in the URL.\nobject\tString\tThe type of object which was deleted - section.\ndeleted\tBoolean\tWhether the section was deleted successfully or not."
  },
  {
    "title": "Delete a collection",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/help-center/delete-a-collection/",
    "html": "Delete a collection\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/help_center/collections/<id> \\\\\\n-X DELETE \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\n\n\nYou can delete a single collection by making a DELETE request to https://api.intercom.io/help_center/collections/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the collection which is given by Intercom.\nResponse\nKey\tType\tDescription\nid\tString\tThe unique identifier for the collection which you provided in the URL.\nobject\tString\tThe type of object which was deleted - collection.\ndeleted\tBoolean\tWhether the collections was deleted successfully or not."
  },
  {
    "title": "View an Admin",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/admins/view-an-admin/",
    "html": "View an Admin\nRetrieve a single admin\n$ curl https://api.intercom.io/admins/493881 \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\n\n{\n    \"type\": \"admin\",\n    \"id\": \"493881\",\n    \"name\": \"Hoban Washburne\",\n    \"email\": \"wash@serenity.io\",\n    \"away_mode_enabled\": false,\n    \"away_mode_reassign\": false,\n    \"team_ids\": [\n        814865\n    ]\n}\n\n<?php\n$admin = $intercom->admins->getAdmin(\"493881\");\n?>\n\n\nEach admin object has its own URL, where the {id} is the value of the admins id field:\n\nhttps://api.intercom.io/admins/{id}"
  },
  {
    "title": "List Admins",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/admins/list-admins/",
    "html": "List Admins\nList Admins\ncurlcurlrubyphpjava\n$ curl https://api.intercom.io/admins \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 Ok\\n{\\n    \\\"type\\\": \\\"admin.list\\\",\\n    \\\"admins\\\": [\\n        {\\n        \\t\\t\\\"type\\\": \\\"admin\\\",\\n            \\\"id\\\": \\\"493881\\\",\\n      \\t\\t\\t\\\"name\\\": \\\"Hoban Washburne\\\",\\n      \\t\\t\\t\\\"email\\\": \\\"wash@serenity.io\\\"\\n            \\\"away_mode_enabled\\\": false,\\n            \\\"away_mode_reassign\\\": false,\\n            \\\"team_ids\\\": [\\n                814865\\n            ]\\n        },\\n        {\\n            \\\"type\\\": \\\"admin\\\",\\n            \\\"email\\\": \\\"mal@serenity.io\\\",\\n            \\\"id\\\": \\\"646303\\\",\\n            \\\"name\\\": \\\"Malcolm Reynolds \\\",\\n            \\\"away_mode_enabled\\\": true,\\n            \\\"away_mode_reassign\\\": false,\\n            \\\"team_ids\\\": [\\n                814865\\n            ]\\n        },\\n        {\\n            \\\"type\\\": \\\"admin\\\",\\n            \\\"email\\\": \\\"jayne@serenity.io\\\",\\n            \\\"id\\\": \\\"1195856\\\",\\n            \\\"name\\\": \\\"Jayne Cobb \\\",\\n            \\\"away_mode_enabled\\\": false,\\n            \\\"away_mode_reassign\\\": false,\\n            \\\"team_ids\\\": [\\n                814865\\n            ]\\n        },\\n        {\\n            \\\"type\\\": \\\"team\\\",\\n            \\\"email\\\": null,\\n            \\\"id\\\": \\\"814865\\\",\\n            \\\"name\\\": \\\"SerenityTeam\\\",\\n            \\\"away_mode_enabled\\\": false,\\n            \\\"away_mode_reassign\\\": false,\\n            \\\"admin_ids\\\": [\\n                493881,\\n                646303,\\n                1195856\\n            ]\\n        }\\n    ]\\n}\n\n\nAn App's admins can be fetched by sending a GET request to https://api.intercom.io/admins/.\n\nAdmin List\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'admin.list'\nadmins\tarray\tA list of admin objects\npages\tobject\tOptional. A pagination object, which may be empty, indicating no further pages to fetch.\nRequest Parameters\n\nNone.\n\nReturns\n\nA list of admin objects for the App. The result may also have a pages object if the response is paginated."
  },
  {
    "title": "Set admin away mode",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/admins/set-admin-away-mode/",
    "html": "Set admin away mode\n\nSet away mode\nIf you want to set an admin in away mode you can do this via a PUT request. You can also choose whether you want conversation replies to be automatically reassigned to your default inbox if you like. For more about away mode please see here.\n\nAttribute\tType\tDescription\nid\tstring\tThe id of the admin you want to set away mode or re-assign conversations.\naway_mode_enabled\tboolean\tSet to 'true' to change the status of the admin to away.\naway_mode_reassign\tboolean\tSet to 'true' to assign any new conversation replies to your default inbox.\ncurltext\n$ curl https://api.intercom.io/admins/814860/away \\\\\\n-X PUT \\\\\\n-H 'Authorization: Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'  \\\\\\n-H 'Content-Type: application/json' \\\\\\n-d \\t'\\n{\\n  \\\"away_mode_enabled\\\": true,\\n  \\\"away_mode_reassign\\\": false\\n\\n}'\n"
  },
  {
    "title": "Admins",
    "url": "https://developers.intercom.com/docs/references/1.3/rest-api/admins/admins/",
    "html": "Admins\n\nAdmins are how you can view your teammates within Intercom.\n\nThe API currently only supports viewing the admins already created. Creating and managing admins must be done through the Intercom App."
  },
  {
    "title": "List Data Attributes",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/data-attributes/list-data-attributes/",
    "html": "List Data Attributes\nList all data attributes\n$ curl https://api.intercom.io/data_attributes\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n{\n  \"type\": \"data_attribute.list\",\n  \"data_attributes\": [\n    {\n      \"type\": \"data_attribute\",\n      \"model\": \"customer\",\n      \"name\": \"paid_subscriber\",\n      \"full_name\": \"custom_attributes.paid_subscriber\",\n      \"label\": \"paid_subscriber\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"options\": [\n        \"pick_value_1\",\n        \"pick_value_2\"\n      ],\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": true,\n      \"archived\": false,\n      \"admin_id\": \"1\",\n      \"created_at\": 1392734388,\n      \"updated_at\": 1392734388\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"model\": \"customer\",\n      \"name\": \"region_name\",\n      \"full_name\": \"location_data.region_name\",\n      \"label\": \"Region\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"api_writable\": false,\n      \"ui_writable\": true,\n      \"custom\": false,\n      \"archived\": false\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"model\": \"company\",\n      \"name\": \"plan\",\n      \"full_name\": \"plan\",\n      \"label\": \"Plan\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": false,\n      \"archived\": false\n    }\n  ]\n}\n\nList company data attributes\n$ curl https://api.intercom.io/data_attributes?model=company \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n{\n  \"type\": \"data_attribute.list\",\n  \"data_attributes\": [\n    {\n      \"type\": \"data_attribute\",\n      \"model\": \"company\",\n      \"name\": \"plan\",\n      \"full_name\": \"plan\",\n      \"label\": \"Plan\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": false,\n      \"archived\": false\n    }\n  ]\n}\n\nList all data attributes including archived\n$ curl https://api.intercom.io/data_attributes?include_archived=true \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept: application/json'\n\n{\n  \"type\": \"data_attribute.list\",\n  \"data_attributes\": [\n    {\n      \"type\": \"data_attribute\",\n      \"model\": \"customer\",\n      \"name\": \"paid_subscriber\",\n      \"full_name\": \"custom_attributes.paid_subscriber\",\n      \"label\": \"paid_subscriber\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"options\": [\n        \"pick_value_1\",\n        \"pick_value_2\"\n      ],\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": true,\n      \"archived\": false,\n      \"admin_id\": \"1\",\n      \"created_at\": 1392734388,\n      \"updated_at\": 1392734388\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"model\": \"customer\",\n      \"name\": \"cda2\",\n      \"full_name\": \"custom_attributes.cda2\",\n      \"label\": \"cda2\",\n      \"description\": \"\",\n      \"data_type\": \"integer\",\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": true,\n      \"archived\": true,\n      \"admin_id\": \"1\",\n      \"created_at\": 1392734388,\n      \"updated_at\": 1392734388\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"model\": \"customer\",\n      \"name\": \"region_name\",\n      \"full_name\": \"location_data.region_name\",\n      \"label\": \"Region\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"api_writable\": false,\n      \"ui_writable\": true,\n      \"custom\": false,\n      \"archived\": false\n    },\n    {\n      \"type\": \"data_attribute\",\n      \"model\": \"company\",\n      \"name\": \"plan\",\n      \"full_name\": \"plan\",\n      \"label\": \"Plan\",\n      \"description\": \"\",\n      \"data_type\": \"string\",\n      \"api_writable\": true,\n      \"ui_writable\": true,\n      \"custom\": false,\n      \"archived\": false\n    }\n  ]\n}\n\n\nYou can fetch a list of all data attributes belonging to a workspace by sending a GET request to https://api.intercom.io/data_attributes.\n\nBy default a list of all unarchived data attributes are returned. You can include the following parameters to retrieve only company or customer data attributes, and specify whether to return archived data attributes to:\n\nParameter\tType\tDescription\nmodel\tstring\tSpecify the data attribute model to return. Possible values are customer and company.\ninclude_archived\tboolean\tInclude archived attributes in the list. By default we return only non archived data attributes.\nReturns\n\nList of Data Attribute Models"
  },
  {
    "title": "Data Attribute Model",
    "url": "https://developers.intercom.com/docs/references/1.4/rest-api/data-attributes/data-attribute-model/",
    "html": "Data Attribute Model\nExample Data Attribute Object\n{  \\\"type\\\": \\\"data_attribute\\\",  \\\"model\\\": \\\"customer\\\",  \\\"name\\\": \\\"paid_subscriber\\\",  \\\"full_name\\\": \\\"custom_attributes.paid_subscriber\\\",   \\\"label\\\": \\\"paid_subscriber\\\",   \\\"description\\\": \\\"\\\",  \\\"data_type\\\": \\\"string\\\",   \\\"options\\\": [    \\\"pick_value_1\\\",    \\\"pick_value_2\\\"  ],  \\\"api_writable\\\": true,   \\\"ui_writable\\\": true,   \\\"custom\\\": true,   \\\"archived\\\": false,   \\\"admin_id\\\": \\\"1\\\",  \\\"created_at\\\": 1392734388,  \\\"updated_at\\\": 1392734388}\n\n\nA data attribute object contains the following fields:\n\nAttribute\tType\tDescription\ntype\tstring\tValue is 'data_attribute'\nmodel\tstring\tValue is customer for user/lead attributes, and company for company attributes.\nname\tstring\tName of the attributeExamples:email``region_name for region_name stored in location_data objectimage_url for image_url stored in avatar objectpaid_subscriber for CDA named paid_subscriber\nfull_name\tstring\tFull name of the attribute. Should match the name unless it's a nested attribute.Examples:email``location_data.region_name``avatar.image_url``custom_attributes.paid_subscriberWe can split full_name on . to access nested user object values.\nlabel\tstring\tReadable name of the attribute (i.e. name you see in the UI)\ndescription\tstring\tReadable description of the attribute\ndata_type\tstring\tType of data stored in the attribute.Possible values: string``integer``float``boolean``date\noptions\tlist\tList of predefined options for attribute value\napi_writable\tboolean\tCan this attribute be updated through API\nui_writable\tboolean\tCan this attribute be updated in the UI\ncustom\tboolean\tSet to true if this is a CDA\narchived\tboolean\tOnly applicable to CDAs\ncreated_at\ttimestamp\tThe time the CDA was created.Only applicable to CDAs.\nupdated_at\ttimestamp\tThe last time the CDA was updated.Only applicable to CDAs\nadmin_id\tstring\tTeammate who created the attribute.Only applicable to CDAs"
  },
  {
    "title": "User Segment/Tag Count Model",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/counts/user-tag-counts/",
    "html": "User Segment/Tag Count Model\n\nThe count of tags and segments includes archived tags and segments.\n\nUser Segment/Tag Count Object\n\nCount Object includes count for users and leads.\n\nAttribute\tType\tDescription\ntype\tstring\tvalue is 'count'\nuser\tobject\tContains a field called segment containing segment counts\nuser.segment\tarray\tContains a list of segment counts\nuser.tag\tarray\tContains a list of tag counts\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"tag\": [\n        {\n          \"Independent\": 3\n        }\n    ]\n  }\n}\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"segment\": [\n      {\n        \"Active\": 1\n      },\n      {\n        \"New\": 0\n      },\n      {\n        \"VIP\": 0\n      },\n      {\n        \"Slipping Away\": 0\n      },\n      {\n        \"segment 1\": 1\n      }\n    ]\n  }\n}\n\n# User Tag Count\n$ curl 'https://api.intercom.io/counts?type=user&count=tag' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# User Segment Count\n$ curl 'https://api.intercom.io/counts?type=user&count=segment' \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H 'Accept:application/json'\n\n# User Tag Count\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"tag\": [\n        {\n          \"Independent\": 3\n        }\n    ]\n  }\n}\n\n# User Segment Count\nHTTP/1.1 200 OK\n\n{\n  \"type\": \"count\",\n  \"user\": {\n    \"segment\": [\n      {\n        \"Active\": 1\n      },\n      {\n        \"New\": 0\n      },\n      {\n        \"VIP\": 0\n      },\n      {\n        \"Slipping Away\": 0\n      },\n      {\n        \"segment 1\": 1\n      }\n    ]\n  }\n}\n\nintercom.counts.for_type(type: 'user', count: 'tag')\nintercom.counts.for_type(type: 'user', count: 'segment')\n\n<?php\n// User Tag Count\n$counts = $intercom->counts->getCounts([\"type\" => \"user\", \"count\" => \"tag\"]);\nprint_r($counts);\n\n// Company Segment Count\n$counts = $intercom->counts->getCounts([\"type\" => \"user\", \"count\" => \"segment\"]);\n?>\n\n// User Tag Count\nfinal List<Counts.CountItem> tags = Counts.userTags();\nfor (Counts.CountItem tag : tags) {\n  out.println(tag.getName() + \": \" + tag.getValue());\n}\n\n// User Segment Count\nfinal List<Counts.CountItem> segments = Counts.userSegments();\nfor (Counts.CountItem seg : segments) {\n  out.println(seg.getName() + \": \" + seg.getValue());\n}\n\n\nThe counts for your App can be obtained using GET against the https://api.intercom.io/counts URL with the type and count parameters as follows\n\nCount\tType Value\tCount Value\nUser Segment Count\tuser\tsegment\nUser Tag Count\tuser\ttag"
  },
  {
    "title": "The data attribute model",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/data-attributes/data-attribute-model/",
    "html": "The data attribute model\nExample Data Attribute Object\n{  \\\"type\\\": \\\"data_attribute\\\",  \\\"model\\\": \\\"contact\\\",  \\\"name\\\": \\\"paid_subscriber\\\",  \\\"full_name\\\": \\\"custom_attributes.paid_subscriber\\\",   \\\"label\\\": \\\"paid_subscriber\\\",   \\\"description\\\": \\\"\\\",  \\\"data_type\\\": \\\"string\\\",   \\\"options\\\": [    \\\"pick_value_1\\\",    \\\"pick_value_2\\\"  ],  \\\"api_writable\\\": true,   \\\"ui_writable\\\": true,   \\\"custom\\\": true,   \\\"archived\\\": false,   \\\"admin_id\\\": \\\"1\\\",  \\\"created_at\\\": 1392734388,  \\\"updated_at\\\": 1392734388}\n\n\nData Attributes are metadata used to describe your contact, company and conversation models. These include standard and custom attributes. By using the data attributes endpoint, you can get the global list of attributes for your workspace, as well as create and archive custom attributes.\n\nData Attribute Object\nKey\tType\tDescription\ntype\tstring\tValue is data_attribute\nmodel\tstring\tValue is contact for user/lead attributes, company for company attributes and conversation for conversation attributes.\nname\tstring\tName of the attributeExamples:email``region_name for region_name stored in location_data objectimage_url for image_url stored in avatar objectpaid_subscriber for CDA named paid_subscriber\nfull_name\tstring\tFull name of the attribute. Should match the name unless it's a nested attribute.Examples:email``location_data.region_name``avatar.image_url``custom_attributes.paid_subscriberWe can split full_name on . to access nested user object values.\nlabel\tstring\tReadable name of the attribute (i.e. name you see in the UI)\ndescription\tstring\tReadable description of the attribute\ndata_type\tstring\tType of data stored in the attribute.Possible values: string``integer``float``boolean``date\noptions\tlist\tList of predefined options for attribute value\napi_writable\tboolean\tCan this attribute be updated through API\nui_writable\tboolean\tCan this attribute be updated in the UI\ncustom\tboolean\tSet to true if this is a CDA\narchived\tboolean\tOnly applicable to CDAs\ncreated_at\ttimestamp\tThe time the CDA was created.Only applicable to CDAs.\nupdated_at\ttimestamp\tThe last time the CDA was updated.Only applicable to CDAs\nadmin_id\tstring\tTeammate who created the attribute.Only applicable to CDAs"
  },
  {
    "title": "Update an article",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/articles/update-an-article/",
    "html": "Update an article\nExample Request & Response (Multilingual Help Center)\ncurlhttp\n$ curl https://api.intercom.io/articles/<id> \\\\\\n-X PUT \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n-H 'Content-Type: application/json' -d\\n\\n{\\n  \\\"title\\\": \\\"New title\\\",\\n  \\\"translated_content\\\": {\\n    \\\"es\\\": {\\n      \\\"title\\\": \\\"Nuevo título\\\",\\n      \\\"state\\\": \\\"published\\\",\\n      \\\"body\\\": \\\"<p>Spanish body in html</p>\\\",\\n      \\\"author_id\\\": \\\"1\\\"\\n    }\\n  }\\n}\n\n\nYou can update the details of a single article by making a PUT request to https://api.intercom.io/articles/<id>.\n\nRequest Path Parameters\nParameter\tType\tRequired?\tDescription\nid\tString\tYes\tThe unique identifier for the article which is given by Intercom.\nRequest Body Parameters\nAttribute\tType\tRequired?\tDescription\ntitle\tString\tNo\tThe title of the article.\nFor multilingual articles, this will be the title of the default language's content.\ndescription\tString\tNo\tThe description of the article.\nFor multilingual articles, this will be the description of the default language's content.\nbody\tString\tNo\tThe body of the article in HTML.\nFor multilingual articles, this will be the body of the default language's content.\nauthor_id\tString\tNo\tThe id of the author of the article.\nFor multilingual articles, this will be the id of the author of the default language's content. Must be a teammate on the help center's workspace.\nstate\tString\tNo\tWhether the article will be published or will be a draft.\nFor multilingual articles, this will be the state of the default language's content.\nparent_id\tString\tNo\tThe id of the article's parent collection or section. An article without this field stands alone.\nparent_type\tString\tNo\tThe type of parent, which can either be a collection or section.\ntranslated_content\tObject\tNo\tAn Article Translated Content Object whereby you can specify multiple multilingual articles to be updated.\nResponse\n\nThis will return an Article model of the article you just updated."
  },
  {
    "title": "Submit a data event",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/data-events/submitting-events/",
    "html": "Submit a data event\nSubmit an Event\n$ curl https://api.intercom.io/events \\\n-X POST \\\n-H 'Authorization:Bearer <Your access token>' \\\n-H \"Content-Type: application/json\" -d'\n{\n  \"event_name\" : \"placed-order\",\n  \"created_at\": 1389913941,\n  \"user_id\": \"314159\",\n  \"metadata\": {\n    \"order_date\": 1392036272,\n    \"stripe_invoice\": \"inv_3434343434\",\n    \"order_number\": {\n      \"value\":\"3434-3434\",\n      \"url\": \"https://example.org/orders/3434-3434\"\n    },\n    \"price\": {\n      \"currency\":\"usd\",\n      \"amount\": 2999\n    }\n  }\n}'\n\nvar more_metadata = {\n  order_date: 1392036272,\n  stripe_invoice: 'inv_3434343434',\n  order_number: {\n    value: \"3434-3434\",\n    url: 'https://example.org/orders/3434-3434'\n  },\n  price: {\n    currency: 'usd',\n    amount: 2999\n  }\n};\nIntercom('trackEvent', 'placed-order', more_metadata);\n\nmore_metadata = {\n  :order_date => Time.now.to_i,\n  :stripe_invoice => 'inv_3434343434',\n  :order_number => {\n    :value => '3434-3434',\n    :url => 'https://example.org/orders/3434-3434'\n  },\n  price: {\n    :currency => 'usd',\n    :amount => 2999\n  }\n}\nintercom.events.create({\n  :event_name => \"placed-order\",\n  :email => current_user.email,\n  :created_at => 1391691571,\n  :metadata => more_metadata\n})\n\n<?php\n$metadata = ([\n    \"order_date\" => time(),\n    \"stripe_invoice\" => \"inv_3434343434\",\n    \"order_number\" => ([\n        \"value\" => \"3434-3434\",\n        \"url\" => \"https://example.org/orders/3434-3434\"]),\n        \"price\" => ([\n            \"currency\" => \"usd\",\n            \"amount\" => 2999])\n]);\n\n$intercom->events->create([\n    \"event_name\" => \"placed-order\",\n    \"created_at\" => 1500907515,\n    \"user_id\" => \"20413\",\n    \"metadata\" => $metadata\n]);\n?>\n\nMap<String,Object> order = Maps.newHashMap();\norder.put(\"value\", \"3434-3434\");\norder.put(\"url\", \"https://example.org/orders/3434-3434\");\n\nMap<String,Object> price = Maps.newHashMap();\nprice.put(\"currency\", \"usd\");\nprice.put(\"amount\", 2999);\n\nMap<String,Object> meta = Maps.newHashMap();\nmeta.put(\"order_date\", currentTimeMillis()/1000L);\nmeta.put(\"stripe_invoice\", \"inv_3434343434\");\nmeta.put(\"price\", price);\nmeta.put(\"order_number\", order);\n\nEvent event = new Event()\n  .setEventName(\"placed-order\")\n  .setUserID(\"314159\")\n  .setMetadata(meta);\n\nEvent.create(event);\n\n\nYou will need an Access Token that has write permissions to send Events. Once you have a key you can submit events via POST to the Events resource, which is located at https://api.intercom.io/events, or you can send events using one of the client libraries. When working with the HTTP API directly a client should send the event with a Content-Type of application/json.\n\nWhen using the JavaScript API, adding the code to your app makes the Events API available. Once added, you can submit an event using the trackEvent method. This will associate the event with the Lead or currently logged-in user or logged-out visitor/lead and send it to Intercom. The final parameter is a map that can be used to send optional metadata about the event.\n\nWith the Ruby client you pass a hash describing the event to Intercom::Event.create, or call the track_user method directly on the current user object (e.g. user.track_event).\n\nRequest Body Parameters\nAttribute\tType\tRequired\tDescription\nevent_name\tString\tyes\tThe name of the event that occurred. This is presented to your App's admins when filtering and creating segments - a good event name is typically a past tense 'verb-noun' combination, to improve readability, for example updated-plan.\ncreated_at\tDate (UNIX timestamp)\tyes\tThe time the event occurred as a UTC Unix timestamp\nuser_id\tString\tyes if no email\tYour identifier for the user.\nid\tString\tyes if no email or user_id.\tIntercom identifier for a lead or a user.\nemail\tString\tyes if no user_id\tAn email address for your user. An email should only be used where your application uses email to uniquely identify users\nmetadata\tObject\tno\toptional metadata about the event.\nMetadata Object\nType\tDescription\tExample\nString\tThe value is a JSON String\t\"source\":\"desktop\"\nNumber\tThe value is a JSON Number\t\"load\": 3.67\nDate\tThe key ends with the String _date or _at and the value is a Unix timestamp, assumed to be in the UTC timezone.\t\"contact_date\": 1392036272 or \"contacted_at\": 1392036272\nLink\tThe value is a HTTP or HTTPS URI.\t`\"article\": \"https://example.org/ab1de.html\"\nRich Link\tThe value is a JSON object that contains url and value keys.\t\"article\": {\"url\": \"https://example.org/ab1de.html\", \"value\":\"the dude abides\"}\nMonetary Amount\tThe value is a JSON object that contains amount and currency keys. The amount key is a positive integer representing the amount in cents. The price in the example to the right denotes €349.99.\t\"price\": {\"amount\": 34999, \"currency\": \"eur\"}\n\nNB: For the JSON object types, please note that we do not currently support nested JSON structure.\n\nLEAD EVENTS\n\nWhen submitting events for Leads, you will need to specify the Lead's id.\n\nMETADATA BEHAVIOUR\n\nWe currently limit the number of tracked metadata keys to 10 per event. Once the quota is reached, we ignore any further keys we receive. The first 10 metadata keys are determined by the order in which they are sent in with the event.\\n_ It is not possible to change the metadata keys once the event has been sent. A new event will need to be created with the new keys and you can archive the old one.\\n_ There might be up to 24 hrs delay when you send a new metadata for an existing event.\n\nEVENT DE-DUPLICATION\n\nThe API may detect and ignore duplicate events. Each event is uniquely identified as a combination of the following data - the Workspace identifier, the Contact external identifier, the Data Event name and the Data Event created time. As a result, it is strongly recommended to send a second granularity Unix timestamp in the created_at field.\\n\\nDuplicated events are responded to using the normal 202 Accepted code - an error is not thrown, however repeat requests will be counted against any rate limit that is in place.\n\nHTTP API Responses\nSuccessful responses to submitted events return 202 Accepted with an empty body.\nUnauthorised access will be rejected with a 401 Unauthorized or 403 Forbidden response code.\nEvents sent about users that cannot be found will return a 404 Not Found.\nEvent lists containing duplicate events will have those duplicates ignored.\nServer errors will return a 500 response code and may contain an error message in the body."
  },
  {
    "title": "List all data events",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/data-events/list-user-events/",
    "html": "List all data events\n\nPlease note that you can only 'list' events that are less than 90 days old. Event counts and summaries will still include your events older than 90 days but you cannot 'list' these events individually if they are older than 90 days\n\nList all customer events\ncurlcurlrubyphpjava\n$ curl 'https://api.intercom.io/events?type=user&user_id=314159' \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept: application/json'\n\nHTTP/1.1 200 OK\\n\\n{\\n  \\\"type\\\": \\\"event.list\\\",\\n  \\\"events\\\": [\\n      {\\n        \\\"event_name\\\" : \\\"ordered-item\\\",\\n        \\\"created_at\\\": 1391691571,\\n        \\\"user_id\\\" : \\\"314159\\\"\\n      },\\n      {\\n        \\\"event_name\\\" : \\\"invited-friend\\\",\\n        \\\"created_at\\\": 1389913941,\\n        \\\"user_id\\\" : \\\"314159\\\",\\n        \\\"metadata\\\": {\\n         \\\"invitee_email\\\": \\\"pi@example.org\\\",\\n         \\\"invite_code\\\": \\\"ADDAFRIEND\\\"\\n         }\\n      },\\n     ...\\n   ],\\n  \\\"pages\\\": {\\n    \\\"next\\\": \\\"https://api.intercom.io/events?type=user&intercom_user_id=55a3b&before=144474756550\\\"\\n  }\\n}\\n\\n# NB: Full event objects are returned\n\n\nThe events belonging to a customer can be listed by sending a GET request to https://api.intercom.io/events with a user or lead identifier along with a type parameter. The identifier parameter can be one of user_id, email or intercom_user_id. The type parameter value must be user.\n\nhttps://api.intercom.io/events?type=user&user_id={user_id}\nhttps://api.intercom.io/events?type=user&email={email}\nhttps://api.intercom.io/events?type=user&intercom_user_id={id} (this call can be used to list leads)\n\nThe email parameter value should be url encoded when sending.\n\nYou can optionally define the result page size as well with the per_page parameter.\n\nRequest Parameters\nParameter\tRequired\tDescription\ntype\tyes\tThe value must be user\nuser_id\tno\tThe user id you have defined for the user\nemail\tno\tThe email you have defined for the user\nintercom_user_id\tno\tThe Intercom defined id for the user\nper_page\tno\tHow many results to return per page defaults to 50.\nsummary\tno\tBoolean value. When set to true, event counts are returned grouped by event name.\nReturns\n\nA pageable list of events. The event list contains a pages object that indicates if more events exist for the customer via the next field, whose value is a URL that can be used to fetch the next page. If the next field is not present, that indicates there are no further events for the user. Clients should note that the parameters in the returned link are not assured to be the same as those sent in the request.\n\nThe event list is sorted by the created_at field and ordered descending, most recently created first.\n\nAs well as the fields that were supplied when the event was posted to Intercom (see Event model for details) the event payload will also contain an id field that uniquely identifies the event and may optionally contain an intercom_user_id containing the Intercom defined id representing the user.\n\nYou can use the API to get counts of users, leads and companies filtered by certain criteria.\n\nCounts are a good way to periodically obtain data for the purposes of tracking rates of change in user and company data."
  },
  {
    "title": "Use of HTTP",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/common-structures/use-of-http/",
    "html": "Use of HTTP\n\nRequest methods are used in accordance with HTTP.\n\nGET is used to access resources and perform queries. The API does not allow modifications (creates, updates, deletes) to occur via GET.\nPOST is used to create or update resources. The preferred model for creation is to post JSON to a 'collections' resource - for example the collections resource for users is https://api.intercom.io/users.\nDELETE is used to delete resources.\n\nResponses use standard HTTP codes. Where there are client or server errors, a list of of one or more errors in JSON format is returned in the body - see Error Objects for more details.\n\nThe API may send cache directives where suitable, notably the ETag, Last-Modified and If-Modified-Since headers.\n\nThe Accept header must be used by a client used to indicate a preferred response for GET/HEAD requests. Requests without an Accept header of application/json may be rejected with a client error of 404 or 406.\n\nThe Content-Type header should be used by clients to indicate the submitted format for POST/PUT requests."
  },
  {
    "title": "Pagination & Sorting (Search)",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/common-structures/pagination-search/",
    "html": "Pagination & Sorting (Search)\n\nWhen you use any Search resource, we require you to make a POST request that will not accept the common query params of GET requests. Therefore, the structure here has slight variations to our cursor-based approach.\n\n📘\n\nThis currently only applies to Searching for Contacts and Searching for Conversations.\n\nPagination\nExample Request Body with Pagination for first page\n{\\n \\\"query\\\":  {\\n    \\\"field\\\": \\\"name\\\",\\n    \\\"operator\\\": \\\"=\\\",\\n    \\\"value\\\": \\\"alex\\\"\\n  },\\n  \\\"pagination\\\": {\\n    \\\"per_page\\\": 5,\\n  } \\n}\n\n\nYou can specify how many items per page you want to fetch.\n\nDEFAULT PAGINATION AMOUNT\n\nIf pagination is not provided, the request defaults to 50 items.\n\nExample Initial Pages Object\n{\\n  \\\"pages\\\": {\\n  \\\"type\\\": \\\"pages\\\",\\n  \\\"next\\\": {\\n    \\\"page\\\": 4,\\n    \\\"starting_after\\\": \\\"1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\\\\nIncfQLD3ouPkZlCwJ86F\\\\n\\\"\\n  },\\n  \\\"page\\\": 3,\\n  \\\"per_page\\\": 5,\\n  \\\"total_pages\\\": 10\\n  }\\n}\n\n\nIn order to iterate through pages, you must parse the query response. A query with multiple response pages will include a next key in the pages hash. When a next value is provided, the starting_after value must be sent back in a new request to iterate to the next page.\n\n🚧 Paginating through all results\n\nThis method of pagination is used to iterate through a result set until all results have been fetched, not to directly go to page X of the results. This is not possible.\n\nExample Request Body with Pagination for next page\n{\\n \\\"query\\\":  {\\n    \\\"field\\\": \\\"name\\\",\\n    \\\"operator\\\": \\\"=\\\",\\n    \\\"value\\\": \\\"alex\\\"\\n  },\\n  \\\"pagination\\\": {\\n    \\\"per_page\\\": 5,\\n    \\\"starting_after\\\": \\\"1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\\\\nIncfQLD3ouPkZlCwJ86F\\\\n\\\"\\n  } \\n}\\n\n\n\n🚧 Warning about search context state\n\nThe starting_after context is stateless. Consequently, if items are updated between 2 paginated queries, this can lead to duplicate or missed records.\n\nFor example, if a query is sorting results by number of sessions and an item is updated from 1 session to 2 sessions during the pagination, they may be listed on page 1 of the results, but also on page 2.\n\nSorting\nExample Request Body with Sort\n{\n \"query\":  {\n    \"field\": \"name\",\n    \"operator\": \"=\",\n    \"value\": \"alex\"\n  },\n  \"sort\": {\n    \"field\": \"name\",\n    \"order\": \"ascending\"\n  } \n}\n\n\nThe Search resources can also sort query results by using the following parameters within the sort object:\n\nParameter\tRequired?\tDescription\nfield\tYes\tAny searchable attribute (available on the Simple Query \"Allowed fields\").\norder\tNo\tEither \"ascending\" or \"descending\" - default to \"descending\" if none is provided.\nDEFAULT SORT ORDER\n\nIf no sort pattern is provided, the query will use the default sorting parameter \"last_request_at\" with a descending value (e.g. listing most recent active items first)."
  },
  {
    "title": "Pagination (Cursor)",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/common-structures/pagination-cursor/",
    "html": "Pagination (Cursor)\n\nWe're starting to adopt a cursor-based approach to pagination for certain list resources.\n\nThis currently only applies when listing Contacts.\n\nExample Initial Request\ncURL (Initial Request)\n$ curl https://api.intercom.io/contacts?per_page=5 \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\n\nInitial Request\n\nYou can initially specify how many items per_page you want to fetch.\n\nParameter\tType\tDescription\nper_page\tInteger\tThe number of items returned in a single response.\nDefault is 50.\nMax is 150.\nExample Initial Pages Object\nJSON\n{\\n  \\\"pages\\\": {\\n    \\\"type\\\": \\\"pages\\\",\\n    \\\"next\\\": {\\n      \\\"page\\\": 4,\\n      \\\"starting_after\\\": \\\"1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\\\\nIncfQLD3ouPkZlCwJ86F\\\\n\\\"\\n    },\\n    \\\"page\\\": 3,\\n    \\\"per_page\\\": 5,\\n    \\\"total_pages\\\": 10\\n   }\\n}\n\nResponse\n\nIn order to iterate through pages, you must parse the query response. A query with multiple response pages will include a next key in the pages object. When a next value is provided, the starting_after value must be sent back in a new request in order to iterate to the next page.\n\nParameter\tType\tDescription\nstarting_after\tString\tThe cursor used for pagination in order to fetch the next page of results.\n\n🚧 Paginating through all results\n\nThis method of pagination is used to iterate through a result set until all results have been fetched, not to directly go to page X of the results. This is not possible.\n\nExample Subsequent Requests\ncURL (Subsequent Requests)\n$ curl https://api.intercom.io/contacts?starting_after=\\\"1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\\\\nIncfQLD3ouPkZlCwJ86F\\\\n\\\" \\\\\\n-H 'Authorization:Bearer <Your access token>' \\\\\\n-H 'Accept:application/json'\\n\n"
  },
  {
    "title": "Object Model",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/common-structures/object-model/",
    "html": "Object Model\nCommon Fields and Metadata\n{\\n  \\\"type\\\": \\\"contacts\\\",\\n  \\\"id\\\": \\\"456456456456\\\",\\n  \\\"created_at\\\": 1392241887,\\n  \\\"custom_attributes\\\": {\\n    \\\"note\\\": \\\"some extra information\\\"\\n  }\\n}\n\nCommon Fields\n\nAPI objects have a type field indicating their object type. Each object in the API may be given an identifier, indicated via its id field, and will typically be addressable via a URI. Many objects will also have a created_at field indicating the object's creation date as a UTC Unix timestamp.\n\nDates and Timestamps\n\nAll temporal fields in the API are encoded as Unix timestamps and are by definition always treated as UTC. The most common time fields in the API are created_at and updated_at.\n\nParameter\tDescription\ncreated_at\tThe time the object was created. In most, but not all cases, this is the time the object was created according to the API server.\nupdated_at\tThe time the object was last updated according to the API server.\nOptional Fields\n\nUnpopulated optional data is returned as follows -\n\nNumber, String and Boolean types may be returned as having null values.\nArrays and Objects may be returned as empty ([] {})\n\nIn general clients should be able to handle null and empty fields.\n\nMetadata and Custom Attributes\n\nSome object types, such as Events, Users and Companies, have a metadata or custom_attributes field that allows clients to set custom-defined data about an object."
  },
  {
    "title": "Identifiers and URLs",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/common-structures/identifiers-and-urls/",
    "html": "Identifiers and URLs\n\nAll objects in the API have an id field indicating their logical identifier.\n\nParameter\tDescription\nid\tA string that identifies the object within the API. The id field will not be larger than 128 characters (in SQL it corresponds to a varchar(128)).\n\nThese fields must always be treated as opaque strings - no guarantees are made about the internal structure of the id fields for an object.\n\nThe id field is always defined by the API server and is guaranteed to be unique relative to the type field - this means no two user objects will have the same id field, but a user and a company may have the same value for their id fields. . Some object types (such as Contact), also support client defined identifiers.\n\nThe company and user objects deserve special mention when it comes to identity for two reasons -\n\nThey allow you send your own external identifiers\nThe contact id field is in some cases, aliased to intercom_user_id. This is done to distinguish it from other identifiers in the API and to avoid confusion as to which object type an id denotes."
  },
  {
    "title": "Encoding",
    "url": "https://developers.intercom.com/docs/references/2.4/rest-api/common-structures/encoding/",
    "html": "Encoding\n\nData is encoded as defined by JSON in RFC4627. The default encoding for APIs is UTF-8. Certain characters, such as Emojji may be handled as surrogate unicode pairs (see section '2.5. Strings' of RFC4627).\n\nSome query parameters may need to be url encoded when sending - for example, the email parameter value used to query users should be encoded.\n\nHTML ENCODING\n\nIt should be noted that the following identifiers are encoded to protect from potential cross-site scripting attacks: 'name', 'user_id', 'company_id' and 'email'. As a result you may see these identifiers in their encoded format when you retrieve them via the API. \\nNote that the characters we encode are double quote, single quote, ampersand, less than and greater than symbols i.e \" ' & < >\n\nHTML Encoding example\n\\\"X&Ys\\\" == \\\"X&amp;Y&#39;s\\\"\n"
  }